# ::id 0
# ::snt Should I use IRA money to pay down my student loans?
# ::tok Should I use IRA money to pay down my student loans ?
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / use-01
                            :ARG1 (MRPNode-2 / money
                                             :source (MRPNode-3 / product
                                                                :name (MRPNode-4 / name
                                                                                 :op1 (MRPNode-5 / ira))))
                            :ARG0 (MRPNode-6 / i
                                             :ARG2-of (MRPNode-7 / loan-01
                                                                 :ARG2 (MRPNode-8 / person
                                                                                  :ARG0-of (MRPNode-9 / study-01))))
                            :ARG2 (MRPNode-10 / pay-off-02
                                              :ARG0 MRPNode-6
                                              :ARG1 MRPNode-7))
           :ARG2 (MRPNode-11 / amr-unknown))

# ::id 1
# ::snt How do I keep an egg from cracking while being boiled?
# ::tok How do I keep an egg from cracking while being boiled ?
# ::collapsed instance nodes 0
(MRPNode-0 / keep-04
           :ARG1 (MRPNode-1 / crack-02
                            :ARG1 (MRPNode-2 / egg)
                            :time (MRPNode-3 / boil-01
                                             :ARG1 (MRPNode-4 / i)))
           :ARG0 MRPNode-4
           :manner (MRPNode-5 / amr-unknown))

# ::id 2
# ::snt How do you remove mold from a tent?
# ::tok How do you remove mold from a tent ?
# ::collapsed instance nodes 0
(MRPNode-0 / remove-01
           :ARG1 (MRPNode-1 / mold)
           :ARG0 (MRPNode-2 / you)
           :ARG2 (MRPNode-3 / tent)
           :manner (MRPNode-4 / amr-unknown))

# ::id 3
# ::snt What could be wrong with my air conditioner?
# ::tok What could be wrong with my air conditioner ?
# ::collapsed instance nodes 2
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / wrong-02
                            :ARG1 (MRPNode-2 / amr-unknown)
                            :ARG2 (MRPNode-3 / my_air_conditioner_3)))

# ::id 4
# ::snt What language does this look like?
# ::tok What language does this look like ?
# ::collapsed instance nodes 1
(MRPNode-0 / look-02
           :ARG1 (MRPNode-1 / what_language_2)
           :ARG0 (MRPNode-2 / this))

# ::id 5
# ::snt What more can I do to improve my credit score?
# ::tok What more can I do to improve my credit score ?
# ::collapsed instance nodes 1
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / improve-01
                                             :ARG1 (MRPNode-3 / score
                                                              :mod (MRPNode-4 / credit)
                                                              :poss (MRPNode-5 / i))
                                             :ARG0 MRPNode-5)
                            :ARG0 (MRPNode-6 / what_more_2)
                            :ARG0 MRPNode-5))

# ::id 6
# ::snt How to remove a ticks on my dog?
# ::tok How to remove a ticks on my dog ?
# ::collapsed instance nodes 0
(MRPNode-0 / remove-01
           :ARG1 (MRPNode-1 / tick
                            :location (MRPNode-2 / dog
                                                 :poss (MRPNode-3 / i)))
           :manner (MRPNode-4 / amr-unknown))

# ::id 7
# ::snt How do I pump up water pressure in my shower?
# ::tok How do I pump up water pressure in my shower ?
# ::collapsed instance nodes 1
(MRPNode-0 / pump-01
           :manner (MRPNode-1 / water_pressure_2)
           :ARG0 (MRPNode-2 / i)
           :ARG2 (MRPNode-3 / shower)
           :manner (MRPNode-4 / amr-unknown))

# ::id 8
# ::snt Is it possible to do a Master's in Mathematics after a Bachelor's in Economics?
# ::tok Is it possible to do a Master 's in Mathematics after a Bachelor 's in Economics ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / theory
                                             :topic (MRPNode-3 / philosophy)
                                             :topic (MRPNode-4 / mathematics))
                            :time (MRPNode-5 / after
                                             :op1 (MRPNode-6 / philosophy)))
           :time (MRPNode-7 / amr-unknown))

# ::id 9
# ::snt How can I help my dog adjust to a move?
# ::tok How can I help my dog adjust to a move ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / help-01
                            :ARG1 (MRPNode-2 / adjust-01
                                             :ARG2 (MRPNode-3 / move-01)
                                             :ARG0 (MRPNode-4 / dog))
                            :ARG0 (MRPNode-5 / i)
                            :ARG2 MRPNode-4)
           :manner (MRPNode-6 / amr-unknown))

# ::id 10
# ::snt How do I pump up water pressure in my shower?
# ::tok How do I pump up water pressure in my shower ?
# ::collapsed instance nodes 1
(MRPNode-0 / pump-01
           :manner (MRPNode-1 / water_pressure_2)
           :ARG0 (MRPNode-2 / i)
           :ARG2 (MRPNode-3 / shower)
           :manner (MRPNode-4 / amr-unknown))

# ::id 11
# ::snt How do I make a height adjustable desk?
# ::tok How do I make a height adjustable desk ?
# ::collapsed instance nodes 0
(MRPNode-0 / make-01
           :ARG1 (MRPNode-1 / desk
                            :ARG1-of (MRPNode-2 / adjust-01
                                                :ARG1 (MRPNode-3 / high-02)))
           :ARG0 (MRPNode-4 / i)
           :manner (MRPNode-5 / amr-unknown))

# ::id 12
# ::snt How can I find out why my washing machine trips the outlet?
# ::tok How can I find out why my washing machine trips the outlet ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / find-out-03
                            :ARG1 (MRPNode-2 / thing
                                             :ARG0-of (MRPNode-3 / cause-01
                                                                 :ARG1 (MRPNode-4 / trip-03
                                                                                  :ARG1 (MRPNode-5 / outlet)
                                                                                  :ARG0 (MRPNode-6 / machine
                                                                                                   :ARG0-of (MRPNode-7 / wash-01)))))
                            :ARG0 (MRPNode-8 / i
                                             :poss-of MRPNode-6)
                            :manner (MRPNode-9 / amr-unknown)))

# ::id 13
# ::snt What are the bus (coach) connections from Thessaloniki, Greece to Tbilisi, Georgia?
# ::tok What are the bus ( coach ) connections from Thessaloniki , Greece to Tbilisi , Georgia ?
# ::collapsed instance nodes 0
(MRPNode-0 / connect-01
           :ARG1 (MRPNode-1 / bus)
           :ARG2 (MRPNode-2 / city
                            :name (MRPNode-3 / name
                                             :op1 (MRPNode-4 / thessaloniki))
                            :location (MRPNode-5 / country
                                                 :name (MRPNode-6 / name
                                                                  :op1 (MRPNode-7 / greece))))
           :ARG3 (MRPNode-8 / amr-unknown)
           :ARG4 (MRPNode-9 / city
                            :name (MRPNode-10 / name
                                              :op1 (MRPNode-11 / tbilisi))
                            :location (MRPNode-12 / country
                                                  :name (MRPNode-13 / name
                                                                    :op1 (MRPNode-14 / greece)))))

# ::id 14
# ::snt How do I track investment performance in Quicken across rollovers?
# ::tok How do I track investment performance in Quicken across rollovers ?
# ::collapsed instance nodes 0
(MRPNode-0 / track-01
           :ARG1 (MRPNode-1 / perform-02
                            :ARG0 (MRPNode-2 / invest-01)
                            :location (MRPNode-3 / company
                                                 :name (MRPNode-4 / name
                                                                  :op1 (MRPNode-5 / quicken))))
           :ARG0 (MRPNode-6 / i)
           :ARG2 (MRPNode-7 / amr-unknown)
           :manner (MRPNode-8 / across
                              :op1 (MRPNode-9 / rollover)))

# ::id 15
# ::snt Do I need to apply for a UK transit visa when I have a visitor visa?
# ::tok Do I need to apply for a UK transit visa when I have a visitor visa ?
# ::collapsed instance nodes 1
(MRPNode-0 / need-01
           :ARG1 (MRPNode-1 / apply-01
                            :ARG1 (MRPNode-2 / transit_2)
                            :ARG0 (MRPNode-3 / i))
           :ARG0 MRPNode-3
           :time (MRPNode-4 / amr-unknown)
           :time (MRPNode-5 / have-03
                            :ARG0 MRPNode-3
                            :ARG1 (MRPNode-6 / visa
                                             :mod (MRPNode-7 / country
                                                             :name (MRPNode-8 / name
                                                                              :op1 (MRPNode-9 / uk))))
                            :ARG1 (MRPNode-10 / visa
                                              :mod (MRPNode-11 / person
                                                               :ARG0-of (MRPNode-12 / visit-01)))))

# ::id 16
# ::snt Layover at Narita for 3 hours. Do i need a transit visa?
# ::tok Layover at Narita for 3 hours . Do i need a transit visa ?
# ::collapsed instance nodes 1
(MRPNode-0 / multi-sentence
           :snt1 (MRPNode-1 / drive-01
                            :ARG0 (MRPNode-2 / city
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / narita)))
                            :duration (MRPNode-5 / temporal-quantity
                                                 :quant (MRPNode-6 / 3)
                                                 :unit (MRPNode-7 / hour)))
           :snt2 (MRPNode-8 / need-01
                            :ARG1 (MRPNode-9 / transit_visa_2)
                            :ARG0 (MRPNode-10 / i)
                            :ARG0 (MRPNode-11 / amr-unknown)))

# ::id 17
# ::snt Is it ok to apply for more than one Phd student program?
# ::tok Is it ok to apply for more than one Phd student program ?
# ::collapsed instance nodes 0
(MRPNode-0 / okay-04
           :ARG1 (MRPNode-1 / apply-01
                            :ARG1 (MRPNode-2 / program
                                             :mod (MRPNode-3 / person
                                                             :quant (MRPNode-4 / more-than
                                                                               :op1 (MRPNode-5 / 1)))
                                             :mod (MRPNode-6 / study-01)))
           :ARG1 (MRPNode-7 / amr-unknown))

# ::id 18
# ::snt How do I remove paint from a wood floor?
# ::tok How do I remove paint from a wood floor ?
# ::collapsed instance nodes 1
(MRPNode-0 / remove-01
           :ARG1 (MRPNode-1 / paint)
           :ARG0 (MRPNode-2 / i)
           :ARG2 (MRPNode-3 / wood_floor_2)
           :manner (MRPNode-4 / amr-unknown))

# ::id 19
# ::snt Does this beginning hook the reader?
# ::tok Does this beginning hook the reader ?
# ::collapsed instance nodes 2
(MRPNode-0 / hook-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / read-01))
           :ARG0 (MRPNode-3 / this_beginning_3)
           :ARG2 (MRPNode-4 / amr-unknown))

# ::id 20
# ::snt How can I remove a really stuck screw?
# ::tok How can I remove a really stuck screw ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / remove-01
                            :ARG1 (MRPNode-2 / amr-unknown)
                            :ARG1 (MRPNode-3 / thing
                                             :ARG1-of (MRPNode-4 / stick-01
                                                                 :ARG1-of (MRPNode-5 / real-04))
                                             :ARG1-of (MRPNode-6 / screw-02))
                            :ARG0 (MRPNode-7 / i)))

# ::id 21
# ::snt What could be causing my GFCI to trip?
# ::tok What could be causing my GFCI to trip ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / cause-01
                            :ARG1 (MRPNode-2 / trip-03
                                             :ARG0 (MRPNode-3 / person
                                                              :ARG0-of (MRPNode-4 / have-rel-role-91
                                                                                  :ARG1 (MRPNode-5 / i)
                                                                                  :ARG2 (MRPNode-6 / practitioner
                                                                                                   :mod (MRPNode-7 / vice)))))
                            :ARG0 (MRPNode-8 / amr-unknown)))

# ::id 22
# ::snt How can I get my colleagues to stop interrupting me?
# ::tok How can I get my colleagues to stop interrupting me ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / get-04
                            :ARG0 (MRPNode-2 / i
                                             :ARG1-of (MRPNode-3 / have-rel-role-91
                                                                 :ARG2 (MRPNode-4 / colleague)
                                                                 :ARG0 (MRPNode-5 / person)))
                            :manner (MRPNode-6 / amr-unknown))
           :manner (MRPNode-7 / stop-01
                              :ARG1 (MRPNode-8 / interrupt-01
                                               :ARG0 MRPNode-5)
                              :ARG0 MRPNode-5))

# ::id 23
# ::snt how to blackout a large bedroom window on a budget?
# ::tok how to blackout a large bedroom window on a budget ?
# ::collapsed instance nodes 2
(MRPNode-0 / amr-unknown
           :manner-of (MRPNode-1 / block-01
                                 :ARG1 (MRPNode-2 / large_bedroom_window_3)
                                 :ARG1-of (MRPNode-3 / budget-01)))

# ::id 24
# ::snt What type of pants are good for weight lifting?
# ::tok What type of pants are good for weight lifting ?
# ::collapsed instance nodes 1
(MRPNode-0 / good-02
           :ARG1 (MRPNode-1 / pant
                            :mod (MRPNode-2 / what_type_2))
           :ARG2 (MRPNode-3 / lift-01
                            :ARG1 (MRPNode-4 / weight)))

# ::id 25
# ::snt What is the difference between a Rollover IRA and a Roth IRA?
# ::tok What is the difference between a Rollover IRA and a Roth IRA ?
# ::collapsed instance nodes 0
(MRPNode-0 / differ-02
           :ARG1 (MRPNode-1 / amr-unknown)
           :ARG1 (MRPNode-2 / product
                            :name (MRPNode-3 / name
                                             :op1 (MRPNode-4 / rollover)
                                             :op2 (MRPNode-5 / ira)))
           :ARG1 (MRPNode-6 / product
                            :name (MRPNode-7 / name
                                             :op1 (MRPNode-8 / roth))))

# ::id 26
# ::snt How to deal with the child when both the parents are not on the same page?
# ::tok How to deal with the child when both the parents are not on the same page ?
# ::collapsed instance nodes 0
(MRPNode-0 / have-manner-91
           :ARG1 (MRPNode-1 / deal-01
                            :ARG1 (MRPNode-2 / child))
           :ARG2 (MRPNode-3 / amr-unknown)
           :condition (MRPNode-4 / be-located-at-91
                                 :polarity (MRPNode-5 / -)
                                 :ARG1 (MRPNode-6 / person
                                                  :ARG0-of (MRPNode-7 / both)
                                                  :ARG0-of (MRPNode-8 / have-rel-role-91
                                                                      :ARG2 (MRPNode-9 / parent)))
                                 :ARG2 (MRPNode-10 / page
                                                   :ARG1-of (MRPNode-11 / same-01))))

# ::id 27
# ::snt How do I pump up water pressure in my shower?
# ::tok How do I pump up water pressure in my shower ?
# ::collapsed instance nodes 1
(MRPNode-0 / pump-01
           :manner (MRPNode-1 / water_pressure_2)
           :ARG0 (MRPNode-2 / i)
           :ARG2 (MRPNode-3 / shower)
           :manner (MRPNode-4 / amr-unknown))

# ::id 28
# ::snt Greek type D visa: Can I travel to other Schengen countries?
# ::tok Greek type D visa : Can I travel to other Schengen countries ?
# ::collapsed instance nodes 6
(MRPNode-0 / multi-sentence
           :snt1 (MRPNode-1 / visa
                            :mod (MRPNode-2 / type_d_3)
                            :mod (MRPNode-3 / country
                                            :name (MRPNode-4 / name
                                                             :op1 (MRPNode-5 / greek))))
           :snt2 (MRPNode-6 / possible-01
                            :ARG1 (MRPNode-7 / travel-01
                                             :ARG0 (MRPNode-8 / i)
                                             :ARG4 (MRPNode-9 / other_schengen_5))
                            :ARG1 (MRPNode-10 / amr-unknown)))

# ::id 29
# ::snt What can I do about out of square rough opening for new windows?
# ::tok What can I do about out of square rough opening for new windows ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / amr-unknown)
                            :ARG0 (MRPNode-3 / i
                                             :ARG0-of (MRPNode-4 / open-01
                                                                 :ARG1 (MRPNode-5 / window
                                                                                  :ARG1-of (MRPNode-6 / new-01))))
                            :ARG2 (MRPNode-7 / out-06
                                             :ARG1 MRPNode-3
                                             :ARG2 MRPNode-4
                                             :ARG2 (MRPNode-8 / square
                                                              :quant (MRPNode-9 / rough-04)))))

# ::id 30
# ::snt How to remove construction adhesive from concrete?
# ::tok How to remove construction adhesive from concrete ?
# ::collapsed instance nodes 0
(MRPNode-0 / remove-01
           :ARG1 (MRPNode-1 / adhesive
                            :topic (MRPNode-2 / construct-01))
           :ARG2 (MRPNode-3 / concrete)
           :manner (MRPNode-4 / amr-unknown))

# ::id 31
# ::snt Must I enter Europe with Schengen visa from the country where I applied?
# ::tok Must I enter Europe with Schengen visa from the country where I applied ?
# ::collapsed instance nodes 3
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / i
                            :ARG0-of (MRPNode-2 / apply-01
                                                :ARG1 (MRPNode-3 / country)))
           :ARG2 (MRPNode-4 / enter-01
                            :ARG0 MRPNode-1
                            :ARG1 (MRPNode-5 / schengen_visa_4)
                            :ARG1 (MRPNode-6 / continent
                                             :name (MRPNode-7 / name
                                                              :op1 (MRPNode-8 / europe))))
           :ARG2 (MRPNode-9 / amr-unknown))

# ::id 32
# ::snt What could be causing my toilet to back up?
# ::tok What could be causing my toilet to back up ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / cause-01
                            :ARG1 (MRPNode-2 / back-up-04
                                             :ARG1 (MRPNode-3 / toilet
                                                              :poss (MRPNode-4 / i)))
                            :ARG0 (MRPNode-5 / amr-unknown)))

# ::id 33
# ::snt Why is my dryer taking longer to dry clothes?
# ::tok Why is my dryer taking longer to dry clothes ?
# ::collapsed instance nodes 0
(MRPNode-0 / take-10
           :ARG1 (MRPNode-1 / have-degree-91
                            :ARG2 (MRPNode-2 / more)
                            :ARG2 (MRPNode-3 / long-03))
           :ARG0 (MRPNode-4 / dry-02
                            :ARG1 (MRPNode-5 / product
                                             :ARG0-of (MRPNode-6 / dry-08
                                                                 :ARG1 (MRPNode-7 / i)))
                            :ARG1 (MRPNode-8 / clothes))
           :ARG1-of (MRPNode-9 / cause-01
                               :ARG0 (MRPNode-10 / amr-unknown)))

# ::id 34
# ::snt What are some good strength exercises for marathon runners?
# ::tok What are some good strength exercises for marathon runners ?
# ::collapsed instance nodes 0
(MRPNode-0 / exercise-02
           :ARG1 (MRPNode-1 / amr-unknown)
           :ARG0 (MRPNode-2 / person
                            :ARG0-of (MRPNode-3 / marathon)
                            :ARG0-of (MRPNode-4 / run-02))
           :ARG1-of (MRPNode-5 / good-02)
           :quant (MRPNode-6 / some))

# ::id 35
# ::snt Which way does the air flow through my furnace?
# ::tok Which way does the air flow through my furnace ?
# ::collapsed instance nodes 0
(MRPNode-0 / flow-01
           :ARG1 (MRPNode-1 / air)
           :path (MRPNode-2 / furnace
                            :poss (MRPNode-3 / i))
           :path (MRPNode-4 / amr-unknown))

# ::id 36
# ::snt Why is my washing machine making this sound?
# ::tok Why is my washing machine making this sound ?
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / sound-01
                            :ARG1 (MRPNode-2 / machine
                                             :ARG0-of (MRPNode-3 / wash-01)
                                             :poss (MRPNode-4 / i))
                            :ARG2 (MRPNode-5 / this))
           :ARG0 (MRPNode-6 / amr-unknown))

# ::id 37
# ::snt How do I convert a ceiling fan with 2 separate wall switches to a separate fan & light switch?
# ::tok How do I convert a ceiling fan with 2 separate wall switches to a separate fan & light switch ?
# ::collapsed instance nodes 0
(MRPNode-0 / convert-01
           :ARG1 (MRPNode-1 / fan
                            :mod (MRPNode-2 / ceiling)
                            :ARG0-of (MRPNode-3 / have-03
                                                :ARG1 (MRPNode-4 / switch
                                                                 :ARG1-of (MRPNode-5 / wall)
                                                                 :ARG1-of (MRPNode-6 / separate-02))))
           :ARG0 (MRPNode-7 / i)
           :ARG2 (MRPNode-8 / switch
                            :ARG1-of (MRPNode-9 / separate-02)
                            :ARG0-of (MRPNode-10 / and
                                                 :op2 (MRPNode-11 / switch
                                                                  :quant (MRPNode-12 / 2)
                                                                  :quant (MRPNode-13 / wall))))
           :manner (MRPNode-14 / amr-unknown))

# ::id 38
# ::snt How can I repair a towel bar with one end ripped out of the wall?
# ::tok How can I repair a towel bar with one end ripped out of the wall ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / repair-01
                            :ARG1 (MRPNode-2 / bar
                                             :mod (MRPNode-3 / towel)
                                             :ARG1-of (MRPNode-4 / rip-01
                                                                 :ARG1 (MRPNode-5 / end
                                                                                  :quant (MRPNode-6 / 1))
                                                                 :ARG2 (MRPNode-7 / wall)))
                            :ARG0 (MRPNode-8 / i)
                            :manner (MRPNode-9 / amr-unknown)))

# ::id 39
# ::snt How can I remove a really stuck screw?
# ::tok How can I remove a really stuck screw ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / remove-01
                            :ARG1 (MRPNode-2 / amr-unknown)
                            :ARG1 (MRPNode-3 / thing
                                             :ARG1-of (MRPNode-4 / stick-01
                                                                 :ARG1-of (MRPNode-5 / real-04))
                                             :ARG1-of (MRPNode-6 / screw-02))
                            :ARG0 (MRPNode-7 / i)))

# ::id 40
# ::snt What are refereed and non-refereed journals?
# ::tok What are refereed and non - refereed journals ?
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / journal
                           :ARG1-of (MRPNode-2 / require-01))
           :op2 (MRPNode-3 / journal
                           :polarity (MRPNode-4 / -)
                           :ARG1-of (MRPNode-5 / require-01))
           :domain (MRPNode-6 / amr-unknown))

# ::id 41
# ::snt How can I prepare this old exterior wall for painting?
# ::tok How can I prepare this old exterior wall for painting ?
# ::collapsed instance nodes 3
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / prepare-02
                            :ARG1 (MRPNode-2 / this_old_exterior_wall_4)
                            :ARG0 (MRPNode-3 / i)
                            :ARG2 (MRPNode-4 / paint-02)
                            :manner (MRPNode-5 / amr-unknown)))

# ::id 42
# ::snt What can I do to fix store-bought mayonnaise that split?
# ::tok What can I do to fix store - bought mayonnaise that split ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / fix-02
                                             :ARG1 (MRPNode-3 / mayonnaise
                                                              :ARG1-of (MRPNode-4 / buy-01
                                                                                  :ARG0 (MRPNode-5 / store))
                                                              :ARG1-of (MRPNode-6 / split-01))
                                             :ARG0 (MRPNode-7 / i))
                            :ARG0 MRPNode-7
                            :ARG1 (MRPNode-8 / amr-unknown)))

# ::id 43
# ::snt Should I negotiate if I'm offered more than what I initially asked for?
# ::tok Should I negotiate if I 'm offered more than what I initially asked for ?
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / negotiate-01
                            :ARG0 (MRPNode-2 / i
                                             :ARG0-of (MRPNode-3 / ask-02
                                                                 :ARG1 (MRPNode-4 / thing)
                                                                 :time (MRPNode-5 / initial)))
                            :ARG2 (MRPNode-6 / offer-01
                                             :ARG0 MRPNode-2
                                             :ARG1 (MRPNode-7 / thing
                                                              :ARG1-of (MRPNode-8 / have-quant-91
                                                                                  :ARG1 MRPNode-4
                                                                                  :ARG3 (MRPNode-9 / more)))))
           :ARG2 (MRPNode-10 / amr-unknown))

# ::id 44
# ::snt What does this tablature notation mean?
# ::tok What does this tablature notation mean ?
# ::collapsed instance nodes 2
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / amr-unknown)
           :ARG1 (MRPNode-2 / this_tablature_notation_3))

# ::id 45
# ::snt Why isn't the switch working to turn off my ceiling lamp after I replaced a fan w/light?
# ::tok Why is n't the switch working to turn off my ceiling lamp after I replaced a fan w / light ?
# ::collapsed instance nodes 1
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / work-09
                            :polarity (MRPNode-2 / -)
                            :ARG1 (MRPNode-3 / switch)
                            :time (MRPNode-4 / after
                                             :op1 (MRPNode-5 / replace-01
                                                             :ARG1 (MRPNode-6 / light)
                                                             :ARG0 (MRPNode-7 / i)
                                                             :ARG1 (MRPNode-8 / fan)))
                            :purpose (MRPNode-9 / turn-on-13
                                                :ARG0 MRPNode-3
                                                :ARG1 (MRPNode-10 / ceiling_lamp_2)))
           :ARG0 (MRPNode-11 / amr-unknown))

# ::id 46
# ::snt How to make good coffee in a Moka pot?
# ::tok How to make good coffee in a Moka pot ?
# ::collapsed instance nodes 3
(MRPNode-0 / make-01
           :ARG1 (MRPNode-1 / coffee
                            :ARG1-of (MRPNode-2 / good-02))
           :location (MRPNode-3 / moka_pot_4)
           :manner (MRPNode-4 / amr-unknown))

# ::id 47
# ::snt What could be causing my GFCI to trip?
# ::tok What could be causing my GFCI to trip ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / cause-01
                            :ARG1 (MRPNode-2 / trip-03
                                             :ARG0 (MRPNode-3 / person
                                                              :ARG0-of (MRPNode-4 / have-rel-role-91
                                                                                  :ARG1 (MRPNode-5 / i)
                                                                                  :ARG2 (MRPNode-6 / practitioner
                                                                                                   :mod (MRPNode-7 / vice)))))
                            :ARG0 (MRPNode-8 / amr-unknown)))

# ::id 48
# ::snt What could be wrong with my furnace?
# ::tok What could be wrong with my furnace ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / wrong-02
                            :ARG1 (MRPNode-2 / amr-unknown)
                            :ARG2 (MRPNode-3 / furnace
                                             :poss (MRPNode-4 / i))))

# ::id 49
# ::snt How can I connect additional wires to a receptacle?
# ::tok How can I connect additional wires to a receptacle ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / connect-01
                            :ARG1 (MRPNode-2 / amr-unknown)
                            :ARG1 (MRPNode-3 / wire
                                             :ARG1-of (MRPNode-4 / additional))
                            :ARG0 (MRPNode-5 / i)
                            :ARG2 (MRPNode-6 / receptacle)))

# ::id 50
# ::snt How can I prepare this old exterior wall for painting?
# ::tok How can I prepare this old exterior wall for painting ?
# ::collapsed instance nodes 3
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / prepare-02
                            :ARG1 (MRPNode-2 / this_old_exterior_wall_4)
                            :ARG0 (MRPNode-3 / i)
                            :ARG2 (MRPNode-4 / paint-02)
                            :manner (MRPNode-5 / amr-unknown)))

# ::id 51
# ::snt Why is there no water in the kitchen?
# ::tok Why is there no water in the kitchen ?
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / water
                            :polarity (MRPNode-2 / -)
                            :location (MRPNode-3 / kitchen))
           :ARG0 (MRPNode-4 / amr-unknown))

# ::id 52
# ::snt What more can I do to improve my credit score?
# ::tok What more can I do to improve my credit score ?
# ::collapsed instance nodes 1
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / improve-01
                                             :ARG1 (MRPNode-3 / score
                                                              :mod (MRPNode-4 / credit)
                                                              :poss (MRPNode-5 / i))
                                             :ARG0 MRPNode-5)
                            :ARG0 (MRPNode-6 / what_more_2)
                            :ARG0 MRPNode-5))

# ::id 53
# ::snt Bar ware - What kind of glass is this?
# ::tok Bar ware - What kind of glass is this ?
# ::collapsed instance nodes 1
(MRPNode-0 / ask-01
           :ARG1 (MRPNode-1 / glass
                            :mod (MRPNode-2 / kind
                                            :mod (MRPNode-3 / amr-unknown)
                                            :mod (MRPNode-4 / this)))
           :ARG2 (MRPNode-5 / i)
           :ARG2 (MRPNode-6 / bar_ware_2))

# ::id 54
# ::snt Do I really need a redundant sump pump?
# ::tok Do I really need a redundant sump pump ?
# ::collapsed instance nodes 2
(MRPNode-0 / need-01
           :ARG1 (MRPNode-1 / redundant_sump_pump_3)
           :ARG0 (MRPNode-2 / i)
           :ARG1-of (MRPNode-3 / real-04)
           :ARG1-of (MRPNode-4 / amr-unknown))

# ::id 55
# ::snt How can I work out how valuable I am to my boss and company?
# ::tok How can I work out how valuable I am to my boss and company ?
# ::collapsed instance nodes 0
(MRPNode-0 / have-manner-91
           :ARG1 (MRPNode-1 / possible-01
                            :ARG1 (MRPNode-2 / work-out-02
                                             :ARG1 (MRPNode-3 / value-02
                                                              :ARG0 (MRPNode-4 / and
                                                                               :op1 (MRPNode-5 / person)
                                                                               :op2 (MRPNode-6 / company))
                                                              :degree (MRPNode-7 / so)
                                                              :ARG1 (MRPNode-8 / i
                                                                               :ARG1-of (MRPNode-9 / have-rel-role-91
                                                                                                   :ARG0 MRPNode-5
                                                                                                   :ARG2 (MRPNode-10 / boss))
                                                                               :ARG1-of MRPNode-6))
                                             :ARG0 MRPNode-8))
           :ARG2 (MRPNode-11 / amr-unknown))

# ::id 56
# ::snt Do I need to apply for ESTA?
# ::tok Do I need to apply for ESTA ?
# ::collapsed instance nodes 0
(MRPNode-0 / need-01
           :ARG1 (MRPNode-1 / apply-01
                            :ARG1 (MRPNode-2 / law
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / esta)))
                            :ARG0 (MRPNode-5 / i))
           :ARG0 MRPNode-5
           :ARG0 (MRPNode-6 / amr-unknown))

# ::id 57
# ::snt Should I let potential employers know I have a job offer?
# ::tok Should I let potential employers know I have a job offer ?
# ::collapsed instance nodes 2
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / let-01
                            :ARG1 (MRPNode-2 / know-01
                                             :ARG1 (MRPNode-3 / offer-01
                                                              :ARG1 (MRPNode-4 / job)
                                                              :ARG0 (MRPNode-5 / i))
                                             :ARG0 (MRPNode-6 / potential_employers_3))
                            :ARG0 MRPNode-5)
           :ARG2 (MRPNode-7 / amr-unknown))

# ::id 58
# ::snt How do I repair water-damaged hardwood floors?
# ::tok How do I repair water - damaged hardwood floors ?
# ::collapsed instance nodes 0
(MRPNode-0 / repair-01
           :ARG1 (MRPNode-1 / floor
                            :mod (MRPNode-2 / hardwood)
                            :ARG1-of (MRPNode-3 / damage-01
                                                :ARG0 (MRPNode-4 / water)))
           :ARG0 (MRPNode-5 / i)
           :manner (MRPNode-6 / amr-unknown))

# ::id 59
# ::snt Glue underlayment to concrete: how long does it take to cure?
# ::tok Glue underlayment to concrete : how long does it take to cure ?
# ::collapsed instance nodes 0
(MRPNode-0 / multi-sentence
           :snt1 (MRPNode-1 / bullshit-01
                            :mode (MRPNode-2 / imperative)
                            :ARG1 (MRPNode-3 / underlayment
                                             :ARG1-of (MRPNode-4 / concrete-02))
                            :ARG0 (MRPNode-5 / you))
           :snt2 (MRPNode-6 / take-10
                            :ARG1 (MRPNode-7 / last-01
                                             :ARG2 (MRPNode-8 / cure-01)
                                             :ARG2 (MRPNode-9 / amr-unknown))))

# ::id 60
# ::snt Is it better to request a recommendation letter in person after class or by email?
# ::tok Is it better to request a recommendation letter in person after class or by email ?
# ::collapsed instance nodes 0
(MRPNode-0 / have-degree-91
           :ARG1 (MRPNode-1 / urgent
                            :ARG1-of (MRPNode-2 / or
                                                :op1 (MRPNode-3 / after
                                                                :op1 (MRPNode-4 / class))
                                                :op2 (MRPNode-5 / email))
                            :ARG1-of (MRPNode-6 / recommend-01))
           :ARG2 (MRPNode-7 / good-02
                            :ARG1 MRPNode-1)
           :ARG3 (MRPNode-8 / amr-unknown)
           :ARG3 (MRPNode-9 / more))

# ::id 61
# ::snt I have a Schengen visa but my UAE Residence visa cancelled. Can I still travel then?
# ::tok I have a Schengen visa but my UAE Residence visa cancelled . Can I still travel then ?
# ::collapsed instance nodes 0
(MRPNode-0 / multi-sentence
           :snt1 (MRPNode-1 / contrast-01
                            :ARG1 (MRPNode-2 / have-03
                                             :ARG1 (MRPNode-3 / visa
                                                              :mod (MRPNode-4 / company
                                                                              :name (MRPNode-5 / name
                                                                                               :op1 (MRPNode-6 / schengen))))
                                             :ARG0 (MRPNode-7 / i))
                            :ARG2 (MRPNode-8 / cancel-01
                                             :ARG1 (MRPNode-9 / visa
                                                              :mod (MRPNode-10 / spaceship
                                                                               :name (MRPNode-11 / name
                                                                                                 :op1 (MRPNode-12 / uae)
                                                                                                 :op2 (MRPNode-13 / residence))))))
           :snt2 (MRPNode-14 / possible-01
                             :ARG1 (MRPNode-15 / travel-01
                                               :ARG0 MRPNode-7
                                               :mod (MRPNode-16 / i)
                                               :mod (MRPNode-17 / still))
                             :mod (MRPNode-18 / then)
                             :mod (MRPNode-19 / amr-unknown)))

# ::id 62
# ::snt How do I remove paint from a wood floor?
# ::tok How do I remove paint from a wood floor ?
# ::collapsed instance nodes 1
(MRPNode-0 / remove-01
           :ARG1 (MRPNode-1 / paint)
           :ARG0 (MRPNode-2 / i)
           :ARG2 (MRPNode-3 / wood_floor_2)
           :manner (MRPNode-4 / amr-unknown))

# ::id 63
# ::snt How to apply for a Schengen visa?
# ::tok How to apply for a Schengen visa ?
# ::collapsed instance nodes 3
(MRPNode-0 / have-manner-91
           :ARG1 (MRPNode-1 / apply-01
                            :ARG1 (MRPNode-2 / schengen_visa_4))
           :ARG2 (MRPNode-3 / amr-unknown))

# ::id 64
# ::snt Why is my furnace blowing hot air outside through a PVC pipe?
# ::tok Why is my furnace blowing hot air outside through a PVC pipe ?
# ::collapsed instance nodes 3
(MRPNode-0 / blow-01
           :ARG1 (MRPNode-1 / air
                            :ARG1-of (MRPNode-2 / hot-05))
           :ARG0 (MRPNode-3 / furnace
                            :poss (MRPNode-4 / i))
           :ARG1-of (MRPNode-5 / cause-01
                               :ARG0 (MRPNode-6 / amr-unknown))
           :path (MRPNode-7 / outside)
           :instrument (MRPNode-8 / pvc_pipe_4))

# ::id 65
# ::snt Do I need to replace my hot water tank's pressure release valve?
# ::tok Do I need to replace my hot water tank 's pressure release valve ?
# ::collapsed instance nodes 0
(MRPNode-0 / need-01
           :ARG1 (MRPNode-1 / replace-01
                            :ARG1 (MRPNode-2 / valve
                                             :mod (MRPNode-3 / release-01
                                                             :ARG1 (MRPNode-4 / pressure))
                                             :mod (MRPNode-5 / tank
                                                             :ARG1-of (MRPNode-6 / hot-05)))
                            :ARG0 (MRPNode-7 / i
                                             :poss-of MRPNode-5))
           :ARG0 MRPNode-7
           :ARG0 (MRPNode-8 / amr-unknown))

# ::id 66
# ::snt How can I stop my cat's playful yet aggressive behavior?
# ::tok How can I stop my cat 's playful yet aggressive behavior ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / stop-01
                            :ARG1 (MRPNode-2 / amr-unknown)
                            :ARG1 (MRPNode-3 / i
                                             :poss-of (MRPNode-4 / cat))
                            :ARG1 (MRPNode-5 / behave-01
                                             :ARG0 MRPNode-3
                                             :ARG0 MRPNode-4
                                             :ARG1 (MRPNode-6 / aggressive)
                                             :mod (MRPNode-7 / playful))))

# ::id 67
# ::snt Which reward / benefits credit card is the best value for the money in Canada?
# ::tok Which reward / benefits credit card is the best value for the money in Canada ?
# ::collapsed instance nodes 0
(MRPNode-0 / value-01
           :ARG1 (MRPNode-1 / money
                            :location (MRPNode-2 / country
                                                 :name (MRPNode-3 / name
                                                                  :op1 (MRPNode-4 / canada))))
           :ARG2 (MRPNode-5 / slash
                            :op1 (MRPNode-6 / reward-01)
                            :op2 (MRPNode-7 / benefit))
           :ARG1-of (MRPNode-8 / good-02)
           :ARG1-of (MRPNode-9 / have-degree-91
                               :ARG2 MRPNode-8
                               :ARG3 (MRPNode-10 / most))
           :ARG2 (MRPNode-11 / amr-unknown))

# ::id 68
# ::snt What is this vocal technique called?
# ::tok What is this vocal technique called ?
# ::collapsed instance nodes 2
(MRPNode-0 / call-01
           :ARG1 (MRPNode-1 / this_vocal_technique_3)
           :ARG2 (MRPNode-2 / amr-unknown))

# ::id 69
# ::snt What is the significance of the cat?
# ::tok What is the significance of the cat ?
# ::collapsed instance nodes 0
(MRPNode-0 / significant-02
           :ARG1 (MRPNode-1 / cat)
           :ARG3 (MRPNode-2 / amr-unknown))

# ::id 70
# ::snt How long is the life of a shot of espresso?
# ::tok How long is the life of a shot of espresso ?
# ::collapsed instance nodes 0
(MRPNode-0 / last-01
           :ARG2 (MRPNode-1 / life
                            :poss (MRPNode-2 / shot
                                             :consist-of (MRPNode-3 / espresso)))
           :ARG2 (MRPNode-4 / amr-unknown))

# ::id 71
# ::snt How can I get rid of fleas?
# ::tok How can I get rid of fleas ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / rid-01
                            :ARG1 (MRPNode-2 / flea)
                            :ARG0 (MRPNode-3 / i)
                            :manner (MRPNode-4 / amr-unknown)))

# ::id 72
# ::snt Should I switch to third person or continue in first person?
# ::tok Should I switch to third person or continue in first person ?
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / or
                            :op1 (MRPNode-2 / switch-01
                                            :ARG1 (MRPNode-3 / i)
                                            :ARG2 (MRPNode-4 / person
                                                             :ord (MRPNode-5 / ordinal-entity
                                                                             :value (MRPNode-6 / 3))))
                            :op2 (MRPNode-7 / continue-01
                                            :ARG0 MRPNode-3
                                            :manner (MRPNode-8 / person
                                                               :ord (MRPNode-9 / ordinal-entity
                                                                               :value (MRPNode-10 / 1)))))
           :ARG2 (MRPNode-11 / amr-unknown))

# ::id 73
# ::snt How can I tell whether a mathematics journal seems reputable?
# ::tok How can I tell whether a mathematics journal seems reputable ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / tell-01
                            :ARG1 (MRPNode-2 / seem-01
                                             :ARG1 (MRPNode-3 / repute-01
                                                              :ARG1 (MRPNode-4 / journal
                                                                               :topic (MRPNode-5 / mathematics))))
                            :ARG0 (MRPNode-6 / i))
           :manner (MRPNode-7 / amr-unknown))

# ::id 74
# ::snt How can I stop my pie from burning?
# ::tok How can I stop my pie from burning ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / stop-01
                            :ARG1 (MRPNode-2 / burn-01
                                             :ARG1 (MRPNode-3 / pie
                                                              :poss (MRPNode-4 / i)))
                            :ARG0 MRPNode-4
                            :manner (MRPNode-5 / amr-unknown)))

# ::id 75
# ::snt How do I replace a broken halogen bulb in the recessed light in my bathroom?
# ::tok How do I replace a broken halogen bulb in the recessed light in my bathroom ?
# ::collapsed instance nodes 2
(MRPNode-0 / replace-01
           :ARG1 (MRPNode-1 / broken_halogen_bulb_3)
           :ARG0 (MRPNode-2 / i
                            :poss-of (MRPNode-3 / bathroom))
           :ARG2 (MRPNode-4 / light
                            :location MRPNode-3
                            :ARG1-of (MRPNode-5 / recess))
           :manner (MRPNode-6 / amr-unknown))

# ::id 76
# ::snt Is it acceptable as referee to contact an author on a paper you review?
# ::tok Is it acceptable as referee to contact an author on a paper you review ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / accept-01
                            :ARG1 (MRPNode-2 / referee)
                            :ARG1 (MRPNode-3 / contact-01
                                             :ARG1 (MRPNode-4 / paper
                                                              :ARG1-of (MRPNode-5 / review-01
                                                                                  :ARG0 (MRPNode-6 / you)))
                                             :ARG0 (MRPNode-7 / person
                                                              :ARG0-of (MRPNode-8 / author-01))))
           :ARG1-of (MRPNode-9 / amr-unknown))

# ::id 77
# ::snt What is a good solo to learn in the Dorian mode?
# ::tok What is a good solo to learn in the Dorian mode ?
# ::collapsed instance nodes 3
(MRPNode-0 / good-02
           :ARG1 (MRPNode-1 / learn-01
                            :ARG1 (MRPNode-2 / dorian_mode_4))
           :ARG1 (MRPNode-3 / amr-unknown))

# ::id 78
# ::snt How can I get rid of fleas?
# ::tok How can I get rid of fleas ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / rid-01
                            :ARG1 (MRPNode-2 / flea)
                            :ARG0 (MRPNode-3 / i)
                            :manner (MRPNode-4 / amr-unknown)))

# ::id 79
# ::snt How can I add a GFCI receptacle on a circuit with split receptacles?
# ::tok How can I add a GFCI receptacle on a circuit with split receptacles ?
# ::collapsed instance nodes 3
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / add-02
                            :ARG0 (MRPNode-2 / i)
                            :ARG2 (MRPNode-3 / circuit
                                             :ARG1-of (MRPNode-4 / have-03
                                                                 :ARG1 (MRPNode-5 / receptacle
                                                                                  :ARG1-of (MRPNode-6 / split-01))))
                            :manner (MRPNode-7 / amr-unknown))
           :manner (MRPNode-8 / gfci_receptacle_4))

# ::id 80
# ::snt How does Paying credit card in full VS paying with interest will affect your credit score?
# ::tok How does Paying credit card in full VS paying with interest will affect your credit score ?
# ::collapsed instance nodes 2
(MRPNode-0 / affect-01
           :ARG1 (MRPNode-1 / your_credit_score_3)
           :ARG0 (MRPNode-2 / pay-01
                            :ARG1 (MRPNode-3 / card
                                             :mod (MRPNode-4 / full-09)
                                             :mod (MRPNode-5 / credit-02))
                            :manner (MRPNode-6 / interest))
           :manner (MRPNode-7 / amr-unknown))

# ::id 81
# ::snt Should I contact a PhD student or his supervisor for potential collaboration?
# ::tok Should I contact a PhD student or his supervisor for potential collaboration ?
# ::collapsed instance nodes 1
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / contact-01
                            :ARG1 (MRPNode-2 / or
                                             :op1 (MRPNode-3 / person
                                                             :ARG0-of (MRPNode-4 / study-01
                                                                                 :location (MRPNode-5 / doctor)))
                                             :op2 (MRPNode-6 / person
                                                             :ARG0-of (MRPNode-7 / supervise-01)))
                            :ARG0 (MRPNode-8 / i)
                            :purpose (MRPNode-9 / potential_collaboration_2
                                                :ARG1 MRPNode-2))
           :ARG2 (MRPNode-10 / amr-unknown))

# ::id 82
# ::snt How can I replace a ceiling fan light pull chain?
# ::tok How can I replace a ceiling fan light pull chain ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / replace-01
                            :ARG1 (MRPNode-2 / pull-01
                                             :ARG1 (MRPNode-3 / chain)
                                             :ARG1 (MRPNode-4 / light
                                                              :mod (MRPNode-5 / ceiling)))
                            :ARG0 (MRPNode-6 / i)
                            :ARG2 (MRPNode-7 / amr-unknown)))

# ::id 83
# ::snt How do I maintain a good relationship with my old boss after being promoted?
# ::tok How do I maintain a good relationship with my old boss after being promoted ?
# ::collapsed instance nodes 0
(MRPNode-0 / maintain-01
           :ARG1 (MRPNode-1 / relation-03
                            :ARG1-of (MRPNode-2 / good-02)
                            :ARG2 (MRPNode-3 / person)
                            :ARG0 (MRPNode-4 / i
                                             :ARG1-of (MRPNode-5 / promote-01
                                                                 :ARG0 MRPNode-3)
                                             :ARG1-of (MRPNode-6 / have-rel-role-91
                                                                 :ARG0 MRPNode-3
                                                                 :ARG2 (MRPNode-7 / old)
                                                                 :ARG2 (MRPNode-8 / boss))))
           :ARG0 MRPNode-4
           :time (MRPNode-9 / after)
           :manner (MRPNode-10 / amr-unknown))

# ::id 84
# ::snt Can I ask a company what I should wear to an interview?
# ::tok Can I ask a company what I should wear to an interview ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / ask-01
                            :ARG1 (MRPNode-2 / thing
                                             :ARG1-of (MRPNode-3 / wear-01
                                                                 :ARG1-of (MRPNode-4 / recommend-01)
                                                                 :ARG0 (MRPNode-5 / i
                                                                                  :ARG1-of (MRPNode-6 / interview-01
                                                                                                      :ARG2 MRPNode-3))))
                            :ARG0 MRPNode-5
                            :ARG2 (MRPNode-7 / company))
           :ARG2 (MRPNode-8 / amr-unknown))

# ::id 85
# ::snt U.S. income tax & charitable donations: How much is income tax reduced by donations?
# ::tok U.S. income tax & charitable donations : How much is income tax reduced by donations ?
# ::collapsed instance nodes 1
(MRPNode-0 / and
           :op1 (MRPNode-1 / tax-01
                           :ARG3 (MRPNode-2 / income))
           :op2 (MRPNode-3 / reduce-01
                           :ARG1 (MRPNode-4 / charitable_donations_2)
                           :ARG1 (MRPNode-5 / tax-01)
                           :ARG2 (MRPNode-6 / amr-unknown))
           :domain (MRPNode-7 / country
                              :name (MRPNode-8 / name
                                               :op1 (MRPNode-9 / u.s.))))

# ::id 86
# ::snt Can I connect two load lines to a GFCI receptacle?
# ::tok Can I connect two load lines to a GFCI receptacle ?
# ::collapsed instance nodes 5
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / connect-01
                            :ARG1 (MRPNode-2 / two_load_lines_3
                                             :quant (MRPNode-3 / 2))
                            :ARG0 (MRPNode-4 / i)
                            :ARG2 (MRPNode-5 / gfci_receptacle_4))
           :ARG1 (MRPNode-6 / amr-unknown))

# ::id 87
# ::snt How do I replace a broken halogen bulb in the recessed light in my bathroom?
# ::tok How do I replace a broken halogen bulb in the recessed light in my bathroom ?
# ::collapsed instance nodes 2
(MRPNode-0 / replace-01
           :ARG1 (MRPNode-1 / broken_halogen_bulb_3)
           :ARG0 (MRPNode-2 / i
                            :poss-of (MRPNode-3 / bathroom))
           :ARG2 (MRPNode-4 / light
                            :location MRPNode-3
                            :ARG1-of (MRPNode-5 / recess))
           :manner (MRPNode-6 / amr-unknown))

# ::id 88
# ::snt How should I patch a popcorn ceiling?
# ::tok How should I patch a popcorn ceiling ?
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / achieve-01
                            :ARG1 (MRPNode-2 / ceiling
                                             :topic (MRPNode-3 / popcorn))
                            :ARG0 (MRPNode-4 / i)
                            :manner (MRPNode-5 / amr-unknown)))

# ::id 89
# ::snt What do I do if a professor at a foreign university doesn't respond to my emails?
# ::tok What do I do if a professor at a foreign university does n't respond to my emails ?
# ::collapsed instance nodes 1
(MRPNode-0 / do-02
           :ARG1 (MRPNode-1 / i
                            :ARG2-of (MRPNode-2 / email-01))
           :condition (MRPNode-3 / respond-01
                                 :polarity (MRPNode-4 / -)
                                 :ARG0 (MRPNode-5 / professor
                                                  :location (MRPNode-6 / foreign_university_2)))
           :ARG1 (MRPNode-7 / amr-unknown))

# ::id 90
# ::snt How can I keep my dog from barking when I don't know what he's barking at?
# ::tok How can I keep my dog from barking when I do n't know what he 's barking at ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / keep-04
                            :ARG1 (MRPNode-2 / bark-01
                                             :ARG0 (MRPNode-3 / dog)
                                             :ARG0 (MRPNode-4 / i))
                            :ARG0 MRPNode-4
                            :time (MRPNode-5 / know-01
                                             :polarity (MRPNode-6 / -)
                                             :ARG0 MRPNode-4
                                             :ARG1 (MRPNode-7 / thing)))
           :manner (MRPNode-8 / amr-unknown))

# ::id 91
# ::snt Travelling to Romania for 4 days by Schengen visa issued by Germany?
# ::tok Travelling to Romania for 4 days by Schengen visa issued by Germany ?
# ::collapsed instance nodes 0
(MRPNode-0 / travel-01
           :ARG0 (MRPNode-1 / visa
                            :mod (MRPNode-2 / issue-01
                                            :ARG0 (MRPNode-3 / country
                                                             :name (MRPNode-4 / name
                                                                              :op1 (MRPNode-5 / germany))))
                            :mod (MRPNode-6 / company
                                            :name (MRPNode-7 / name
                                                             :op1 (MRPNode-8 / schengen))))
           :ARG4 (MRPNode-9 / country
                            :name (MRPNode-10 / name
                                              :op1 (MRPNode-11 / romania)))
           :duration (MRPNode-12 / temporal-quantity
                                 :quant (MRPNode-13 / 4)
                                 :unit (MRPNode-14 / day))
           :ARG0 (MRPNode-15 / amr-unknown))

# ::id 92
# ::snt What is the professional way to follow up with a manager for project opportunity?
# ::tok What is the professional way to follow up with a manager for project opportunity ?
# ::collapsed instance nodes 1
(MRPNode-0 / way
           :mod (MRPNode-1 / professional)
           :domain (MRPNode-2 / follow-up-03
                              :ARG1 (MRPNode-3 / person
                                               :ARG0-of (MRPNode-4 / manage-01))
                              :purpose (MRPNode-5 / project_opportunity_2))
           :domain (MRPNode-6 / amr-unknown))

# ::id 93
# ::snt Why is compensation so much higher in the US than in Western Europe on average?
# ::tok Why is compensation so much higher in the US than in Western Europe on average ?
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / high-02
                            :ARG1 (MRPNode-2 / country
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / us)))
                            :ARG1 (MRPNode-5 / have-degree-91
                                             :ARG3 (MRPNode-6 / more
                                                              :quant (MRPNode-7 / much
                                                                                :degree (MRPNode-8 / so)))
                                             :ARG4 (MRPNode-9 / thing
                                                              :ARG1-of (MRPNode-10 / average-04)
                                                              :location (MRPNode-11 / continent
                                                                                    :name (MRPNode-12 / name
                                                                                                      :op1 (MRPNode-13 / western)
                                                                                                      :op2 (MRPNode-14 / europe))))
                                             :ARG1 (MRPNode-15 / compensate-01))
                            :ARG1 MRPNode-15)
           :ARG0 (MRPNode-16 / amr-unknown))

# ::id 94
# ::snt What is the significance of the cat?
# ::tok What is the significance of the cat ?
# ::collapsed instance nodes 0
(MRPNode-0 / significant-02
           :ARG1 (MRPNode-1 / cat)
           :ARG3 (MRPNode-2 / amr-unknown))

# ::id 95
# ::snt What could be causing water pressure to build up after changing my under sink filter?
# ::tok What could be causing water pressure to build up after changing my under sink filter ?
# ::collapsed instance nodes 1
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / build-up-05
                            :ARG1 (MRPNode-2 / after
                                             :op1 (MRPNode-3 / change-01
                                                             :ARG1 (MRPNode-4 / filter-02
                                                                              :ARG1 (MRPNode-5 / under)
                                                                              :ARG1 (MRPNode-6 / i))))
                            :ARG1 (MRPNode-7 / amr-unknown)
                            :ARG1 (MRPNode-8 / water_pressure_2)))

# ::id 96
# ::snt How do I convert a ceiling fan with 2 separate wall switches to a separate fan & light switch?
# ::tok How do I convert a ceiling fan with 2 separate wall switches to a separate fan & light switch ?
# ::collapsed instance nodes 0
(MRPNode-0 / convert-01
           :ARG1 (MRPNode-1 / fan
                            :mod (MRPNode-2 / ceiling)
                            :ARG0-of (MRPNode-3 / have-03
                                                :ARG1 (MRPNode-4 / switch
                                                                 :ARG1-of (MRPNode-5 / wall)
                                                                 :ARG1-of (MRPNode-6 / separate-02))))
           :ARG0 (MRPNode-7 / i)
           :ARG2 (MRPNode-8 / switch
                            :ARG1-of (MRPNode-9 / separate-02)
                            :ARG0-of (MRPNode-10 / and
                                                 :op2 (MRPNode-11 / switch
                                                                  :quant (MRPNode-12 / 2)
                                                                  :quant (MRPNode-13 / wall))))
           :manner (MRPNode-14 / amr-unknown))

# ::id 97
# ::snt After a job interview, is it inappropriate if I want to talk to an employee in private?
# ::tok After a job interview , is it inappropriate if I want to talk to an employee in private ?
# ::collapsed instance nodes 0
(MRPNode-0 / appropriate-02
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / want-01
                            :ARG1 (MRPNode-3 / talk-01
                                             :ARG2 (MRPNode-4 / person
                                                              :ARG1-of (MRPNode-5 / employ-01))
                                             :ARG1-of (MRPNode-6 / private-02)
                                             :ARG0 (MRPNode-7 / i))
                            :ARG0 MRPNode-7)
           :ARG1 (MRPNode-8 / amr-unknown)
           :time (MRPNode-9 / after
                            :op1 (MRPNode-10 / interview-01
                                             :ARG1 MRPNode-7
                                             :ARG2 (MRPNode-11 / job))))

# ::id 98
# ::snt How do you remove paint from hair?
# ::tok How do you remove paint from hair ?
# ::collapsed instance nodes 0
(MRPNode-0 / remove-01
           :ARG1 (MRPNode-1 / paint)
           :ARG0 (MRPNode-2 / you)
           :ARG2 (MRPNode-3 / hair)
           :manner (MRPNode-4 / amr-unknown))

# ::id 99
# ::snt Is my U.S. driver's license valid in Europe?
# ::tok Is my U.S. driver 's license valid in Europe ?
# ::collapsed instance nodes 0
(MRPNode-0 / valid-02
           :ARG1 (MRPNode-1 / license-01
                            :ARG1 (MRPNode-2 / drive-01
                                             :ARG0 (MRPNode-3 / i))
                            :ARG2 (MRPNode-4 / country
                                             :name (MRPNode-5 / name
                                                              :op1 (MRPNode-6 / u.s.))))
           :ARG2 (MRPNode-7 / amr-unknown)
           :location (MRPNode-8 / continent
                                :name (MRPNode-9 / name
                                                 :op1 (MRPNode-10 / europe))))

# ::id 100
# ::snt Is it safe to leave butter at room temperature?
# ::tok Is it safe to leave butter at room temperature ?
# ::collapsed instance nodes 1
(MRPNode-0 / safe-01
           :ARG1 (MRPNode-1 / leave-12
                            :ARG1 (MRPNode-2 / room_temperature_2)
                            :ARG1 (MRPNode-3 / butter))
           :ARG0 (MRPNode-4 / amr-unknown))

# ::id 101
# ::snt How do I remove paint from a wood floor?
# ::tok How do I remove paint from a wood floor ?
# ::collapsed instance nodes 1
(MRPNode-0 / remove-01
           :ARG1 (MRPNode-1 / paint)
           :ARG0 (MRPNode-2 / i)
           :ARG2 (MRPNode-3 / wood_floor_2)
           :manner (MRPNode-4 / amr-unknown))

# ::id 102
# ::snt What causes these chips in a cement brick wall, and how can I fix them?
# ::tok What causes these chips in a cement brick wall , and how can I fix them ?
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / cause-01
                           :ARG1 (MRPNode-2 / chip
                                            :mod (MRPNode-3 / this)
                                            :location (MRPNode-4 / wall
                                                                 :consist-of (MRPNode-5 / brick
                                                                                        :consist-of (MRPNode-6 / cement))))
                           :ARG0 (MRPNode-7 / amr-unknown))
           :op2 (MRPNode-8 / possible-01
                           :ARG1 (MRPNode-9 / fix-02
                                            :ARG1 MRPNode-2
                                            :ARG0 (MRPNode-10 / i))))

# ::id 103
# ::snt What could be causing my toilet to back up?
# ::tok What could be causing my toilet to back up ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / cause-01
                            :ARG1 (MRPNode-2 / back-up-04
                                             :ARG1 (MRPNode-3 / toilet
                                                              :poss (MRPNode-4 / i)))
                            :ARG0 (MRPNode-5 / amr-unknown)))

# ::id 104
# ::snt How to bake a chicken?
# ::tok How to bake a chicken ?
# ::collapsed instance nodes 0
(MRPNode-0 / have-manner-91
           :ARG1 (MRPNode-1 / bake-01
                            :ARG1 (MRPNode-2 / chicken))
           :ARG2 (MRPNode-3 / amr-unknown))

# ::id 105
# ::snt What kind of spider web is this - and how do I get rid of it?
# ::tok What kind of spider web is this - and how do I get rid of it ?
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / web
                           :mod (MRPNode-2 / amr-unknown)
                           :mod (MRPNode-3 / kind)
                           :mod (MRPNode-4 / spider))
           :op2 (MRPNode-5 / rid-01
                           :ARG1 MRPNode-1
                           :ARG0 (MRPNode-6 / i)
                           :manner (MRPNode-7 / amr-unknown)))

# ::id 106
# ::snt What goes in a student success statement for a faculty application?
# ::tok What goes in a student success statement for a faculty application ?
# ::collapsed instance nodes 0
(MRPNode-0 / go-01
           :ARG1 (MRPNode-1 / state-01
                            :ARG3 (MRPNode-2 / succeed-01
                                             :ARG1 (MRPNode-3 / apply-01
                                                              :ARG0 (MRPNode-4 / faculty))
                                             :ARG0 (MRPNode-5 / person
                                                              :ARG0-of (MRPNode-6 / study-01))))
           :ARG4 (MRPNode-7 / amr-unknown))

# ::id 107
# ::snt How do I make soft chapattis?
# ::tok How do I make soft chapattis ?
# ::collapsed instance nodes 0
(MRPNode-0 / make-01
           :ARG1 (MRPNode-1 / chapattis
                            :ARG1-of (MRPNode-2 / soft-02))
           :ARG0 (MRPNode-3 / i)
           :manner (MRPNode-4 / amr-unknown))

# ::id 108
# ::snt How should you respond to your teacher who cannot help you with a recommendation?
# ::tok How should you respond to your teacher who cannot help you with a recommendation ?
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / respond-01
                            :ARG1 (MRPNode-2 / person
                                             :ARG0-of (MRPNode-3 / teach-01)
                                             :ARG0-of (MRPNode-4 / help-01
                                                                 :ARG1-of (MRPNode-5 / possible-01
                                                                                     :polarity (MRPNode-6 / -))
                                                                 :ARG2 (MRPNode-7 / you
                                                                                  :ARG2-of (MRPNode-8 / recommend-01))
                                                                 :ARG1 MRPNode-8))
                            :ARG0 MRPNode-7
                            :ARG2 (MRPNode-9 / amr-unknown)))

# ::id 109
# ::snt What should I do with my credit card debt?
# ::tok What should I do with my credit card debt ?
# ::collapsed instance nodes 2
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / amr-unknown)
                            :ARG0 (MRPNode-3 / i)
                            :ARG2 (MRPNode-4 / credit_card_debt_3
                                             :poss MRPNode-3)))

# ::id 110
# ::snt What's the best way to run a wire from inside my garage to the outside?
# ::tok What 's the best way to run a wire from inside my garage to the outside ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / run-01
                                 :ARG1 (MRPNode-6 / wire)
                                 :source (MRPNode-7 / and
                                                    :op2 (MRPNode-8 / outside))
                                 :source (MRPNode-9 / inside
                                                    :op1 (MRPNode-10 / garage
                                                                     :poss (MRPNode-11 / i)))))

# ::id 111
# ::snt How do I stop my dog from jumping on me?
# ::tok How do I stop my dog from jumping on me ?
# ::collapsed instance nodes 0
(MRPNode-0 / stop-03
           :ARG1 (MRPNode-1 / dog
                            :poss (MRPNode-2 / i))
           :ARG0 MRPNode-2
           :ARG2 (MRPNode-3 / jump-03
                            :ARG0 MRPNode-1)
           :manner (MRPNode-4 / amr-unknown))

# ::id 112
# ::snt Should I tell prospective employer that I got a raise at my current job?
# ::tok Should I tell prospective employer that I got a raise at my current job ?
# ::collapsed instance nodes 2
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / tell-01
                            :ARG1 (MRPNode-2 / get-01
                                             :ARG1 (MRPNode-3 / raise-01)
                                             :location (MRPNode-4 / job
                                                                  :time (MRPNode-5 / current)
                                                                  :poss (MRPNode-6 / i))
                                             :ARG0 MRPNode-6)
                            :ARG0 (MRPNode-7 / prospective_employer_3)
                            :ARG0 MRPNode-6)
           :ARG2 (MRPNode-8 / amr-unknown))

# ::id 113
# ::snt How to judge the quality of my own paper?
# ::tok How to judge the quality of my own paper ?
# ::collapsed instance nodes 0
(MRPNode-0 / judge-01
           :ARG1 (MRPNode-1 / quality
                            :poss (MRPNode-2 / paper
                                             :poss (MRPNode-3 / i)))
           :ARG0 (MRPNode-4 / amr-unknown))

# ::id 114
# ::snt Is it a bad writing practice to start sentences with a verb?
# ::tok Is it a bad writing practice to start sentences with a verb ?
# ::collapsed instance nodes 0
(MRPNode-0 / practice-01
           :ARG1 (MRPNode-1 / start-01
                            :ARG1 (MRPNode-2 / sentence
                                             :ARG0-of (MRPNode-3 / write-01))
                            :ARG2 (MRPNode-4 / verb))
           :ARG1-of (MRPNode-5 / bad-07)
           :ARG1 (MRPNode-6 / amr-unknown))

# ::id 115
# ::snt Schengen visa for UK citizen?
# ::tok Schengen visa for UK citizen ?
# ::collapsed instance nodes 3
(MRPNode-0 / visa
           :beneficiary (MRPNode-1 / person
                                   :ARG0-of (MRPNode-2 / have-org-role-91
                                                       :ARG1 (MRPNode-3 / uk_citizen_4)))
           :mod (MRPNode-4 / amr-unknown)
           :mod (MRPNode-5 / organization
                           :name (MRPNode-6 / name
                                            :op1 (MRPNode-7 / schengen))))

# ::id 116
# ::snt What could be wrong with my furnace?
# ::tok What could be wrong with my furnace ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / wrong-02
                            :ARG1 (MRPNode-2 / amr-unknown)
                            :ARG2 (MRPNode-3 / furnace
                                             :poss (MRPNode-4 / i))))

# ::id 117
# ::snt How do you teach a toddler not to share?
# ::tok How do you teach a toddler not to share ?
# ::collapsed instance nodes 0
(MRPNode-0 / teach-01
           :ARG1 (MRPNode-1 / share-01
                            :polarity (MRPNode-2 / -)
                            :ARG0 (MRPNode-3 / toddler))
           :ARG0 (MRPNode-4 / you)
           :ARG2 MRPNode-3
           :manner (MRPNode-5 / amr-unknown))

# ::id 118
# ::snt What is the best way to learn finger-picking on an acoustic guitar?
# ::tok What is the best way to learn finger - picking on an acoustic guitar ?
# ::collapsed instance nodes 1
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / learn-01
                                 :ARG1 (MRPNode-6 / pick-01
                                                  :instrument (MRPNode-7 / acoustic_guitar_2)
                                                  :instrument (MRPNode-8 / finger))))

# ::id 119
# ::snt How do I troubleshoot my electric oven?
# ::tok How do I troubleshoot my electric oven ?
# ::collapsed instance nodes 0
(MRPNode-0 / trouble-01
           :ARG1 (MRPNode-1 / oven
                            :mod (MRPNode-2 / electric)
                            :poss (MRPNode-3 / i))
           :ARG0 MRPNode-3
           :manner (MRPNode-4 / amr-unknown))

# ::id 120
# ::snt How to apply for a Schengen visa?
# ::tok How to apply for a Schengen visa ?
# ::collapsed instance nodes 3
(MRPNode-0 / have-manner-91
           :ARG1 (MRPNode-1 / apply-01
                            :ARG1 (MRPNode-2 / schengen_visa_4))
           :ARG2 (MRPNode-3 / amr-unknown))

# ::id 121
# ::snt How can I be sure my water softener is working?
# ::tok How can I be sure my water softener is working ?
# ::collapsed instance nodes 1
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / sure-02
                            :ARG1 (MRPNode-2 / work-09
                                             :ARG1 (MRPNode-3 / water_softener_2))
                            :ARG0 (MRPNode-4 / i))
           :manner (MRPNode-5 / amr-unknown))

# ::id 122
# ::snt How do I cap a T junction on a roof ridge?
# ::tok How do I cap a T junction on a roof ridge ?
# ::collapsed instance nodes 1
(MRPNode-0 / cap-01
           :ARG1 (MRPNode-1 / junction
                            :location (MRPNode-2 / roof_ridge_2))
           :ARG0 (MRPNode-3 / i)
           :ARG2 (MRPNode-4 / amr-unknown))

# ::id 123
# ::snt How do I stop my dog from jumping on me?
# ::tok How do I stop my dog from jumping on me ?
# ::collapsed instance nodes 0
(MRPNode-0 / stop-03
           :ARG1 (MRPNode-1 / dog
                            :poss (MRPNode-2 / i))
           :ARG0 MRPNode-2
           :ARG2 (MRPNode-3 / jump-03
                            :ARG0 MRPNode-1)
           :manner (MRPNode-4 / amr-unknown))

# ::id 124
# ::snt How to make a strong mug of filter coffee without any Coffee machine?
# ::tok How to make a strong mug of filter coffee without any Coffee machine ?
# ::collapsed instance nodes 0
(MRPNode-0 / make-01
           :ARG1 (MRPNode-1 / coffee
                            :quant (MRPNode-2 / mug
                                              :ARG1-of (MRPNode-3 / strong-02)
                                              :quant (MRPNode-4 / filter-02)))
           :manner (MRPNode-5 / machine
                              :mod (MRPNode-6 / -)
                              :mod (MRPNode-7 / any)
                              :source (MRPNode-8 / convert-01))
           :manner (MRPNode-9 / amr-unknown))

# ::id 125
# ::snt What are the types of Guitar available and what are the pros and cons of each?
# ::tok What are the types of Guitar available and what are the pros and cons of each ?
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / type
                           :domain (MRPNode-2 / amr-unknown)
                           :ARG2-of (MRPNode-3 / available-02
                                               :ARG2 (MRPNode-4 / Guitar)))
           :op2 (MRPNode-5 / and
                           :op1 (MRPNode-6 / pro)
                           :op2 (MRPNode-7 / con
                                           :poss MRPNode-4
                                           :mod (MRPNode-8 / each))
                           :domain (MRPNode-9 / amr-unknown)))

# ::id 126
# ::snt How do I fix a hole/gap between my shower tile and the dry wall next to it?
# ::tok How do I fix a hole / gap between my shower tile and the dry wall next to it ?
# ::collapsed instance nodes 0
(MRPNode-0 / fix-02
           :ARG1 (MRPNode-1 / slash
                            :op1 (MRPNode-2 / hole)
                            :op2 (MRPNode-3 / gap)
                            :location (MRPNode-4 / wall
                                                 :ARG1-of (MRPNode-5 / dry-08)
                                                 :location (MRPNode-6 / next-to)))
           :ARG0 (MRPNode-7 / i
                            :poss-of (MRPNode-8 / shower)
                            :poss-of MRPNode-6)
           :manner (MRPNode-9 / between)
           :manner (MRPNode-10 / amr-unknown))

# ::id 127
# ::snt What is a good solo to learn in the Dorian mode?
# ::tok What is a good solo to learn in the Dorian mode ?
# ::collapsed instance nodes 3
(MRPNode-0 / good-02
           :ARG1 (MRPNode-1 / learn-01
                            :ARG1 (MRPNode-2 / dorian_mode_4))
           :ARG1 (MRPNode-3 / amr-unknown))

# ::id 128
# ::snt How do I remove paint from a wood floor?
# ::tok How do I remove paint from a wood floor ?
# ::collapsed instance nodes 1
(MRPNode-0 / remove-01
           :ARG1 (MRPNode-1 / paint)
           :ARG0 (MRPNode-2 / i)
           :ARG2 (MRPNode-3 / wood_floor_2)
           :manner (MRPNode-4 / amr-unknown))

# ::id 129
# ::snt Would a Colombian citizen with Canadian residency need a transit visa for the UK?
# ::tok Would a Colombian citizen with Canadian residency need a transit visa for the UK ?
# ::collapsed instance nodes 1
(MRPNode-0 / need-01
           :ARG1 (MRPNode-1 / transit_visa_2)
           :ARG0 (MRPNode-2 / citizen
                            :mod (MRPNode-3 / country
                                            :name (MRPNode-4 / name
                                                             :op1 (MRPNode-5 / colombia)))
                            :ARG0-of (MRPNode-6 / reside-01
                                                :ARG0 (MRPNode-7 / country
                                                                 :name (MRPNode-8 / name
                                                                                  :op1 (MRPNode-9 / canada)))))
           :ARG2 (MRPNode-10 / country
                             :name (MRPNode-11 / name
                                               :op1 (MRPNode-12 / uk)))
           :ARG1 (MRPNode-13 / amr-unknown))

# ::id 130
# ::snt Is it possible to replace a switch with a receptacle?
# ::tok Is it possible to replace a switch with a receptacle ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / replace-01
                            :ARG1 (MRPNode-2 / switch)
                            :ARG2 (MRPNode-3 / receptacle))
           :ARG1 (MRPNode-4 / amr-unknown))

# ::id 131
# ::snt What is the best way to store fresh berries?
# ::tok What is the best way to store fresh berries ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / store-01
                                 :ARG1 (MRPNode-6 / berry
                                                  :ARG1-of (MRPNode-7 / fresh-04))))

# ::id 132
# ::snt What is the best way to store fresh berries?
# ::tok What is the best way to store fresh berries ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / store-01
                                 :ARG1 (MRPNode-6 / berry
                                                  :ARG1-of (MRPNode-7 / fresh-04))))

# ::id 133
# ::snt How long does cooked TVP keep in the fridge?
# ::tok How long does cooked TVP keep in the fridge ?
# ::collapsed instance nodes 0
(MRPNode-0 / keep-02
           :ARG1 (MRPNode-1 / company
                            :ARG0-of (MRPNode-2 / cook-01)
                            :name (MRPNode-3 / name
                                             :op1 (MRPNode-4 / tvp)))
           :location (MRPNode-5 / fridge)
           :duration (MRPNode-6 / amr-unknown))

# ::id 134
# ::snt How do I remove paint from a wood floor?
# ::tok How do I remove paint from a wood floor ?
# ::collapsed instance nodes 1
(MRPNode-0 / remove-01
           :ARG1 (MRPNode-1 / paint)
           :ARG0 (MRPNode-2 / i)
           :ARG2 (MRPNode-3 / wood_floor_2)
           :manner (MRPNode-4 / amr-unknown))

# ::id 135
# ::snt How can I remove a really stuck screw?
# ::tok How can I remove a really stuck screw ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / remove-01
                            :ARG1 (MRPNode-2 / amr-unknown)
                            :ARG1 (MRPNode-3 / thing
                                             :ARG1-of (MRPNode-4 / stick-01
                                                                 :ARG1-of (MRPNode-5 / real-04))
                                             :ARG1-of (MRPNode-6 / screw-02))
                            :ARG0 (MRPNode-7 / i)))

# ::id 136
# ::snt How do I reconnect a ceiling fan light chain?
# ::tok How do I reconnect a ceiling fan light chain ?
# ::collapsed instance nodes 0
(MRPNode-0 / consolidate-01
           :ARG1 (MRPNode-1 / chain
                            :consist-of (MRPNode-2 / light
                                                   :mod (MRPNode-3 / ceiling)))
           :ARG0 (MRPNode-4 / i)
           :ARG3 (MRPNode-5 / amr-unknown))

# ::id 137
# ::snt How should I store eggs in the refrigerator?
# ::tok How should I store eggs in the refrigerator ?
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / store-01
                            :ARG1 (MRPNode-2 / egg)
                            :ARG0 (MRPNode-3 / i)
                            :ARG2 (MRPNode-4 / refrigerator)
                            :manner (MRPNode-5 / amr-unknown)))

# ::id 138
# ::snt What's the best way to store potatoes and maximize their shelf-life?
# ::tok What 's the best way to store potatoes and maximize their shelf - life ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / and
                                 :op1 (MRPNode-6 / store-01
                                                 :ARG1 (MRPNode-7 / potato))
                                 :op2 (MRPNode-8 / maximize-01
                                                 :ARG0 MRPNode-7
                                                 :ARG1 (MRPNode-9 / life
                                                                  :poss MRPNode-7
                                                                  :mod (MRPNode-10 / shelf)))))

# ::id 139
# ::snt How do I teach my toddler to chew his food?
# ::tok How do I teach my toddler to chew his food ?
# ::collapsed instance nodes 0
(MRPNode-0 / teach-01
           :ARG1 (MRPNode-1 / chew-01
                            :ARG1 (MRPNode-2 / food
                                             :poss (MRPNode-3 / person))
                            :ARG0 MRPNode-3)
           :ARG0 (MRPNode-4 / i
                            :ARG1-of (MRPNode-5 / have-rel-role-91
                                                :ARG2 (MRPNode-6 / toddler)
                                                :ARG0 MRPNode-3))
           :ARG2 MRPNode-3
           :manner (MRPNode-7 / amr-unknown))

# ::id 140
# ::snt How can I replace a ceiling fan light pull chain?
# ::tok How can I replace a ceiling fan light pull chain ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / replace-01
                            :ARG1 (MRPNode-2 / pull-01
                                             :ARG1 (MRPNode-3 / chain)
                                             :ARG1 (MRPNode-4 / light
                                                              :mod (MRPNode-5 / ceiling)))
                            :ARG0 (MRPNode-6 / i)
                            :ARG2 (MRPNode-7 / amr-unknown)))

# ::id 141
# ::snt How can I repair my two sloping concrete slabs?
# ::tok How can I repair my two sloping concrete slabs ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / repair-01
                            :ARG1 (MRPNode-2 / slab
                                             :quant (MRPNode-3 / 2)
                                             :ARG1-of (MRPNode-4 / cool-01)
                                             :quant (MRPNode-5 / concrete)
                                             :poss (MRPNode-6 / i))
                            :ARG0 MRPNode-6)
           :manner (MRPNode-7 / amr-unknown))

# ::id 142
# ::snt Where can I find a good vocabulary list?
# ::tok Where can I find a good vocabulary list ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / find-01
                            :ARG1 (MRPNode-2 / thing
                                             :ARG2-of (MRPNode-3 / good-02)
                                             :ARG2-of (MRPNode-4 / list-01
                                                                 :ARG1 (MRPNode-5 / vocabulary)))
                            :ARG0 (MRPNode-6 / i)
                            :location (MRPNode-7 / amr-unknown)))

# ::id 143
# ::snt How can I repair my floors' finish?
# ::tok How can I repair my floors ' finish ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / repair-01
                            :ARG1 (MRPNode-2 / amr-unknown)
                            :ARG1 (MRPNode-3 / finish-01
                                             :ARG1 (MRPNode-4 / floor
                                                              :poss (MRPNode-5 / i)))
                            :ARG0 MRPNode-5))

# ::id 144
# ::snt How do I secure an old aluminum/glass sliding door?
# ::tok How do I secure an old aluminum / glass sliding door ?
# ::collapsed instance nodes 0
(MRPNode-0 / secure-02
           :ARG1 (MRPNode-1 / door
                            :mod (MRPNode-2 / old)
                            :mod (MRPNode-3 / slide-01
                                            :ARG1 (MRPNode-4 / aluminum)
                                            :ARG1 (MRPNode-5 / glass)))
           :ARG0 (MRPNode-6 / i)
           :manner (MRPNode-7 / amr-unknown))

# ::id 145
# ::snt How can I stop this Shower faucet leak?
# ::tok How can I stop this Shower faucet leak ?
# ::collapsed instance nodes 5
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / stop-01
                            :ARG1 (MRPNode-2 / this_shower_faucet_leak_6
                                             :ARG1 (MRPNode-3 / faucet
                                                              :poss (MRPNode-4 / person
                                                                               :name (MRPNode-5 / name
                                                                                                :op1 (MRPNode-6 / shower)))))
                            :ARG0 (MRPNode-7 / i)
                            :manner (MRPNode-8 / amr-unknown)))

# ::id 146
# ::snt How do I remove paint from a wood floor?
# ::tok How do I remove paint from a wood floor ?
# ::collapsed instance nodes 1
(MRPNode-0 / remove-01
           :ARG1 (MRPNode-1 / paint)
           :ARG0 (MRPNode-2 / i)
           :ARG2 (MRPNode-3 / wood_floor_2)
           :manner (MRPNode-4 / amr-unknown))

# ::id 147
# ::snt Which part of the GRE is more important to admissions committees?
# ::tok Which part of the GRE is more important to admissions committees ?
# ::collapsed instance nodes 0
(MRPNode-0 / have-degree-91
           :ARG1 (MRPNode-1 / important-01
                            :ARG2 (MRPNode-2 / organization
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / gre)))
                            :ARG2 (MRPNode-5 / committee
                                             :ARG0-of (MRPNode-6 / admit-02)))
           :ARG3 (MRPNode-7 / amr-unknown)
           :ARG3 (MRPNode-8 / more))

# ::id 148
# ::snt Is there a way to find out if I need a transit visa for a layover in the UK?
# ::tok Is there a way to find out if I need a transit visa for a layover in the UK ?
# ::collapsed instance nodes 1
(MRPNode-0 / way
           :manner-of (MRPNode-1 / find-out-03
                                 :ARG1 (MRPNode-2 / truth-value
                                                  :polarity-of (MRPNode-3 / need-01
                                                                          :ARG1 (MRPNode-4 / transit_visa_2)
                                                                          :ARG0 (MRPNode-5 / i)
                                                                          :purpose (MRPNode-6 / layover
                                                                                              :ARG0 MRPNode-5
                                                                                              :location (MRPNode-7 / country
                                                                                                                   :name (MRPNode-8 / name
                                                                                                                                    :op1 (MRPNode-9 / uk)))))))
           :manner-of (MRPNode-10 / amr-unknown))

# ::id 149
# ::snt How long does cooked TVP keep in the fridge?
# ::tok How long does cooked TVP keep in the fridge ?
# ::collapsed instance nodes 0
(MRPNode-0 / keep-02
           :ARG1 (MRPNode-1 / company
                            :ARG0-of (MRPNode-2 / cook-01)
                            :name (MRPNode-3 / name
                                             :op1 (MRPNode-4 / tvp)))
           :location (MRPNode-5 / fridge)
           :duration (MRPNode-6 / amr-unknown))

# ::id 150
# ::snt Is it appropriate to call a professor for a recommendation on the weekend?
# ::tok Is it appropriate to call a professor for a recommendation on the weekend ?
# ::collapsed instance nodes 0
(MRPNode-0 / appropriate-02
           :ARG1 (MRPNode-1 / call-02
                            :ARG1 (MRPNode-2 / professor)
                            :time (MRPNode-3 / recommend-01)
                            :time (MRPNode-4 / weekend))
           :ARG1 (MRPNode-5 / amr-unknown))

# ::id 151
# ::snt How can I work out how valuable I am to my boss and company?
# ::tok How can I work out how valuable I am to my boss and company ?
# ::collapsed instance nodes 0
(MRPNode-0 / have-manner-91
           :ARG1 (MRPNode-1 / possible-01
                            :ARG1 (MRPNode-2 / work-out-02
                                             :ARG1 (MRPNode-3 / value-02
                                                              :ARG0 (MRPNode-4 / and
                                                                               :op1 (MRPNode-5 / person)
                                                                               :op2 (MRPNode-6 / company))
                                                              :degree (MRPNode-7 / so)
                                                              :ARG1 (MRPNode-8 / i
                                                                               :ARG1-of (MRPNode-9 / have-rel-role-91
                                                                                                   :ARG0 MRPNode-5
                                                                                                   :ARG2 (MRPNode-10 / boss))
                                                                               :ARG1-of MRPNode-6))
                                             :ARG0 MRPNode-8))
           :ARG2 (MRPNode-11 / amr-unknown))

# ::id 152
# ::snt Why do you need to peel peaches to can them?
# ::tok Why do you need to peel peaches to can them ?
# ::collapsed instance nodes 0
(MRPNode-0 / need-01
           :ARG1 (MRPNode-1 / pierce-01
                            :ARG1 (MRPNode-2 / peach)
                            :purpose (MRPNode-3 / can-01
                                                :ARG1 MRPNode-2
                                                :ARG0 (MRPNode-4 / you))
                            :ARG0 MRPNode-4)
           :ARG0 MRPNode-4
           :ARG1-of (MRPNode-5 / cause-01
                               :ARG0 (MRPNode-6 / amr-unknown)))

# ::id 153
# ::snt How do I increase the height of a sliding glass door lock?
# ::tok How do I increase the height of a sliding glass door lock ?
# ::collapsed instance nodes 0
(MRPNode-0 / increase-01
           :ARG1 (MRPNode-1 / high-02
                            :ARG1 (MRPNode-2 / lock
                                             :mod (MRPNode-3 / door
                                                             :mod (MRPNode-4 / slide-01))))
           :ARG0 (MRPNode-5 / i)
           :manner (MRPNode-6 / amr-unknown))

# ::id 154
# ::snt "What does it mean by a ""research university""?"
# ::tok " What does it mean by a " " research university " " ? "
# ::collapsed instance nodes 1
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / research_university_2)
           :ARG0 (MRPNode-2 / it)
           :ARG2 (MRPNode-3 / amr-unknown))

# ::id 155
# ::snt How do I clean a very dirty refrigerator?
# ::tok How do I clean a very dirty refrigerator ?
# ::collapsed instance nodes 0
(MRPNode-0 / clean-01
           :ARG1 (MRPNode-1 / refrigerator
                            :ARG1-of (MRPNode-2 / dirty-02
                                                :degree (MRPNode-3 / very)))
           :ARG0 (MRPNode-4 / i)
           :manner (MRPNode-5 / amr-unknown))

# ::id 156
# ::snt How do I wire a bathroom exhaust fan/light to two switches?
# ::tok How do I wire a bathroom exhaust fan / light to two switches ?
# ::collapsed instance nodes 0
(MRPNode-0 / have-manner-91
           :ARG1 (MRPNode-1 / amr-unknown)
           :ARG1 (MRPNode-2 / wire-02
                            :ARG1 (MRPNode-3 / slash
                                             :op1 (MRPNode-4 / fan
                                                             :mod (MRPNode-5 / exhaust
                                                                             :location (MRPNode-6 / bathroom)))
                                             :op2 (MRPNode-7 / light_1))
                            :ARG0 (MRPNode-8 / i)
                            :ARG2 (MRPNode-9 / switch
                                             :quant (MRPNode-10 / 2))))

# ::id 157
# ::snt How should I cite a screenshot in APA style for my student paper?
# ::tok How should I cite a screenshot in APA style for my student paper ?
# ::collapsed instance nodes 3
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / cite-01
                            :ARG1 (MRPNode-2 / amr-unknown)
                            :ARG1 (MRPNode-3 / screenshot
                                             :mod (MRPNode-4 / apa_style_4)))
           :manner (MRPNode-5 / i
                              :poss-of (MRPNode-6 / paper
                                                  :mod (MRPNode-7 / person
                                                                  :ARG0-of (MRPNode-8 / study-01)))))

# ::id 158
# ::snt How do you teach a toddler not to share?
# ::tok How do you teach a toddler not to share ?
# ::collapsed instance nodes 0
(MRPNode-0 / teach-01
           :ARG1 (MRPNode-1 / share-01
                            :polarity (MRPNode-2 / -)
                            :ARG0 (MRPNode-3 / toddler))
           :ARG0 (MRPNode-4 / you)
           :ARG2 MRPNode-3
           :manner (MRPNode-5 / amr-unknown))

# ::id 159
# ::snt Why doesn't my cat lick me?
# ::tok Why does n't my cat lick me ?
# ::collapsed instance nodes 0
(MRPNode-0 / bully-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / i)
           :ARG0 (MRPNode-3 / cat)
           :ARG1-of (MRPNode-4 / cause-01
                               :ARG0 (MRPNode-5 / amr-unknown)))

# ::id 160
# ::snt How do I repair this broken pipe?
# ::tok How do I repair this broken pipe ?
# ::collapsed instance nodes 2
(MRPNode-0 / repair-01
           :ARG1 (MRPNode-1 / this_broken_pipe_3)
           :ARG0 (MRPNode-2 / i)
           :manner (MRPNode-3 / amr-unknown))

# ::id 161
# ::snt What type of lag bolts should I use for a deck?
# ::tok What type of lag bolts should I use for a deck ?
# ::collapsed instance nodes 1
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / use-01
                            :ARG1 (MRPNode-2 / bolt
                                             :mod (MRPNode-3 / lag)
                                             :mod (MRPNode-4 / what_type_2))
                            :ARG0 (MRPNode-5 / i)
                            :ARG2 (MRPNode-6 / deck)))

# ::id 162
# ::snt How do I paint art onto a wall?
# ::tok How do I paint art onto a wall ?
# ::collapsed instance nodes 0
(MRPNode-0 / paint-02
           :ARG1 (MRPNode-1 / art)
           :ARG0 (MRPNode-2 / i)
           :ARG2 (MRPNode-3 / wall)
           :manner (MRPNode-4 / amr-unknown))

# ::id 163
# ::snt What's the best way to introduce a chinchilla to a household with cats?
# ::tok What 's the best way to introduce a chinchilla to a household with cats ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / introduce-01
                                 :ARG1 (MRPNode-6 / chinchilla)
                                 :ARG2 (MRPNode-7 / household
                                                  :ARG0-of (MRPNode-8 / have-03
                                                                      :ARG1 (MRPNode-9 / cat)))))

# ::id 164
# ::snt What is the best way to store fresh berries?
# ::tok What is the best way to store fresh berries ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / store-01
                                 :ARG1 (MRPNode-6 / berry
                                                  :ARG1-of (MRPNode-7 / fresh-04))))

# ::id 165
# ::snt What does it mean to write a song in a certain key?
# ::tok What does it mean to write a song in a certain key ?
# ::collapsed instance nodes 1
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / write-01
                            :ARG1 (MRPNode-2 / song)
                            :manner (MRPNode-3 / certain_key_2))
           :ARG2 (MRPNode-4 / amr-unknown))

# ::id 166
# ::snt How long should I wait between grout application and sealant?
# ::tok How long should I wait between grout application and sealant ?
# ::collapsed instance nodes 1
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / wait-01
                            :ARG1 (MRPNode-2 / i)
                            :ARG2 (MRPNode-3 / between
                                             :op1 (MRPNode-4 / grout_application_2)
                                             :op2 (MRPNode-5 / sealant))
                            :manner (MRPNode-6 / amr-unknown)))

# ::id 167
# ::snt How long can you keep chocolate in the freezer?
# ::tok How long can you keep chocolate in the freezer ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / keep-01
                            :ARG1 (MRPNode-2 / chocolate)
                            :ARG0 (MRPNode-3 / you)
                            :location (MRPNode-4 / freezer)
                            :duration (MRPNode-5 / amr-unknown)))

# ::id 168
# ::snt How do I prepare this porous interior wall for paint?
# ::tok How do I prepare this porous interior wall for paint ?
# ::collapsed instance nodes 3
(MRPNode-0 / prepare-02
           :ARG1 (MRPNode-1 / this_porous_interior_wall_4)
           :ARG0 (MRPNode-2 / i)
           :ARG2 (MRPNode-3 / paint)
           :manner (MRPNode-4 / amr-unknown))

# ::id 169
# ::snt How do I prepare this porous interior wall for paint?
# ::tok How do I prepare this porous interior wall for paint ?
# ::collapsed instance nodes 3
(MRPNode-0 / prepare-02
           :ARG1 (MRPNode-1 / this_porous_interior_wall_4)
           :ARG0 (MRPNode-2 / i)
           :ARG2 (MRPNode-3 / paint)
           :manner (MRPNode-4 / amr-unknown))

# ::id 170
# ::snt What is the best way to repair a cracked bathtub?
# ::tok What is the best way to repair a cracked bathtub ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / repair-01
                              :ARG1 (MRPNode-5 / bathtub
                                               :ARG1-of (MRPNode-6 / crack-02)))
           :domain (MRPNode-7 / amr-unknown))

# ::id 171
# ::snt What's the best way to store asparagus?
# ::tok What 's the best way to store asparagus ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / store-01
                                 :ARG1 (MRPNode-6 / asparagus)))

# ::id 172
# ::snt What kind of socket is this?
# ::tok What kind of socket is this ?
# ::collapsed instance nodes 0
(MRPNode-0 / socket
           :mod (MRPNode-1 / kind
                           :mod (MRPNode-2 / amr-unknown)
                           :mod (MRPNode-3 / this)))

# ::id 173
# ::snt What is the difference between a stock and a bond?
# ::tok What is the difference between a stock and a bond ?
# ::collapsed instance nodes 0
(MRPNode-0 / differ-02
           :ARG1 (MRPNode-1 / stock)
           :ARG2 (MRPNode-2 / bond)
           :ARG3 (MRPNode-3 / amr-unknown))

# ::id 174
# ::snt What is the best way to toast pecans?
# ::tok What is the best way to toast pecans ?
# ::collapsed instance nodes 1
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / toast_pecans_2))

# ::id 175
# ::snt What is the best way to repair a cracked bathtub?
# ::tok What is the best way to repair a cracked bathtub ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / repair-01
                              :ARG1 (MRPNode-5 / bathtub
                                               :ARG1-of (MRPNode-6 / crack-02)))
           :domain (MRPNode-7 / amr-unknown))

# ::id 176
# ::snt What is the best way to store fresh berries?
# ::tok What is the best way to store fresh berries ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / store-01
                                 :ARG1 (MRPNode-6 / berry
                                                  :ARG1-of (MRPNode-7 / fresh-04))))

# ::id 177
# ::snt Where can I find a good vocabulary list?
# ::tok Where can I find a good vocabulary list ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / find-01
                            :ARG1 (MRPNode-2 / thing
                                             :ARG2-of (MRPNode-3 / good-02)
                                             :ARG2-of (MRPNode-4 / list-01
                                                                 :ARG1 (MRPNode-5 / vocabulary)))
                            :ARG0 (MRPNode-6 / i)
                            :location (MRPNode-7 / amr-unknown)))

# ::id 178
# ::snt What is the difference between assertive and non-assertive words?
# ::tok What is the difference between assertive and non - assertive words ?
# ::collapsed instance nodes 0
(MRPNode-0 / differ-02
           :ARG1 (MRPNode-1 / word
                            :ARG0-of (MRPNode-2 / assertive
                                                :polarity (MRPNode-3 / -)))
           :ARG2 (MRPNode-4 / word
                            :mod (MRPNode-5 / assertive))
           :ARG3 (MRPNode-6 / amr-unknown))

# ::id 179
# ::snt What if I don't have enough work sample for an interview?
# ::tok What if I do n't have enough work sample for an interview ?
# ::collapsed instance nodes 0
(MRPNode-0 / have-condition-91
           :ARG1 (MRPNode-1 / amr-unknown)
           :ARG2 (MRPNode-2 / have-03
                            :arg1 (MRPNode-3 / -)
                            :ARG0 (MRPNode-4 / i
                                             :ARG1-of (MRPNode-5 / interview-01))
                            :ARG1 (MRPNode-6 / sample-01
                                             :ARG1 MRPNode-5
                                             :ARG1 (MRPNode-7 / have-quant-91
                                                              :ARG3 (MRPNode-8 / enough))
                                             :ARG1 (MRPNode-9 / work-01))))

# ::id 180
# ::snt What is the best way to store fresh berries?
# ::tok What is the best way to store fresh berries ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / store-01
                                 :ARG1 (MRPNode-6 / berry
                                                  :ARG1-of (MRPNode-7 / fresh-04))))

# ::id 181
# ::snt What is the best way to clean your clothes dryer exhaust?
# ::tok What is the best way to clean your clothes dryer exhaust ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / clean-01
                              :ARG1 (MRPNode-5 / exhaust
                                               :poss (MRPNode-6 / you))
                              :ARG1 (MRPNode-7 / cause-01
                                               :ARG1 (MRPNode-8 / product
                                                                :ARG0-of (MRPNode-9 / clothe-01))))
           :domain (MRPNode-10 / amr-unknown))

# ::id 182
# ::snt What is the best way to treat feline ringworm?
# ::tok What is the best way to treat feline ringworm ?
# ::collapsed instance nodes 1
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / treat-03
                                 :ARG1 (MRPNode-6 / feline_ringworm_2)))

# ::id 183
# ::snt What's the best way to seal around this faucet?
# ::tok What 's the best way to seal around this faucet ?
# ::collapsed instance nodes 1
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / seal-01
                                 :location (MRPNode-6 / around
                                                      :op1 (MRPNode-7 / this_faucet_2))))

# ::id 184
# ::snt What is the difference between a stock and a bond?
# ::tok What is the difference between a stock and a bond ?
# ::collapsed instance nodes 0
(MRPNode-0 / differ-02
           :ARG1 (MRPNode-1 / stock)
           :ARG2 (MRPNode-2 / bond)
           :ARG3 (MRPNode-3 / amr-unknown))

# ::id 185
# ::snt What is the difference between shawarma and gyros?
# ::tok What is the difference between shawarma and gyros ?
# ::collapsed instance nodes 0
(MRPNode-0 / differ-02
           :ARG1 (MRPNode-1 / shawarma)
           :ARG2 (MRPNode-2 / gyro)
           :ARG3 (MRPNode-3 / amr-unknown))

# ::id 186
# ::snt What is the best way to apply Shellac-based primer?
# ::tok What is the best way to apply Shellac - based primer ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :manner-of (MRPNode-1 / have-degree-91
                                 :ARG2 (MRPNode-2 / good-02)
                                 :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / apply-02
                                 :ARG1 (MRPNode-6 / primer
                                                  :ARG1-of (MRPNode-7 / base-02
                                                                      :ARG2 (MRPNode-8 / company
                                                                                       :name (MRPNode-9 / name
                                                                                                        :op1 (MRPNode-10 / shellac)))))))

# ::id 187
# ::snt What's the best way to store asparagus?
# ::tok What 's the best way to store asparagus ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / store-01
                                 :ARG1 (MRPNode-6 / asparagus)))

# ::id 188
# ::snt What is the difference between a filler word and a discourse marker?
# ::tok What is the difference between a filler word and a discourse marker ?
# ::collapsed instance nodes 1
(MRPNode-0 / differ-02
           :ARG1 (MRPNode-1 / filler_word_2)
           :ARG2 (MRPNode-2 / marker
                            :topic (MRPNode-3 / discourse-01))
           :ARG3 (MRPNode-4 / amr-unknown))

# ::id 189
# ::snt What is this vocal technique called?
# ::tok What is this vocal technique called ?
# ::collapsed instance nodes 2
(MRPNode-0 / call-01
           :ARG1 (MRPNode-1 / this_vocal_technique_3)
           :ARG2 (MRPNode-2 / amr-unknown))

# ::id 190
# ::snt What kind of socket is this?
# ::tok What kind of socket is this ?
# ::collapsed instance nodes 0
(MRPNode-0 / socket
           :mod (MRPNode-1 / kind
                           :mod (MRPNode-2 / amr-unknown)
                           :mod (MRPNode-3 / this)))

# ::id 191
# ::snt What is the best way to toast pecans?
# ::tok What is the best way to toast pecans ?
# ::collapsed instance nodes 1
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / toast_pecans_2))

# ::id 192
# ::snt What is the actual difference between Graduate and Undergraduate texts?
# ::tok What is the actual difference between Graduate and Undergraduate texts ?
# ::collapsed instance nodes 1
(MRPNode-0 / differ-02
           :ARG1 (MRPNode-1 / text
                            :mod (MRPNode-2 / graduate-01))
           :ARG1-of (MRPNode-3 / undergraduate_texts_2)
           :ARG1-of (MRPNode-4 / actual-02)
           :ARG3 (MRPNode-5 / amr-unknown))

# ::id 193
# ::snt What is the difference between EFTA and the EU?
# ::tok What is the difference between EFTA and the EU ?
# ::collapsed instance nodes 0
(MRPNode-0 / differ-02
           :ARG1 (MRPNode-1 / organization
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / eu)))
           :ARG1 (MRPNode-4 / organization
                            :name (MRPNode-5 / name
                                             :op1 (MRPNode-6 / efta)))
           :ARG3 (MRPNode-7 / amr-unknown))

# ::id 194
# ::snt What is the best way to store fresh berries?
# ::tok What is the best way to store fresh berries ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / store-01
                                 :ARG1 (MRPNode-6 / berry
                                                  :ARG1-of (MRPNode-7 / fresh-04))))

# ::id 195
# ::snt What is the difference between a stock and a bond?
# ::tok What is the difference between a stock and a bond ?
# ::collapsed instance nodes 0
(MRPNode-0 / differ-02
           :ARG1 (MRPNode-1 / stock)
           :ARG2 (MRPNode-2 / bond)
           :ARG3 (MRPNode-3 / amr-unknown))

# ::id 196
# ::snt What is the best way to toast pecans?
# ::tok What is the best way to toast pecans ?
# ::collapsed instance nodes 1
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / toast_pecans_2))

# ::id 197
# ::snt What kind of socket is this?
# ::tok What kind of socket is this ?
# ::collapsed instance nodes 0
(MRPNode-0 / socket
           :mod (MRPNode-1 / kind
                           :mod (MRPNode-2 / amr-unknown)
                           :mod (MRPNode-3 / this)))

# ::id 198
# ::snt "What does the term ""Out of the Furnace"" refer to?"
# ::tok " What does the term " " Out of the Furnace " " refer to ? "
# ::collapsed instance nodes 0
(MRPNode-0 / refer-01
           :ARG1 (MRPNode-1 / amr-unknown)
           :ARG0 (MRPNode-2 / term
                            :mod (MRPNode-3 / out-05
                                            :ARG2 (MRPNode-4 / Furnace))))

# ::id 199
# ::snt "What was the meaning of ""21 grams""?"
# ::tok " What was the meaning of " " 21 grams " " ? "
# ::collapsed instance nodes 0
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / mass-quantity
                            :quant (MRPNode-2 / 21)
                            :unit (MRPNode-3 / gram))
           :ARG2 (MRPNode-4 / amr-unknown))

# ::id 200
# ::snt What is the difference between shawarma and gyros?
# ::tok What is the difference between shawarma and gyros ?
# ::collapsed instance nodes 0
(MRPNode-0 / differ-02
           :ARG1 (MRPNode-1 / shawarma)
           :ARG2 (MRPNode-2 / gyro)
           :ARG3 (MRPNode-3 / amr-unknown))

# ::id 201
# ::snt What is the significance of the cat?
# ::tok What is the significance of the cat ?
# ::collapsed instance nodes 0
(MRPNode-0 / significant-02
           :ARG1 (MRPNode-1 / cat)
           :ARG3 (MRPNode-2 / amr-unknown))

# ::id 202
# ::snt What kind of spider web is this - and how do I get rid of it?
# ::tok What kind of spider web is this - and how do I get rid of it ?
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / web
                           :mod (MRPNode-2 / amr-unknown)
                           :mod (MRPNode-3 / kind)
                           :mod (MRPNode-4 / spider))
           :op2 (MRPNode-5 / rid-01
                           :ARG1 MRPNode-1
                           :ARG0 (MRPNode-6 / i)
                           :manner (MRPNode-7 / amr-unknown)))

# ::id 203
# ::snt What's the best way to store potatoes and maximize their shelf-life?
# ::tok What 's the best way to store potatoes and maximize their shelf - life ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / amr-unknown)
           :manner-of (MRPNode-5 / and
                                 :op1 (MRPNode-6 / store-01
                                                 :ARG1 (MRPNode-7 / potato))
                                 :op2 (MRPNode-8 / maximize-01
                                                 :ARG0 MRPNode-7
                                                 :ARG1 (MRPNode-9 / life
                                                                  :poss MRPNode-7
                                                                  :mod (MRPNode-10 / shelf)))))

# ::id 204
# ::snt What is the difference between a stock and a bond?
# ::tok What is the difference between a stock and a bond ?
# ::collapsed instance nodes 0
(MRPNode-0 / differ-02
           :ARG1 (MRPNode-1 / stock)
           :ARG2 (MRPNode-2 / bond)
           :ARG3 (MRPNode-3 / amr-unknown))

# ::id 205
# ::snt What is the difference between mono and stereo?
# ::tok What is the difference between mono and stereo ?
# ::collapsed instance nodes 0
(MRPNode-0 / differ-02
           :ARG1 (MRPNode-1 / amr-unknown)
           :ARG2 (MRPNode-2 / mono)
           :ARG2 (MRPNode-3 / stereo))

# ::id 206
# ::snt What is the best way to store my sleeping bag for long periods of time?
# ::tok What is the best way to store my sleeping bag for long periods of time ?
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / good-02)
           :domain (MRPNode-2 / have-degree-91
                              :ARG2 MRPNode-1
                              :ARG3 (MRPNode-3 / most))
           :domain (MRPNode-4 / store-01
                              :ARG1 (MRPNode-5 / bag
                                               :poss (MRPNode-6 / sleep-01)
                                               :poss (MRPNode-7 / i))
                              :duration (MRPNode-8 / period
                                                   :ARG1-of (MRPNode-9 / long-03)))
           :domain (MRPNode-10 / amr-unknown))

# ::id 207
# ::snt To explain further vector space models, basically a document is characterized by a vector.
# ::tok To explain further vector space models , basically a document is characterized by a vector .
# ::collapsed instance nodes 3
(MRPNode-0 / characterize-01
           :ARG1 (MRPNode-1 / document)
           :ARG0 (MRPNode-2 / vector)
           :mod (MRPNode-3 / explain-01
                           :ARG1 (MRPNode-4 / further_vector_space_models_4))
           :mod (MRPNode-5 / basic))

# ::id 208
# ::snt The differing application has a direct influence on what the definition of the term means.
# ::tok The differing application has a direct influence on what the definition of the term means .
# ::collapsed instance nodes 0
(MRPNode-0 / influence-01
           :ARG1 (MRPNode-1 / thing
                            :ARG2-of (MRPNode-2 / mean-01
                                                :ARG1 (MRPNode-3 / define-01
                                                                 :ARG1 (MRPNode-4 / term))))
           :ARG0 (MRPNode-5 / apply-02
                            :ARG1-of (MRPNode-6 / differ-01))
           :ARG1-of (MRPNode-7 / direct-02))

# ::id 209
# ::snt "Thus, the ""program"" is the optimal plan of action that is being produced."
# ::tok " Thus , the " " program " " is the optimal plan of action that is being produced . "
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / plan-01
                            :ARG1 (MRPNode-2 / act-02)
                            :mod (MRPNode-3 / produce-01)
                            :mod (MRPNode-4 / optimal)
                            :domain (MRPNode-5 / program)))

# ::id 210
# ::snt "Thus, the ""program"" is the optimal plan for action that is produced."
# ::tok " Thus , the " " program " " is the optimal plan for action that is produced . "
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / plan-01
                            :ARG1 (MRPNode-2 / act-02)
                            :mod (MRPNode-3 / program)
                            :mod (MRPNode-4 / optimal)
                            :ARG1-of (MRPNode-5 / produce-01
                                                :ARG1 MRPNode-2)))

# ::id 211
# ::snt P(B) (a.k.a. the normalizing constant) is the prior or marginal probability of B.
# ::tok P ( B ) ( a.k.a. the normalizing constant ) is the prior or marginal probability of B.
# ::collapsed instance nodes 0
(MRPNode-0 / or
           :op1 (MRPNode-1 / probability
                           :mod (MRPNode-2 / prior))
           :op2 (MRPNode-3 / probability
                           :ARG1-of (MRPNode-4 / marginal-02))
           :domain (MRPNode-5 / constant
                              :domain (MRPNode-6 / limit-01)))

# ::id 212
# ::snt In general, we can solve a problem with optimal substructure using a three-step process: 1.
# ::tok In general , we can solve a problem with optimal substructure using a three - step process : 1 .
# ::collapsed instance nodes 1
(MRPNode-0 / possible-01
           :li (MRPNode-1 / 1)
           :ARG1 (MRPNode-2 / solve-01
                            :ARG1 (MRPNode-3 / problem
                                             :topic (MRPNode-4 / optimal_substructure_2))
                            :ARG0 (MRPNode-5 / we)
                            :ARG1-of (MRPNode-6 / general-02)
                            :manner (MRPNode-7 / use-01
                                               :ARG0 MRPNode-5
                                               :ARG1 (MRPNode-8 / process-02
                                                                :ARG1 (MRPNode-9 / step-01
                                                                                 :quant (MRPNode-10 / 3))))))

# ::id 213
# ::snt One of its uses is calculating posterior probabilities given observations.
# ::tok One of its uses is calculating posterior probabilities given observations .
# ::collapsed instance nodes 1
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / include-91
                            :ARG2 (MRPNode-2 / it)
                            :ARG2 (MRPNode-3 / one))
           :ARG2 (MRPNode-4 / calculate-01
                            :ARG1 (MRPNode-5 / probabilities_2)
                            :manner (MRPNode-6 / observe-01
                                               :ARG1-of (MRPNode-7 / give-14))))

# ::id 214
# ::snt The way that a 'term' is defined depends on the application.
# ::tok The way that a ' term ' is defined depends on the application .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / way
                            :manner-of (MRPNode-2 / define-01
                                                  :ARG1 (MRPNode-3 / term)))
           :ARG1 (MRPNode-4 / application))

# ::id 215
# ::snt Its first application was in the SMART Information Retrieval System.
# ::tok Its first application was in the SMART Information Retrieval System .
# ::collapsed instance nodes 0
(MRPNode-0 / apply-02
           :ARG1 (MRPNode-1 / it)
           :ARG2 (MRPNode-2 / thing
                            :name (MRPNode-3 / name
                                             :op1 (MRPNode-4 / smart)
                                             :op2 (MRPNode-5 / information)
                                             :op3 (MRPNode-6 / retrieval)
                                             :op4 (MRPNode-7 / system)))
           :ord (MRPNode-8 / ordinal-entity
                           :value (MRPNode-9 / 1)))

# ::id 216
# ::snt Thus, the program is the best plan for action that is produced.
# ::tok Thus , the program is the best plan for action that is produced .
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / plan-01
                            :ARG1 (MRPNode-2 / act-02)
                            :ARG1-of (MRPNode-3 / program)
                            :ARG1-of (MRPNode-4 / have-degree-91
                                                :ARG3 (MRPNode-5 / most)
                                                :ARG2 (MRPNode-6 / good-02))
                            :ARG1-of MRPNode-6
                            :ARG1-of (MRPNode-7 / produce-01)))

# ::id 217
# ::snt It is usually used to calculate posterior probabilities given observations.
# ::tok It is usually used to calculate posterior probabilities given observations .
# ::collapsed instance nodes 1
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / it)
           :mod (MRPNode-2 / usual)
           :ARG2 (MRPNode-3 / calculate-01
                            :ARG0 MRPNode-1
                            :ARG1 (MRPNode-4 / probabilities_2)
                            :ARG1 (MRPNode-5 / observe-01
                                             :ARG1-of (MRPNode-6 / give-01))))

# ::id 218
# ::snt The methodology takes much less time rather than naive methods.
# ::tok The methodology takes much less time rather than naive methods .
# ::collapsed instance nodes 1
(MRPNode-0 / take-10
           :ARG1 (MRPNode-1 / time
                            :ARG1-of (MRPNode-2 / instead-of-91
                                                :ARG2 (MRPNode-3 / naive_methods_2))
                            :ARG1-of (MRPNode-4 / have-quant-91
                                                :ARG3 (MRPNode-5 / less
                                                                 :quant (MRPNode-6 / much))))
           :ARG0 (MRPNode-7 / methodology))

# ::id 219
# ::snt The methodology takes much less time rather than naive methods.
# ::tok The methodology takes much less time rather than naive methods .
# ::collapsed instance nodes 1
(MRPNode-0 / take-10
           :ARG1 (MRPNode-1 / time
                            :ARG1-of (MRPNode-2 / instead-of-91
                                                :ARG2 (MRPNode-3 / naive_methods_2))
                            :ARG1-of (MRPNode-4 / have-quant-91
                                                :ARG3 (MRPNode-5 / less
                                                                 :quant (MRPNode-6 / much))))
           :ARG0 (MRPNode-7 / methodology))

# ::id 220
# ::snt The definition of term is dependent on the application.
# ::tok The definition of term is dependent on the application .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / apply-02)
           :ARG0 (MRPNode-2 / define-01
                            :ARG1 (MRPNode-3 / term)))

# ::id 221
# ::snt Whilst Bayesians describe probabilities in terms of beliefs and degrees of uncertainty.
# ::tok Whilst Bayesians describe probabilities in terms of beliefs and degrees of uncertainty .
# ::collapsed instance nodes 3
(MRPNode-0 / contrast-01
           :ARG2 (MRPNode-1 / describe-01
                            :ARG1 (MRPNode-2 / probability)
                            :ARG0 (MRPNode-3 / bayesians_4)
                            :ARG2 (MRPNode-4 / and
                                             :op1 (MRPNode-5 / thing
                                                             :ARG1-of (MRPNode-6 / believe-01))
                                             :op2 (MRPNode-7 / degree
                                                             :degree-of (MRPNode-8 / know-01
                                                                                   :polarity (MRPNode-9 / -))))))

# ::id 222
# ::snt It is used in information filtering, information retrieval, indexing and relevancy rankings.
# ::tok It is used in information filtering , information retrieval , indexing and relevancy rankings .
# ::collapsed instance nodes 0
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / it)
           :ARG2 (MRPNode-2 / and
                            :op1 (MRPNode-3 / filter-02
                                            :ARG1 (MRPNode-4 / information))
                            :op2 (MRPNode-5 / retrieve-01
                                            :ARG1 MRPNode-4
                                            :ARG1 (MRPNode-6 / information))
                            :op3 (MRPNode-7 / model-01)
                            :op4 (MRPNode-8 / track-01
                                            :ARG1-of (MRPNode-9 / relevant-01))))

# ::id 223
# ::snt Several different ways of computing these values, also known as (term) weights, have been developed.
# ::tok Several different ways of computing these values , also known as ( term ) weights , have been developed .
# ::collapsed instance nodes 0
(MRPNode-0 / develop-02
           :ARG1 (MRPNode-1 / way
                            :quant (MRPNode-2 / several)
                            :ARG1-of (MRPNode-3 / differ-02)
                            :manner-of (MRPNode-4 / copy-01
                                                  :ARG1 (MRPNode-5 / value
                                                                   :mod (MRPNode-6 / know-02
                                                                                   :mod (MRPNode-7 / also)
                                                                                   :ARG2 (MRPNode-8 / weight))
                                                                   :mod (MRPNode-9 / this)))))

# ::id 224
# ::snt If a term exists in a document, its value in the vector is not equal to zero.
# ::tok If a term exists in a document , its value in the vector is not equal to zero .
# ::collapsed instance nodes 0
(MRPNode-0 / equal-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / thing
                            :ARG2-of (MRPNode-3 / value-01
                                                :location (MRPNode-4 / vector)))
           :ARG2 (MRPNode-5 / zero)
           :condition (MRPNode-6 / exist-01
                                 :ARG1 (MRPNode-7 / term)
                                 :location (MRPNode-8 / document)))

# ::id 225
# ::snt A hyperlink to a page counts as a vote of support.
# ::tok A hyperlink to a page counts as a vote of support .
# ::collapsed instance nodes 0
(MRPNode-0 / count-04
           :ARG1 (MRPNode-1 / hyperlink
                            :destination (MRPNode-2 / page))
           :ARG2 (MRPNode-3 / vote-01
                            :ARG1 (MRPNode-4 / support-01)))

# ::id 226
# ::snt For instance, a finalized schedule of events at an exhibition is sometimes called a program.
# ::tok For instance , a finalized schedule of events at an exhibition is sometimes called a program .
# ::collapsed instance nodes 0
(MRPNode-0 / exemplify-01
           :ARG0 (MRPNode-1 / call-01
                            :ARG1 (MRPNode-2 / program)
                            :frequency (MRPNode-3 / sometimes)
                            :ARG1 (MRPNode-4 / schedule-01
                                             :ARG1 (MRPNode-5 / event
                                                              :location (MRPNode-6 / exhibit-01))
                                             :ARG1-of (MRPNode-7 / finalize-01))))

# ::id 227
# ::snt Nevertheless, the patent is assigned to the University of Stanford and not to Google.
# ::tok Nevertheless , the patent is assigned to the University of Stanford and not to Google .
# ::collapsed instance nodes 0
(MRPNode-0 / have-concession-91
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / assign-01
                                            :ARG1 (MRPNode-3 / university
                                                             :name (MRPNode-4 / name
                                                                              :op1 (MRPNode-5 / university)
                                                                              :op2 (MRPNode-6 / of)
                                                                              :op3 (MRPNode-7 / stanford)))
                                            :ARG1 (MRPNode-8 / patent-01))
                            :op2 (MRPNode-9 / assign-01
                                            :polarity (MRPNode-10 / -)
                                            :ARG1 MRPNode-3
                                            :ARG1 MRPNode-8
                                            :ARG2 (MRPNode-11 / company
                                                              :name (MRPNode-12 / name
                                                                                :op1 (MRPNode-13 / google))))))

# ::id 228
# ::snt The definition of term depends on the application.
# ::tok The definition of term depends on the application .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / apply-02)
           :ARG0 (MRPNode-2 / define-01
                            :ARG1 (MRPNode-3 / term)))

# ::id 229
# ::snt Inheritance is a method of forming new classes using predefined classes.
# ::tok Inheritance is a method of forming new classes using predefined classes .
# ::collapsed instance nodes 0
(MRPNode-0 / method
           :domain (MRPNode-1 / form-01
                              :ARG1 (MRPNode-2 / class
                                               :ARG1-of (MRPNode-3 / new-01))
                              :manner (MRPNode-4 / use-01
                                                 :ARG1 (MRPNode-5 / class
                                                                  :ARG1-of (MRPNode-6 / define-01))))
           :domain (MRPNode-7 / inherit-01))

# ::id 230
# ::snt Thus, the program is the best plan for action that is produced.
# ::tok Thus , the program is the best plan for action that is produced .
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / plan-01
                            :ARG1 (MRPNode-2 / act-02)
                            :ARG1-of (MRPNode-3 / program)
                            :ARG1-of (MRPNode-4 / have-degree-91
                                                :ARG3 (MRPNode-5 / most)
                                                :ARG2 (MRPNode-6 / good-02))
                            :ARG1-of MRPNode-6
                            :ARG1-of (MRPNode-7 / produce-01)))

# ::id 231
# ::snt "Therefore, the ""program"" is the optimal plan for action that is produced."
# ::tok " Therefore , the " " program " " is the optimal plan for action that is produced . "
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / plan-01
                            :ARG1 (MRPNode-2 / act-02)
                            :mod (MRPNode-3 / program)
                            :mod (MRPNode-4 / optimal)
                            :ARG1-of (MRPNode-5 / produce-01
                                                :ARG1 MRPNode-2)))

# ::id 232
# ::snt If a term appears in the document, the terms value in the vector is non-zero.
# ::tok If a term appears in the document , the terms value in the vector is non - zero .
# ::collapsed instance nodes 0
(MRPNode-0 / have-condition-91
           :ARG1 (MRPNode-1 / zero
                            :polarity (MRPNode-2 / -)
                            :domain (MRPNode-3 / value
                                               :location (MRPNode-4 / vector)))
           :ARG2 (MRPNode-5 / appear-01
                            :ARG1 (MRPNode-6 / term)
                            :location (MRPNode-7 / document)))

# ::id 233
# ::snt The vector space model has some limitations: 1.
# ::tok The vector space model has some limitations : 1 .
# ::collapsed instance nodes 2
(MRPNode-0 / limit-01
           :li (MRPNode-1 / 1)
           :ARG1 (MRPNode-2 / vector_space_model_3))

# ::id 234
# ::snt The vector space model has the following limitations: 1.
# ::tok The vector space model has the following limitations : 1 .
# ::collapsed instance nodes 2
(MRPNode-0 / limit-01
           :li (MRPNode-1 / 1)
           :ARG1 (MRPNode-2 / vector_space_model_3)
           :ARG1-of (MRPNode-3 / follow-01))

# ::id 235
# ::snt Typically terms are single words, keywords, or longer phrases.
# ::tok Typically terms are single words , keywords , or longer phrases .
# ::collapsed instance nodes 0
(MRPNode-0 / or
           :op1 (MRPNode-1 / word-01
                           :ARG1-of (MRPNode-2 / typical-02)
                           :ARG1-of (MRPNode-3 / single-02))
           :op2 (MRPNode-4 / keyword)
           :op3 (MRPNode-5 / phrase
                           :ARG1-of (MRPNode-6 / have-degree-91
                                               :ARG3 (MRPNode-7 / more)
                                               :ARG2 (MRPNode-8 / long-03))
                           :ARG1-of MRPNode-8)
           :domain (MRPNode-9 / term))

# ::id 236
# ::snt It does not take into account any information about B and therefore is considered “prior”.
# ::tok It does not take into account any information about B and therefore is considered " prior " .
# ::collapsed instance nodes 3
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / consider-02
                            :ARG1 (MRPNode-2 / it)
                            :ARG2 (MRPNode-3 / prior))
           :ARG0 (MRPNode-4 / take-into-account-04
                            :polarity (MRPNode-5 / -)
                            :ARG1 (MRPNode-6 / information
                                             :topic (MRPNode-7 / any)
                                             :topic (MRPNode-8 / b_4))))

# ::id 237
# ::snt A document is represented as a vector and each dimension corresponds to a separate term.
# ::tok A document is represented as a vector and each dimension corresponds to a separate term .
# ::collapsed instance nodes 1
(MRPNode-0 / and
           :op1 (MRPNode-1 / represent-01
                           :ARG1 (MRPNode-2 / document)
                           :ARG2 (MRPNode-3 / vector))
           :op2 (MRPNode-4 / correspond-02
                           :ARG1 (MRPNode-5 / each_dimension_2)
                           :ARG2 (MRPNode-6 / term
                                            :ARG1-of (MRPNode-7 / separate-02))))

# ::id 238
# ::snt Since it is a formal theorem, Bayes' theorem holds in all popular interpretations of probability.
# ::tok Since it is a formal theorem , Bayes ' theorem holds in all popular interpretations of probability .
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / hold-01
                            :location (MRPNode-2 / interpret-01
                                                 :ARG1 (MRPNode-3 / all)
                                                 :ARG1-of (MRPNode-4 / popular-02)
                                                 :ARG1 (MRPNode-5 / probability)))
           :ARG0 (MRPNode-6 / theorem
                            :mod (MRPNode-7 / person
                                            :name (MRPNode-8 / name
                                                             :op1 (MRPNode-9 / bayes)))
                            :mod (MRPNode-10 / formal)))

# ::id 239
# ::snt The methodology takes much less time rather than naive methods.
# ::tok The methodology takes much less time rather than naive methods .
# ::collapsed instance nodes 1
(MRPNode-0 / take-10
           :ARG1 (MRPNode-1 / time
                            :ARG1-of (MRPNode-2 / instead-of-91
                                                :ARG2 (MRPNode-3 / naive_methods_2))
                            :ARG1-of (MRPNode-4 / have-quant-91
                                                :ARG3 (MRPNode-5 / less
                                                                 :quant (MRPNode-6 / much))))
           :ARG0 (MRPNode-7 / methodology))

# ::id 240
# ::snt Typically terms are keywords, single words or longer phrases.
# ::tok Typically terms are keywords , single words or longer phrases .
# ::collapsed instance nodes 0
(MRPNode-0 / or
           :op1 (MRPNode-1 / keyword
                           :domain (MRPNode-2 / term))
           :op2 (MRPNode-3 / word-01
                           :ARG1-of (MRPNode-4 / single-02))
           :op3 (MRPNode-5 / phrase-01
                           :ARG1-of (MRPNode-6 / long-03)
                           :ARG1-of (MRPNode-7 / have-degree-91
                                               :ARG2 MRPNode-6
                                               :ARG3 (MRPNode-8 / more)))
           :domain (MRPNode-9 / typical-02))

# ::id 241
# ::snt Construct an optimal solution from computed values.
# ::tok Construct an optimal solution from computed values .
# ::collapsed instance nodes 2
(MRPNode-0 / construct-01
           :ARG1 (MRPNode-1 / optimal_solution_3)
           :ARG2 (MRPNode-2 / you)
           :ARG2 (MRPNode-3 / value
                            :ARG1-of (MRPNode-4 / compile-01)))

# ::id 242
# ::snt Several different ways of computing these values, additionally known as (term) weights, have been developed.
# ::tok Several different ways of computing these values , additionally known as ( term ) weights , have been developed .
# ::collapsed instance nodes 0
(MRPNode-0 / develop-02
           :ARG1 (MRPNode-1 / way
                            :quant (MRPNode-2 / several)
                            :ARG1-of (MRPNode-3 / differ-02)
                            :manner-of (MRPNode-4 / copy-01
                                                  :ARG1 (MRPNode-5 / value
                                                                   :mod (MRPNode-6 / this)
                                                                   :ARG1-of (MRPNode-7 / know-02
                                                                                       :mod (MRPNode-8 / weight)
                                                                                       :mod (MRPNode-9 / additional))))))

# ::id 243
# ::snt In general, dynamic programming is used on optimisation problems, where the most efficient solution is needed.
# ::tok In general , dynamic programming is used on optimisation problems , where the most efficient solution is needed .
# ::collapsed instance nodes 1
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / dynamic_programming_2)
           :ARG1-of (MRPNode-2 / general-02)
           :ARG2 (MRPNode-3 / problem
                            :topic (MRPNode-4 / exist-01)
                            :location-of (MRPNode-5 / need-01
                                                    :ARG1 (MRPNode-6 / thing
                                                                     :ARG1-of (MRPNode-7 / efficient-01)
                                                                     :ARG1-of (MRPNode-8 / have-degree-91
                                                                                         :ARG2 MRPNode-7
                                                                                         :ARG3 (MRPNode-9 / most))
                                                                     :ARG2-of (MRPNode-10 / solve-01)))))

# ::id 244
# ::snt One of the best known schemes is tf-idf weighting (see the example below).
# ::tok One of the best known schemes is tf - idf weighting ( see the example below ) .
# ::collapsed instance nodes 0
(MRPNode-0 / multi-sentence
           :snt1 (MRPNode-1 / have-mod-91
                            :ARG1 (MRPNode-2 / thing
                                             :ARG1-of (MRPNode-3 / include-91
                                                                 :ARG2 (MRPNode-4 / scheme
                                                                                  :ARG1-of (MRPNode-5 / know-02
                                                                                                      :ARG1-of (MRPNode-6 / good-02)
                                                                                                      :ARG1-of (MRPNode-7 / have-degree-91
                                                                                                                          :ARG2 MRPNode-6
                                                                                                                          :ARG3 (MRPNode-8 / most))))))
                            :ARG1 (MRPNode-9 / scheme
                                             :name (MRPNode-10 / name
                                                               :op1 (MRPNode-11 / tf)
                                                               :op2 (MRPNode-12 / weighting))))
           :snt2 (MRPNode-13 / see-01
                             :mode (MRPNode-14 / imperative)
                             :ARG1 (MRPNode-15 / exemplify-01
                                               :ARG0 (MRPNode-16 / below))
                             :ARG0 (MRPNode-17 / you)))

# ::id 245
# ::snt For instance, a events schedule at an exhibition is sometimes called a program.
# ::tok For instance , a events schedule at an exhibition is sometimes called a program .
# ::collapsed instance nodes 0
(MRPNode-0 / exemplify-01
           :ARG0 (MRPNode-1 / call-01
                            :ARG1 (MRPNode-2 / schedule-01
                                             :ARG1 (MRPNode-3 / event
                                                              :location (MRPNode-4 / exhibit-01)))
                            :ARG2 (MRPNode-5 / program)
                            :frequency (MRPNode-6 / sometimes)))

# ::id 246
# ::snt Define value of optimal solution recursively.
# ::tok Define value of optimal solution recursively .
# ::collapsed instance nodes 1
(MRPNode-0 / define-01
           :mode (MRPNode-1 / imperative)
           :ARG1 (MRPNode-2 / thing
                            :ARG2-of (MRPNode-3 / value-01
                                                :ARG1 (MRPNode-4 / optimal_solution_2)))
           :ARG0 (MRPNode-5 / you)
           :manner (MRPNode-6 / arbitrary-02))

# ::id 247
# ::snt It was first used in the SMART Information Retrieval System.
# ::tok It was first used in the SMART Information Retrieval System .
# ::collapsed instance nodes 0
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / it)
           :ARG2 (MRPNode-2 / thing
                            :name (MRPNode-3 / name
                                             :op1 (MRPNode-4 / smart)
                                             :op2 (MRPNode-5 / information)
                                             :op3 (MRPNode-6 / retrieval)
                                             :op4 (MRPNode-7 / system)))
           :ord (MRPNode-8 / ordinal-entity
                           :value (MRPNode-9 / 1)))

# ::id 248
# ::snt The value of a vector is non-zero if a term occurs in the document.
# ::tok The value of a vector is non - zero if a term occurs in the document .
# ::collapsed instance nodes 0
(MRPNode-0 / have-condition-91
           :ARG1 (MRPNode-1 / equal-01
                            :polarity (MRPNode-2 / -)
                            :ARG1 (MRPNode-3 / thing
                                             :ARG2-of (MRPNode-4 / value-01
                                                                 :ARG1 (MRPNode-5 / vector)))
                            :ARG2 (MRPNode-6 / zero))
           :ARG2 (MRPNode-7 / be-located-at-91
                            :ARG1 (MRPNode-8 / term)
                            :ARG2 (MRPNode-9 / document)))

# ::id 249
# ::snt Several different ways of computing these values, also known as (term) weights, have been developed.
# ::tok Several different ways of computing these values , also known as ( term ) weights , have been developed .
# ::collapsed instance nodes 0
(MRPNode-0 / develop-02
           :ARG1 (MRPNode-1 / way
                            :quant (MRPNode-2 / several)
                            :ARG1-of (MRPNode-3 / differ-02)
                            :manner-of (MRPNode-4 / copy-01
                                                  :ARG1 (MRPNode-5 / value
                                                                   :mod (MRPNode-6 / know-02
                                                                                   :mod (MRPNode-7 / also)
                                                                                   :ARG2 (MRPNode-8 / weight))
                                                                   :mod (MRPNode-9 / this)))))

# ::id 250
# ::snt Several different ways of computing these values, also known as (term) weights, have been developed.
# ::tok Several different ways of computing these values , also known as ( term ) weights , have been developed .
# ::collapsed instance nodes 0
(MRPNode-0 / develop-02
           :ARG1 (MRPNode-1 / way
                            :quant (MRPNode-2 / several)
                            :ARG1-of (MRPNode-3 / differ-02)
                            :manner-of (MRPNode-4 / copy-01
                                                  :ARG1 (MRPNode-5 / value
                                                                   :mod (MRPNode-6 / know-02
                                                                                   :mod (MRPNode-7 / also)
                                                                                   :ARG2 (MRPNode-8 / weight))
                                                                   :mod (MRPNode-9 / this)))))

# ::id 251
# ::snt These subproblems are not, however, independent.
# ::tok These subproblems are not , however , independent .
# ::collapsed instance nodes 1
(MRPNode-0 / have-concession-91
           :ARG1 (MRPNode-1 / depend-01
                            :polarity (MRPNode-2 / -)
                            :ARG0 (MRPNode-3 / these_subproblems_2)))

# ::id 252
# ::snt The key to Dynamic Programming is to find the structure of optimal solutions.
# ::tok The key to Dynamic Programming is to find the structure of optimal solutions .
# ::collapsed instance nodes 2
(MRPNode-0 / key-02
           :ARG1 (MRPNode-1 / figure-out-05
                            :manner (MRPNode-2 / product
                                               :name (MRPNode-3 / name
                                                                :op1 (MRPNode-4 / dynamic)
                                                                :op2 (MRPNode-5 / programming))))
           :ARG2 (MRPNode-6 / find-01
                            :ARG1 (MRPNode-7 / structure-01
                                             :ARG1 (MRPNode-8 / optimal_solutions_3))))

# ::id 253
# ::snt Bayes Theorem is a mathematical formula used to calculate conditional probabilities.
# ::tok Bayes Theorem is a mathematical formula used to calculate conditional probabilities .
# ::collapsed instance nodes 1
(MRPNode-0 / formula
           :mod (MRPNode-1 / use-01
                           :ARG2 (MRPNode-2 / calculate-01
                                            :ARG1 (MRPNode-3 / conditional_probabilities_2)
                                            :ARG0 (MRPNode-4 / thing
                                                             :name (MRPNode-5 / name
                                                                              :op1 (MRPNode-6 / bayes)
                                                                              :op2 (MRPNode-7 / theorem)))))
           :mod (MRPNode-8 / mathematics)
           :domain MRPNode-4)

# ::id 254
# ::snt Construct an optimal solution from computed values.
# ::tok Construct an optimal solution from computed values .
# ::collapsed instance nodes 2
(MRPNode-0 / construct-01
           :ARG1 (MRPNode-1 / optimal_solution_3)
           :ARG2 (MRPNode-2 / you)
           :ARG2 (MRPNode-3 / value
                            :ARG1-of (MRPNode-4 / compile-01)))

# ::id 255
# ::snt The theorem is often used when we have observations and wish to compute posterior probabilities.
# ::tok The theorem is often used when we have observations and wish to compute posterior probabilities .
# ::collapsed instance nodes 0
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / theorem)
           :time (MRPNode-2 / and
                            :op1 (MRPNode-3 / have-03
                                            :ARG1 (MRPNode-4 / observe-01)
                                            :ARG0 (MRPNode-5 / we))
                            :op2 (MRPNode-6 / wish-01
                                            :ARG0 MRPNode-5
                                            :ARG1 (MRPNode-7 / comprehend-01
                                                             :ARG0 MRPNode-5
                                                             :ARG1 (MRPNode-8 / probability
                                                                              :ARG1-of (MRPNode-9 / differ-02)))))
           :frequency (MRPNode-10 / often))

# ::id 256
# ::snt P(B) is the prior or marginal probability of B, and acts to normalise the probability.
# ::tok P ( B ) is the prior or marginal probability of B , and acts to normalise the probability .
# ::collapsed instance nodes 3
(MRPNode-0 / and
           :op1 (MRPNode-1 / probability
                           :mod (MRPNode-2 / prior)
                           :domain (MRPNode-3 / marginal-02)
                           :domain (MRPNode-4 / b_4))
           :op2 (MRPNode-5 / act-01
                           :ARG0 MRPNode-4
                           :ARG1 (MRPNode-6 / normalize-01
                                            :ARG0 MRPNode-4
                                            :ARG1 (MRPNode-7 / probability))))

# ::id 257
# ::snt In probability theory, Bayes' theorem relates the conditional and marginal probabilities of two random events.
# ::tok In probability theory , Bayes ' theorem relates the conditional and marginal probabilities of two random events .
# ::collapsed instance nodes 1
(MRPNode-0 / relate-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / probability
                                            :ARG1-of (MRPNode-3 / condition-01))
                            :op2 (MRPNode-4 / probability
                                            :ARG1-of (MRPNode-5 / marginal-02)))
           :ARG0 (MRPNode-6 / theorem
                            :poss (MRPNode-7 / event
                                             :quant (MRPNode-8 / 2)
                                             :quant (MRPNode-9 / random))
                            :poss (MRPNode-10 / person
                                              :name (MRPNode-11 / name
                                                                :op1 (MRPNode-12 / bayes))))
           :location (MRPNode-13 / probability_theory_2))

# ::id 258
# ::snt Programming, in this sense, means finding an acceptable plan of action.
# ::tok Programming , in this sense , means finding an acceptable plan of action .
# ::collapsed instance nodes 1
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / design-01)
           :ARG2 (MRPNode-2 / find-01
                            :ARG1 (MRPNode-3 / plan-01
                                             :ARG1 (MRPNode-4 / accept-01
                                                              :ARG1-of (MRPNode-5 / possible-01))
                                             :ARG1 (MRPNode-6 / act-02)))
           :mod (MRPNode-7 / this_sense_2))

# ::id 259
# ::snt The vector space model has some limitations: 1.
# ::tok The vector space model has some limitations : 1 .
# ::collapsed instance nodes 2
(MRPNode-0 / limit-01
           :li (MRPNode-1 / 1)
           :ARG1 (MRPNode-2 / vector_space_model_3))

# ::id 260
# ::snt Using the vector space model for Information Retrieval models all pages and queries as high-dimensional sparse vectors.
# ::tok Using the vector space model for Information Retrieval models all pages and queries as high - dimensional sparse vectors .
# ::collapsed instance nodes 0
(MRPNode-0 / model-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / page)
                            :op2 (MRPNode-3 / all)
                            :op2 (MRPNode-4 / query-01))
           :ARG0 (MRPNode-5 / use-01
                            :ARG1 (MRPNode-6 / model
                                             :mod (MRPNode-7 / space
                                                             :mod (MRPNode-8 / vector))
                                             :purpose (MRPNode-9 / name
                                                                 :op1 (MRPNode-10 / information)
                                                                 :op2 (MRPNode-11 / retrieval))))
           :ARG2 (MRPNode-12 / vector
                             :mod (MRPNode-13 / dimensional
                                              :ARG1-of (MRPNode-14 / high-02))
                             :mod (MRPNode-15 / sparse)))

# ::id 261
# ::snt One of the most famous schemes is tf-idf weighting.
# ::tok One of the most famous schemes is tf - idf weighting .
# ::collapsed instance nodes 0
(MRPNode-0 / include-91
           :ARG1 (MRPNode-1 / scheme
                            :ARG1-of (MRPNode-2 / have-degree-91
                                                :arg5 (MRPNode-3 / scheme)
                                                :ARG2 (MRPNode-4 / fame-01)
                                                :ARG3 (MRPNode-5 / most))
                            :name (MRPNode-6 / name
                                             :op2 (MRPNode-7 / weighting)))
           :ARG2 (MRPNode-8 / thing))

# ::id 262
# ::snt Vector space representation results in the loss of the order which the terms are in the document.
# ::tok Vector space representation results in the loss of the order which the terms are in the document .
# ::collapsed instance nodes 1
(MRPNode-0 / result-01
           :ARG1 (MRPNode-1 / represent-01
                            :ARG1 (MRPNode-2 / vector_space_2))
           :ARG2 (MRPNode-3 / lose-02
                            :ARG1 (MRPNode-4 / order
                                             :location-of (MRPNode-5 / term
                                                                     :location (MRPNode-6 / document)))))

# ::id 263
# ::snt Other ways of computing these values, or weights, have been developed.
# ::tok Other ways of computing these values , or weights , have been developed .
# ::collapsed instance nodes 1
(MRPNode-0 / develop-02
           :ARG1 (MRPNode-1 / way
                            :mod (MRPNode-2 / other)
                            :manner-of (MRPNode-3 / comprise-01
                                                  :ARG1 (MRPNode-4 / or
                                                                   :op1 (MRPNode-5 / these_values_2)
                                                                   :op2 (MRPNode-6 / weight)))))

# ::id 264
# ::snt It is usually be used to compute posterior probabilities given observations.
# ::tok It is usually be used to compute posterior probabilities given observations .
# ::collapsed instance nodes 1
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / it)
           :mod (MRPNode-2 / usual)
           :ARG2 (MRPNode-3 / compile-01
                            :ARG0 MRPNode-1
                            :ARG1 (MRPNode-4 / probabilities_2)
                            :ARG1-of (MRPNode-5 / observe-01
                                                :ARG1-of (MRPNode-6 / give-01))))

# ::id 265
# ::snt In computer science; dynamic programming is a way of solving problems consist of overlapping subproblems and optimal substructure.
# ::tok In computer science ; dynamic programming is a way of solving problems consist of overlapping subproblems and optimal substructure .
# ::collapsed instance nodes 3
(MRPNode-0 / way
           :domain (MRPNode-1 / computer_science_2)
           :domain (MRPNode-2 / dynamic_programming_2)
           :manner-of (MRPNode-3 / solve-01
                                 :ARG1 (MRPNode-4 / and
                                                  :op1 (MRPNode-5 / subproblem
                                                                  :ARG1-of (MRPNode-6 / coverage-06))
                                                  :op2 (MRPNode-7 / optimal_substructure_2))))

# ::id 266
# ::snt The most popular is tf-idf weighting.
# ::tok The most popular is tf - idf weighting .
# ::collapsed instance nodes 0
(MRPNode-0 / have-degree-91
           :ARG1 (MRPNode-1 / high-02
                            :ARG1 (MRPNode-2 / thing
                                             :ARG1-of (MRPNode-3 / have-degree-91
                                                                 :ARG3 (MRPNode-4 / most))
                                             :name (MRPNode-5 / name
                                                              :op1 (MRPNode-6 / tf)
                                                              :op2 (MRPNode-7 / weighting)))
                            :ARG1 (MRPNode-8 / thing
                                             :name (MRPNode-9 / name
                                                              :op1 (MRPNode-10 / tf))))
           :ARG2 (MRPNode-11 / popular-02
                             :ARG1 MRPNode-1)
           :ARG3 (MRPNode-12 / most))

# ::id 267
# ::snt Construct an optimal solution from computed values.
# ::tok Construct an optimal solution from computed values .
# ::collapsed instance nodes 2
(MRPNode-0 / construct-01
           :ARG1 (MRPNode-1 / optimal_solution_3)
           :ARG2 (MRPNode-2 / you)
           :ARG2 (MRPNode-3 / value
                            :ARG1-of (MRPNode-4 / compile-01)))

# ::id 268
# ::snt This is a much quicker method than other more naive methods.
# ::tok This is a much quicker method than other more naive methods .
# ::collapsed instance nodes 0
(MRPNode-0 / have-degree-91
           :ARG1 (MRPNode-1 / method
                            :mod (MRPNode-2 / this))
           :ARG2 (MRPNode-3 / quick-02
                            :ARG1 MRPNode-1)
           :ARG3 (MRPNode-4 / more
                            :quant (MRPNode-5 / much))
           :ARG4 (MRPNode-6 / method
                            :mod (MRPNode-7 / other)
                            :ARG1-of (MRPNode-8 / have-degree-91
                                                :ARG2 (MRPNode-9 / naive)
                                                :ARG3 (MRPNode-10 / more
                                                                  :quant (MRPNode-11 / much)))))

# ::id 269
# ::snt Inheritance in object oriented programming is a way to form new classes using classes that have already been defined.
# ::tok Inheritance in object oriented programming is a way to form new classes using classes that have already been defined .
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :domain (MRPNode-1 / form-01
                              :ARG1 (MRPNode-2 / class
                                               :ARG1-of (MRPNode-3 / new-01))
                              :manner (MRPNode-4 / use-01
                                                 :ARG1 (MRPNode-5 / class
                                                                  :ARG1-of (MRPNode-6 / define-01
                                                                                      :time (MRPNode-7 / already)))))
           :domain (MRPNode-8 / inherit-01
                              :ARG1 (MRPNode-9 / program-01
                                               :ARG2 (MRPNode-10 / orient-01
                                                                 :ARG2 (MRPNode-11 / object)))))

# ::id 270
# ::snt However, the vector space model has limitations.
# ::tok However , the vector space model has limitations .
# ::collapsed instance nodes 2
(MRPNode-0 / contrast-01
           :ARG2 (MRPNode-1 / limit-01
                            :ARG1 (MRPNode-2 / vector_space_model_3)))

# ::id 271
# ::snt Programming, in this sense, means finding an acceptable plan of action.
# ::tok Programming , in this sense , means finding an acceptable plan of action .
# ::collapsed instance nodes 1
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / design-01)
           :ARG2 (MRPNode-2 / find-01
                            :ARG1 (MRPNode-3 / plan-01
                                             :ARG1 (MRPNode-4 / accept-01
                                                              :ARG1-of (MRPNode-5 / possible-01))
                                             :ARG1 (MRPNode-6 / act-02)))
           :mod (MRPNode-7 / this_sense_2))

# ::id 272
# ::snt Dynamic Programming solves problems by combining the solutions of subproblems.
# ::tok Dynamic Programming solves problems by combining the solutions of subproblems .
# ::collapsed instance nodes 1
(MRPNode-0 / solve-01
           :ARG1 (MRPNode-1 / problem)
           :ARG0 (MRPNode-2 / dynamic_programming_2)
           :manner (MRPNode-3 / combine-01
                              :ARG0 MRPNode-2
                              :ARG1 (MRPNode-4 / thing
                                               :ARG2-of (MRPNode-5 / solve-01
                                                                   :ARG1 (MRPNode-6 / subproblem)))))

# ::id 273
# ::snt Subclasses are said to extend or specialise their superclasses.
# ::tok Subclasses are said to extend or specialise their superclasses .
# ::collapsed instance nodes 0
(MRPNode-0 / say-01
           :ARG1 (MRPNode-1 / or
                            :op1 (MRPNode-2 / extend-01
                                            :ARG1 (MRPNode-3 / superclass)
                                            :ARG0 (MRPNode-4 / subclass))
                            :op2 (MRPNode-5 / specialize-01
                                            :ARG1 MRPNode-3
                                            :ARG0 MRPNode-4)))

# ::id 274
# ::snt It is often used to compute posterior probabilities given observations.
# ::tok It is often used to compute posterior probabilities given observations .
# ::collapsed instance nodes 1
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / compile-01
                            :ARG1 (MRPNode-2 / probabilities_2)
                            :ARG1-of (MRPNode-3 / observe-01
                                                :ARG1-of (MRPNode-4 / give-01))
                            :ARG0 (MRPNode-5 / it))
           :ARG1 MRPNode-5
           :frequency (MRPNode-6 / often))

# ::id 275
# ::snt Every dimension is precisely related to a separate term.
# ::tok Every dimension is precisely related to a separate term .
# ::collapsed instance nodes 1
(MRPNode-0 / relate-01
           :ARG1 (MRPNode-1 / every_dimension_2)
           :ARG2 (MRPNode-2 / term
                            :ARG1-of (MRPNode-3 / separate-02))
           :manner (MRPNode-4 / precise))

# ::id 276
# ::snt Construct an optimal solution from computed values.
# ::tok Construct an optimal solution from computed values .
# ::collapsed instance nodes 2
(MRPNode-0 / construct-01
           :ARG1 (MRPNode-1 / optimal_solution_3)
           :ARG2 (MRPNode-2 / you)
           :ARG2 (MRPNode-3 / value
                            :ARG1-of (MRPNode-4 / compile-01)))

# ::id 277
# ::snt Every dimension is precisely related to a separate term.
# ::tok Every dimension is precisely related to a separate term .
# ::collapsed instance nodes 1
(MRPNode-0 / relate-01
           :ARG1 (MRPNode-1 / every_dimension_2)
           :ARG2 (MRPNode-2 / term
                            :ARG1-of (MRPNode-3 / separate-02))
           :manner (MRPNode-4 / precise))

# ::id 278
# ::snt The most popular is tf-idf weighting.
# ::tok The most popular is tf - idf weighting .
# ::collapsed instance nodes 0
(MRPNode-0 / have-degree-91
           :ARG1 (MRPNode-1 / high-02
                            :ARG1 (MRPNode-2 / thing
                                             :ARG1-of (MRPNode-3 / have-degree-91
                                                                 :ARG3 (MRPNode-4 / most))
                                             :name (MRPNode-5 / name
                                                              :op1 (MRPNode-6 / tf)
                                                              :op2 (MRPNode-7 / weighting)))
                            :ARG1 (MRPNode-8 / thing
                                             :name (MRPNode-9 / name
                                                              :op1 (MRPNode-10 / tf))))
           :ARG2 (MRPNode-11 / popular-02
                             :ARG1 MRPNode-1)
           :ARG3 (MRPNode-12 / most))

# ::id 279
# ::snt The theorem is often used when we have observations and wish to compute posterior probabilities.
# ::tok The theorem is often used when we have observations and wish to compute posterior probabilities .
# ::collapsed instance nodes 0
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / theorem)
           :time (MRPNode-2 / and
                            :op1 (MRPNode-3 / have-03
                                            :ARG1 (MRPNode-4 / observe-01)
                                            :ARG0 (MRPNode-5 / we))
                            :op2 (MRPNode-6 / wish-01
                                            :ARG0 MRPNode-5
                                            :ARG1 (MRPNode-7 / comprehend-01
                                                             :ARG0 MRPNode-5
                                                             :ARG1 (MRPNode-8 / probability
                                                                              :ARG1-of (MRPNode-9 / differ-02)))))
           :frequency (MRPNode-10 / often))

# ::id 280
# ::snt Overlapping subproblems means that the same subproblems are used to solve many different larger problems.
# ::tok Overlapping subproblems means that the same subproblems are used to solve many different larger problems .
# ::collapsed instance nodes 0
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / overlap)
           :ARG2 (MRPNode-2 / use-01
                            :ARG1 (MRPNode-3 / subproblem
                                             :ARG1-of (MRPNode-4 / same-01))
                            :ARG2 (MRPNode-5 / solve-01
                                             :ARG0 MRPNode-3
                                             :ARG1 (MRPNode-6 / problem
                                                              :ARG1-of (MRPNode-7 / have-degree-91
                                                                                  :ARG3 (MRPNode-8 / large)
                                                                                  :ARG3 (MRPNode-9 / more))
                                                              :ARG1-of (MRPNode-10 / differ-02)
                                                              :quant (MRPNode-11 / many)))))

# ::id 281
# ::snt The differing application has a direct influence on what the definition of the term means.
# ::tok The differing application has a direct influence on what the definition of the term means .
# ::collapsed instance nodes 0
(MRPNode-0 / influence-01
           :ARG1 (MRPNode-1 / thing
                            :ARG2-of (MRPNode-2 / mean-01
                                                :ARG1 (MRPNode-3 / define-01
                                                                 :ARG1 (MRPNode-4 / term))))
           :ARG0 (MRPNode-5 / apply-02
                            :ARG1-of (MRPNode-6 / differ-01))
           :ARG1-of (MRPNode-7 / direct-02))

# ::id 282
# ::snt The method takes much less time than naive methods.
# ::tok The method takes much less time than naive methods .
# ::collapsed instance nodes 1
(MRPNode-0 / take-10
           :ARG1 (MRPNode-1 / time
                            :ARG1-of (MRPNode-2 / have-quant-91
                                                :ARG3 (MRPNode-3 / less
                                                                 :quant (MRPNode-4 / much))
                                                :ARG4 (MRPNode-5 / naive_methods_2)))
           :ARG0 (MRPNode-6 / method))

# ::id 283
# ::snt In probability theory, Bayes' theorem relates the conditional and marginal probabilities of two random events.
# ::tok In probability theory , Bayes ' theorem relates the conditional and marginal probabilities of two random events .
# ::collapsed instance nodes 1
(MRPNode-0 / relate-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / probability
                                            :ARG1-of (MRPNode-3 / condition-01))
                            :op2 (MRPNode-4 / probability
                                            :ARG1-of (MRPNode-5 / marginal-02)))
           :ARG0 (MRPNode-6 / theorem
                            :poss (MRPNode-7 / event
                                             :quant (MRPNode-8 / 2)
                                             :quant (MRPNode-9 / random))
                            :poss (MRPNode-10 / person
                                              :name (MRPNode-11 / name
                                                                :op1 (MRPNode-12 / bayes))))
           :location (MRPNode-13 / probability_theory_2))

# ::id 284
# ::snt Bayes’ theorem was names after Rev Thomas Bayes and is a method used in probability theory.
# ::tok Bayes ' theorem was names after Rev Thomas Bayes and is a method used in probability theory .
# ::collapsed instance nodes 1
(MRPNode-0 / and
           :op1 (MRPNode-1 / name-02
                           :ARG1 (MRPNode-2 / theorem
                                            :name (MRPNode-3 / name
                                                             :op1 (MRPNode-4 / bayes)))
                           :ARG2 (MRPNode-5 / person
                                            :ARG0-of (MRPNode-6 / have-org-role-91
                                                                :ARG2 (MRPNode-7 / reverend))
                                            :name (MRPNode-8 / name
                                                             :op1 (MRPNode-9 / thomas)
                                                             :op2 (MRPNode-10 / bayes))))
           :op2 (MRPNode-11 / method
                            :ARG1-of (MRPNode-12 / use-01
                                                 :ARG2 (MRPNode-13 / probability_theory_2))))

# ::id 285
# ::snt "It is ""previous"" in the sense that it does not take into account any information about B."
# ::tok " It is " " previous " " in the sense that it does not take into account any information about B. "
# ::collapsed instance nodes 3
(MRPNode-0 / previous
           :ARG1-of (MRPNode-1 / mean-01
                               :ARG2 (MRPNode-2 / take-into-account-04
                                                :polarity (MRPNode-3 / -)
                                                :ARG1 (MRPNode-4 / information
                                                                 :topic (MRPNode-5 / any)
                                                                 :topic (MRPNode-6 / b._4))
                                                :ARG0 (MRPNode-7 / it)))
           :domain MRPNode-7)

# ::id 286
# ::snt When a document is represented as a vector, each dimension corresponds to a separate term.
# ::tok When a document is represented as a vector , each dimension corresponds to a separate term .
# ::collapsed instance nodes 1
(MRPNode-0 / correspond-02
           :ARG1 (MRPNode-1 / term
                            :ARG1-of (MRPNode-2 / separate-02))
           :ARG1 (MRPNode-3 / each_dimension_2)
           :time (MRPNode-4 / represent-01
                            :ARG1 (MRPNode-5 / document)
                            :ARG2 (MRPNode-6 / vector)))

# ::id 287
# ::snt The theorem is often used when we have observations and wish to compute posterior probabilities.
# ::tok The theorem is often used when we have observations and wish to compute posterior probabilities .
# ::collapsed instance nodes 0
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / theorem)
           :time (MRPNode-2 / and
                            :op1 (MRPNode-3 / have-03
                                            :ARG1 (MRPNode-4 / observe-01)
                                            :ARG0 (MRPNode-5 / we))
                            :op2 (MRPNode-6 / wish-01
                                            :ARG0 MRPNode-5
                                            :ARG1 (MRPNode-7 / comprehend-01
                                                             :ARG0 MRPNode-5
                                                             :ARG1 (MRPNode-8 / probability
                                                                              :ARG1-of (MRPNode-9 / differ-02)))))
           :frequency (MRPNode-10 / often))

# ::id 288
# ::snt When a document is represented as a vector, each dimension corresponds to a separate term.
# ::tok When a document is represented as a vector , each dimension corresponds to a separate term .
# ::collapsed instance nodes 1
(MRPNode-0 / correspond-02
           :ARG1 (MRPNode-1 / term
                            :ARG1-of (MRPNode-2 / separate-02))
           :ARG1 (MRPNode-3 / each_dimension_2)
           :time (MRPNode-4 / represent-01
                            :ARG1 (MRPNode-5 / document)
                            :ARG2 (MRPNode-6 / vector)))

# ::id 289
# ::snt In computer science; dynamic programming is a way of solving problems consist of overlapping subproblems and optimal substructure.
# ::tok In computer science ; dynamic programming is a way of solving problems consist of overlapping subproblems and optimal substructure .
# ::collapsed instance nodes 3
(MRPNode-0 / way
           :domain (MRPNode-1 / computer_science_2)
           :domain (MRPNode-2 / dynamic_programming_2)
           :manner-of (MRPNode-3 / solve-01
                                 :ARG1 (MRPNode-4 / and
                                                  :op1 (MRPNode-5 / subproblem
                                                                  :ARG1-of (MRPNode-6 / coverage-06))
                                                  :op2 (MRPNode-7 / optimal_substructure_2))))

# ::id 290
# ::snt For instance, a finalized schedule of events at an exhibition is sometimes called a program.
# ::tok For instance , a finalized schedule of events at an exhibition is sometimes called a program .
# ::collapsed instance nodes 0
(MRPNode-0 / exemplify-01
           :ARG0 (MRPNode-1 / call-01
                            :ARG1 (MRPNode-2 / program)
                            :frequency (MRPNode-3 / sometimes)
                            :ARG1 (MRPNode-4 / schedule-01
                                             :ARG1 (MRPNode-5 / event
                                                              :location (MRPNode-6 / exhibit-01))
                                             :ARG1-of (MRPNode-7 / finalize-01))))

# ::id 291
# ::snt Since the PageRank is the most important algorithms which is used in the Google engine.
# ::tok Since the PageRank is the most important algorithms which is used in the Google engine .
# ::collapsed instance nodes 3
(MRPNode-0 / cause-01
           :ARG0 (MRPNode-1 / algorithm
                            :ARG1-of (MRPNode-2 / use-01
                                                :ARG2 (MRPNode-3 / google_engine_4))
                            :ARG1-of (MRPNode-4 / have-degree-91
                                                :ARG3 (MRPNode-5 / most)
                                                :ARG2 (MRPNode-6 / important-01))
                            :ARG1-of MRPNode-6
                            :domain (MRPNode-7 / publication
                                               :name (MRPNode-8 / name
                                                                :op1 (MRPNode-9 / pagerank)))))

# ::id 292
# ::snt In the vector space model a document is represented as a vector.
# ::tok In the vector space model a document is represented as a vector .
# ::collapsed instance nodes 1
(MRPNode-0 / represent-01
           :ARG1 (MRPNode-1 / document)
           :ARG2 (MRPNode-2 / vector)
           :location (MRPNode-3 / model-01
                                :ARG1 (MRPNode-4 / vector_space_2)))

# ::id 293
# ::snt So the same rule applies with keywords and indeed longer phrases.
# ::tok So the same rule applies with keywords and indeed longer phrases .
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / apply-02
                            :ARG1 (MRPNode-2 / rule-01
                                             :ARG1-of (MRPNode-3 / same-01))
                            :ARG2 (MRPNode-4 / and
                                             :op1 (MRPNode-5 / keyword
                                                             :mod (MRPNode-6 / indeed))
                                             :op2 (MRPNode-7 / phrase
                                                             :ARG1-of (MRPNode-8 / have-degree-91
                                                                                 :ARG3 (MRPNode-9 / more)
                                                                                 :ARG2 (MRPNode-10 / long-03))
                                                             :ARG1-of MRPNode-10))))

# ::id 294
# ::snt Inheritance is a basic concept in object oriented programming.
# ::tok Inheritance is a basic concept in object oriented programming .
# ::collapsed instance nodes 0
(MRPNode-0 / concept
           :mod (MRPNode-1 / basic)
           :domain (MRPNode-2 / medical-condition
                              :name (MRPNode-3 / name
                                               :op1 (MRPNode-4 / inheritance)))
           :topic (MRPNode-5 / program-01
                             :ARG1-of (MRPNode-6 / orient-01
                                                 :ARG2 (MRPNode-7 / object))))

# ::id 295
# ::snt A document is represented as a vector, with each dimension corresponding to a separate term.
# ::tok A document is represented as a vector , with each dimension corresponding to a separate term .
# ::collapsed instance nodes 1
(MRPNode-0 / represent-01
           :ARG1 (MRPNode-1 / document)
           :ARG2 (MRPNode-2 / vector)
           :ARG0-of (MRPNode-3 / accompany-01
                               :ARG1 (MRPNode-4 / correspond-02
                                                :ARG1 (MRPNode-5 / each_dimension_2)
                                                :ARG2 (MRPNode-6 / term
                                                                 :ARG1-of (MRPNode-7 / separate-02)))))

# ::id 296
# ::snt In probability theory, Bayes' theorem relates the conditional and marginal probabilities of two random events.
# ::tok In probability theory , Bayes ' theorem relates the conditional and marginal probabilities of two random events .
# ::collapsed instance nodes 1
(MRPNode-0 / relate-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / probability
                                            :ARG1-of (MRPNode-3 / condition-01))
                            :op2 (MRPNode-4 / probability
                                            :ARG1-of (MRPNode-5 / marginal-02)))
           :ARG0 (MRPNode-6 / theorem
                            :poss (MRPNode-7 / event
                                             :quant (MRPNode-8 / 2)
                                             :quant (MRPNode-9 / random))
                            :poss (MRPNode-10 / person
                                              :name (MRPNode-11 / name
                                                                :op1 (MRPNode-12 / bayes))))
           :location (MRPNode-13 / probability_theory_2))

# ::id 297
# ::snt A website’s page rank, is how ‘important’ it is on the web.
# ::tok A website 's page rank , is how ' important ' it is on the web .
# ::collapsed instance nodes 0
(MRPNode-0 / important-01
           :ARG1 (MRPNode-1 / thing
                            :ARG3-of (MRPNode-2 / rank-01
                                                :ARG1 (MRPNode-3 / page)))
           :location (MRPNode-4 / website)
           :location (MRPNode-5 / web))

# ::id 298
# ::snt If the term doesn’t occur within the document, the value in the vector is zero.
# ::tok If the term does n't occur within the document , the value in the vector is zero .
# ::collapsed instance nodes 0
(MRPNode-0 / have-condition-91
           :ARG1 (MRPNode-1 / value
                            :quant (MRPNode-2 / vector)
                            :quant (MRPNode-3 / zero))
           :ARG2 (MRPNode-4 / be-located-at-91
                            :arg2 (MRPNode-5 / -)
                            :ARG1 (MRPNode-6 / term)
                            :ARG2 (MRPNode-7 / within
                                             :op1 (MRPNode-8 / document))))

# ::id 299
# ::snt They also inherit the attributes and methods of its superclass.
# ::tok They also inherit the attributes and methods of its superclass .
# ::collapsed instance nodes 0
(MRPNode-0 / inherit-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / attribute-01)
                            :op2 (MRPNode-3 / method
                                            :poss (MRPNode-4 / they))
                            :poss (MRPNode-5 / superclass
                                             :poss MRPNode-4))
           :ARG0 MRPNode-4
           :mod (MRPNode-6 / also))

# ::id 300
# ::snt Bayes’ theorem was names after Rev Thomas Bayes and is a method used in probability theory.
# ::tok Bayes ' theorem was names after Rev Thomas Bayes and is a method used in probability theory .
# ::collapsed instance nodes 1
(MRPNode-0 / and
           :op1 (MRPNode-1 / name-02
                           :ARG1 (MRPNode-2 / theorem
                                            :name (MRPNode-3 / name
                                                             :op1 (MRPNode-4 / bayes)))
                           :ARG2 (MRPNode-5 / person
                                            :ARG0-of (MRPNode-6 / have-org-role-91
                                                                :ARG2 (MRPNode-7 / reverend))
                                            :name (MRPNode-8 / name
                                                             :op1 (MRPNode-9 / thomas)
                                                             :op2 (MRPNode-10 / bayes))))
           :op2 (MRPNode-11 / method
                            :ARG1-of (MRPNode-12 / use-01
                                                 :ARG2 (MRPNode-13 / probability_theory_2))))

# ::id 301
# ::snt It is also called the posterior probability because it is derived from or depends upon the specified value of B.
# ::tok It is also called the posterior probability because it is derived from or depends upon the specified value of B.
# ::collapsed instance nodes 0
(MRPNode-0 / call-01
           :ARG1 (MRPNode-1 / it
                            :ARG1-of (MRPNode-2 / derive-01
                                                :ARG2 (MRPNode-3 / value
                                                                 :ARG1-of (MRPNode-4 / specify-01)))
                            :ARG0-of (MRPNode-5 / depend-01
                                                :ARG1 MRPNode-3))
           :mod (MRPNode-6 / also)
           :ARG1-of (MRPNode-7 / cause-01
                               :ARG0 (MRPNode-8 / or
                                                :op2 MRPNode-5))
           :ARG2 (MRPNode-9 / posterior))

# ::id 302
# ::snt One of the best known schemes is tf-idf weighting, proposed by Salton, Wong and Yang.
# ::tok One of the best known schemes is tf - idf weighting , proposed by Salton , Wong and Yang .
# ::collapsed instance nodes 0
(MRPNode-0 / thing
           :ARG1-of (MRPNode-1 / propose-01
                               :ARG0 (MRPNode-2 / and
                                                :op1 (MRPNode-3 / person
                                                                :name (MRPNode-4 / name
                                                                                 :op1 (MRPNode-5 / salton)))
                                                :op2 (MRPNode-6 / person
                                                                :name (MRPNode-7 / name
                                                                                 :op1 (MRPNode-8 / wong)))
                                                :op3 (MRPNode-9 / person)))
           :ARG1-of (MRPNode-10 / include-91
                                :ARG2 (MRPNode-11 / scheme
                                                  :ARG1-of (MRPNode-12 / good-02)
                                                  :ARG1-of (MRPNode-13 / have-degree-91
                                                                       :ARG2 MRPNode-12
                                                                       :ARG3 (MRPNode-14 / most))
                                                  :name (MRPNode-15 / name
                                                                    :op1 (MRPNode-16 / salton))))
           :domain (MRPNode-17 / scheme
                               :name (MRPNode-18 / name
                                                 :op1 (MRPNode-19 / tf)
                                                 :op2 (MRPNode-20 / weighting))))

# ::id 303
# ::snt The vector space model has the following limitations: 1.
# ::tok The vector space model has the following limitations : 1 .
# ::collapsed instance nodes 2
(MRPNode-0 / limit-01
           :li (MRPNode-1 / 1)
           :ARG1 (MRPNode-2 / vector_space_model_3)
           :ARG1-of (MRPNode-3 / follow-01))

# ::id 304
# ::snt It is intended to help reuse existing code with little or no modification.
# ::tok It is intended to help reuse existing code with little or no modification .
# ::collapsed instance nodes 0
(MRPNode-0 / intend-01
           :ARG1 (MRPNode-1 / help-01
                            :ARG1 (MRPNode-2 / repair-01
                                             :ARG1 (MRPNode-3 / code
                                                              :ARG1-of (MRPNode-4 / exist-01))
                                             :instrument (MRPNode-5 / or
                                                                    :op1 (MRPNode-6 / modify-01
                                                                                    :degree (MRPNode-7 / little))
                                                                    :op2 (MRPNode-8 / modify-01
                                                                                    :polarity (MRPNode-9 / -))))))

# ::id 305
# ::snt The vector is then constucted of the frequency of eacher word (dimension).
# ::tok The vector is then constucted of the frequency of eacher word ( dimension ) .
# ::collapsed instance nodes 1
(MRPNode-0 / incinerate-01
           :ARG1 (MRPNode-1 / thing
                            :frequency-of (MRPNode-2 / rate-entity-91
                                                     :ARG1 (MRPNode-3 / eacher_word_2)))
           :time (MRPNode-4 / vector)
           :time (MRPNode-5 / then))

# ::id 306
# ::snt The PageRank depends on the PageRank rating and number of all pages that have links to it.
# ::tok The PageRank depends on the PageRank rating and number of all pages that have links to it .
# ::collapsed instance nodes 1
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / rate-01)
                            :op2 (MRPNode-3 / number
                                            :quant-of (MRPNode-4 / all_pages_2)))
           :ARG0 (MRPNode-5 / publication
                            :ARG1-of (MRPNode-6 / link-01
                                                :ARG1 MRPNode-4)
                            :name (MRPNode-7 / name
                                             :op1 (MRPNode-8 / pagerank))))

# ::id 307
# ::snt Single words, keywords and occasionally longer phrases are used for terms.
# ::tok Single words , keywords and occasionally longer phrases are used for terms .
# ::collapsed instance nodes 0
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / word
                                            :ARG1-of (MRPNode-3 / single-02))
                            :op2 (MRPNode-4 / keyword)
                            :op3 (MRPNode-5 / phrase
                                            :ARG1-of (MRPNode-6 / have-degree-91
                                                                :ARG3 (MRPNode-7 / more))
                                            :ARG1-of (MRPNode-8 / long-03)
                                            :frequency (MRPNode-9 / occasional)))
           :ARG2 (MRPNode-10 / term))

# ::id 308
# ::snt The idea of inheritance is to reuse the existing code with little or no modification at all.
# ::tok The idea of inheritance is to reuse the existing code with little or no modification at all .
# ::collapsed instance nodes 0
(MRPNode-0 / reuse
           :domain (MRPNode-1 / code
                              :ARG1-of (MRPNode-2 / exist-01))
           :domain (MRPNode-3 / idea
                              :topic (MRPNode-4 / inherit-01))
           :manner (MRPNode-5 / or
                              :op1 (MRPNode-6 / modify-01
                                              :mod (MRPNode-7 / at-all)
                                              :degree (MRPNode-8 / little))
                              :op2 (MRPNode-9 / modify-01
                                              :polarity (MRPNode-10 / -))))

# ::id 309
# ::snt It is valid in all common interpretations of probability.
# ::tok It is valid in all common interpretations of probability .
# ::collapsed instance nodes 0
(MRPNode-0 / valid-02
           :ARG1 (MRPNode-1 / it)
           :ARG2 (MRPNode-2 / interpret-01
                            :ARG1 (MRPNode-3 / probability)
                            :mod (MRPNode-4 / common)
                            :mod (MRPNode-5 / all)))

# ::id 310
# ::snt The value of a vector is non-zero if a term occurs in the document.
# ::tok The value of a vector is non - zero if a term occurs in the document .
# ::collapsed instance nodes 0
(MRPNode-0 / have-condition-91
           :ARG1 (MRPNode-1 / equal-01
                            :polarity (MRPNode-2 / -)
                            :ARG1 (MRPNode-3 / thing
                                             :ARG2-of (MRPNode-4 / value-01
                                                                 :ARG1 (MRPNode-5 / vector)))
                            :ARG2 (MRPNode-6 / zero))
           :ARG2 (MRPNode-7 / be-located-at-91
                            :ARG1 (MRPNode-8 / term)
                            :ARG2 (MRPNode-9 / document)))

# ::id 311
# ::snt When a document is represented as a vector, each dimension corresponds to a separate term.
# ::tok When a document is represented as a vector , each dimension corresponds to a separate term .
# ::collapsed instance nodes 1
(MRPNode-0 / correspond-02
           :ARG1 (MRPNode-1 / term
                            :ARG1-of (MRPNode-2 / separate-02))
           :ARG1 (MRPNode-3 / each_dimension_2)
           :time (MRPNode-4 / represent-01
                            :ARG1 (MRPNode-5 / document)
                            :ARG2 (MRPNode-6 / vector)))

# ::id 312
# ::snt Inheritance is an important feature in object orientated programming.
# ::tok Inheritance is an important feature in object orientated programming .
# ::collapsed instance nodes 0
(MRPNode-0 / feature
           :ARG1-of (MRPNode-1 / important-01)
           :domain (MRPNode-2 / programming
                              :ARG1-of (MRPNode-3 / orient-01
                                                  :ARG2 (MRPNode-4 / object)))
           :domain (MRPNode-5 / influence-01))

# ::id 313
# ::snt So in essence it is a popularity contest between WebPages.
# ::tok So in essence it is a popularity contest between WebPages .
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / contest-02
                            :ARG1 (MRPNode-2 / it)
                            :mod (MRPNode-3 / essence)
                            :ARG3 (MRPNode-4 / popularity)
                            :ARG0 (MRPNode-5 / between
                                             :op1 (MRPNode-6 / company
                                                             :name (MRPNode-7 / name
                                                                              :op1 (MRPNode-8 / webpages)))
                                             :op2 (MRPNode-9 / company
                                                             :name (MRPNode-10 / name
                                                                               :op1 (MRPNode-11 / webpages))))))

# ::id 314
# ::snt The basic idea is to represent each document as a vector of certain weighted word frequencies.
# ::tok The basic idea is to represent each document as a vector of certain weighted word frequencies .
# ::collapsed instance nodes 5
(MRPNode-0 / represent-01
           :ARG1 (MRPNode-1 / each_document_2)
           :ARG0 (MRPNode-2 / basic_idea_2)
           :ARG2 (MRPNode-3 / vector
                            :consist-of (MRPNode-4 / certain_weighted_word_frequencies_4)))

# ::id 315
# ::snt Object oriented programming is a style of programming that supports encapsulation, inheritance, and polymorphism.
# ::tok Object oriented programming is a style of programming that supports encapsulation , inheritance , and polymorphism .
# ::collapsed instance nodes 1
(MRPNode-0 / program-01
           :mod (MRPNode-1 / style)
           :ARG0-of (MRPNode-2 / support-01
                               :ARG1 (MRPNode-3 / and
                                                :op1 (MRPNode-4 / thing
                                                                :ARG2-of (MRPNode-5 / copy-01))
                                                :op2 (MRPNode-6 / thing
                                                                :ARG2-of (MRPNode-7 / inherit-01))
                                                :op3 (MRPNode-8 / polymorphism_2)))
           :domain (MRPNode-9 / orient-01
                              :ARG3 (MRPNode-10 / object)))

# ::id 316
# ::snt The vector space model has some limitations: 1.
# ::tok The vector space model has some limitations : 1 .
# ::collapsed instance nodes 2
(MRPNode-0 / limit-01
           :li (MRPNode-1 / 1)
           :ARG1 (MRPNode-2 / vector_space_model_3))

# ::id 317
# ::snt The theorem is often used when we have observations and wish to compute posterior probabilities.
# ::tok The theorem is often used when we have observations and wish to compute posterior probabilities .
# ::collapsed instance nodes 0
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / theorem)
           :time (MRPNode-2 / and
                            :op1 (MRPNode-3 / have-03
                                            :ARG1 (MRPNode-4 / observe-01)
                                            :ARG0 (MRPNode-5 / we))
                            :op2 (MRPNode-6 / wish-01
                                            :ARG0 MRPNode-5
                                            :ARG1 (MRPNode-7 / comprehend-01
                                                             :ARG0 MRPNode-5
                                                             :ARG1 (MRPNode-8 / probability
                                                                              :ARG1-of (MRPNode-9 / differ-02)))))
           :frequency (MRPNode-10 / often))

# ::id 318
# ::snt One of the best known schemes is tf-idf weighting (see the example below).
# ::tok One of the best known schemes is tf - idf weighting ( see the example below ) .
# ::collapsed instance nodes 0
(MRPNode-0 / multi-sentence
           :snt1 (MRPNode-1 / have-mod-91
                            :ARG1 (MRPNode-2 / thing
                                             :ARG1-of (MRPNode-3 / include-91
                                                                 :ARG2 (MRPNode-4 / scheme
                                                                                  :ARG1-of (MRPNode-5 / know-02
                                                                                                      :ARG1-of (MRPNode-6 / good-02)
                                                                                                      :ARG1-of (MRPNode-7 / have-degree-91
                                                                                                                          :ARG2 MRPNode-6
                                                                                                                          :ARG3 (MRPNode-8 / most))))))
                            :ARG1 (MRPNode-9 / scheme
                                             :name (MRPNode-10 / name
                                                               :op1 (MRPNode-11 / tf)
                                                               :op2 (MRPNode-12 / weighting))))
           :snt2 (MRPNode-13 / see-01
                             :mode (MRPNode-14 / imperative)
                             :ARG1 (MRPNode-15 / exemplify-01
                                               :ARG0 (MRPNode-16 / below))
                             :ARG0 (MRPNode-17 / you)))

# ::id 319
# ::snt It is therefore used to create relationships between one object and another.
# ::tok It is therefore used to create relationships between one object and another .
# ::collapsed instance nodes 1
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / use-01
                            :ARG1 (MRPNode-2 / it)
                            :ARG2 (MRPNode-3 / create-01
                                             :ARG0 MRPNode-2
                                             :ARG1 (MRPNode-4 / relation-03
                                                              :ARG1 (MRPNode-5 / one_object_2)
                                                              :ARG2 (MRPNode-6 / object
                                                                               :mod (MRPNode-7 / another))))))

# ::id 320
# ::snt When a document is represented as a vector, each dimension corresponds to a separate term.
# ::tok When a document is represented as a vector , each dimension corresponds to a separate term .
# ::collapsed instance nodes 1
(MRPNode-0 / correspond-02
           :ARG1 (MRPNode-1 / term
                            :ARG1-of (MRPNode-2 / separate-02))
           :ARG1 (MRPNode-3 / each_dimension_2)
           :time (MRPNode-4 / represent-01
                            :ARG1 (MRPNode-5 / document)
                            :ARG2 (MRPNode-6 / vector)))

# ::id 321
# ::snt If a term appears in the document then its value in the vector is non-zero.
# ::tok If a term appears in the document then its value in the vector is non - zero .
# ::collapsed instance nodes 0
(MRPNode-0 / have-condition-91
           :ARG1 (MRPNode-1 / zero
                            :polarity (MRPNode-2 / -)
                            :domain (MRPNode-3 / value
                                               :location (MRPNode-4 / vector)
                                               :poss (MRPNode-5 / term)))
           :ARG2 (MRPNode-6 / appear-01
                            :ARG1 MRPNode-5
                            :location (MRPNode-7 / document)))

# ::id 322
# ::snt If a term exists in a document, its value in the vector is not equal to zero.
# ::tok If a term exists in a document , its value in the vector is not equal to zero .
# ::collapsed instance nodes 0
(MRPNode-0 / equal-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / thing
                            :ARG2-of (MRPNode-3 / value-01
                                                :location (MRPNode-4 / vector)))
           :ARG2 (MRPNode-5 / zero)
           :condition (MRPNode-6 / exist-01
                                 :ARG1 (MRPNode-7 / term)
                                 :location (MRPNode-8 / document)))

# ::id 323
# ::snt A document is represented as a vector, with each dimension corresponding to a separate term.
# ::tok A document is represented as a vector , with each dimension corresponding to a separate term .
# ::collapsed instance nodes 1
(MRPNode-0 / represent-01
           :ARG1 (MRPNode-1 / document)
           :ARG2 (MRPNode-2 / vector)
           :ARG0-of (MRPNode-3 / accompany-01
                               :ARG1 (MRPNode-4 / correspond-02
                                                :ARG1 (MRPNode-5 / each_dimension_2)
                                                :ARG2 (MRPNode-6 / term
                                                                 :ARG1-of (MRPNode-7 / separate-02)))))

# ::id 324
# ::snt A document is represented as a vector.
# ::tok A document is represented as a vector .
# ::collapsed instance nodes 0
(MRPNode-0 / represent-01
           :ARG1 (MRPNode-1 / document)
           :ARG2 (MRPNode-2 / vector))

# ::id 325
# ::snt A document is represented as a vector, with each dimension corresponding to a separate term.
# ::tok A document is represented as a vector , with each dimension corresponding to a separate term .
# ::collapsed instance nodes 1
(MRPNode-0 / represent-01
           :ARG1 (MRPNode-1 / document)
           :ARG2 (MRPNode-2 / vector)
           :ARG0-of (MRPNode-3 / accompany-01
                               :ARG1 (MRPNode-4 / correspond-02
                                                :ARG1 (MRPNode-5 / each_dimension_2)
                                                :ARG2 (MRPNode-6 / term
                                                                 :ARG1-of (MRPNode-7 / separate-02)))))

# ::id 326
# ::snt To derive the theorem, we begin with the definition of conditional probability.
# ::tok To derive the theorem , we begin with the definition of conditional probability .
# ::collapsed instance nodes 1
(MRPNode-0 / begin-01
           :ARG1 (MRPNode-1 / define-01
                            :ARG1 (MRPNode-2 / conditional_probability_2))
           :ARG0 (MRPNode-3 / we)
           :purpose (MRPNode-4 / derive-01
                               :ARG0 MRPNode-3
                               :ARG1 (MRPNode-5 / theorem)))

# ::id 327
# ::snt Characterise structure of an optimal solution.
# ::tok Characterise structure of an optimal solution .
# ::collapsed instance nodes 1
(MRPNode-0 / characteristic-02
           :ARG1 (MRPNode-1 / structure
                            :poss (MRPNode-2 / optimal_solution_2)))

# ::id 328
# ::snt When a document is represented as a vector, each dimension corresponds to a separate term.
# ::tok When a document is represented as a vector , each dimension corresponds to a separate term .
# ::collapsed instance nodes 1
(MRPNode-0 / correspond-02
           :ARG1 (MRPNode-1 / term
                            :ARG1-of (MRPNode-2 / separate-02))
           :ARG1 (MRPNode-3 / each_dimension_2)
           :time (MRPNode-4 / represent-01
                            :ARG1 (MRPNode-5 / document)
                            :ARG2 (MRPNode-6 / vector)))

# ::id 329
# ::snt Break up the problem different smaller subproblems.
# ::tok Break up the problem different smaller subproblems .
# ::collapsed instance nodes 0
(MRPNode-0 / break-up-08
           :mode (MRPNode-1 / imperative)
           :ARG1 (MRPNode-2 / subproblem
                            :ARG1-of (MRPNode-3 / differ-02)
                            :ARG1-of (MRPNode-4 / have-degree-91
                                                :ARG2 (MRPNode-5 / small)
                                                :ARG3 (MRPNode-6 / more)))
           :ARG0 (MRPNode-7 / you))

# ::id 330
# ::snt P(A) is the probability of the student being a girl (which is 2/5).
# ::tok P ( A ) is the probability of the student being a girl ( which is 2/5 ) .
# ::collapsed instance nodes 0
(MRPNode-0 / probable
           :ARG1-of (MRPNode-1 / age-01
                               :ARG2 (MRPNode-2 / product-of
                                                :op1 (MRPNode-3 / 25)
                                                :op2 (MRPNode-4 / 1)))
           :domain (MRPNode-5 / score-on-scale-91
                              :arg1 (MRPNode-6 / a))
           :domain (MRPNode-7 / girl
                              :domain (MRPNode-8 / person
                                                 :ARG0-of (MRPNode-9 / study-01))))

# ::id 331
# ::snt This is highly used in dynamic programming.
# ::tok This is highly used in dynamic programming .
# ::collapsed instance nodes 1
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / this)
           :ARG2 (MRPNode-2 / high-02)
           :ARG2 (MRPNode-3 / dynamic_programming_2))

# ::id 332
# ::snt A term which occurs in the document has a value in the vector of non-zero.
# ::tok A term which occurs in the document has a value in the vector of non - zero .
# ::collapsed instance nodes 0
(MRPNode-0 / value-01
           :ARG1 (MRPNode-1 / term
                            :location (MRPNode-2 / document))
           :location (MRPNode-3 / vector
                                :consist-of (MRPNode-4 / zero
                                                       :polarity (MRPNode-5 / -))))

# ::id 333
# ::snt When a document is represented as a vector, each dimension corresponds to a separate term.
# ::tok When a document is represented as a vector , each dimension corresponds to a separate term .
# ::collapsed instance nodes 1
(MRPNode-0 / correspond-02
           :ARG1 (MRPNode-1 / term
                            :ARG1-of (MRPNode-2 / separate-02))
           :ARG1 (MRPNode-3 / each_dimension_2)
           :time (MRPNode-4 / represent-01
                            :ARG1 (MRPNode-5 / document)
                            :ARG2 (MRPNode-6 / vector)))

# ::id 334
# ::snt Terms are basically the words or any indexing unit used to identify the contents of a text.
# ::tok Terms are basically the words or any indexing unit used to identify the contents of a text .
# ::collapsed instance nodes 0
(MRPNode-0 / or
           :op1 (MRPNode-1 / word)
           :op2 (MRPNode-2 / unit
                           :mod (MRPNode-3 / any)
                           :ARG0-of (MRPNode-4 / use-01
                                               :ARG2 (MRPNode-5 / identify-01
                                                                :ARG1 (MRPNode-6 / thing
                                                                                 :ARG1-of (MRPNode-7 / contain-01
                                                                                                     :ARG0 (MRPNode-8 / text)))))
                           :ARG0-of (MRPNode-9 / define-01))
           :domain (MRPNode-10 / basic)
           :domain (MRPNode-11 / term))

# ::id 335
# ::snt The vector space model are the documents which are represented as “bags of words”.
# ::tok The vector space model are the documents which are represented as " bags of words " .
# ::collapsed instance nodes 2
(MRPNode-0 / document
           :ARG1-of (MRPNode-1 / represent-01
                               :ARG2 (MRPNode-2 / bag
                                                :consist-of (MRPNode-3 / word)))
           :domain (MRPNode-4 / vector_space_model_3))

# ::id 336
# ::snt When any sub-problem is met again, it can be found and re-used to solve another problem.
# ::tok When any sub - problem is met again , it can be found and re - used to solve another problem .
# ::collapsed instance nodes 2
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / find-01
                                            :ARG1 (MRPNode-3 / problem
                                                             :mod (MRPNode-4 / any)
                                                             :mod (MRPNode-5 / sub)))
                            :op2 (MRPNode-6 / use-01
                                            :ARG2 (MRPNode-7 / solve-01
                                                             :ARG1 (MRPNode-8 / another_problem_2)
                                                             :ARG1 MRPNode-3)))
           :time (MRPNode-9 / met_again_2
                            :ARG1 MRPNode-3))

# ::id 337
# ::snt The vector space model are the documents which are represented as “bags of words”.
# ::tok The vector space model are the documents which are represented as " bags of words " .
# ::collapsed instance nodes 2
(MRPNode-0 / document
           :ARG1-of (MRPNode-1 / represent-01
                               :ARG2 (MRPNode-2 / bag
                                                :consist-of (MRPNode-3 / word)))
           :domain (MRPNode-4 / vector_space_model_3))

# ::id 338
# ::snt This is highly used in dynamic programming.
# ::tok This is highly used in dynamic programming .
# ::collapsed instance nodes 1
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / this)
           :ARG2 (MRPNode-2 / high-02)
           :ARG2 (MRPNode-3 / dynamic_programming_2))

# ::id 339
# ::snt The differing application has a direct influence on what the definition of the term means.
# ::tok The differing application has a direct influence on what the definition of the term means .
# ::collapsed instance nodes 0
(MRPNode-0 / influence-01
           :ARG1 (MRPNode-1 / thing
                            :ARG2-of (MRPNode-2 / mean-01
                                                :ARG1 (MRPNode-3 / define-01
                                                                 :ARG1 (MRPNode-4 / term))))
           :ARG0 (MRPNode-5 / apply-02
                            :ARG1-of (MRPNode-6 / differ-01))
           :ARG1-of (MRPNode-7 / direct-02))

# ::id 340
# ::snt As a formal theorem, Bayes' theorem is valid in all common interpretations of probability.
# ::tok As a formal theorem , Bayes ' theorem is valid in all common interpretations of probability .
# ::collapsed instance nodes 0
(MRPNode-0 / valid-02
           :ARG1 (MRPNode-1 / theorem
                            :mod (MRPNode-2 / formal)
                            :poss (MRPNode-3 / person
                                             :name (MRPNode-4 / name
                                                              :op1 (MRPNode-5 / bayes))))
           :ARG2 (MRPNode-6 / interpret-01
                            :ARG1 (MRPNode-7 / probability)
                            :mod (MRPNode-8 / all)
                            :ARG1-of (MRPNode-9 / share-01)))

# ::id 341
# ::snt It is mainly used to calculate the probability of one event’s outcome given that a previous event happened.
# ::tok It is mainly used to calculate the probability of one event 's outcome given that a previous event happened .
# ::collapsed instance nodes 1
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / it)
           :mod (MRPNode-2 / main)
           :ARG2 (MRPNode-3 / calculate-01
                            :ARG1 (MRPNode-4 / probable
                                             :domain (MRPNode-5 / outcome
                                                                :poss (MRPNode-6 / event
                                                                                 :quant (MRPNode-7 / 1)))))
           :ARG1-of (MRPNode-8 / give-01
                               :ARG1 (MRPNode-9 / previous_event_2)))

# ::id 342
# ::snt The algebraic model for representing text documents and objects as vectors of identifiers is called the vector space model.
# ::tok The algebraic model for representing text documents and objects as vectors of identifiers is called the vector space model .
# ::collapsed instance nodes 2
(MRPNode-0 / call-01
           :ARG1 (MRPNode-1 / model
                            :mod (MRPNode-2 / electronics)
                            :mod (MRPNode-3 / represent-01
                                            :ARG1 (MRPNode-4 / and
                                                             :op1 (MRPNode-5 / document
                                                                             :mod (MRPNode-6 / text))
                                                             :op2 (MRPNode-7 / object
                                                                             :location MRPNode-6))
                                            :ARG2 (MRPNode-8 / vector
                                                             :ARG0-of (MRPNode-9 / identify-01))))
           :ARG1 (MRPNode-10 / vector_space_model_3))

# ::id 343
# ::snt It is used in information filtering, information retrieval, indexing and relevancy rankings.
# ::tok It is used in information filtering , information retrieval , indexing and relevancy rankings .
# ::collapsed instance nodes 0
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / it)
           :ARG2 (MRPNode-2 / and
                            :op1 (MRPNode-3 / filter-02
                                            :ARG1 (MRPNode-4 / information))
                            :op2 (MRPNode-5 / retrieve-01
                                            :ARG1 MRPNode-4
                                            :ARG1 (MRPNode-6 / information))
                            :op3 (MRPNode-7 / model-01)
                            :op4 (MRPNode-8 / track-01
                                            :ARG1-of (MRPNode-9 / relevant-01))))

# ::id 344
# ::snt Vector space representation results in the loss of the order which the terms are in the document.
# ::tok Vector space representation results in the loss of the order which the terms are in the document .
# ::collapsed instance nodes 1
(MRPNode-0 / result-01
           :ARG1 (MRPNode-1 / represent-01
                            :ARG1 (MRPNode-2 / vector_space_2))
           :ARG2 (MRPNode-3 / lose-02
                            :ARG1 (MRPNode-4 / order
                                             :location-of (MRPNode-5 / term
                                                                     :location (MRPNode-6 / document)))))

# ::id 345
# ::snt Inheritance in object oriented programming is a way to form new classes using classes that have already been defined.
# ::tok Inheritance in object oriented programming is a way to form new classes using classes that have already been defined .
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :domain (MRPNode-1 / form-01
                              :ARG1 (MRPNode-2 / class
                                               :ARG1-of (MRPNode-3 / new-01))
                              :manner (MRPNode-4 / use-01
                                                 :ARG1 (MRPNode-5 / class
                                                                  :ARG1-of (MRPNode-6 / define-01
                                                                                      :time (MRPNode-7 / already)))))
           :domain (MRPNode-8 / inherit-01
                              :ARG1 (MRPNode-9 / program-01
                                               :ARG2 (MRPNode-10 / orient-01
                                                                 :ARG2 (MRPNode-11 / object)))))

# ::id 346
# ::snt The algebraic model for representing text documents and objects as vectors of identifiers is called the vector space model.
# ::tok The algebraic model for representing text documents and objects as vectors of identifiers is called the vector space model .
# ::collapsed instance nodes 2
(MRPNode-0 / call-01
           :ARG1 (MRPNode-1 / model
                            :mod (MRPNode-2 / electronics)
                            :mod (MRPNode-3 / represent-01
                                            :ARG1 (MRPNode-4 / and
                                                             :op1 (MRPNode-5 / document
                                                                             :mod (MRPNode-6 / text))
                                                             :op2 (MRPNode-7 / object
                                                                             :location MRPNode-6))
                                            :ARG2 (MRPNode-8 / vector
                                                             :ARG0-of (MRPNode-9 / identify-01))))
           :ARG1 (MRPNode-10 / vector_space_model_3))

# ::id 347
# ::snt Secondly to define the value of the optimal solution recursively.
# ::tok Secondly to define the value of the optimal solution recursively .
# ::collapsed instance nodes 1
(MRPNode-0 / define-01
           :li (MRPNode-1 / 2)
           :ARG1 (MRPNode-2 / value-01
                            :ARG1 (MRPNode-3 / optimal_solution_2))
           :ARG1-of (MRPNode-4 / correlate-01))

# ::id 348
# ::snt There are two main approaches for dynamic programming.
# ::tok There are two main approaches for dynamic programming .
# ::collapsed instance nodes 1
(MRPNode-0 / approach-02
           :quant (MRPNode-1 / 2)
           :ARG1 (MRPNode-2 / main)
           :ARG1 (MRPNode-3 / dynamic_programming_2))

# ::id 349
# ::snt P(A), or the probability that the student is a girl regardless of any other information.
# ::tok P ( A ) , or the probability that the student is a girl regardless of any other information .
# ::collapsed instance nodes 2
(MRPNode-0 / or
           :op1 (MRPNode-1 / exemplify-01)
           :op2 (MRPNode-2 / probable
                           :domain (MRPNode-3 / girl
                                              :domain (MRPNode-4 / person
                                                                 :ARG0-of (MRPNode-5 / study-01)))
                           :ARG1-of (MRPNode-6 / regardless-91
                                               :ARG2 (MRPNode-7 / any_other_information_3))))

# ::id 350
# ::snt In vector space model, the documents from which the information is to be retrieved are represented as vectors.
# ::tok In vector space model , the documents from which the information is to be retrieved are represented as vectors .
# ::collapsed instance nodes 1
(MRPNode-0 / represent-01
           :ARG1 (MRPNode-1 / document
                            :ARG1-of (MRPNode-2 / retrieve-01
                                                :ARG1 (MRPNode-3 / information)))
           :ARG2 (MRPNode-4 / vector)
           :location (MRPNode-5 / model-01
                                :ARG2 (MRPNode-6 / vector_space_2)))

# ::id 351
# ::snt A term which occurs in the document has a value in the vector of non-zero.
# ::tok A term which occurs in the document has a value in the vector of non - zero .
# ::collapsed instance nodes 0
(MRPNode-0 / value-01
           :ARG1 (MRPNode-1 / term
                            :location (MRPNode-2 / document))
           :location (MRPNode-3 / vector
                                :consist-of (MRPNode-4 / zero
                                                       :polarity (MRPNode-5 / -))))

# ::id 352
# ::snt Vector space representation results in the loss of the order which the terms are in the document.
# ::tok Vector space representation results in the loss of the order which the terms are in the document .
# ::collapsed instance nodes 1
(MRPNode-0 / result-01
           :ARG1 (MRPNode-1 / represent-01
                            :ARG1 (MRPNode-2 / vector_space_2))
           :ARG2 (MRPNode-3 / lose-02
                            :ARG1 (MRPNode-4 / order
                                             :location-of (MRPNode-5 / term
                                                                     :location (MRPNode-6 / document)))))

# ::id 353
# ::snt A page that is linked to by many pages with high PageRank receives a high rank itself.
# ::tok A page that is linked to by many pages with high PageRank receives a high rank itself .
# ::collapsed instance nodes 0
(MRPNode-0 / receive-01
           :ARG1 (MRPNode-1 / thing
                            :ARG1-of (MRPNode-2 / rank-01)
                            :ARG1-of (MRPNode-3 / high-02))
           :ARG0 (MRPNode-4 / page
                            :ARG1-of (MRPNode-5 / link-01
                                                :ARG0 (MRPNode-6 / page
                                                                 :quant (MRPNode-7 / have-03
                                                                                   :ARG1 (MRPNode-8 / publication
                                                                                                    :ARG1-of (MRPNode-9 / high-02)
                                                                                                    :name (MRPNode-10 / name
                                                                                                                      :op1 (MRPNode-11 / pagerank))))
                                                                 :quant (MRPNode-12 / many)))))

# ::id 354
# ::snt The PageRank is computed iteratively, and it is found that the PageRank values converge fairly rapidly.
# ::tok The PageRank is computed iteratively , and it is found that the PageRank values converge fairly rapidly .
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / compile-01
                           :manner (MRPNode-2 / iteratively)
                           :ARG1 (MRPNode-3 / publication
                                            :name (MRPNode-4 / name
                                                             :op1 (MRPNode-5 / pagerank))
                                            :ARG1-of (MRPNode-6 / value)))
           :op2 (MRPNode-7 / find-01
                           :ARG1 (MRPNode-8 / converge
                                            :ARG1 MRPNode-3
                                            :manner (MRPNode-9 / rapid
                                                               :ARG1-of (MRPNode-10 / fair-04)))))

# ::id 355
# ::snt In the vector space model a document is represented as a vector.
# ::tok In the vector space model a document is represented as a vector .
# ::collapsed instance nodes 1
(MRPNode-0 / represent-01
           :ARG1 (MRPNode-1 / document)
           :ARG2 (MRPNode-2 / vector)
           :location (MRPNode-3 / model-01
                                :ARG1 (MRPNode-4 / vector_space_2)))

# ::id 356
# ::snt If a term appears in the document, the terms value in the vector is non-zero.
# ::tok If a term appears in the document , the terms value in the vector is non - zero .
# ::collapsed instance nodes 0
(MRPNode-0 / have-condition-91
           :ARG1 (MRPNode-1 / zero
                            :polarity (MRPNode-2 / -)
                            :domain (MRPNode-3 / value
                                               :location (MRPNode-4 / vector)))
           :ARG2 (MRPNode-5 / appear-01
                            :ARG1 (MRPNode-6 / term)
                            :location (MRPNode-7 / document)))

# ::id 357
# ::snt Finally, the order in which the terms appear in the document is lost in the vector space representation.
# ::tok Finally , the order in which the terms appear in the document is lost in the vector space representation .
# ::collapsed instance nodes 1
(MRPNode-0 / lose-02
           :ARG1 (MRPNode-1 / order
                            :time-of (MRPNode-2 / appear-01
                                                :ARG1 (MRPNode-3 / term)
                                                :location (MRPNode-4 / document)))
           :mod (MRPNode-5 / enter-02
                           :ARG1 (MRPNode-6 / vector_space_2))
           :mod (MRPNode-7 / final))

# ::id 358
# ::snt Following this, each web page is given a ranking of 0-10 according to its relevance to a search.
# ::tok Following this , each web page is given a ranking of 0-10 according to its relevance to a search .
# ::collapsed instance nodes 0
(MRPNode-0 / give-01
           :ARG1 (MRPNode-1 / page
                            :mod (MRPNode-2 / each)
                            :ARG1-of (MRPNode-3 / relevant-01
                                                :ARG2 (MRPNode-4 / search-01))
                            :mod (MRPNode-5 / web))
           :ARG1 (MRPNode-6 / follow-01
                            :ARG2 (MRPNode-7 / this))
           :ARG1 (MRPNode-8 / rank-01
                            :ARG1 MRPNode-1
                            :ARG1-of (MRPNode-9 / between
                                                :op1 (MRPNode-10 / 0)
                                                :op2 (MRPNode-11 / 10))))

# ::id 359
# ::snt Lucky Joe likes to predict the colour of the ball he selects and he is 80% accurate.
# ::tok Lucky Joe likes to predict the colour of the ball he selects and he is 80 % accurate .
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / like-01
                           :ARG1 (MRPNode-2 / predict-01
                                            :ARG1 (MRPNode-3 / color
                                                             :poss (MRPNode-4 / ball))
                                            :ARG0 (MRPNode-5 / person
                                                             :ARG0-of (MRPNode-6 / name
                                                                                 :op1 (MRPNode-7 / lucky)
                                                                                 :op2 (MRPNode-8 / joe))
                                                             :ARG0-of (MRPNode-9 / select-01
                                                                                 :ARG1 MRPNode-3
                                                                                 :ARG1 MRPNode-4)))
                           :ARG0 MRPNode-5)
           :op2 (MRPNode-10 / accurate
                            :domain MRPNode-2
                            :domain MRPNode-5
                            :degree (MRPNode-11 / percentage-entity
                                                :value (MRPNode-12 / 80))))

# ::id 360
# ::snt In probability theory, Bayes' theorem relates the conditional and marginal probabilities of two random events.
# ::tok In probability theory , Bayes ' theorem relates the conditional and marginal probabilities of two random events .
# ::collapsed instance nodes 1
(MRPNode-0 / relate-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / probability
                                            :ARG1-of (MRPNode-3 / condition-01))
                            :op2 (MRPNode-4 / probability
                                            :ARG1-of (MRPNode-5 / marginal-02)))
           :ARG0 (MRPNode-6 / theorem
                            :poss (MRPNode-7 / event
                                             :quant (MRPNode-8 / 2)
                                             :quant (MRPNode-9 / random))
                            :poss (MRPNode-10 / person
                                              :name (MRPNode-11 / name
                                                                :op1 (MRPNode-12 / bayes))))
           :location (MRPNode-13 / probability_theory_2))

# ::id 361
# ::snt Outbound, links from your page to others.
# ::tok Outbound , links from your page to others .
# ::collapsed instance nodes 0
(MRPNode-0 / link-01
           :ARG2 (MRPNode-1 / Outbound)
           :ARG2 (MRPNode-2 / page
                            :poss (MRPNode-3 / you))
           :ARG2 (MRPNode-4 / other))

# ::id 362
# ::snt Vector space representation results in the loss of the order which the terms are in the document.
# ::tok Vector space representation results in the loss of the order which the terms are in the document .
# ::collapsed instance nodes 1
(MRPNode-0 / result-01
           :ARG1 (MRPNode-1 / represent-01
                            :ARG1 (MRPNode-2 / vector_space_2))
           :ARG2 (MRPNode-3 / lose-02
                            :ARG1 (MRPNode-4 / order
                                             :location-of (MRPNode-5 / term
                                                                     :location (MRPNode-6 / document)))))

# ::id 363
# ::snt If a term appears in the document, the terms value in the vector is non-zero.
# ::tok If a term appears in the document , the terms value in the vector is non - zero .
# ::collapsed instance nodes 0
(MRPNode-0 / have-condition-91
           :ARG1 (MRPNode-1 / zero
                            :polarity (MRPNode-2 / -)
                            :domain (MRPNode-3 / value
                                               :location (MRPNode-4 / vector)))
           :ARG2 (MRPNode-5 / appear-01
                            :ARG1 (MRPNode-6 / term)
                            :location (MRPNode-7 / document)))

# ::id 364
# ::snt In vector space model, the documents from which the information is to be retrieved are represented as vectors.
# ::tok In vector space model , the documents from which the information is to be retrieved are represented as vectors .
# ::collapsed instance nodes 1
(MRPNode-0 / represent-01
           :ARG1 (MRPNode-1 / document
                            :ARG1-of (MRPNode-2 / retrieve-01
                                                :ARG1 (MRPNode-3 / information)))
           :ARG2 (MRPNode-4 / vector)
           :location (MRPNode-5 / model-01
                                :ARG2 (MRPNode-6 / vector_space_2)))

# ::id 365
# ::snt The value of a vector is non-zero if a term occurs in the document.
# ::tok The value of a vector is non - zero if a term occurs in the document .
# ::collapsed instance nodes 0
(MRPNode-0 / have-condition-91
           :ARG1 (MRPNode-1 / equal-01
                            :polarity (MRPNode-2 / -)
                            :ARG1 (MRPNode-3 / thing
                                             :ARG2-of (MRPNode-4 / value-01
                                                                 :ARG1 (MRPNode-5 / vector)))
                            :ARG2 (MRPNode-6 / zero))
           :ARG2 (MRPNode-7 / be-located-at-91
                            :ARG1 (MRPNode-8 / term)
                            :ARG2 (MRPNode-9 / document)))

# ::id 366
# ::snt Other possible uses for vector space models are indexing and also to rank the relevancy of differing documents.
# ::tok Other possible uses for vector space models are indexing and also to rank the relevancy of differing documents .
# ::collapsed instance nodes 1
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / model-01
                                            :ARG1 (MRPNode-3 / vector_space_2))
                            :op2 (MRPNode-4 / rank-01
                                            :ARG1 (MRPNode-5 / relevant-01
                                                             :ARG1 (MRPNode-6 / document
                                                                              :ARG1-of (MRPNode-7 / differ-02)))
                                            :mod (MRPNode-8 / also)))
           :mod (MRPNode-9 / other)
           :ARG1-of (MRPNode-10 / possible-01))

# ::id 367
# ::snt The correct answer can be computed using Bayes' theorem.
# ::tok The correct answer can be computed using Bayes ' theorem .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / compile-01
                            :ARG1 (MRPNode-2 / thing
                                             :ARG1-of (MRPNode-3 / correct-02)
                                             :ARG2-of (MRPNode-4 / answer-01))
                            :manner (MRPNode-5 / use-01
                                               :ARG1 (MRPNode-6 / theorem
                                                                :poss (MRPNode-7 / person
                                                                                 :name (MRPNode-8 / name
                                                                                                  :op1 (MRPNode-9 / bayes)))))))

# ::id 368
# ::snt The basic idea is to represent each document as a vector of certain weighted word frequencies.
# ::tok The basic idea is to represent each document as a vector of certain weighted word frequencies .
# ::collapsed instance nodes 5
(MRPNode-0 / represent-01
           :ARG1 (MRPNode-1 / each_document_2)
           :ARG0 (MRPNode-2 / basic_idea_2)
           :ARG2 (MRPNode-3 / vector
                            :consist-of (MRPNode-4 / certain_weighted_word_frequencies_4)))

# ::id 369
# ::snt P(B) is the prior or marginal probability of B, and acts as a normalizing constant.
# ::tok P ( B ) is the prior or marginal probability of B , and acts as a normalizing constant .
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / or
                           :op1 (MRPNode-2 / thing
                                           :name (MRPNode-3 / name
                                                            :op1 (MRPNode-4 / "p(b"))
                                           :domain (MRPNode-5 / prior))
                           :op2 (MRPNode-6 / probability
                                           :domain (MRPNode-7 / marginal-02)
                                           :domain (MRPNode-8 / person
                                                              :name (MRPNode-9 / name
                                                                               :op1 (MRPNode-10 / b)))))
           :op2 (MRPNode-11 / act-01
                            :ARG1 (MRPNode-12 / constant
                                              :ARG0-of (MRPNode-13 / normalize-01))))

# ::id 370
# ::snt This method is used in the Google Toolbar, which reports back actual site visits to Google.
# ::tok This method is used in the Google Toolbar , which reports back actual site visits to Google .
# ::collapsed instance nodes 1
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / this_method_2)
           :ARG2 (MRPNode-2 / company
                            :ARG0-of (MRPNode-3 / report-01
                                                :ARG1 (MRPNode-4 / visit-01
                                                                 :ARG1 (MRPNode-5 / site)
                                                                 :ARG1-of (MRPNode-6 / actual-02)
                                                                 :ARG1 (MRPNode-7 / company
                                                                                  :name (MRPNode-8 / name
                                                                                                   :op1 (MRPNode-9 / google))))
                                                :mod (MRPNode-10 / back))
                            :name (MRPNode-11 / name
                                              :op1 (MRPNode-12 / google)
                                              :op2 (MRPNode-13 / toolbar))))

# ::id 371
# ::snt P(B) is the prior or marginal probability of B, and acts to normalise the probability.
# ::tok P ( B ) is the prior or marginal probability of B , and acts to normalise the probability .
# ::collapsed instance nodes 3
(MRPNode-0 / and
           :op1 (MRPNode-1 / probability
                           :mod (MRPNode-2 / prior)
                           :domain (MRPNode-3 / marginal-02)
                           :domain (MRPNode-4 / b_4))
           :op2 (MRPNode-5 / act-01
                           :ARG0 MRPNode-4
                           :ARG1 (MRPNode-6 / normalize-01
                                            :ARG0 MRPNode-4
                                            :ARG1 (MRPNode-7 / probability))))

# ::id 372
# ::snt The order in which terms appear in the document is lost in a vector space representation.
# ::tok The order in which terms appear in the document is lost in a vector space representation .
# ::collapsed instance nodes 1
(MRPNode-0 / lose-02
           :ARG1 (MRPNode-1 / order
                            :time-of (MRPNode-2 / appear-01
                                                :ARG1 (MRPNode-3 / term)
                                                :location (MRPNode-4 / document)))
           :location (MRPNode-5 / representation-02
                                :ARG0 (MRPNode-6 / vector_space_2)))

# ::id 373
# ::snt The basic idea is to represent each document as a vector of certain weighted word frequencies.
# ::tok The basic idea is to represent each document as a vector of certain weighted word frequencies .
# ::collapsed instance nodes 5
(MRPNode-0 / represent-01
           :ARG1 (MRPNode-1 / each_document_2)
           :ARG0 (MRPNode-2 / basic_idea_2)
           :ARG2 (MRPNode-3 / vector
                            :consist-of (MRPNode-4 / certain_weighted_word_frequencies_4)))

# ::id 374
# ::snt Java allows object inheritance.
# ::tok Java allows object inheritance .
# ::collapsed instance nodes 0
(MRPNode-0 / allow-01
           :ARG1 (MRPNode-1 / inherit-01
                            :ARG1 (MRPNode-2 / object))
           :ARG0 (MRPNode-3 / company
                            :name (MRPNode-4 / name
                                             :op1 (MRPNode-5 / java))))

# ::id 375
# ::snt Virtual attributes and methods can be shadowed/overridden.
# ::tok Virtual attributes and methods can be shadowed / overridden .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / shadow
                            :domain (MRPNode-2 / and
                                               :op1 (MRPNode-3 / thing
                                                               :ARG1-of (MRPNode-4 / attribute-01))
                                               :op2 (MRPNode-5 / method)
                                               :poss (MRPNode-6 / virtual))))

# ::id 376
# ::snt In the vector space model a document is represented as a vector.
# ::tok In the vector space model a document is represented as a vector .
# ::collapsed instance nodes 1
(MRPNode-0 / represent-01
           :ARG1 (MRPNode-1 / document)
           :ARG2 (MRPNode-2 / vector)
           :location (MRPNode-3 / model-01
                                :ARG1 (MRPNode-4 / vector_space_2)))

# ::id 377
# ::snt The peropos of inheritance in object oriented programming is to minimize the reuse of existing code without modification.
# ::tok The peropos of inheritance in object oriented programming is to minimize the reuse of existing code without modification .
# ::collapsed instance nodes 0
(MRPNode-0 / have-mod-91
           :ARG1 (MRPNode-1 / minimize-01
                            :ARG1 (MRPNode-2 / rewrite-01
                                             :ARG1 (MRPNode-3 / code
                                                              :ARG1-of (MRPNode-4 / exist-01))
                                             :manner (MRPNode-5 / modify-01
                                                                :polarity (MRPNode-6 / -))))
           :ARG1 (MRPNode-7 / inherit-01
                            :ARG1 (MRPNode-8 / program-01
                                             :ARG1-of (MRPNode-9 / orient-01
                                                                 :ARG2 (MRPNode-10 / object)))))

# ::id 378
# ::snt When a document is represented as a vector, each dimension corresponds to a separate term.
# ::tok When a document is represented as a vector , each dimension corresponds to a separate term .
# ::collapsed instance nodes 1
(MRPNode-0 / correspond-02
           :ARG1 (MRPNode-1 / term
                            :ARG1-of (MRPNode-2 / separate-02))
           :ARG1 (MRPNode-3 / each_dimension_2)
           :time (MRPNode-4 / represent-01
                            :ARG1 (MRPNode-5 / document)
                            :ARG2 (MRPNode-6 / vector)))

# ::id 379
# ::snt The vector space model is one of these methods, and it is an algebraic model.
# ::tok The vector space model is one of these methods , and it is an algebraic model .
# ::collapsed instance nodes 4
(MRPNode-0 / and
           :op1 (MRPNode-1 / include-91
                           :ARG1 (MRPNode-2 / these_methods_2)
                           :ARG1 (MRPNode-3 / vector_space_model_3))
           :op2 (MRPNode-4 / algebraic_model_2))

# ::id 380
# ::snt The vector space model has several disadvantages.
# ::tok The vector space model has several disadvantages .
# ::collapsed instance nodes 2
(MRPNode-0 / advantage-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / vector_space_model_3)
           :ARG3 (MRPNode-3 / several))

# ::id 381
# ::snt The peropos of inheritance in object oriented programming is to minimize the reuse of existing code without modification.
# ::tok The peropos of inheritance in object oriented programming is to minimize the reuse of existing code without modification .
# ::collapsed instance nodes 0
(MRPNode-0 / have-mod-91
           :ARG1 (MRPNode-1 / minimize-01
                            :ARG1 (MRPNode-2 / rewrite-01
                                             :ARG1 (MRPNode-3 / code
                                                              :ARG1-of (MRPNode-4 / exist-01))
                                             :manner (MRPNode-5 / modify-01
                                                                :polarity (MRPNode-6 / -))))
           :ARG1 (MRPNode-7 / inherit-01
                            :ARG1 (MRPNode-8 / program-01
                                             :ARG1-of (MRPNode-9 / orient-01
                                                                 :ARG2 (MRPNode-10 / object)))))

# ::id 382
# ::snt The order in which the terms appear in the document is lost in the vector space representation.
# ::tok The order in which the terms appear in the document is lost in the vector space representation .
# ::collapsed instance nodes 1
(MRPNode-0 / lose-02
           :ARG1 (MRPNode-1 / order
                            :time-of (MRPNode-2 / appear-01
                                                :ARG1 (MRPNode-3 / term)
                                                :location (MRPNode-4 / document)))
           :location (MRPNode-5 / representation-02
                                :ARG0 (MRPNode-6 / vector_space_2)))

# ::id 383
# ::snt The value of a vector is non-zero if a term occurs in the document.
# ::tok The value of a vector is non - zero if a term occurs in the document .
# ::collapsed instance nodes 0
(MRPNode-0 / have-condition-91
           :ARG1 (MRPNode-1 / equal-01
                            :polarity (MRPNode-2 / -)
                            :ARG1 (MRPNode-3 / thing
                                             :ARG2-of (MRPNode-4 / value-01
                                                                 :ARG1 (MRPNode-5 / vector)))
                            :ARG2 (MRPNode-6 / zero))
           :ARG2 (MRPNode-7 / be-located-at-91
                            :ARG1 (MRPNode-8 / term)
                            :ARG2 (MRPNode-9 / document)))

# ::id 384
# ::snt The similarity measures largely identify the retrieval efficiency of a particular information retrieval system.
# ::tok The similarity measures largely identify the retrieval efficiency of a particular information retrieval system .
# ::collapsed instance nodes 3
(MRPNode-0 / identify-01
           :ARG1 (MRPNode-1 / rely-01
                            :ARG1 (MRPNode-2 / efficient-01
                                             :ARG1 (MRPNode-3 / particular_information_retrieval_system_4)))
           :ARG0 (MRPNode-4 / measure-01
                            :ARG1-of (MRPNode-5 / resemble-01))
           :degree (MRPNode-6 / large))

# ::id 385
# ::snt The vector space model is one of these methods, and it is an algebraic model.
# ::tok The vector space model is one of these methods , and it is an algebraic model .
# ::collapsed instance nodes 4
(MRPNode-0 / and
           :op1 (MRPNode-1 / include-91
                           :ARG1 (MRPNode-2 / these_methods_2)
                           :ARG1 (MRPNode-3 / vector_space_model_3))
           :op2 (MRPNode-4 / algebraic_model_2))

# ::id 386
# ::snt Generalise the structure of an optimal solution 2.
# ::tok Generalise the structure of an optimal solution 2 .
# ::collapsed instance nodes 3
(MRPNode-0 / generalize-01
           :ARG1 (MRPNode-1 / structure-01
                            :ARG1 (MRPNode-2 / optimal_solution_2_4
                                             :quant (MRPNode-3 / 2)))
           :ARG0 (MRPNode-4 / you))

# ::id 387
# ::snt The vector space model is one of these methods, and it is an algebraic model.
# ::tok The vector space model is one of these methods , and it is an algebraic model .
# ::collapsed instance nodes 4
(MRPNode-0 / and
           :op1 (MRPNode-1 / include-91
                           :ARG1 (MRPNode-2 / these_methods_2)
                           :ARG1 (MRPNode-3 / vector_space_model_3))
           :op2 (MRPNode-4 / algebraic_model_2))

# ::id 388
# ::snt If the term doesn’t occur within the document, the value in the vector is zero.
# ::tok If the term does n't occur within the document , the value in the vector is zero .
# ::collapsed instance nodes 0
(MRPNode-0 / have-condition-91
           :ARG1 (MRPNode-1 / value
                            :quant (MRPNode-2 / vector)
                            :quant (MRPNode-3 / zero))
           :ARG2 (MRPNode-4 / be-located-at-91
                            :arg2 (MRPNode-5 / -)
                            :ARG1 (MRPNode-6 / term)
                            :ARG2 (MRPNode-7 / within
                                             :op1 (MRPNode-8 / document))))

# ::id 389
# ::snt In probability theory, the prior and conditional probabilities of two random events are related by Bayes' theorem.
# ::tok In probability theory , the prior and conditional probabilities of two random events are related by Bayes ' theorem .
# ::collapsed instance nodes 3
(MRPNode-0 / relate-01
           :ARG1 (MRPNode-1 / theorem
                            :poss (MRPNode-2 / person
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / bayes))))
           :ARG1 (MRPNode-5 / and
                            :op1 (MRPNode-6 / prior)
                            :op2 (MRPNode-7 / conditional_2))
           :location (MRPNode-8 / theory
                                :mod (MRPNode-9 / two_random_events_3
                                                :quant (MRPNode-10 / 2))
                                :mod (MRPNode-11 / probability)
                                :mod (MRPNode-12 / probability)))

# ::id 390
# ::snt The order in which terms appear in the document is lost in a vector space representation.
# ::tok The order in which terms appear in the document is lost in a vector space representation .
# ::collapsed instance nodes 1
(MRPNode-0 / lose-02
           :ARG1 (MRPNode-1 / order
                            :time-of (MRPNode-2 / appear-01
                                                :ARG1 (MRPNode-3 / term)
                                                :location (MRPNode-4 / document)))
           :location (MRPNode-5 / representation-02
                                :ARG0 (MRPNode-6 / vector_space_2)))

# ::id 391
# ::snt Inheritance is one of the basic concepts of Object Oriented Programming.
# ::tok Inheritance is one of the basic concepts of Object Oriented Programming .
# ::collapsed instance nodes 0
(MRPNode-0 / concept
           :ARG1-of (MRPNode-1 / include-91
                               :ARG2 (MRPNode-2 / concept
                                                :mod (MRPNode-3 / basic)
                                                :part-of (MRPNode-4 / program-01
                                                                    :ARG1-of (MRPNode-5 / integrate-01
                                                                                        :ARG2 (MRPNode-6 / object)))))
           :domain (MRPNode-7 / influence-01))

# ::id 392
# ::snt This can be useful when the number of times a word appears is not considered important.
# ::tok This can be useful when the number of times a word appears is not considered important .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / useful-05
                            :ARG1 (MRPNode-2 / this))
           :condition (MRPNode-3 / consider-01
                                 :polarity (MRPNode-4 / -)
                                 :ARG1 (MRPNode-5 / important-01
                                                  :ARG1 (MRPNode-6 / number
                                                                   :quant-of (MRPNode-7 / appear-01
                                                                                        :ARG1 (MRPNode-8 / word))))))

# ::id 393
# ::snt The easiest way to look at inheritance is as an “…is a kind of” relationship.
# ::tok The easiest way to look at inheritance is as an " ... is a kind of " relationship .
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / simple-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG3 (MRPNode-3 / more))
           :domain (MRPNode-4 / look-01
                              :ARG1 (MRPNode-5 / inherit-01))
           :domain (MRPNode-6 / relation-03
                              :mod (MRPNode-7 / kind)))

# ::id 394
# ::snt Vector space representation results in the loss of the order which the terms are in the document.
# ::tok Vector space representation results in the loss of the order which the terms are in the document .
# ::collapsed instance nodes 1
(MRPNode-0 / result-01
           :ARG1 (MRPNode-1 / represent-01
                            :ARG1 (MRPNode-2 / vector_space_2))
           :ARG2 (MRPNode-3 / lose-02
                            :ARG1 (MRPNode-4 / order
                                             :location-of (MRPNode-5 / term
                                                                     :location (MRPNode-6 / document)))))

# ::id 395
# ::snt "Thus, the ""program"" is the optimal plan for action that is produced."
# ::tok " Thus , the " " program " " is the optimal plan for action that is produced . "
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / plan-01
                            :ARG1 (MRPNode-2 / act-02)
                            :mod (MRPNode-3 / program)
                            :mod (MRPNode-4 / optimal)
                            :ARG1-of (MRPNode-5 / produce-01
                                                :ARG1 MRPNode-2)))

# ::id 396
# ::snt "It doesn't take into account any information about B, so it is ""prior""."
# ::tok " It does n't take into account any information about B , so it is " " prior " " . "
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / prior
                            :domain (MRPNode-2 / it))
           :ARG0 (MRPNode-3 / take-into-account-04
                            :polarity (MRPNode-4 / -)
                            :ARG1 (MRPNode-5 / information
                                             :topic (MRPNode-6 / any)
                                             :topic (MRPNode-7 / person
                                                               :name (MRPNode-8 / name
                                                                                :op1 (MRPNode-9 / b))))))

# ::id 397
# ::snt This means that inheritance is used when types have common factors and these would be put into the superclass.
# ::tok This means that inheritance is used when types have common factors and these would be put into the superclass .
# ::collapsed instance nodes 1
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / this)
           :ARG2 (MRPNode-2 / use-01
                            :ARG1 (MRPNode-3 / inherit-01)
                            :time (MRPNode-4 / and
                                             :op1 (MRPNode-5 / have-03
                                                             :ARG1 (MRPNode-6 / common_factors_2)
                                                             :ARG0 (MRPNode-7 / type))
                                             :op2 (MRPNode-8 / put-01
                                                             :ARG1 MRPNode-7
                                                             :ARG2 (MRPNode-9 / superclass)))))

# ::id 398
# ::snt Thus, the program is the best plan for action that is produced.
# ::tok Thus , the program is the best plan for action that is produced .
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / plan-01
                            :ARG1 (MRPNode-2 / act-02)
                            :ARG1-of (MRPNode-3 / program)
                            :ARG1-of (MRPNode-4 / have-degree-91
                                                :ARG3 (MRPNode-5 / most)
                                                :ARG2 (MRPNode-6 / good-02))
                            :ARG1-of MRPNode-6
                            :ARG1-of (MRPNode-7 / produce-01)))

# ::id 399
# ::snt This means that inheritance is used when types have common factors and these would be put into the superclass.
# ::tok This means that inheritance is used when types have common factors and these would be put into the superclass .
# ::collapsed instance nodes 1
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / this)
           :ARG2 (MRPNode-2 / use-01
                            :ARG1 (MRPNode-3 / inherit-01)
                            :time (MRPNode-4 / and
                                             :op1 (MRPNode-5 / have-03
                                                             :ARG1 (MRPNode-6 / common_factors_2)
                                                             :ARG0 (MRPNode-7 / type))
                                             :op2 (MRPNode-8 / put-01
                                                             :ARG1 MRPNode-7
                                                             :ARG2 (MRPNode-9 / superclass)))))

# ::id 400
# ::snt Occasionally it is advantageous to differentiate between these uses, as it is not necessarily noticeable from context.
# ::tok Occasionally it is advantageous to differentiate between these uses , as it is not necessarily noticeable from context .
# ::collapsed instance nodes 1
(MRPNode-0 / advantage-01
           :ARG1 (MRPNode-1 / differentiate-01
                            :ARG1 (MRPNode-2 / these_uses_2))
           :ARG1-of (MRPNode-3 / cause-01
                               :ARG0 (MRPNode-4 / possible-01
                                                :polarity (MRPNode-5 / -)
                                                :ARG1 (MRPNode-6 / notice-01
                                                                 :source (MRPNode-7 / context))))
           :frequency (MRPNode-8 / occasional))

# ::id 401
# ::snt Occasionally it is advantageous to differentiate between these uses, as it is not necessarily noticeable from context.
# ::tok Occasionally it is advantageous to differentiate between these uses , as it is not necessarily noticeable from context .
# ::collapsed instance nodes 1
(MRPNode-0 / advantage-01
           :ARG1 (MRPNode-1 / differentiate-01
                            :ARG1 (MRPNode-2 / these_uses_2))
           :ARG1-of (MRPNode-3 / cause-01
                               :ARG0 (MRPNode-4 / possible-01
                                                :polarity (MRPNode-5 / -)
                                                :ARG1 (MRPNode-6 / notice-01
                                                                 :source (MRPNode-7 / context))))
           :frequency (MRPNode-8 / occasional))

# ::id 402
# ::snt Mathematicians use the word to describe a set of rules which anyone can follow to solve a problem.
# ::tok Mathematicians use the word to describe a set of rules which anyone can follow to solve a problem .
# ::collapsed instance nodes 0
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / word)
           :ARG0 (MRPNode-2 / mathematician)
           :ARG2 (MRPNode-3 / describe-01
                            :ARG0 MRPNode-2
                            :ARG1 (MRPNode-4 / set
                                             :consist-of (MRPNode-5 / rule)
                                             :ARG1-of (MRPNode-6 / follow-02
                                                                 :ARG0 (MRPNode-7 / anyone)
                                                                 :ARG1-of (MRPNode-8 / possible-01)
                                                                 :purpose (MRPNode-9 / solve-01
                                                                                     :ARG0 MRPNode-7
                                                                                     :ARG1 (MRPNode-10 / problem))))))

# ::id 403
# ::snt This means that inheritance is used when types have common factors and these would be put into the superclass.
# ::tok This means that inheritance is used when types have common factors and these would be put into the superclass .
# ::collapsed instance nodes 1
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / this)
           :ARG2 (MRPNode-2 / use-01
                            :ARG1 (MRPNode-3 / inherit-01)
                            :time (MRPNode-4 / and
                                             :op1 (MRPNode-5 / have-03
                                                             :ARG1 (MRPNode-6 / common_factors_2)
                                                             :ARG0 (MRPNode-7 / type))
                                             :op2 (MRPNode-8 / put-01
                                                             :ARG1 MRPNode-7
                                                             :ARG2 (MRPNode-9 / superclass)))))

# ::id 404
# ::snt Most of these languages provide an “extend” keyword, which is used to subclass another.
# ::tok Most of these languages provide an " extend " keyword , which is used to subclass another .
# ::collapsed instance nodes 1
(MRPNode-0 / provide-01
           :ARG1 (MRPNode-1 / keyword
                            :ARG1-of (MRPNode-2 / extend-01)
                            :ARG1-of (MRPNode-3 / use-01
                                                :ARG2 (MRPNode-4 / another)
                                                :ARG2 (MRPNode-5 / subclass))
                            :ARG1-of MRPNode-5)
           :ARG0 (MRPNode-6 / language
                            :ARG1-of (MRPNode-7 / include-91
                                                :ARG2 (MRPNode-8 / these_languages_2))
                            :quant (MRPNode-9 / most)))

# ::id 405
# ::snt This means that inheritance is used when types have common factors and these would be put into the superclass.
# ::tok This means that inheritance is used when types have common factors and these would be put into the superclass .
# ::collapsed instance nodes 1
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / this)
           :ARG2 (MRPNode-2 / use-01
                            :ARG1 (MRPNode-3 / inherit-01)
                            :time (MRPNode-4 / and
                                             :op1 (MRPNode-5 / have-03
                                                             :ARG1 (MRPNode-6 / common_factors_2)
                                                             :ARG0 (MRPNode-7 / type))
                                             :op2 (MRPNode-8 / put-01
                                                             :ARG1 MRPNode-7
                                                             :ARG2 (MRPNode-9 / superclass)))))

# ::id 406
# ::snt This can be useful when the number of times a word appears is not considered important.
# ::tok This can be useful when the number of times a word appears is not considered important .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / useful-05
                            :ARG1 (MRPNode-2 / this))
           :condition (MRPNode-3 / consider-01
                                 :polarity (MRPNode-4 / -)
                                 :ARG1 (MRPNode-5 / important-01
                                                  :ARG1 (MRPNode-6 / number
                                                                   :quant-of (MRPNode-7 / appear-01
                                                                                        :ARG1 (MRPNode-8 / word))))))

# ::id 407
# ::snt There is also Conditional Probability which is usually interested in the way variables relate to each other.
# ::tok There is also Conditional Probability which is usually interested in the way variables relate to each other .
# ::collapsed instance nodes 1
(MRPNode-0 / interest-01
           :mod (MRPNode-1 / thing
                           :name (MRPNode-2 / name
                                            :op1 (MRPNode-3 / conditional)
                                            :op2 (MRPNode-4 / probability)))
           :mod (MRPNode-5 / also)
           :mod (MRPNode-6 / usual)
           :ARG2 (MRPNode-7 / way
                            :manner-of (MRPNode-8 / relate-01
                                                  :ARG1 (MRPNode-9 / variable)
                                                  :ARG2 (MRPNode-10 / each_other_2))))

# ::id 408
# ::snt To achieve this, the programmer has to note generalisations and similarities about various aspects of the program.
# ::tok To achieve this , the programmer has to note generalisations and similarities about various aspects of the program .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / program-01))
           :ARG2 (MRPNode-3 / note-01
                            :ARG0 MRPNode-1
                            :ARG1 (MRPNode-4 / and
                                             :op1 (MRPNode-5 / generalize-01)
                                             :op2 (MRPNode-6 / resemble-01
                                                             :ARG1 (MRPNode-7 / aspect
                                                                              :mod (MRPNode-8 / various)
                                                                              :part-of (MRPNode-9 / program)))
                                             :topic MRPNode-7))
           :purpose (MRPNode-10 / achieve-01
                                :ARG0 MRPNode-1
                                :ARG1 (MRPNode-11 / this)))

# ::id 409
# ::snt The method can be abused when people deliberately link to sites in order to raise a site's PageRank.
# ::tok The method can be abused when people deliberately link to sites in order to raise a site 's PageRank .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / abuse-02
                            :ARG1 (MRPNode-2 / link-01
                                             :ARG1 (MRPNode-3 / site)
                                             :ARG0 (MRPNode-4 / deliberate-01)
                                             :purpose (MRPNode-5 / raise-01
                                                                 :ARG1 (MRPNode-6 / publication
                                                                                  :name (MRPNode-7 / name
                                                                                                   :op1 (MRPNode-8 / pagerank))
                                                                                  :poss (MRPNode-9 / site))
                                                                 :ARG0 (MRPNode-10 / person))
                                             :ARG0 MRPNode-10)
                            :ARG1 (MRPNode-11 / method)))

# ::id 410
# ::snt Google’s payoff is that it gets to track the behaviour of actual users.
# ::tok Google 's payoff is that it gets to track the behaviour of actual users .
# ::collapsed instance nodes 0
(MRPNode-0 / price-01
           :ARG1 (MRPNode-1 / company
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / google))
                            :ARG0-of (MRPNode-4 / track-01
                                                :ARG1 (MRPNode-5 / behave-01
                                                                 :ARG0 (MRPNode-6 / person
                                                                                  :ARG1-of (MRPNode-7 / actual-02)
                                                                                  :ARG0-of (MRPNode-8 / use-01)))))
           :ARG2 (MRPNode-9 / get-22
                            :ARG0 MRPNode-1
                            :ARG1 MRPNode-4))

# ::id 411
# ::snt This means that inheritance is used when types have common factors and these would be put into the superclass.
# ::tok This means that inheritance is used when types have common factors and these would be put into the superclass .
# ::collapsed instance nodes 1
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / this)
           :ARG2 (MRPNode-2 / use-01
                            :ARG1 (MRPNode-3 / inherit-01)
                            :time (MRPNode-4 / and
                                             :op1 (MRPNode-5 / have-03
                                                             :ARG1 (MRPNode-6 / common_factors_2)
                                                             :ARG0 (MRPNode-7 / type))
                                             :op2 (MRPNode-8 / put-01
                                                             :ARG1 MRPNode-7
                                                             :ARG2 (MRPNode-9 / superclass)))))

# ::id 412
# ::snt "Thus, the ""program"" is the optimal plan of action that is being produced."
# ::tok " Thus , the " " program " " is the optimal plan of action that is being produced . "
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / plan-01
                            :ARG1 (MRPNode-2 / act-02)
                            :mod (MRPNode-3 / produce-01)
                            :mod (MRPNode-4 / optimal)
                            :domain (MRPNode-5 / program)))

# ::id 413
# ::snt To achieve this, the programmer has to note generalisations and similarities about various aspects of the program.
# ::tok To achieve this , the programmer has to note generalisations and similarities about various aspects of the program .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / program-01))
           :ARG2 (MRPNode-3 / note-01
                            :ARG0 MRPNode-1
                            :ARG1 (MRPNode-4 / and
                                             :op1 (MRPNode-5 / generalize-01)
                                             :op2 (MRPNode-6 / resemble-01
                                                             :ARG1 (MRPNode-7 / aspect
                                                                              :mod (MRPNode-8 / various)
                                                                              :part-of (MRPNode-9 / program)))
                                             :topic MRPNode-7))
           :purpose (MRPNode-10 / achieve-01
                                :ARG0 MRPNode-1
                                :ARG1 (MRPNode-11 / this)))

# ::id 414
# ::snt This can be useful when the number of times a word appears is not considered important.
# ::tok This can be useful when the number of times a word appears is not considered important .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / useful-05
                            :ARG1 (MRPNode-2 / this))
           :condition (MRPNode-3 / consider-01
                                 :polarity (MRPNode-4 / -)
                                 :ARG1 (MRPNode-5 / important-01
                                                  :ARG1 (MRPNode-6 / number
                                                                   :quant-of (MRPNode-7 / appear-01
                                                                                        :ARG1 (MRPNode-8 / word))))))

# ::id 415
# ::snt Mathematicians use the word to describe a set of rules which anyone can follow to solve a problem.
# ::tok Mathematicians use the word to describe a set of rules which anyone can follow to solve a problem .
# ::collapsed instance nodes 0
(MRPNode-0 / use-01
           :ARG1 (MRPNode-1 / word)
           :ARG0 (MRPNode-2 / mathematician)
           :ARG2 (MRPNode-3 / describe-01
                            :ARG0 MRPNode-2
                            :ARG1 (MRPNode-4 / set
                                             :consist-of (MRPNode-5 / rule)
                                             :ARG1-of (MRPNode-6 / follow-02
                                                                 :ARG0 (MRPNode-7 / anyone)
                                                                 :ARG1-of (MRPNode-8 / possible-01)
                                                                 :purpose (MRPNode-9 / solve-01
                                                                                     :ARG0 MRPNode-7
                                                                                     :ARG1 (MRPNode-10 / problem))))))

# ::id 416
# ::snt The other method is the top down approach which is a method that combines memorization and recursion.
# ::tok The other method is the top down approach which is a method that combines memorization and recursion .
# ::collapsed instance nodes 1
(MRPNode-0 / method
           :mod (MRPNode-1 / other)
           :domain (MRPNode-2 / down_approach_2)
           :ARG0-of (MRPNode-3 / combine-01
                               :ARG1 (MRPNode-4 / and
                                                :op2 (MRPNode-5 / recursion))
                               :ARG1 (MRPNode-6 / memorization)))

# ::id 417
# ::snt P(A), or the probability that the student is a girl regardless of any other information.
# ::tok P ( A ) , or the probability that the student is a girl regardless of any other information .
# ::collapsed instance nodes 2
(MRPNode-0 / or
           :op1 (MRPNode-1 / exemplify-01)
           :op2 (MRPNode-2 / probable
                           :domain (MRPNode-3 / girl
                                              :domain (MRPNode-4 / person
                                                                 :ARG0-of (MRPNode-5 / study-01)))
                           :ARG1-of (MRPNode-6 / regardless-91
                                               :ARG2 (MRPNode-7 / any_other_information_3))))

# ::id 418
# ::snt To achieve this, the programmer has to note generalisations and similarities about various aspects of the program.
# ::tok To achieve this , the programmer has to note generalisations and similarities about various aspects of the program .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / program-01))
           :ARG2 (MRPNode-3 / note-01
                            :ARG0 MRPNode-1
                            :ARG1 (MRPNode-4 / and
                                             :op1 (MRPNode-5 / generalize-01)
                                             :op2 (MRPNode-6 / resemble-01
                                                             :ARG1 (MRPNode-7 / aspect
                                                                              :mod (MRPNode-8 / various)
                                                                              :part-of (MRPNode-9 / program)))
                                             :topic MRPNode-7))
           :purpose (MRPNode-10 / achieve-01
                                :ARG0 MRPNode-1
                                :ARG1 (MRPNode-11 / this)))

# ::id 419
# ::snt However an object cannot be cast to a class which is no relative of it.
# ::tok However an object cannot be cast to a class which is no relative of it .
# ::collapsed instance nodes 0
(MRPNode-0 / have-concession-91
           :ARG1 (MRPNode-1 / possible-01
                            :polarity (MRPNode-2 / -)
                            :ARG1 (MRPNode-3 / cast-01
                                             :ARG1 (MRPNode-4 / object
                                                              :ARG1-of (MRPNode-5 / related-04
                                                                                  :polarity (MRPNode-6 / -)
                                                                                  :ARG2 (MRPNode-7 / class)))
                                             :ARG2 MRPNode-7)))

# ::id 420
# ::snt This means that inheritance is used when types have common factors and these would be put into the superclass.
# ::tok This means that inheritance is used when types have common factors and these would be put into the superclass .
# ::collapsed instance nodes 1
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / this)
           :ARG2 (MRPNode-2 / use-01
                            :ARG1 (MRPNode-3 / inherit-01)
                            :time (MRPNode-4 / and
                                             :op1 (MRPNode-5 / have-03
                                                             :ARG1 (MRPNode-6 / common_factors_2)
                                                             :ARG0 (MRPNode-7 / type))
                                             :op2 (MRPNode-8 / put-01
                                                             :ARG1 MRPNode-7
                                                             :ARG2 (MRPNode-9 / superclass)))))

# ::id 421
# ::snt This means that inheritance is used when types have common factors and these would be put into the superclass.
# ::tok This means that inheritance is used when types have common factors and these would be put into the superclass .
# ::collapsed instance nodes 1
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / this)
           :ARG2 (MRPNode-2 / use-01
                            :ARG1 (MRPNode-3 / inherit-01)
                            :time (MRPNode-4 / and
                                             :op1 (MRPNode-5 / have-03
                                                             :ARG1 (MRPNode-6 / common_factors_2)
                                                             :ARG0 (MRPNode-7 / type))
                                             :op2 (MRPNode-8 / put-01
                                                             :ARG1 MRPNode-7
                                                             :ARG2 (MRPNode-9 / superclass)))))

# ::id 422
# ::snt The way that a 'term' is defined depends on the application.
# ::tok The way that a ' term ' is defined depends on the application .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / way
                            :manner-of (MRPNode-2 / define-01
                                                  :ARG1 (MRPNode-3 / term)))
           :ARG1 (MRPNode-4 / application))

# ::id 423
# ::snt "Therefore, the ""program"" is the optimal plan for action that is produced."
# ::tok " Therefore , the " " program " " is the optimal plan for action that is produced . "
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / plan-01
                            :ARG1 (MRPNode-2 / act-02)
                            :mod (MRPNode-3 / program)
                            :mod (MRPNode-4 / optimal)
                            :ARG1-of (MRPNode-5 / produce-01
                                                :ARG1 MRPNode-2)))

# ::id 424
# ::snt Without a proof of correctness, such an algorithm is likely to fail.
# ::tok Without a proof of correctness , such an algorithm is likely to fail .
# ::collapsed instance nodes 0
(MRPNode-0 / likely-01
           :ARG1 (MRPNode-1 / fail-01
                            :ARG1 (MRPNode-2 / algorithm
                                             :mod (MRPNode-3 / such)))
           :condition (MRPNode-4 / prove-01
                                 :polarity (MRPNode-5 / -)
                                 :ARG1 (MRPNode-6 / correct-02)))

# ::id 425
# ::snt The other method is the top down approach which is a method that combines memorization and recursion.
# ::tok The other method is the top down approach which is a method that combines memorization and recursion .
# ::collapsed instance nodes 1
(MRPNode-0 / method
           :mod (MRPNode-1 / other)
           :domain (MRPNode-2 / down_approach_2)
           :ARG0-of (MRPNode-3 / combine-01
                               :ARG1 (MRPNode-4 / and
                                                :op2 (MRPNode-5 / recursion))
                               :ARG1 (MRPNode-6 / memorization)))

# ::id 426
# ::snt Thus, the program is the best plan for action that is produced.
# ::tok Thus , the program is the best plan for action that is produced .
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / plan-01
                            :ARG1 (MRPNode-2 / act-02)
                            :ARG1-of (MRPNode-3 / program)
                            :ARG1-of (MRPNode-4 / have-degree-91
                                                :ARG3 (MRPNode-5 / most)
                                                :ARG2 (MRPNode-6 / good-02))
                            :ARG1-of MRPNode-6
                            :ARG1-of (MRPNode-7 / produce-01)))

# ::id 427
# ::snt This can be useful when the number of times a word appears is not considered important.
# ::tok This can be useful when the number of times a word appears is not considered important .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / useful-05
                            :ARG1 (MRPNode-2 / this))
           :condition (MRPNode-3 / consider-01
                                 :polarity (MRPNode-4 / -)
                                 :ARG1 (MRPNode-5 / important-01
                                                  :ARG1 (MRPNode-6 / number
                                                                   :quant-of (MRPNode-7 / appear-01
                                                                                        :ARG1 (MRPNode-8 / word))))))

# ::id 428
# ::snt Then, using this, the best overall path can be found, thereby demonstrating the dynamic programming principle.
# ::tok Then , using this , the best overall path can be found , thereby demonstrating the dynamic programming principle .
# ::collapsed instance nodes 6
(MRPNode-0 / cause-01
           :ARG1 (MRPNode-1 / possible-01
                            :ARG1 (MRPNode-2 / find-01
                                             :ARG1 (MRPNode-3 / best_overall_path_5)
                                             :time (MRPNode-4 / then)
                                             :manner (MRPNode-5 / use-01
                                                                :ARG1 (MRPNode-6 / this))))
           :ARG0 (MRPNode-7 / demonstrate-01
                            :ARG1 (MRPNode-8 / dynamic_programming_principle_3)))

# ::id 429
# ::snt To achieve this, the programmer has to note generalisations and similarities about various aspects of the program.
# ::tok To achieve this , the programmer has to note generalisations and similarities about various aspects of the program .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / program-01))
           :ARG2 (MRPNode-3 / note-01
                            :ARG0 MRPNode-1
                            :ARG1 (MRPNode-4 / and
                                             :op1 (MRPNode-5 / generalize-01)
                                             :op2 (MRPNode-6 / resemble-01
                                                             :ARG1 (MRPNode-7 / aspect
                                                                              :mod (MRPNode-8 / various)
                                                                              :part-of (MRPNode-9 / program)))
                                             :topic MRPNode-7))
           :purpose (MRPNode-10 / achieve-01
                                :ARG0 MRPNode-1
                                :ARG1 (MRPNode-11 / this)))

# ::id 430
# ::snt The further down an inheritance tree you get, the more specific the classes become.
# ::tok The further down an inheritance tree you get , the more specific the classes become .
# ::collapsed instance nodes 0
(MRPNode-0 / correlate-91
           :ARG1 (MRPNode-1 / more
                            :ARG3-of (MRPNode-2 / have-quant-91
                                                :ARG1 (MRPNode-3 / tree
                                                                 :mod (MRPNode-4 / get-05
                                                                                 :ARG0 (MRPNode-5 / you)
                                                                                 :ARG2 (MRPNode-6 / down))
                                                                 :mod (MRPNode-7 / inherit-01))))
           :ARG2 (MRPNode-8 / more
                            :ARG3-of (MRPNode-9 / have-quant-91
                                                :ARG1 (MRPNode-10 / specific-02
                                                                  :ARG1 (MRPNode-11 / class))
                                                :ARG1 (MRPNode-12 / become-01))))

# ::id 431
# ::snt The easiest way to look at inheritance is as an “…is a kind of” relationship.
# ::tok The easiest way to look at inheritance is as an " ... is a kind of " relationship .
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :ARG1-of (MRPNode-1 / simple-02)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG3 (MRPNode-3 / more))
           :domain (MRPNode-4 / look-01
                              :ARG1 (MRPNode-5 / inherit-01))
           :domain (MRPNode-6 / relation-03
                              :mod (MRPNode-7 / kind)))

# ::id 432
# ::snt This means that inheritance is used when types have common factors and these would be put into the superclass.
# ::tok This means that inheritance is used when types have common factors and these would be put into the superclass .
# ::collapsed instance nodes 1
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / this)
           :ARG2 (MRPNode-2 / use-01
                            :ARG1 (MRPNode-3 / inherit-01)
                            :time (MRPNode-4 / and
                                             :op1 (MRPNode-5 / have-03
                                                             :ARG1 (MRPNode-6 / common_factors_2)
                                                             :ARG0 (MRPNode-7 / type))
                                             :op2 (MRPNode-8 / put-01
                                                             :ARG1 MRPNode-7
                                                             :ARG2 (MRPNode-9 / superclass)))))

# ::id 433
# ::snt This means that inheritance is used when types have common factors and these would be put into the superclass.
# ::tok This means that inheritance is used when types have common factors and these would be put into the superclass .
# ::collapsed instance nodes 1
(MRPNode-0 / mean-01
           :ARG1 (MRPNode-1 / this)
           :ARG2 (MRPNode-2 / use-01
                            :ARG1 (MRPNode-3 / inherit-01)
                            :time (MRPNode-4 / and
                                             :op1 (MRPNode-5 / have-03
                                                             :ARG1 (MRPNode-6 / common_factors_2)
                                                             :ARG0 (MRPNode-7 / type))
                                             :op2 (MRPNode-8 / put-01
                                                             :ARG1 MRPNode-7
                                                             :ARG2 (MRPNode-9 / superclass)))))

# ::id 434
# ::snt Spain Princess Testifies in Historic Fraud Probe
# ::tok Spain Princess Testifies in Historic Fraud Probe
# ::collapsed instance nodes 9
(MRPNode-0 / testify-01
           :ARG1 (MRPNode-1 / historic_fraud_probe_5)
           :ARG0 (MRPNode-2 / spain_princess_6))

# ::id 435
# ::snt Senate confirms Obama nominee to key appeals court
# ::tok Senate confirms Obama nominee to key appeals court
# ::collapsed instance nodes 2
(MRPNode-0 / confirm-01
           :ARG1 (MRPNode-1 / nominate-01
                            :ARG1 (MRPNode-2 / person
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / obama)))
                            :ARG2 (MRPNode-5 / key_appeals_court_3))
           :ARG0 (MRPNode-6 / government-organization
                            :name (MRPNode-7 / name
                                             :op1 (MRPNode-8 / senate))))

# ::id 436
# ::snt U.N. rights chief presses Egypt on Mursi detention
# ::tok U.N. rights chief presses Egypt on Mursi detention
# ::collapsed instance nodes 0
(MRPNode-0 / press-01
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / egypt)))
           :ARG0 (MRPNode-4 / person
                            :ARG0-of (MRPNode-5 / have-org-role-91
                                                :ARG1 (MRPNode-6 / organization
                                                                 :name (MRPNode-7 / name
                                                                                  :op1 (MRPNode-8 / u.n.)))
                                                :ARG2 (MRPNode-9 / chief
                                                                 :purpose (MRPNode-10 / right-05))))
           :ARG2 (MRPNode-11 / detain-01
                             :ARG1 (MRPNode-12 / person
                                               :name (MRPNode-13 / name
                                                                 :op1 (MRPNode-14 / mursi)))))

# ::id 437
# ::snt US Senate confirms Janet Yellen as US Federal Reserve chief
# ::tok US Senate confirms Janet Yellen as US Federal Reserve chief
# ::collapsed instance nodes 5
(MRPNode-0 / confirm-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / name
                                                :op1 (MRPNode-3 / janet)
                                                :op2 (MRPNode-4 / yellen))
                            :ARG0-of (MRPNode-5 / have-org-role-91
                                                :ARG2 (MRPNode-6 / government-organization
                                                                 :name (MRPNode-7 / name
                                                                                  :op1 (MRPNode-8 / federal)
                                                                                  :op3 (MRPNode-9 / reserve)))
                                                :ARG2 (MRPNode-10 / chief)))
           :ARG0 (MRPNode-11 / us_senate_6))

# ::id 438
# ::snt Syrian Rebel Groups Battle Each Other in North
# ::tok Syrian Rebel Groups Battle Each Other in North
# ::collapsed instance nodes 6
(MRPNode-0 / battle-01
           :ARG1 (MRPNode-1 / syrian_7)
           :location (MRPNode-2 / north))

# ::id 439
# ::snt Rocks, Tear Gas Fly as Thai Protests Heat Up
# ::tok Rocks , Tear Gas Fly as Thai Protests Heat Up
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / rock)
           :op2 (MRPNode-2 / flame-01
                           :ARG1 (MRPNode-3 / rain-01
                                            :mode (MRPNode-4 / imperative)))
           :op3 (MRPNode-5 / heat-01
                           :mode (MRPNode-6 / imperative)
                           :ARG1 (MRPNode-7 / protest-01
                                            :ARG1 (MRPNode-8 / country
                                                             :name (MRPNode-9 / name
                                                                              :op1 (MRPNode-10 / thailand))))
                           :ARG0 (MRPNode-11 / you)))

# ::id 440
# ::snt Boston bombing suspect buried in Virginia
# ::tok Boston bombing suspect buried in Virginia
# ::collapsed instance nodes 0
(MRPNode-0 / bury-01
           :ARG1 (MRPNode-1 / person
                            :ARG2-of (MRPNode-2 / bomb-01
                                                :location (MRPNode-3 / city
                                                                     :name (MRPNode-4 / name
                                                                                      :op1 (MRPNode-5 / boston))))
                            :ARG2-of (MRPNode-6 / suspect-01))
           :ARG2 (MRPNode-7 / state
                            :name (MRPNode-8 / name
                                             :op1 (MRPNode-9 / virginia))))

# ::id 441
# ::snt Six dead in Philippine restaurant blast
# ::tok Six dead in Philippine restaurant blast
# ::collapsed instance nodes 0
(MRPNode-0 / die-01
           :ARG1 (MRPNode-1 / person
                            :quant (MRPNode-2 / 6))
           :location (MRPNode-3 / restaurant
                                :location (MRPNode-4 / country
                                                     :name (MRPNode-5 / name
                                                                      :op1 (MRPNode-6 / philippines)))))

# ::id 442
# ::snt China army newspaper hits out at US's PRISM programme
# ::tok China army newspaper hits out at US 's PRISM programme
# ::collapsed instance nodes 0
(MRPNode-0 / go-out-17
           :ARG1 (MRPNode-1 / newspaper
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / army)))
           :ARG1 (MRPNode-4 / program
                            :poss (MRPNode-5 / country
                                             :name (MRPNode-6 / name
                                                              :op1 (MRPNode-7 / china)))
                            :poss (MRPNode-8 / country
                                             :name (MRPNode-9 / name
                                                              :op1 (MRPNode-10 / us)))))

# ::id 443
# ::snt Two killed in Bahrain car explosion
# ::tok Two killed in Bahrain car explosion
# ::collapsed instance nodes 0
(MRPNode-0 / kill-01
           :ARG1 (MRPNode-1 / person
                            :quant (MRPNode-2 / 2))
           :ARG1-of (MRPNode-3 / cause-01
                               :ARG0 (MRPNode-4 / explode-01
                                                :ARG1 (MRPNode-5 / car
                                                                 :location (MRPNode-6 / country
                                                                                      :name (MRPNode-7 / name
                                                                                                       :op1 (MRPNode-8 / bahrain)))))))

# ::id 444
# ::snt Russia warns it will respond if interests attacked in Ukraine
# ::tok Russia warns it will respond if interests attacked in Ukraine
# ::collapsed instance nodes 0
(MRPNode-0 / warn-01
           :ARG1 (MRPNode-1 / respond-01
                            :condition (MRPNode-2 / attack-01
                                                  :ARG1 (MRPNode-3 / interest)
                                                  :location (MRPNode-4 / country
                                                                       :name (MRPNode-5 / name
                                                                                        :op1 (MRPNode-6 / ukraine))))
                            :ARG0 (MRPNode-7 / country
                                             :name (MRPNode-8 / name
                                                              :op1 (MRPNode-9 / russia))))
           :ARG0 MRPNode-7)

# ::id 445
# ::snt Couple marry in the UK's first Scientology wedding
# ::tok Couple marry in the UK 's first Scientology wedding
# ::collapsed instance nodes 0
(MRPNode-0 / marry-01
           :ARG1 (MRPNode-1 / couple)
           :ARG2 (MRPNode-2 / wed-01
                            :mod (MRPNode-3 / ordinal-entity
                                            :value (MRPNode-4 / 1))
                            :mod (MRPNode-5 / city
                                            :name (MRPNode-6 / name
                                                             :op1 (MRPNode-7 / scientology))
                                            :location (MRPNode-8 / country
                                                                 :name (MRPNode-9 / name
                                                                                  :op1 (MRPNode-10 / uk))))))

# ::id 446
# ::snt Russian opposition leader under house arrest
# ::tok Russian opposition leader under house arrest
# ::collapsed instance nodes 0
(MRPNode-0 / arrest-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / country
                                                :name (MRPNode-3 / name
                                                                 :op1 (MRPNode-4 / russia)))
                            :ARG0-of (MRPNode-5 / lead-02
                                                :ARG1 (MRPNode-6 / oppose-01)))
           :location (MRPNode-7 / house))

# ::id 447
# ::snt Senate confirms Janet Yellen as chair of US Federal Reserve
# ::tok Senate confirms Janet Yellen as chair of US Federal Reserve
# ::collapsed instance nodes 0
(MRPNode-0 / confirm-01
           :ARG1 (MRPNode-1 / have-org-role-91
                            :ARG2 (MRPNode-2 / chairman)
                            :ARG1 (MRPNode-3 / government-organization
                                             :name (MRPNode-4 / name
                                                              :op1 (MRPNode-5 / us)
                                                              :op2 (MRPNode-6 / federal)
                                                              :op3 (MRPNode-7 / reserve)))
                            :ARG0 (MRPNode-8 / person
                                             :name (MRPNode-9 / name
                                                              :op1 (MRPNode-10 / janet)
                                                              :op2 (MRPNode-11 / yellen))))
           :ARG0 (MRPNode-12 / government-organization
                             :name (MRPNode-13 / name
                                               :op1 (MRPNode-14 / senate)))
           :ARG2 MRPNode-8)

# ::id 448
# ::snt Venezuela lawmakers brawl amid election tensions
# ::tok Venezuela lawmakers brawl amid election tensions
# ::collapsed instance nodes 5
(MRPNode-0 / duel-01
           :ARG0 (MRPNode-1 / election_tensions_2)
           :ARG0 (MRPNode-2 / venezuela_5))

# ::id 449
# ::snt North Korea Warns Foreigners in South, Advising Evacuation
# ::tok North Korea Warns Foreigners in South , Advising Evacuation
# ::collapsed instance nodes 1
(MRPNode-0 / war-01
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / north)
                                             :op2 (MRPNode-4 / korea)))
           :ARG1 (MRPNode-5 / person
                            :ARG0-of (MRPNode-6 / country
                                                :name (MRPNode-7 / name
                                                                 :op1 (MRPNode-8 / south)
                                                                 :op2 (MRPNode-9 / korea)))
                            :ARG0-of (MRPNode-10 / intervene-01
                                                 :ARG1 (MRPNode-11 / evacuate-01
                                                                   :ARG1 (MRPNode-12 / foreigners_2)))))

# ::id 450
# ::snt Israel confirms strike on Syria targeted weapons
# ::tok Israel confirms strike on Syria targeted weapons
# ::collapsed instance nodes 0
(MRPNode-0 / confirm-01
           :ARG1 (MRPNode-1 / strike-01
                            :ARG1 (MRPNode-2 / country
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / syria)))
                            :ARG2 (MRPNode-5 / target-01
                                             :ARG1 (MRPNode-6 / weapon))
                            :ARG0 (MRPNode-7 / country
                                             :name (MRPNode-8 / name
                                                              :op1 (MRPNode-9 / israel))))
           :ARG0 MRPNode-7)

# ::id 451
# ::snt Death toll in Syria now tops 100,000
# ::tok Death toll in Syria now tops 100,000
# ::collapsed instance nodes 0
(MRPNode-0 / top-01
           :arg2 (MRPNode-1 / 100000)
           :ARG1 (MRPNode-2 / toll
                            :mod (MRPNode-3 / die-01)
                            :location (MRPNode-4 / country
                                                 :name (MRPNode-5 / name
                                                                  :op1 (MRPNode-6 / syria))))
           :time (MRPNode-7 / now))

# ::id 452
# ::snt Iran Nuclear Talks Enter Third Day
# ::tok Iran Nuclear Talks Enter Third Day
# ::collapsed instance nodes 1
(MRPNode-0 / enter-01
           :ARG1 (MRPNode-1 / day
                            :ord (MRPNode-2 / country
                                            :name (MRPNode-3 / name
                                                             :op1 (MRPNode-4 / iran)))
                            :ord (MRPNode-5 / ordinal-entity
                                            :value (MRPNode-6 / 3)))
           :ARG0 (MRPNode-7 / nuclear_talks_2))

# ::id 453
# ::snt Jurors find Jodi Arias eligible for death penalty
# ::tok Jurors find Jodi Arias eligible for death penalty
# ::collapsed instance nodes 0
(MRPNode-0 / find-02
           :ARG1 (MRPNode-1 / qualify-02
                            :ARG1 (MRPNode-2 / person
                                             :ARG1-of (MRPNode-3 / name
                                                                 :op1 (MRPNode-4 / jodi)
                                                                 :op2 (MRPNode-5 / arias))
                                             :ARG1-of (MRPNode-6 / penalize-01
                                                                 :manner (MRPNode-7 / die-01)))
                            :ARG2 (MRPNode-8 / cause-01
                                             :ARG1 MRPNode-2
                                             :ARG0 MRPNode-6))
           :ARG0 (MRPNode-9 / juror))

# ::id 454
# ::snt Over 100 dead as typhoon slams central Philippines
# ::tok Over 100 dead as typhoon slams central Philippines
# ::collapsed instance nodes 0
(MRPNode-0 / slam-02
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / philippines))
                            :part (MRPNode-4 / center))
           :ARG0 (MRPNode-5 / typhoon)
           :ARG1 (MRPNode-6 / die-01
                            :ARG1 (MRPNode-7 / person
                                             :quant (MRPNode-8 / over
                                                               :op1 (MRPNode-9 / 100)))))

# ::id 455
# ::snt US Supreme Court limits president's recess appointments power
# ::tok US Supreme Court limits president 's recess appointments power
# ::collapsed instance nodes 6
(MRPNode-0 / limit-01
           :ARG1 (MRPNode-1 / power-01
                            :ARG1 (MRPNode-2 / person
                                             :ARG0-of (MRPNode-3 / have-org-role-91
                                                                 :ARG2 (MRPNode-4 / president)))
                            :ARG2 (MRPNode-5 / recess))
           :ARG0 (MRPNode-6 / us_supreme_court_7))

# ::id 456
# ::snt What makes India vote? Jaipur Lit Fest debates
# ::tok What makes India vote ? Jaipur Lit Fest debates
# ::collapsed instance nodes 0
(MRPNode-0 / debate-01
           :ARG0 (MRPNode-1 / amr-unknown
                            :ARG0-of (MRPNode-2 / make-02
                                                :ARG1 (MRPNode-3 / vote-01
                                                                 :ARG0 (MRPNode-4 / country
                                                                                  :name (MRPNode-5 / name
                                                                                                   :op1 (MRPNode-6 / india))))))
           :ARG0 (MRPNode-7 / team
                            :name (MRPNode-8 / name
                                             :op1 (MRPNode-9 / jaipur)
                                             :op2 (MRPNode-10 / fest))))

# ::id 457
# ::snt Hamas Urges Hizbullah to Pull Fighters Out of Syria
# ::tok Hamas Urges Hizbullah to Pull Fighters Out of Syria
# ::collapsed instance nodes 0
(MRPNode-0 / urge-01
           :ARG1 (MRPNode-1 / organization
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / hamas)))
           :ARG0 (MRPNode-4 / person
                            :ARG0-of (MRPNode-5 / name
                                                :op1 (MRPNode-6 / hizbullah)))
           :ARG2 (MRPNode-7 / pull-out-02
                            :ARG0 MRPNode-4
                            :ARG1 (MRPNode-8 / person
                                             :ARG0-of (MRPNode-9 / country
                                                                 :name (MRPNode-10 / name
                                                                                   :op1 (MRPNode-11 / syria)))
                                             :ARG0-of (MRPNode-12 / fight-01))))

# ::id 458
# ::snt Stocks edge lower following retail earnings
# ::tok Stocks edge lower following retail earnings
# ::collapsed instance nodes 1
(MRPNode-0 / verge-01
           :ARG1 (MRPNode-1 / low-04
                            :ARG2-of (MRPNode-2 / have-degree-91
                                                :ARG3 (MRPNode-3 / more)
                                                :ARG1 (MRPNode-4 / stock)))
           :ARG1 MRPNode-4
           :ARG1-of (MRPNode-5 / follow-01
                               :ARG2 (MRPNode-6 / retail_earnings_2)))

# ::id 459
# ::snt Mt Gox reveals 200,000 'forgotten' bitcoin haul
# ::tok Mt Gox reveals 200,000 ' forgotten ' bitcoin haul
# ::collapsed instance nodes 0
(MRPNode-0 / reveal-01
           :ARG1 (MRPNode-1 / bitcoin
                            :quant (MRPNode-2 / 200000)
                            :ARG1-of (MRPNode-3 / forget-01))
           :ARG0 (MRPNode-4 / person
                            :name (MRPNode-5 / name
                                             :op1 (MRPNode-6 / mt)
                                             :op2 (MRPNode-7 / gox))))

# ::id 460
# ::snt Chinese lunar rover lands on moon
# ::tok Chinese lunar rover lands on moon
# ::collapsed instance nodes 4
(MRPNode-0 / land-01
           :ARG1 (MRPNode-1 / chinese_lunar_rover_5)
           :location (MRPNode-2 / moon))

# ::id 461
# ::snt Spain approves new restrictive abortion law
# ::tok Spain approves new restrictive abortion law
# ::collapsed instance nodes 3
(MRPNode-0 / approve-01
           :ARG1 (MRPNode-1 / new_restrictive_abortion_law_4)
           :ARG0 (MRPNode-2 / country
                            :name (MRPNode-3 / name
                                             :op1 (MRPNode-4 / spain))))

# ::id 462
# ::snt German ambassador's Athens residence shot at
# ::tok German ambassador 's Athens residence shot at
# ::collapsed instance nodes 3
(MRPNode-0 / shoot-02
           :ARG1 (MRPNode-1 / reside-01
                            :ARG0 (MRPNode-2 / person
                                             :ARG0-of (MRPNode-3 / have-org-role-91
                                                                 :ARG1 (MRPNode-4 / german_ambassador_4)))
                            :location (MRPNode-5 / city
                                                 :name (MRPNode-6 / name
                                                                  :op1 (MRPNode-7 / athens)))))

# ::id 463
# ::snt Napolitano elected for second term as Italy president
# ::tok Napolitano elected for second term as Italy president
# ::collapsed instance nodes 0
(MRPNode-0 / elect-01
           :ARG1 (MRPNode-1 / person
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / napolitano))
                            :ARG0-of (MRPNode-4 / have-org-role-91
                                                :ARG1 (MRPNode-5 / country
                                                                 :name (MRPNode-6 / name
                                                                                  :op1 (MRPNode-7 / italy)))
                                                :ARG2 (MRPNode-8 / president)))
           :ARG2 (MRPNode-9 / term
                            :ord (MRPNode-10 / ordinal-entity
                                             :value (MRPNode-11 / 2))))

# ::id 464
# ::snt North Korea says to put US citizen on trial
# ::tok North Korea says to put US citizen on trial
# ::collapsed instance nodes 3
(MRPNode-0 / say-01
           :ARG1 (MRPNode-1 / put-01
                            :ARG1 (MRPNode-2 / try-02
                                             :ARG1 (MRPNode-3 / us_citizen_4))
                            :ARG1 MRPNode-3
                            :ARG0 (MRPNode-4 / country
                                             :name (MRPNode-5 / name
                                                              :op1 (MRPNode-6 / north)
                                                              :op2 (MRPNode-7 / korea))))
           :ARG0 MRPNode-4)

# ::id 465
# ::snt Mandela spends third day in hospital
# ::tok Mandela spends third day in hospital
# ::collapsed instance nodes 0
(MRPNode-0 / spend-02
           :ARG1 (MRPNode-1 / day
                            :ord (MRPNode-2 / ordinal-entity
                                            :value (MRPNode-3 / 3)))
           :ARG0 (MRPNode-4 / person
                            :name (MRPNode-5 / name
                                             :op1 (MRPNode-6 / mandela)))
           :ARG2 (MRPNode-7 / be-located-at-91
                            :ARG1 MRPNode-4
                            :ARG2 (MRPNode-8 / hospital)))

# ::id 466
# ::snt Murray ends 77-year wait for British win
# ::tok Murray ends 77 - year wait for British win
# ::collapsed instance nodes 0
(MRPNode-0 / end-01
           :ARG1 (MRPNode-1 / wait-01
                            :ARG2 (MRPNode-2 / win-01
                                             :ARG0 (MRPNode-3 / country
                                                              :name (MRPNode-4 / name
                                                                               :op1 (MRPNode-5 / britain))))
                            :duration (MRPNode-6 / temporal-quantity
                                                 :quant (MRPNode-7 / 15)
                                                 :quant (MRPNode-8 / year)))
           :ARG0 (MRPNode-9 / person
                            :name (MRPNode-10 / name
                                              :op1 (MRPNode-11 / murray))))

# ::id 467
# ::snt Pope calls for action on climate change in draft encyclical
# ::tok Pope calls for action on climate change in draft encyclical
# ::collapsed instance nodes 0
(MRPNode-0 / call-03
           :ARG1 (MRPNode-1 / act-02
                            :ARG1 (MRPNode-2 / change-01
                                             :ARG1 (MRPNode-3 / climate)))
           :ARG0 (MRPNode-4 / person
                            :name (MRPNode-5 / name
                                             :op1 (MRPNode-6 / pope)))
           :location (MRPNode-7 / encyclical
                                :ARG1-of (MRPNode-8 / draft-01)))

# ::id 468
# ::snt Who Is Jihadi John?
# ::tok Who Is Jihadi John ?
# ::collapsed instance nodes 0
(MRPNode-0 / person
           :name (MRPNode-1 / name
                            :op1 (MRPNode-2 / jihadi)
                            :op2 (MRPNode-3 / john))
           :domain (MRPNode-4 / amr-unknown))

# ::id 469
# ::snt Iran, IAEA Officials Meet Ahead of March Nuclear Deadline
# ::tok Iran , IAEA Officials Meet Ahead of March Nuclear Deadline
# ::collapsed instance nodes 0
(MRPNode-0 / meet-03
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / have-org-role-91
                                                :ARG1 (MRPNode-3 / organization
                                                                 :name (MRPNode-4 / name
                                                                                  :op1 (MRPNode-5 / iaea)))
                                                :ARG2 (MRPNode-6 / official)))
           :time (MRPNode-7 / ahead
                            :op1 (MRPNode-8 / date-entity
                                            :month (MRPNode-9 / 3)))
           :ARG0 (MRPNode-10 / country
                             :name (MRPNode-11 / name
                                               :op1 (MRPNode-12 / iran))))

# ::id 470
# ::snt U.S., EU Widen Sanctions On Russia
# ::tok U.S. , EU Widen Sanctions On Russia
# ::collapsed instance nodes 0
(MRPNode-0 / sanction-02
           :ARG1 (MRPNode-1 / country)
           :ARG0 (MRPNode-2 / organization
                            :name (MRPNode-3 / name
                                             :op1 (MRPNode-4 / eu)))
           :ARG1-of (MRPNode-5 / country
                               :name (MRPNode-6 / name
                                                :op1 (MRPNode-7 / russia)))
           :ARG1-of (MRPNode-8 / name
                               :op1 (MRPNode-9 / u.s.)))

# ::id 471
# ::snt US Attorney General Holder resigns
# ::tok US Attorney General Holder resigns
# ::collapsed instance nodes 1
(MRPNode-0 / resign-01
           :ARG0 (MRPNode-1 / person
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / holder))
                            :ARG0-of (MRPNode-4 / have-org-role-91
                                                :ARG1 (MRPNode-5 / country
                                                                 :name (MRPNode-6 / name
                                                                                  :op1 (MRPNode-7 / us)))
                                                :ARG2 (MRPNode-8 / attorney_general_2))))

# ::id 472
# ::snt AbbVie Sours on $55B Shire Deal After Tax Changes
# ::tok AbbVie Sours on $ 55B Shire Deal After Tax Changes
# ::collapsed instance nodes 0
(MRPNode-0 / support-01
           :ARG1 (MRPNode-1 / deal-01
                            :time (MRPNode-2 / after
                                             :op1 (MRPNode-3 / change-01
                                                             :ARG1 (MRPNode-4 / tax-01)))
                            :ARG2 (MRPNode-5 / monetary-quantity
                                             :quant (MRPNode-6 / 500000000000)
                                             :quant (MRPNode-7 / dollar))
                            :ARG2 (MRPNode-8 / name
                                             :op1 (MRPNode-9 / abbvie)))
           :ARG0 (MRPNode-10 / person))

# ::id 473
# ::snt Hawaii preps for first hurricane in 22 years
# ::tok Hawaii preps for first hurricane in 22 years
# ::collapsed instance nodes 0
(MRPNode-0 / report-01
           :ARG1 (MRPNode-1 / hurricane
                            :ord (MRPNode-2 / ordinal-entity
                                            :value (MRPNode-3 / 1)
                                            :range (MRPNode-4 / temporal-quantity
                                                              :quant (MRPNode-5 / 22)
                                                              :unit (MRPNode-6 / year))))
           :ARG0 (MRPNode-7 / state
                            :name (MRPNode-8 / name
                                             :op1 (MRPNode-9 / hawaii))))

# ::id 474
# ::snt Oil falls in Asian trade
# ::tok Oil falls in Asian trade
# ::collapsed instance nodes 0
(MRPNode-0 / fall-01
           :ARG1 (MRPNode-1 / oil)
           :location (MRPNode-2 / trade-01
                                :location (MRPNode-3 / continent
                                                     :name (MRPNode-4 / name
                                                                      :op1 (MRPNode-5 / asia)))))

# ::id 475
# ::snt Driver backs into stroller with child, drives off
# ::tok Driver backs into stroller with child , drives off
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / back-off-11
                           :ARG1 (MRPNode-2 / person
                                            :ARG0-of (MRPNode-3 / have-rel-role-91
                                                                :ARG2 (MRPNode-4 / child))))
           :op2 (MRPNode-5 / drive-01
                           :ARG0 MRPNode-2
                           :ARG1 (MRPNode-6 / person
                                            :ARG0-of (MRPNode-7 / drive-01))
                           :direction (MRPNode-8 / off)))

# ::id 476
# ::snt Uganda's president signs anti-gay bill
# ::tok Uganda 's president signs anti - gay bill
# ::collapsed instance nodes 0
(MRPNode-0 / sign-01
           :ARG1 (MRPNode-1 / bill
                            :ARG0-of (MRPNode-2 / oppose-01
                                                :ARG1 (MRPNode-3 / gay-01)))
           :ARG0 (MRPNode-4 / person
                            :ARG0-of (MRPNode-5 / have-org-role-91
                                                :ARG1 (MRPNode-6 / country
                                                                 :name (MRPNode-7 / name
                                                                                  :op1 (MRPNode-8 / uganda)))
                                                :ARG2 (MRPNode-9 / president))))

# ::id 477
# ::snt Silvio Berlusconi expelled from Italy's parliament
# ::tok Silvio Berlusconi expelled from Italy 's parliament
# ::collapsed instance nodes 0
(MRPNode-0 / expel-01
           :ARG1 (MRPNode-1 / person
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / silvio)
                                             :op2 (MRPNode-4 / berlusconi)))
           :ARG2 (MRPNode-5 / government-organization
                            :poss (MRPNode-6 / country
                                             :name (MRPNode-7 / name
                                                              :op1 (MRPNode-8 / italy)))
                            :name (MRPNode-9 / name
                                             :op1 (MRPNode-10 / parliament))))

# ::id 478
# ::snt Hosni Mubarak retrial adjourned until 8 June
# ::tok Hosni Mubarak retrial adjourned until 8 June
# ::collapsed instance nodes 0
(MRPNode-0 / uphold-01
           :ARG1 (MRPNode-1 / marry-01
                            :ARG1 (MRPNode-2 / person
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / hosni)
                                                              :op2 (MRPNode-5 / mubarak))))
           :time (MRPNode-6 / until
                            :op1 (MRPNode-7 / date-entity
                                            :month (MRPNode-8 / 6)
                                            :day (MRPNode-9 / 8))))

# ::id 479
# ::snt Egypt protesters defy cabinet threat to end sit-ins
# ::tok Egypt protesters defy cabinet threat to end sit - ins
# ::collapsed instance nodes 4
(MRPNode-0 / defy-01
           :ARG1 (MRPNode-1 / threaten-01
                            :ARG0 (MRPNode-2 / end-01
                                             :ARG1 (MRPNode-3 / meet-up-04))
                            :ARG0 (MRPNode-4 / government-organization
                                             :name (MRPNode-5 / name
                                                              :op1 (MRPNode-6 / cabinet))))
           :ARG0 (MRPNode-7 / egypt_protesters_5))

# ::id 480
# ::snt Qatar's emir hands power to his son
# ::tok Qatar 's emir hands power to his son
# ::collapsed instance nodes 0
(MRPNode-0 / hand-01
           :ARG1 (MRPNode-1 / power)
           :ARG0 (MRPNode-2 / person
                            :ARG0-of (MRPNode-3 / have-rel-role-91
                                                :ARG1 (MRPNode-4 / country
                                                                 :name (MRPNode-5 / name
                                                                                  :op1 (MRPNode-6 / qatar)))
                                                :ARG2 (MRPNode-7 / son)))
           :ARG2 (MRPNode-8 / person
                            :ARG0-of (MRPNode-9 / have-rel-role-91
                                                :ARG2 (MRPNode-10 / emir))))

# ::id 481
# ::snt Egypt braces for 'Friday of anger' after carnage
# ::tok Egypt braces for ' Friday of anger ' after carnage
# ::collapsed instance nodes 0
(MRPNode-0 / accelerate-01
           :ARG1 (MRPNode-1 / country
                            :ARG1-of (MRPNode-2 / anger-01)
                            :name (MRPNode-3 / name
                                             :op1 (MRPNode-4 / egypt)))
           :time (MRPNode-5 / after
                            :op1 (MRPNode-6 / carnage))
           :time (MRPNode-7 / date-entity
                            :weekday (MRPNode-8 / friday)))

# ::id 482
# ::snt Red Sox Beat Tigers 5-2 to Advance to World Series
# ::tok Red Sox Beat Tigers 5-2 to Advance to World Series
# ::collapsed instance nodes 0
(MRPNode-0 / beat-03
           :ARG1 (MRPNode-1 / team
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / red)
                                             :op2 (MRPNode-4 / sox)))
           :ARG0 (MRPNode-5 / team
                            :name (MRPNode-6 / name
                                             :op1 (MRPNode-7 / tigers)))
           :ARG2 (MRPNode-8 / between
                            :op1 (MRPNode-9 / 5)
                            :op2 (MRPNode-10 / 2))
           :ARG2 (MRPNode-11 / advance-01
                             :ARG4 (MRPNode-12 / game
                                               :name (MRPNode-13 / name
                                                                 :op1 (MRPNode-14 / world)
                                                                 :op2 (MRPNode-15 / series)))))

# ::id 483
# ::snt China lands Jade Rabbit robot rover on Moon
# ::tok China lands Jade Rabbit robot rover on Moon
# ::collapsed instance nodes 0
(MRPNode-0 / land-01
           :ARG1 (MRPNode-1 / rover
                            :mod (MRPNode-2 / robot)
                            :name (MRPNode-3 / name
                                             :op1 (MRPNode-4 / china)))
           :ARG0 (MRPNode-5 / country)
           :location (MRPNode-6 / moon
                                :name (MRPNode-7 / name
                                                 :op1 (MRPNode-8 / jade)
                                                 :op2 (MRPNode-9 / rabbit))))

# ::id 484
# ::snt Ukrainian parliament dismisses president
# ::tok Ukrainian parliament dismisses president
# ::collapsed instance nodes 5
(MRPNode-0 / dismiss-02
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / have-org-role-91
                                                :ARG2 (MRPNode-3 / president)))
           :ARG0 (MRPNode-4 / ukrainian_parliament_6))

# ::id 485
# ::snt Captain of sunken South Korean ferry arrested
# ::tok Captain of sunken South Korean ferry arrested
# ::collapsed instance nodes 5
(MRPNode-0 / person
           :ARG0-of (MRPNode-1 / arrest-01
                               :ARG2 (MRPNode-2 / sunken_south_korean_ferry_6))
           :ARG0-of (MRPNode-3 / have-org-role-91
                               :ARG2 (MRPNode-4 / captain)))

# ::id 486
# ::snt Communist rebels ambush Philippine police, kill 7
# ::tok Communist rebels ambush Philippine police , kill 7
# ::collapsed instance nodes 7
(MRPNode-0 / and
           :op1 (MRPNode-1 / ambush-01
                           :ARG1 (MRPNode-2 / philippine_police_4)
                           :ARG0 (MRPNode-3 / communist_rebels_5))
           :op2 (MRPNode-4 / kill-01
                           :ARG0 MRPNode-3
                           :ARG1 (MRPNode-5 / person
                                            :quant (MRPNode-6 / 7))))

# ::id 487
# ::snt Woman dies while riding roller coaster in Texas
# ::tok Woman dies while riding roller coaster in Texas
# ::collapsed instance nodes 1
(MRPNode-0 / die-01
           :ARG1 (MRPNode-1 / woman)
           :time (MRPNode-2 / ride-01
                            :ARG0 MRPNode-1
                            :ARG1 (MRPNode-3 / roller_coaster_2)
                            :location (MRPNode-4 / state
                                                 :name (MRPNode-5 / name
                                                                  :op1 (MRPNode-6 / texas)))))

# ::id 488
# ::snt Nobel author Doris Lessing dies at 94
# ::tok Nobel author Doris Lessing dies at 94
# ::collapsed instance nodes 0
(MRPNode-0 / die-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / author-01
                                                :ARG1-of (MRPNode-3 / award
                                                                    :name (MRPNode-4 / name
                                                                                     :op1 (MRPNode-5 / nobel))))
                            :name (MRPNode-6 / name
                                             :op1 (MRPNode-7 / doris)
                                             :op2 (MRPNode-8 / lessing)))
           :time (MRPNode-9 / age-01
                            :ARG2 (MRPNode-10 / temporal-quantity
                                              :quant (MRPNode-11 / 94)
                                              :quant (MRPNode-12 / year))))

# ::id 489
# ::snt Twitter reports blocking in Venezuela
# ::tok Twitter reports blocking in Venezuela
# ::collapsed instance nodes 0
(MRPNode-0 / report-01
           :ARG1 (MRPNode-1 / block-01
                            :location (MRPNode-2 / country
                                                 :name (MRPNode-3 / name
                                                                  :op1 (MRPNode-4 / venezuela))))
           :ARG0 (MRPNode-5 / publication
                            :name (MRPNode-6 / name
                                             :op1 (MRPNode-7 / twitter))))

# ::id 490
# ::snt British stuntman fell to his death in wing suit mishap
# ::tok British stuntman fell to his death in wing suit mishap
# ::collapsed instance nodes 5
(MRPNode-0 / fall-07
           :ARG1 (MRPNode-1 / british_stuntman_5)
           :ARG1-of (MRPNode-2 / cause-01
                               :ARG1 MRPNode-1
                               :ARG0 (MRPNode-3 / suit_mishap_2))
           :ARG2 (MRPNode-4 / die-01
                            :ARG1 MRPNode-1))

# ::id 491
# ::snt Euro crisis is over, says France's Francois Hollande
# ::tok Euro crisis is over , says France 's Francois Hollande
# ::collapsed instance nodes 1
(MRPNode-0 / say-01
           :ARG1 (MRPNode-1 / over-01
                            :ARG1 (MRPNode-2 / euro_crisis_2))
           :ARG0 (MRPNode-3 / person
                            :name (MRPNode-4 / name
                                             :op1 (MRPNode-5 / francois)
                                             :op2 (MRPNode-6 / hollande))
                            :ARG0-of (MRPNode-7 / have-org-role-91
                                                :ARG1 (MRPNode-8 / country
                                                                 :name (MRPNode-9 / name
                                                                                  :op1 (MRPNode-10 / france))))))

# ::id 492
# ::snt White diamond breaks record in Hong Kong auction
# ::tok White diamond breaks record in Hong Kong auction
# ::collapsed instance nodes 0
(MRPNode-0 / break-01
           :ARG1 (MRPNode-1 / record)
           :ARG0 (MRPNode-2 / diamond
                            :ARG1-of (MRPNode-3 / white-03))
           :location (MRPNode-4 / city
                                :name (MRPNode-5 / name
                                                 :op1 (MRPNode-6 / hong)
                                                 :op2 (MRPNode-7 / kong))))

# ::id 493
# ::snt Treasury proposal sees 1.5% increase in income tax
# ::tok Treasury proposal sees 1.5 % increase in income tax
# ::collapsed instance nodes 0
(MRPNode-0 / see-01
           :ARG1 (MRPNode-1 / increase-01
                            :ARG1 (MRPNode-2 / tax-01
                                             :ARG3 (MRPNode-3 / income))
                            :ARG2 (MRPNode-4 / percentage-entity
                                             :value (MRPNode-5 / 1.5)))
           :ARG0 (MRPNode-6 / thing
                            :ARG1-of (MRPNode-7 / propose-01
                                                :ARG0 (MRPNode-8 / government-organization
                                                                 :name (MRPNode-9 / name
                                                                                  :op1 (MRPNode-10 / treasury))))))

# ::id 494
# ::snt PSNI failed RUC officers, tribunal told
# ::tok PSNI failed RUC officers , tribunal told
# ::collapsed instance nodes 0
(MRPNode-0 / tell-01
           :ARG1 (MRPNode-1 / fail-01
                            :ARG1 (MRPNode-2 / person
                                             :ARG0-of (MRPNode-3 / have-org-role-91
                                                                 :ARG1 (MRPNode-4 / have-org-role-91
                                                                                  :ARG1 (MRPNode-5 / organization
                                                                                                   :name (MRPNode-6 / name
                                                                                                                    :op1 (MRPNode-7 / ruc))))
                                                                 :ARG1 (MRPNode-8 / organization
                                                                                  :ARG1-of (MRPNode-9 / officer)
                                                                                  :name (MRPNode-10 / name
                                                                                                    :op1 (MRPNode-11 / psni)))
                                                                 :ARG2 (MRPNode-12 / officer))))
           :ARG0 (MRPNode-13 / tribunal))

# ::id 495
# ::snt Police helicopter crashes into Scottish pub
# ::tok Police helicopter crashes into Scottish pub
# ::collapsed instance nodes 4
(MRPNode-0 / crash-01
           :ARG1 (MRPNode-1 / police_helicopter_2)
           :location (MRPNode-2 / scottish_pub_4))

# ::id 496
# ::snt US ups pressure on Israel as UN demands Gaza truce
# ::tok US ups pressure on Israel as UN demands Gaza truce
# ::collapsed instance nodes 3
(MRPNode-0 / pressure-01
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / israel)))
           :ARG0 (MRPNode-4 / country
                            :name (MRPNode-5 / name
                                             :op1 (MRPNode-6 / us)))
           :ARG1-of (MRPNode-7 / cause-01
                               :ARG0 (MRPNode-8 / demand-01
                                                :ARG1 (MRPNode-9 / gaza_truce_4)
                                                :ARG0 (MRPNode-10 / organization
                                                                  :name (MRPNode-11 / name
                                                                                    :op1 (MRPNode-12 / un))))))

# ::id 497
# ::snt Australian PM says 'Very confident' signals are from black box
# ::tok Australian PM says ' Very confident ' signals are from black box
# ::collapsed instance nodes 6
(MRPNode-0 / say-01
           :ARG1 (MRPNode-1 / signal-07
                            :ARG1 (MRPNode-2 / confident-01
                                             :degree (MRPNode-3 / very))
                            :source (MRPNode-4 / box
                                               :ARG1-of (MRPNode-5 / black-04)))
           :ARG0 (MRPNode-6 / australian_7))

# ::id 498
# ::snt Philippe becomes king of Belgium
# ::tok Philippe becomes king of Belgium
# ::collapsed instance nodes 0
(MRPNode-0 / become-01
           :ARG1 (MRPNode-1 / person
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / philippe)))
           :ARG2 (MRPNode-4 / person
                            :ARG0-of (MRPNode-5 / have-org-role-91
                                                :ARG1 (MRPNode-6 / country
                                                                 :name (MRPNode-7 / name
                                                                                  :op1 (MRPNode-8 / belgium)))
                                                :ARG2 (MRPNode-9 / king))))

# ::id 499
# ::snt India anti-graft party takes charge in New Delhi
# ::tok India anti - graft party takes charge in New Delhi
# ::collapsed instance nodes 0
(MRPNode-0 / charge-05
           :ARG0 (MRPNode-1 / political-party
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / india))
                            :ARG0-of (MRPNode-4 / oppose-01
                                                :ARG1 (MRPNode-5 / graft)))
           :location (MRPNode-6 / city
                                :name (MRPNode-7 / name
                                                 :op1 (MRPNode-8 / new)
                                                 :op2 (MRPNode-9 / delhi))))

# ::id 500
# ::snt More than 100 injured in Texas plant blast
# ::tok More than 100 injured in Texas plant blast
# ::collapsed instance nodes 0
(MRPNode-0 / injure-01
           :ARG1 (MRPNode-1 / plant
                            :location (MRPNode-2 / state
                                                 :name (MRPNode-3 / name
                                                                  :op1 (MRPNode-4 / texas))))
           :ARG1 (MRPNode-5 / person
                            :quant (MRPNode-6 / more-than
                                              :op1 (MRPNode-7 / 100))))

# ::id 501
# ::snt UN court convicts 6 Bosnian Croats of atrocities
# ::tok UN court convicts 6 Bosnian Croats of atrocities
# ::collapsed instance nodes 7
(MRPNode-0 / convict-01
           :ARG1 (MRPNode-1 / 6_5
                            :quant (MRPNode-2 / 6))
           :ARG0 (MRPNode-3 / un_court_4)
           :ARG2 (MRPNode-4 / atrocity))

# ::id 502
# ::snt Saudi man with pressure cooker arrested at Detroit airport
# ::tok Saudi man with pressure cooker arrested at Detroit airport
# ::collapsed instance nodes 1
(MRPNode-0 / man
           :mod (MRPNode-1 / country
                           :name (MRPNode-2 / name
                                            :op1 (MRPNode-3 / saudi)
                                            :op2 (MRPNode-4 / arabia)))
           :ARG1-of (MRPNode-5 / arrest-01
                               :location (MRPNode-6 / city
                                                    :name (MRPNode-7 / name
                                                                     :op1 (MRPNode-8 / detroit))))
           :ARG0-of (MRPNode-9 / have-03
                               :ARG1 (MRPNode-10 / pressure_cooker_2)))

# ::id 503
# ::snt Rallies demand 'Justice for Trayvon'
# ::tok Rallies demand ' Justice for Trayvon '
# ::collapsed instance nodes 0
(MRPNode-0 / demand-01
           :ARG1 (MRPNode-1 / rally-01)
           :ARG1 (MRPNode-2 / justice
                            :beneficiary (MRPNode-3 / person
                                                    :name (MRPNode-4 / name
                                                                     :op1 (MRPNode-5 / trayvon)))))

# ::id 504
# ::snt Hagel, Dempsey face Congress over defense budget
# ::tok Hagel , Dempsey face Congress over defense budget
# ::collapsed instance nodes 0
(MRPNode-0 / face-01
           :ARG1 (MRPNode-1 / budget
                            :ARG2-of (MRPNode-2 / defend-01))
           :ARG0 (MRPNode-3 / and
                            :op1 (MRPNode-4 / person
                                            :name (MRPNode-5 / name
                                                             :op1 (MRPNode-6 / hagel)))
                            :op2 (MRPNode-7 / person
                                            :name (MRPNode-8 / name
                                                             :op1 (MRPNode-9 / dempsey))))
           :ARG1 (MRPNode-10 / government-organization
                             :name (MRPNode-11 / name
                                               :op1 (MRPNode-12 / congress))))

# ::id 505
# ::snt Ukrainian presidency says deal reached at crisis talks
# ::tok Ukrainian presidency says deal reached at crisis talks
# ::collapsed instance nodes 0
(MRPNode-0 / say-01
           :ARG1 (MRPNode-1 / reach-01
                            :ARG1 (MRPNode-2 / deal-01)
                            :location (MRPNode-3 / talk-01
                                                 :ARG0 (MRPNode-4 / crisis)))
           :ARG0 (MRPNode-5 / person
                            :ARG0-of (MRPNode-6 / have-org-role-91
                                                :ARG1 (MRPNode-7 / country
                                                                 :name (MRPNode-8 / name
                                                                                  :op1 (MRPNode-9 / ukraine)))
                                                :ARG2 (MRPNode-10 / presidency))))

# ::id 506
# ::snt Syria's PM escapes assassination try, regime says
# ::tok Syria 's PM escapes assassination try , regime says
# ::collapsed instance nodes 0
(MRPNode-0 / say-01
           :ARG1 (MRPNode-1 / escape-01
                            :ARG1 (MRPNode-2 / try-01
                                             :ARG1 (MRPNode-3 / assassinate-01
                                                              :ARG0 (MRPNode-4 / person
                                                                               :ARG0-of (MRPNode-5 / have-org-role-91
                                                                                                   :ARG1 (MRPNode-6 / country
                                                                                                                    :name (MRPNode-7 / name
                                                                                                                                     :op1 (MRPNode-8 / syria)))
                                                                                                   :ARG2 (MRPNode-9 / minister
                                                                                                                    :mod (MRPNode-10 / prime))))))
                            :ARG0 MRPNode-4)
           :ARG0 (MRPNode-11 / regime))

# ::id 507
# ::snt South Korean soldier reportedly flees after killing 5 comrades at border with North Korea
# ::tok South Korean soldier reportedly flees after killing 5 comrades at border with North Korea
# ::collapsed instance nodes 4
(MRPNode-0 / flee-05
           :ARG0 (MRPNode-1 / report-01)
           :ARG0 (MRPNode-2 / after
                            :op1 (MRPNode-3 / kill-01
                                            :ARG1 (MRPNode-4 / person
                                                             :quant (MRPNode-5 / 5)
                                                             :ARG0-of (MRPNode-6 / have-rel-role-91
                                                                                 :ARG2 (MRPNode-7 / comrade)
                                                                                 :ARG1 (MRPNode-8 / country
                                                                                                  :name (MRPNode-9 / name
                                                                                                                   :op1 (MRPNode-10 / north)
                                                                                                                   :op2 (MRPNode-11 / korea)))))
                                            :location (MRPNode-12 / border-01
                                                                  :ARG2 MRPNode-8)
                                            :ARG0 (MRPNode-13 / south_korean_soldier_5)))
           :ARG0 MRPNode-13)

# ::id 508
# ::snt US Attorney General Holder resigns
# ::tok US Attorney General Holder resigns
# ::collapsed instance nodes 1
(MRPNode-0 / resign-01
           :ARG0 (MRPNode-1 / person
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / holder))
                            :ARG0-of (MRPNode-4 / have-org-role-91
                                                :ARG1 (MRPNode-5 / country
                                                                 :name (MRPNode-6 / name
                                                                                  :op1 (MRPNode-7 / us)))
                                                :ARG2 (MRPNode-8 / attorney_general_2))))

# ::id 509
# ::snt Hajj to go ahead despite crane collapse, officials vow
# ::tok Hajj to go ahead despite crane collapse , officials vow
# ::collapsed instance nodes 0
(MRPNode-0 / vow-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / have-org-role-91
                                                :ARG2 (MRPNode-3 / official)))
           :ARG1 (MRPNode-4 / go-01
                            :ARG1 (MRPNode-5 / hajj)
                            :ARG2 (MRPNode-6 / ahead)
                            :concession (MRPNode-7 / collapse-01
                                                   :ARG1 (MRPNode-8 / crane))))

# ::id 510
# ::snt China on high alert for typhoon Kalmaegi
# ::tok China on high alert for typhoon Kalmaegi
# ::collapsed instance nodes 0
(MRPNode-0 / alert-01
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / china)))
           :ARG1-of (MRPNode-4 / high-02)
           :ARG2 (MRPNode-5 / typhoon
                            :name (MRPNode-6 / name
                                             :op1 (MRPNode-7 / kalmaegi))))

# ::id 511
# ::snt Tokyo shares open higher over buoyant U.S. market
# ::tok Tokyo shares open higher over buoyant U.S. market
# ::collapsed instance nodes 4
(MRPNode-0 / open-05
           :ARG1 (MRPNode-1 / share
                            :location (MRPNode-2 / city
                                                 :name (MRPNode-3 / name
                                                                  :op1 (MRPNode-4 / tokyo))))
           :ARG1-of (MRPNode-5 / have-degree-91
                               :ARG3 (MRPNode-6 / buoyant_u.s._market_5)
                               :ARG3 (MRPNode-7 / more))
           :ARG1-of (MRPNode-8 / high-02))

# ::id 512
# ::snt Tokyo shares open higher on buoyant U.S. market
# ::tok Tokyo shares open higher on buoyant U.S. market
# ::collapsed instance nodes 4
(MRPNode-0 / open-01
           :ARG1 (MRPNode-1 / share
                            :location (MRPNode-2 / city
                                                 :name (MRPNode-3 / name
                                                                  :op1 (MRPNode-4 / tokyo))))
           :ARG1-of (MRPNode-5 / have-degree-91
                               :ARG3 (MRPNode-6 / buoyant_u.s._market_5)
                               :ARG3 (MRPNode-7 / more)
                               :ARG2 (MRPNode-8 / high-02))
           :ARG1-of MRPNode-8)

# ::id 513
# ::snt Lewis Hamilton Takes Pole for Russian GP
# ::tok Lewis Hamilton Takes Pole for Russian GP
# ::collapsed instance nodes 5
(MRPNode-0 / person
           :name (MRPNode-1 / name
                            :op1 (MRPNode-2 / lewis)
                            :op2 (MRPNode-3 / hamilton))
           :ARG0-of (MRPNode-4 / win-01
                               :ARG1 (MRPNode-5 / russian_gp_6)))

# ::id 514
# ::snt Suspected Boko Haram suicide bombers in Nigeria kill 24
# ::tok Suspected Boko Haram suicide bombers in Nigeria kill 24
# ::collapsed instance nodes 5
(MRPNode-0 / kill-01
           :ARG1 (MRPNode-1 / person
                            :quant (MRPNode-2 / 24)
                            :quant (MRPNode-3 / country
                                              :name (MRPNode-4 / name
                                                               :op1 (MRPNode-5 / nigeria))))
           :ARG0 (MRPNode-6 / person
                            :ARG1-of (MRPNode-7 / suspect-01)
                            :ARG0-of (MRPNode-8 / boko_haram_suicide_bombers_6)))

# ::id 515
# ::snt Mayawati demands president's rule in Kashmir
# ::tok Mayawati demands president 's rule in Kashmir
# ::collapsed instance nodes 0
(MRPNode-0 / demand-01
           :ARG1 (MRPNode-1 / rule-03
                            :ARG0 (MRPNode-2 / world-region
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / kashmir)))
                            :ARG0 (MRPNode-5 / person
                                             :ARG0-of (MRPNode-6 / have-org-role-91
                                                                 :ARG2 (MRPNode-7 / president))))
           :ARG0 (MRPNode-8 / person
                            :name (MRPNode-9 / name
                                             :op1 (MRPNode-10 / mayawati))))

# ::id 516
# ::snt Philippines typhoon death toll feared to hit 7,000
# ::tok Philippines typhoon death toll feared to hit 7,000
# ::collapsed instance nodes 5
(MRPNode-0 / fear-01
           :ARG1 (MRPNode-1 / hit-02
                            :ARG1 (MRPNode-2 / person
                                             :quant (MRPNode-3 / 1500))
                            :ARG0 (MRPNode-4 / philippines_typhoon_death_toll_6))
           :ARG0 MRPNode-4)

# ::id 517
# ::snt Cars, drivers plunge into river after Wash. I-5 bridge collapse
# ::tok Cars , drivers plunge into river after Wash . I - 5 bridge collapse
# ::collapsed instance nodes 0
(MRPNode-0 / plunge-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / car)
                            :op2 (MRPNode-3 / person
                                            :ARG0-of (MRPNode-4 / drive-01)))
           :ARG4 (MRPNode-5 / after
                            :op1 (MRPNode-6 / collapse-01
                                            :ARG1 (MRPNode-7 / bridge
                                                             :name (MRPNode-8 / name
                                                                              :op1 (MRPNode-9 / wash.)
                                                                              :op2 (MRPNode-10 / i-5)))))
           :ARG4 (MRPNode-11 / river))

# ::id 518
# ::snt Egypt's Morsi faces trial for prison break, murder, says prosecution
# ::tok Egypt 's Morsi faces trial for prison break , murder , says prosecution
# ::collapsed instance nodes 0
(MRPNode-0 / say-01
           :ARG1 (MRPNode-1 / face-01
                            :ARG1 (MRPNode-2 / try-02
                                             :ARG3 (MRPNode-3 / and
                                                              :op1 (MRPNode-4 / break-01
                                                                              :ARG1 (MRPNode-5 / prison)))
                                             :ARG1 (MRPNode-6 / person
                                                              :name (MRPNode-7 / name
                                                                               :op1 (MRPNode-8 / morsi))
                                                              :ARG0-of MRPNode-4
                                                              :ARG0-of (MRPNode-9 / murder-01)
                                                              :poss (MRPNode-10 / country
                                                                                :name (MRPNode-11 / name
                                                                                                  :op1 (MRPNode-12 / egypt)))))
                            :ARG0 MRPNode-6)
           :ARG0 (MRPNode-13 / person
                             :ARG0-of (MRPNode-14 / prosecute-01)))

# ::id 519
# ::snt Thai army declares martial law
# ::tok Thai army declares martial law
# ::collapsed instance nodes 4
(MRPNode-0 / declare-02
           :ARG1 (MRPNode-1 / martial_law_2)
           :ARG0 (MRPNode-2 / thai_army_4))

# ::id 520
# ::snt Israel agrees to 12 hour ceasefire
# ::tok Israel agrees to 12 hour ceasefire
# ::collapsed instance nodes 0
(MRPNode-0 / agree-01
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / israel)))
           :ARG1 (MRPNode-4 / cease-01
                            :ARG1 (MRPNode-5 / fire-01)
                            :duration (MRPNode-6 / temporal-quantity
                                                 :quant (MRPNode-7 / 12)
                                                 :unit (MRPNode-8 / hour))))

# ::id 521
# ::snt Quake of 6.2 magnitude strikes off Indonesia's Sumatra - USGS
# ::tok Quake of 6.2 magnitude strikes off Indonesia 's Sumatra - USGS
# ::collapsed instance nodes 0
(MRPNode-0 / strike-01
           :ARG0 (MRPNode-1 / quake
                            :quant (MRPNode-2 / seismic-quantity
                                              :quant (MRPNode-3 / 6.2)))
           :ARG1-of (MRPNode-4 / say-01
                               :ARG0 (MRPNode-5 / country
                                                :name (MRPNode-6 / name
                                                                 :op1 (MRPNode-7 / usgs))))
           :ARG2 (MRPNode-8 / off
                            :op1 (MRPNode-9 / island
                                            :name (MRPNode-10 / name
                                                              :op1 (MRPNode-11 / sumatra))
                                            :part-of (MRPNode-12 / country
                                                                 :name (MRPNode-13 / name
                                                                                   :op1 (MRPNode-14 / indonesia))))))

# ::id 522
# ::snt Chinese satellite spots large object in search area
# ::tok Chinese satellite spots large object in search area
# ::collapsed instance nodes 4
(MRPNode-0 / spot-01
           :ARG1 (MRPNode-1 / large_object_2)
           :ARG0 (MRPNode-2 / chinese_satellite_4)
           :location (MRPNode-3 / area
                                :location-of (MRPNode-4 / search-01)))

# ::id 523
# ::snt Goa building collapse death toll touches 15
# ::tok Goa building collapse death toll touches 15
# ::collapsed instance nodes 6
(MRPNode-0 / touch-01
           :ARG1 (MRPNode-1 / person
                            :quant (MRPNode-2 / 15))
           :ARG0 (MRPNode-3 / goa_building_collapse_death_toll_7))

# ::id 524
# ::snt Pak religious body endorses underage marriage
# ::tok Pak religious body endorses underage marriage
# ::collapsed instance nodes 2
(MRPNode-0 / endorse-01
           :ARG1 (MRPNode-1 / underage_marriage_2)
           :ARG0 (MRPNode-2 / religious_body_2))

# ::id 525
# ::snt EU Ministers of Employment and Social policy will discuss how to boost employment, integrate social and economic policies
# ::tok EU Ministers of Employment and Social policy will discuss how to boost employment , integrate social and economic policies
# ::collapsed instance nodes 0
(MRPNode-0 / discuss-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / thing
                                            :manner-of (MRPNode-3 / boost-01
                                                                  :ARG1 (MRPNode-4 / employ-01)))
                            :op2 (MRPNode-5 / thing
                                            :manner-of (MRPNode-6 / integrate-01
                                                                  :ARG1 (MRPNode-7 / and
                                                                                   :op1 (MRPNode-8 / policy-01)
                                                                                   :op2 (MRPNode-9 / policy-01
                                                                                                   :ARG0 (MRPNode-10 / economy)))
                                                                  :ARG1 (MRPNode-11 / name
                                                                                    :op1 (MRPNode-12 / eu)
                                                                                    :op2 (MRPNode-13 / of)
                                                                                    :op3 (MRPNode-14 / social)
                                                                                    :op4 (MRPNode-15 / and)
                                                                                    :op5 (MRPNode-16 / social)
                                                                                    :op6 (MRPNode-17 / policy-01
                                                                                                     :ARG2 (MRPNode-18 / society))))))
           :ARG0 (MRPNode-19 / person
                             :ARG0-of (MRPNode-20 / have-org-role-91
                                                  :ARG1 (MRPNode-21 / organization)
                                                  :ARG2 (MRPNode-22 / minister
                                                                    :topic (MRPNode-23 / policy-01
                                                                                       :ARG2 (MRPNode-24 / society))))))

# ::id 526
# ::snt U.S. and Russia reach a deal on Syria's chemical weapons
# ::tok U.S. and Russia reach a deal on Syria 's chemical weapons
# ::collapsed instance nodes 0
(MRPNode-0 / reach-01
           :ARG1 (MRPNode-1 / deal-01
                            :ARG2 (MRPNode-2 / weapon
                                             :mod (MRPNode-3 / chemical)
                                             :poss (MRPNode-4 / country
                                                              :name (MRPNode-5 / name
                                                                               :op1 (MRPNode-6 / syria))))
                            :ARG0 (MRPNode-7 / and
                                             :op1 (MRPNode-8 / country
                                                             :name (MRPNode-9 / name
                                                                              :op1 (MRPNode-10 / u.s.)))
                                             :op2 (MRPNode-11 / country
                                                              :name (MRPNode-12 / name
                                                                                :op1 (MRPNode-13 / russia)))))
           :ARG0 MRPNode-7)

# ::id 527
# ::snt Oklahoma examines what went wrong in botched execution
# ::tok Oklahoma examines what went wrong in botched execution
# ::collapsed instance nodes 0
(MRPNode-0 / examine-01
           :ARG1 (MRPNode-1 / state
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / oklahoma)))
           :ARG1 (MRPNode-4 / thing
                            :ARG1-of (MRPNode-5 / wrong-02
                                                :ARG2 (MRPNode-6 / execute-01
                                                                 :ARG1-of (MRPNode-7 / breach-01)))))

# ::id 528
# ::snt Thai protests escalate amid violence
# ::tok Thai protests escalate amid violence
# ::collapsed instance nodes 0
(MRPNode-0 / escalate-01
           :ARG1 (MRPNode-1 / protest-01
                            :ARG0 (MRPNode-2 / country
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / thailand))))
           :ARG0 (MRPNode-5 / violence))

# ::id 529
# ::snt Egypt imposes state of emergency after 95 people killed
# ::tok Egypt imposes state of emergency after 95 people killed
# ::collapsed instance nodes 0
(MRPNode-0 / impose-01
           :ARG1 (MRPNode-1 / state
                            :mod (MRPNode-2 / emergency))
           :ARG0 (MRPNode-3 / country
                            :name (MRPNode-4 / name
                                             :op1 (MRPNode-5 / egypt)))
           :time (MRPNode-6 / after
                            :op1 (MRPNode-7 / kill-01
                                            :ARG1 (MRPNode-8 / person
                                                             :quant (MRPNode-9 / 95)))))

# ::id 530
# ::snt UN warns of plight of women, children in Syria's Homs
# ::tok UN warns of plight of women , children in Syria 's Homs
# ::collapsed instance nodes 0
(MRPNode-0 / warn-01
           :ARG1 (MRPNode-1 / plight
                            :domain (MRPNode-2 / and
                                               :op1 (MRPNode-3 / woman)
                                               :op2 (MRPNode-4 / child)
                                               :location (MRPNode-5 / city
                                                                    :name (MRPNode-6 / name
                                                                                     :op1 (MRPNode-7 / hom))
                                                                    :location (MRPNode-8 / country
                                                                                         :name (MRPNode-9 / name
                                                                                                          :op1 (MRPNode-10 / syria))))))
           :ARG0 (MRPNode-11 / organization
                             :name (MRPNode-12 / name
                                               :op1 (MRPNode-13 / un))))

# ::id 531
# ::snt Sony to sell PC unit and cut jobs
# ::tok Sony to sell PC unit and cut jobs
# ::collapsed instance nodes 2
(MRPNode-0 / and
           :op1 (MRPNode-1 / sell-01
                           :ARG1 (MRPNode-2 / unit_3)
                           :ARG0 (MRPNode-3 / company
                                            :name (MRPNode-4 / name
                                                             :op1 (MRPNode-5 / sony))))
           :op2 (MRPNode-6 / cut-02
                           :ARG0 MRPNode-3
                           :ARG1 (MRPNode-7 / job)))

# ::id 532
# ::snt Protests after George Zimmerman acquitted in Trayvon Martin case
# ::tok Protests after George Zimmerman acquitted in Trayvon Martin case
# ::collapsed instance nodes 0
(MRPNode-0 / protest-01
           :ARG0 (MRPNode-1 / person
                            :ARG1-of (MRPNode-2 / name
                                                :op1 (MRPNode-3 / george)
                                                :op2 (MRPNode-4 / zimmerman)))
           :time (MRPNode-5 / after
                            :op1 (MRPNode-6 / acquit-01
                                            :ARG1 (MRPNode-7 / case-03
                                                             :ARG2 (MRPNode-8 / person
                                                                              :name (MRPNode-9 / name
                                                                                               :op1 (MRPNode-10 / trayvon)
                                                                                               :op2 (MRPNode-11 / martin)))))))

# ::id 533
# ::snt Jordan elected to take Saudi seat on UN Security Council
# ::tok Jordan elected to take Saudi seat on UN Security Council
# ::collapsed instance nodes 0
(MRPNode-0 / elect-01
           :ARG1 (MRPNode-1 / take-01
                            :ARG1 (MRPNode-2 / seat-01
                                             :ARG2 (MRPNode-3 / country
                                                              :name (MRPNode-4 / name
                                                                               :op1 (MRPNode-5 / saudi)
                                                                               :op2 (MRPNode-6 / arabia)))
                                             :ARG2 (MRPNode-7 / organization
                                                              :name (MRPNode-8 / name
                                                                               :op1 (MRPNode-9 / un)
                                                                               :op2 (MRPNode-10 / security)
                                                                               :op3 (MRPNode-11 / council))))
                            :ARG0 (MRPNode-12 / country
                                              :name (MRPNode-13 / name
                                                                :op1 (MRPNode-14 / jordan))))
           :ARG0 MRPNode-12)

# ::id 534
# ::snt Maldives begins to vote in controversy-ridden presidential poll
# ::tok Maldives begins to vote in controversy - ridden presidential poll
# ::collapsed instance nodes 0
(MRPNode-0 / begin-01
           :ARG1 (MRPNode-1 / vote-01
                            :manner (MRPNode-2 / poll-01
                                               :ARG0 (MRPNode-3 / person
                                                                :ARG0-of (MRPNode-4 / have-org-role-91
                                                                                    :ARG2 (MRPNode-5 / president)))
                                               :ARG1-of (MRPNode-6 / ride-01
                                                                   :ARG0 (MRPNode-7 / controversy)))
                            :ARG0 (MRPNode-8 / country
                                             :name (MRPNode-9 / name
                                                              :op1 (MRPNode-10 / maldive))))
           :ARG0 MRPNode-8)

# ::id 535
# ::snt Police surround protesters in Belfast ahead of G8
# ::tok Police surround protesters in Belfast ahead of G 8
# ::collapsed instance nodes 0
(MRPNode-0 / surround-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / protest-01))
           :ARG0 (MRPNode-3 / police)
           :ARG2 (MRPNode-4 / ahead
                            :op1 (MRPNode-5 / person
                                            :name (MRPNode-6 / name
                                                             :op1 (MRPNode-7 / g8))))
           :location (MRPNode-8 / city
                                :name (MRPNode-9 / name
                                                 :op1 (MRPNode-10 / belfast))))

# ::id 536
# ::snt Ten rescued off Waterford, Dublin coasts
# ::tok Ten rescued off Waterford , Dublin coasts
# ::collapsed instance nodes 0
(MRPNode-0 / rescue-01
           :ARG1 (MRPNode-1 / person
                            :quant (MRPNode-2 / 10))
           :location (MRPNode-3 / off
                                :op1 (MRPNode-4 / city
                                                :name (MRPNode-5 / name
                                                                 :op1 (MRPNode-6 / waterford)))
                                :op2 (MRPNode-7 / coast
                                                :part-of (MRPNode-8 / city
                                                                    :name (MRPNode-9 / name
                                                                                     :op1 (MRPNode-10 / dublin))))))

# ::id 537
# ::snt World Cup hit by new stadium death
# ::tok World Cup hit by new stadium death
# ::collapsed instance nodes 0
(MRPNode-0 / hit-01
           :ARG1 (MRPNode-1 / die-01
                            :ARG1 (MRPNode-2 / stadium
                                             :ARG1-of (MRPNode-3 / new-01)))
           :ARG1 (MRPNode-4 / game
                            :name (MRPNode-5 / name
                                             :op1 (MRPNode-6 / world)
                                             :op2 (MRPNode-7 / cup))))

# ::id 538
# ::snt Greece reaches agreement with troika, bailout tranche expected within days
# ::tok Greece reaches agreement with troika , bailout tranche expected within days
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / reach-01
                           :ARG1 (MRPNode-2 / agree-01
                                            :ARG2 (MRPNode-3 / organization
                                                             :name (MRPNode-4 / name
                                                                              :op1 (MRPNode-5 / troika)))
                                            :ARG0 (MRPNode-6 / country
                                                             :name (MRPNode-7 / name
                                                                              :op1 (MRPNode-8 / greece))))
                           :ARG0 MRPNode-6)
           :op2 (MRPNode-9 / expect-01
                           :ARG1 (MRPNode-10 / tranche
                                             :ARG2-of (MRPNode-11 / bail-out-02))
                           :time (MRPNode-12 / after
                                             :quant (MRPNode-13 / up-to
                                                                :op1 (MRPNode-14 / temporal-quantity
                                                                                 :quant (MRPNode-15 / 1)
                                                                                 :quant (MRPNode-16 / day))))))

# ::id 539
# ::snt Senior CPC official meets top DPRK leader's special envoy
# ::tok Senior CPC official meets top DPRK leader 's special envoy
# ::collapsed instance nodes 0
(MRPNode-0 / meet-03
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / have-org-role-91
                                                :ARG1 (MRPNode-3 / political-party
                                                                 :name (MRPNode-4 / name
                                                                                  :op1 (MRPNode-5 / dprk)))
                                                :ARG2 (MRPNode-6 / official
                                                                 :mod (MRPNode-7 / top))))
           :ARG1 (MRPNode-8 / envoy
                            :ARG1-of (MRPNode-9 / special-02)
                            :poss (MRPNode-10 / person
                                              :ARG0-of (MRPNode-11 / lead-02
                                                                   :ARG1 MRPNode-3))))

# ::id 540
# ::snt US House Republicans elect Paul Ryan as speaker
# ::tok US House Republicans elect Paul Ryan as speaker
# ::collapsed instance nodes 0
(MRPNode-0 / elect-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / name
                                                :op2 (MRPNode-3 / ryan))
                            :ARG0-of (MRPNode-4 / have-org-role-91
                                                :ARG1 (MRPNode-5 / government-organization
                                                                 :name (MRPNode-6 / name
                                                                                  :op1 (MRPNode-7 / house)
                                                                                  :op2 (MRPNode-8 / republican)))
                                                :ARG2 (MRPNode-9 / speaker)))
           :ARG0 (MRPNode-10 / person
                             :mod (MRPNode-11 / paul)
                             :ARG0-of (MRPNode-12 / country
                                                  :name (MRPNode-13 / name
                                                                    :op1 (MRPNode-14 / us)))))

# ::id 541
# ::snt Top Asian News at 4:00 p.m. GMT
# ::tok Top Asian News at 4:00 p.m. GMT
# ::collapsed instance nodes 0
(MRPNode-0 / broadcast-program
           :mod (MRPNode-1 / name
                           :op1 (MRPNode-2 / top)
                           :op2 (MRPNode-3 / asian)
                           :op3 (MRPNode-4 / news))
           :medium (MRPNode-5 / broadcast-program
                              :name (MRPNode-6 / name
                                               :op1 (MRPNode-7 / gmt)))
           :time (MRPNode-8 / date-entity
                            :time (MRPNode-9 / "4:00")))

# ::id 542
# ::snt Headlines in major Iranian newspapers on Sept 27
# ::tok Headlines in major Iranian newspapers on Sept 27
# ::collapsed instance nodes 4
(MRPNode-0 / thing
           :ARG2-of (MRPNode-1 / headline-01
                               :time (MRPNode-2 / major_iranian_newspapers_5)
                               :time (MRPNode-3 / date-entity
                                                :month (MRPNode-4 / 9)
                                                :day (MRPNode-5 / 27))))

# ::id 543
# ::snt Saudi-led airstrikes hit Yemeni capital
# ::tok Saudi - led airstrikes hit Yemeni capital
# ::collapsed instance nodes 0
(MRPNode-0 / hit-01
           :ARG1 (MRPNode-1 / city
                            :ARG0-of (MRPNode-2 / have-org-role-91
                                                :ARG1 (MRPNode-3 / country
                                                                 :name (MRPNode-4 / name
                                                                                  :op1 (MRPNode-5 / yemen)))
                                                :ARG2 (MRPNode-6 / capital)))
           :ARG0 (MRPNode-7 / strike-01
                            :ARG0 (MRPNode-8 / lead-02
                                             :ARG0 (MRPNode-9 / country
                                                              :name (MRPNode-10 / name
                                                                                :op1 (MRPNode-11 / saudi)
                                                                                :op2 (MRPNode-12 / arabia))))
                            :path (MRPNode-13 / air)))

# ::id 544
# ::snt Militant attack from Afghanistan kills four in Upper Dir
# ::tok Militant attack from Afghanistan kills four in Upper Dir
# ::collapsed instance nodes 0
(MRPNode-0 / kill-01
           :ARG1 (MRPNode-1 / person
                            :quant (MRPNode-2 / 4))
           :ARG0 (MRPNode-3 / attack-01
                            :ARG0 (MRPNode-4 / militant)
                            :source (MRPNode-5 / country
                                               :name (MRPNode-6 / name
                                                                :op1 (MRPNode-7 / afghanistan))))
           :location (MRPNode-8 / city
                                :name (MRPNode-9 / name
                                                 :op1 (MRPNode-10 / upper)
                                                 :op2 (MRPNode-11 / dir))))

# ::id 545
# ::snt Mali hunts jihadist nightclub killers
# ::tok Mali hunts jihadist nightclub killers
# ::collapsed instance nodes 3
(MRPNode-0 / hunt-01
           :ARG1 (MRPNode-1 / jihadist_nightclub_killers_4)
           :ARG1 (MRPNode-2 / person
                            :name (MRPNode-3 / name
                                             :op1 (MRPNode-4 / mali))))

# ::id 546
# ::snt Sierra Leone in Ebola lockdown
# ::tok Sierra Leone in Ebola lockdown
# ::collapsed instance nodes 0
(MRPNode-0 / flood-01
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / sierra)
                                             :op2 (MRPNode-4 / leone))))

# ::id 547
# ::snt Israeli forces detain Palestinian MP in Hebron
# ::tok Israeli forces detain Palestinian MP in Hebron
# ::collapsed instance nodes 7
(MRPNode-0 / detain-01
           :ARG1 (MRPNode-1 / palestinian_5)
           :ARG0 (MRPNode-2 / israeli_forces_4)
           :location (MRPNode-3 / city
                                :name (MRPNode-4 / name
                                                 :op1 (MRPNode-5 / hebron))))

# ::id 548
# ::snt More than 3,400 migrants rescued at sea in Mediterranean
# ::tok More than 3,400 migrants rescued at sea in Mediterranean
# ::collapsed instance nodes 0
(MRPNode-0 / rescue-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / migrate-01)
                            :quant (MRPNode-3 / more-than
                                              :op1 (MRPNode-4 / 3000)))
           :location (MRPNode-5 / sea
                                :name (MRPNode-6 / name
                                                 :op1 (MRPNode-7 / mediterranean))))

# ::id 549
# ::snt Israeli police clash with Palestinian protesters at sensitive Jerusalem holy site
# ::tok Israeli police clash with Palestinian protesters at sensitive Jerusalem holy site
# ::collapsed instance nodes 12
(MRPNode-0 / clash-01
           :ARG1 (MRPNode-1 / palestinian_protesters_5)
           :ARG0 (MRPNode-2 / israeli_police_4)
           :location (MRPNode-3 / sensitive_jerusalem_holy_site_6))

# ::id 550
# ::snt Islamic State issues video of beheading of US hostage
# ::tok Islamic State issues video of beheading of US hostage
# ::collapsed instance nodes 6
(MRPNode-0 / issue-01
           :ARG1 (MRPNode-1 / video
                            :topic (MRPNode-2 / behead-01
                                              :ARG1 (MRPNode-3 / us_hostage_4)))
           :ARG0 (MRPNode-4 / islamic_state_4))

# ::id 551
# ::snt Greece bailout uncertainty weighs on global markets
# ::tok Greece bailout uncertainty weighs on global markets
# ::collapsed instance nodes 1
(MRPNode-0 / weight-01
           :ARG1 (MRPNode-1 / certainty
                            :polarity (MRPNode-2 / -)
                            :domain (MRPNode-3 / bail-out-02)
                            :location (MRPNode-4 / country
                                                 :name (MRPNode-5 / name
                                                                  :op1 (MRPNode-6 / greece))))
           :ARG2 (MRPNode-7 / global_markets_2))

# ::id 552
# ::snt Nepal earthquake death toll surpasses 7,000
# ::tok Nepal earthquake death toll surpasses 7,000
# ::collapsed instance nodes 5
(MRPNode-0 / surpass-01
           :ARG1 (MRPNode-1 / person
                            :quant (MRPNode-2 / 5000))
           :ARG0 (MRPNode-3 / nepal_earthquake_death_toll_6))

# ::id 553
# ::snt US drone strike kills eight in Waziristan
# ::tok US drone strike kills eight in Waziristan
# ::collapsed instance nodes 0
(MRPNode-0 / kill-01
           :ARG1 (MRPNode-1 / person
                            :quant (MRPNode-2 / 8))
           :ARG0 (MRPNode-3 / strike-01
                            :ARG0 (MRPNode-4 / country
                                             :name (MRPNode-5 / name
                                                              :op1 (MRPNode-6 / us)))
                            :ARG2 (MRPNode-7 / drone))
           :location (MRPNode-8 / province
                                :name (MRPNode-9 / name
                                                 :op1 (MRPNode-10 / waziristan))))

# ::id 554
# ::snt Boy, 14, arrested for sex attacks around a university campus
# ::tok Boy , 14 , arrested for sex attacks around a university campus
# ::collapsed instance nodes 1
(MRPNode-0 / person
           :ARG1-of (MRPNode-1 / arrest-01
                               :ARG2 (MRPNode-2 / attack-01
                                                :mod (MRPNode-3 / around
                                                                :op1 (MRPNode-4 / university_campus_2))
                                                :mod (MRPNode-5 / sex-01)))
           :name (MRPNode-6 / name
                            :op1 (MRPNode-7 / boy))
           :ARG0-of MRPNode-2
           :age (MRPNode-8 / temporal-quantity
                           :quant (MRPNode-9 / 14)
                           :unit (MRPNode-10 / year)))

# ::id 555
# ::snt Obama orders Syria 'gas attack' inquiry
# ::tok Obama orders Syria ' gas attack ' inquiry
# ::collapsed instance nodes 0
(MRPNode-0 / order-01
           :ARG1 (MRPNode-1 / attack-01
                            :ARG0 (MRPNode-2 / country
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / syria)))
                            :instrument (MRPNode-5 / gas))
           :ARG0 (MRPNode-6 / person
                            :name (MRPNode-7 / name
                                             :op1 (MRPNode-8 / obama)))
           :ARG1 (MRPNode-9 / inquire-01
                            :ARG2 (MRPNode-10 / country
                                              :name (MRPNode-11 / name
                                                                :op1 (MRPNode-12 / syria)))))

# ::id 556
# ::snt Ukraine's jailed opposition icon Tymoshenko walks free
# ::tok Ukraine 's jailed opposition icon Tymoshenko walks free
# ::collapsed instance nodes 0
(MRPNode-0 / walk-01
           :ARG0 (MRPNode-1 / free-04)
           :ARG0 (MRPNode-2 / person
                            :ARG1-of (MRPNode-3 / have-org-role-91
                                                :ARG1 (MRPNode-4 / icon
                                                                 :ARG0-of (MRPNode-5 / oppose-01))
                                                :ARG1 (MRPNode-6 / country
                                                                 :name (MRPNode-7 / name
                                                                                  :op1 (MRPNode-8 / ukraine)))
                                                :ARG1-of (MRPNode-9 / jail-01))
                            :name (MRPNode-10 / name
                                              :op1 (MRPNode-11 / tymoshenko))))

# ::id 557
# ::snt Redford touts Alberta economy ahead of vote on leadership
# ::tok Redford touts Alberta economy ahead of vote on leadership
# ::collapsed instance nodes 3
(MRPNode-0 / turn-14
           :ARG1 (MRPNode-1 / alberta_economy_4)
           :ARG0 (MRPNode-2 / person
                            :name (MRPNode-3 / name
                                             :op1 (MRPNode-4 / redford)))
           :time (MRPNode-5 / ahead
                            :op1 (MRPNode-6 / vote-01
                                            :ARG1 (MRPNode-7 / lead-02))))

# ::id 558
# ::snt Man kills 4 in Calif. before police shoot him dead
# ::tok Man kills 4 in Calif. before police shoot him dead
# ::collapsed instance nodes 0
(MRPNode-0 / kill-01
           :ARG1 (MRPNode-1 / person
                            :quant (MRPNode-2 / 4))
           :ARG0 (MRPNode-3 / man
                            :ARG1-of (MRPNode-4 / die-01)
                            :ARG1-of (MRPNode-5 / shoot-02
                                                :ARG0 (MRPNode-6 / police)))
           :time (MRPNode-7 / before
                            :op1 MRPNode-4
                            :op1 MRPNode-5)
           :location (MRPNode-8 / state
                                :name (MRPNode-9 / name
                                                 :op1 (MRPNode-10 / calif.))))

# ::id 559
# ::snt N. Korea Deports Elderly American
# ::tok N. Korea Deports Elderly American
# ::collapsed instance nodes 0
(MRPNode-0 / country
           :mod (MRPNode-1 / name
                           :op1 (MRPNode-2 / n.)
                           :op2 (MRPNode-3 / korea))
           :mod (MRPNode-4 / elderly))

# ::id 560
# ::snt Obama mulls limited military action in Syria
# ::tok Obama mulls limited military action in Syria
# ::collapsed instance nodes 0
(MRPNode-0 / mull
           :domain (MRPNode-1 / act-02
                              :ARG0 (MRPNode-2 / military)
                              :ARG1-of (MRPNode-3 / limit-01)
                              :location (MRPNode-4 / country
                                                   :name (MRPNode-5 / name
                                                                    :op1 (MRPNode-6 / syria))))
           :domain (MRPNode-7 / person
                              :name (MRPNode-8 / name
                                               :op1 (MRPNode-9 / obama))))

# ::id 561
# ::snt One killed in clashes at Muslim Brotherhood Cairo offices
# ::tok One killed in clashes at Muslim Brotherhood Cairo offices
# ::collapsed instance nodes 7
(MRPNode-0 / kill-01
           :ARG1 (MRPNode-1 / person
                            :quant (MRPNode-2 / 1))
           :ARG1-of (MRPNode-3 / cause-01
                               :ARG0 (MRPNode-4 / clash-01
                                                :location (MRPNode-5 / muslim_brotherhood_cairo_offices_8))))

# ::id 562
# ::snt Saudi Women To Protest Against Driving Ban
# ::tok Saudi Women To Protest Against Driving Ban
# ::collapsed instance nodes 4
(MRPNode-0 / protest-01
           :ARG1 (MRPNode-1 / person
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / ban)))
           :ARG0 (MRPNode-4 / saudi_women_5))

# ::id 563
# ::snt Nelson Mandela hospital release reports 'incorrect'
# ::tok Nelson Mandela hospital release reports ' incorrect '
# ::collapsed instance nodes 0
(MRPNode-0 / report-01
           :ARG1 (MRPNode-1 / release-01
                            :ARG1 (MRPNode-2 / hospital)
                            :ARG1 (MRPNode-3 / person
                                             :name (MRPNode-4 / name
                                                              :op1 (MRPNode-5 / nelson)
                                                              :op2 (MRPNode-6 / mandela))))
           :ARG1 (MRPNode-7 / correct-02
                            :polarity (MRPNode-8 / -)))

# ::id 564
# ::snt US to Determine Extent of Chemical Weapons Use by Syria
# ::tok US to Determine Extent of Chemical Weapons Use by Syria
# ::collapsed instance nodes 4
(MRPNode-0 / determine-01
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / us)))
           :ARG1 (MRPNode-4 / infringe-01
                            :ARG1 (MRPNode-5 / use-01
                                             :ARG1 (MRPNode-6 / chemical_weapons_5)
                                             :ARG0 (MRPNode-7 / country
                                                              :name (MRPNode-8 / name
                                                                               :op1 (MRPNode-9 / syria))))))

# ::id 565
# ::snt Syria agrees to surrender chemical weapons
# ::tok Syria agrees to surrender chemical weapons
# ::collapsed instance nodes 1
(MRPNode-0 / agree-01
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / syria)))
           :ARG1 (MRPNode-4 / surrender-01
                            :ARG0 MRPNode-1
                            :ARG1 (MRPNode-5 / chemical_weapons_2)))

# ::id 566
# ::snt Russia's Putin claims authority to invade Ukraine
# ::tok Russia 's Putin claims authority to invade Ukraine
# ::collapsed instance nodes 0
(MRPNode-0 / claim-01
           :ARG1 (MRPNode-1 / authority
                            :purpose (MRPNode-2 / invade-01
                                                :ARG0 (MRPNode-3 / person
                                                                 :name (MRPNode-4 / name
                                                                                  :op1 (MRPNode-5 / putin))
                                                                 :poss (MRPNode-6 / country
                                                                                  :name (MRPNode-7 / name
                                                                                                   :op1 (MRPNode-8 / ukraine))))))
           :ARG0 MRPNode-3)

# ::id 567
# ::snt Singapore shares open 0.28% lower on Thursday
# ::tok Singapore shares open 0.28 % lower on Thursday
# ::collapsed instance nodes 0
(MRPNode-0 / open-01
           :ARG1 (MRPNode-1 / share-01
                            :ARG0 (MRPNode-2 / country
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / singapore))))
           :time (MRPNode-5 / percentage-entity
                            :value (MRPNode-6 / 0.28)
                            :ARG1-of (MRPNode-7 / low-04)
                            :value (MRPNode-8 / have-degree-91
                                              :ARG2 MRPNode-7
                                              :ARG3 (MRPNode-9 / more)))
           :time (MRPNode-10 / date-entity
                             :weekday (MRPNode-11 / thursday)))

# ::id 568
# ::snt Headlines in major Iranian newspapers on Oct 4
# ::tok Headlines in major Iranian newspapers on Oct 4
# ::collapsed instance nodes 4
(MRPNode-0 / thing
           :ARG2-of (MRPNode-1 / headline-01
                               :time (MRPNode-2 / major_iranian_newspapers_5)
                               :time (MRPNode-3 / date-entity
                                                :month (MRPNode-4 / 10)
                                                :day (MRPNode-5 / 4))))

# ::id 569
# ::snt Bombings kill 9 people in Iraqi capital
# ::tok Bombings kill 9 people in Iraqi capital
# ::collapsed instance nodes 0
(MRPNode-0 / kill-01
           :ARG1 (MRPNode-1 / person
                            :quant (MRPNode-2 / 9))
           :ARG0 (MRPNode-3 / bomb-01)
           :location (MRPNode-4 / city
                                :ARG0-of (MRPNode-5 / have-org-role-91
                                                    :ARG1 (MRPNode-6 / country
                                                                     :name (MRPNode-7 / name
                                                                                      :op1 (MRPNode-8 / iraq)))
                                                    :ARG2 (MRPNode-9 / capital))))

# ::id 570
# ::snt 10 Things to Know for Wednesday
# ::tok 10 Things to Know for Wednesday
# ::collapsed instance nodes 0
(MRPNode-0 / thing
           :quant (MRPNode-1 / 10)
           :ARG1-of (MRPNode-2 / know-01
                               :time (MRPNode-3 / date-entity
                                                :weekday (MRPNode-4 / wednesday))))

# ::id 571
# ::snt How the Dow Jones Industrial Average Did Wednesday
# ::tok How the Dow Jones Industrial Average Did Wednesday
# ::collapsed instance nodes 0
(MRPNode-0 / do-02
           :ARG1 (MRPNode-1 / government-organization
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / dow)
                                             :op2 (MRPNode-4 / jones)
                                             :op3 (MRPNode-5 / industrial)
                                             :op4 (MRPNode-6 / average)))
           :ARG1 (MRPNode-7 / amr-unknown)
           :time (MRPNode-8 / date-entity
                            :weekday (MRPNode-9 / wednesday)))

# ::id 572
# ::snt New UN peacekeeping chief named for Central African Republic
# ::tok New UN peacekeeping chief named for Central African Republic
# ::collapsed instance nodes 0
(MRPNode-0 / name-01
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / central)
                                             :op2 (MRPNode-4 / african)
                                             :op3 (MRPNode-5 / republic)))
           :ARG1 (MRPNode-6 / person
                            :ARG0-of (MRPNode-7 / have-org-role-91
                                                :ARG1 (MRPNode-8 / organization
                                                                 :name (MRPNode-9 / name
                                                                                  :op1 (MRPNode-10 / un)))
                                                :ARG2 (MRPNode-11 / chief
                                                                  :purpose (MRPNode-12 / keep-01
                                                                                       :ARG1 (MRPNode-13 / peace))))
                            :ARG1-of (MRPNode-14 / new-01)))

# ::id 573
# ::snt Iraq bombings kill at least 26
# ::tok Iraq bombings kill at least 26
# ::collapsed instance nodes 0
(MRPNode-0 / kill-01
           :ARG1 (MRPNode-1 / person
                            :quant (MRPNode-2 / at-least
                                              :op1 (MRPNode-3 / 26)))
           :ARG0 (MRPNode-4 / bomb-01
                            :ARG0 (MRPNode-5 / country
                                             :name (MRPNode-6 / name
                                                              :op1 (MRPNode-7 / iraq)))))

# ::id 574
# ::snt UN Security Council hears Yemen envoy's final ...
# ::tok UN Security Council hears Yemen envoy 's final ...
# ::collapsed instance nodes 0
(MRPNode-0 / hear-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / have-org-role-91
                                                :ARG1 (MRPNode-3 / country
                                                                 :name (MRPNode-4 / name
                                                                                  :op1 (MRPNode-5 / yemen)))
                                                :ARG2 (MRPNode-6 / envoy)))
           :ARG0 (MRPNode-7 / organization
                            :name (MRPNode-8 / name
                                             :op1 (MRPNode-9 / un)
                                             :op2 (MRPNode-10 / security)
                                             :op3 (MRPNode-11 / council)))
           :ARG1 (MRPNode-12 / final))

# ::id 575
# ::snt 13 killed in Afgan terror attack
# ::tok 13 killed in Afgan terror attack
# ::collapsed instance nodes 4
(MRPNode-0 / kill-01
           :ARG1 (MRPNode-1 / person
                            :quant (MRPNode-2 / 13))
           :ARG1-of (MRPNode-3 / cause-01
                               :ARG0 (MRPNode-4 / afgan_terror_attack_5)))

# ::id 576
# ::snt Rev's Early Reads: March 2
# ::tok Rev 's Early Reads : March 2
# ::collapsed instance nodes 0
(MRPNode-0 / read-01
           :ARG0 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / have-org-role-91
                                                :ARG1 (MRPNode-3 / political-party
                                                                 :name (MRPNode-4 / name
                                                                                  :op1 (MRPNode-5 / rev)))))
           :time (MRPNode-6 / Early)
           :time (MRPNode-7 / date-entity
                            :month (MRPNode-8 / 3)
                            :day (MRPNode-9 / 2)))

# ::id 577
# ::snt Markets Live: Waiting for China data
# ::tok Markets Live : Waiting for China data
# ::collapsed instance nodes 3
(MRPNode-0 / wait-01
           :ARG1 (MRPNode-1 / live)
           :ARG2 (MRPNode-2 / china_data_4))

# ::id 578
# ::snt Palestinians, Israeli police clash at Jerusalem's al-Aqsa
# ::tok Palestinians , Israeli police clash at Jerusalem 's al-Aqsa
# ::collapsed instance nodes 3
(MRPNode-0 / and
           :op1 (MRPNode-1 / country
                           :name (MRPNode-2 / name
                                            :op1 (MRPNode-3 / palestine)))
           :op2 (MRPNode-4 / clash-01
                           :ARG1 (MRPNode-5 / israeli_police_4)
                           :location (MRPNode-6 / city
                                                :name (MRPNode-7 / name
                                                                 :op1 (MRPNode-8 / jerusalem)))))

# ::id 579
# ::snt The end of the Hong Kong protests?
# ::tok The end of the Hong Kong protests ?
# ::collapsed instance nodes 0
(MRPNode-0 / end-01
           :ARG1 (MRPNode-1 / protest-01
                            :location (MRPNode-2 / city
                                                 :name (MRPNode-3 / name
                                                                  :op1 (MRPNode-4 / hong)
                                                                  :op2 (MRPNode-5 / kong))))
           :ARG2 (MRPNode-6 / amr-unknown))

# ::id 580
# ::snt Russian warplanes strike inside Syria
# ::tok Russian warplanes strike inside Syria
# ::collapsed instance nodes 0
(MRPNode-0 / strike-01
           :ARG0 (MRPNode-1 / warplane
                            :mod (MRPNode-2 / country
                                            :name (MRPNode-3 / name
                                                             :op1 (MRPNode-4 / syria))))
           :ARG2 (MRPNode-5 / inside
                            :op1 (MRPNode-6 / country
                                            :name (MRPNode-7 / name
                                                             :op1 (MRPNode-8 / russia)))))

# ::id 581
# ::snt Nigeria Votes in Tight Presidential Election
# ::tok Nigeria Votes in Tight Presidential Election
# ::collapsed instance nodes 0
(MRPNode-0 / vote-01
           :ARG1 (MRPNode-1 / elect-01
                            :ARG1 (MRPNode-2 / person
                                             :ARG0-of (MRPNode-3 / have-org-role-91
                                                                 :ARG2 (MRPNode-4 / president)))
                            :mod (MRPNode-5 / name
                                            :op1 (MRPNode-6 / nigeria)))
           :ARG0 (MRPNode-7 / country))

# ::id 582
# ::snt Prince William dons samurai gear on Japan tour
# ::tok Prince William dons samurai gear on Japan tour
# ::collapsed instance nodes 4
(MRPNode-0 / do-02
           :ARG1 (MRPNode-1 / samurai_gear_2)
           :ARG0 (MRPNode-2 / person
                            :name (MRPNode-3 / name
                                             :op1 (MRPNode-4 / william))
                            :ARG0-of (MRPNode-5 / have-org-role-91
                                                :ARG2 (MRPNode-6 / prince)))
           :time (MRPNode-7 / japan_tour_4))

# ::id 583
# ::snt Micronesia vice president to visit China
# ::tok Micronesia vice president to visit China
# ::collapsed instance nodes 1
(MRPNode-0 / visit-01
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / china)))
           :ARG0 (MRPNode-4 / person
                            :ARG0-of (MRPNode-5 / have-org-role-91
                                                :ARG1 (MRPNode-6 / country
                                                                 :name (MRPNode-7 / name
                                                                                  :op1 (MRPNode-8 / micronesia)))
                                                :ARG2 (MRPNode-9 / vice_president_2))))

# ::id 584
# ::snt Iran ends cooperation agreement with Pakistan
# ::tok Iran ends cooperation agreement with Pakistan
# ::collapsed instance nodes 0
(MRPNode-0 / end-01
           :ARG1 (MRPNode-1 / agree-01
                            :ARG1 (MRPNode-2 / cooperate-01)
                            :ARG2 (MRPNode-3 / country
                                             :name (MRPNode-4 / name
                                                              :op1 (MRPNode-5 / pakistan)))
                            :ARG0 (MRPNode-6 / country
                                             :name (MRPNode-7 / name
                                                              :op1 (MRPNode-8 / iran))))
           :ARG0 MRPNode-6)

# ::id 585
# ::snt New US Sanctions Target Overseas Cyber Attackers
# ::tok New US Sanctions Target Overseas Cyber Attackers
# ::collapsed instance nodes 1
(MRPNode-0 / target-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / cyber_attackers_2)
                            :ARG1-of (MRPNode-3 / new-01))
           :ARG0 (MRPNode-4 / state
                            :name (MRPNode-5 / name
                                             :op1 (MRPNode-6 / us))))

# ::id 586
# ::snt Deadly Blast Rocks Coal Mine in East Ukraine
# ::tok Deadly Blast Rocks Coal Mine in East Ukraine
# ::collapsed instance nodes 0
(MRPNode-0 / mine-01
           :location (MRPNode-1 / name
                                :op1 (MRPNode-2 / rocks)
                                :op2 (MRPNode-3 / coal)
                                :op3 (MRPNode-4 / mine))
           :location (MRPNode-5 / southeast
                                :part-of (MRPNode-6 / country
                                                    :name (MRPNode-7 / name
                                                                     :op1 (MRPNode-8 / ukraine))))
           :mod (MRPNode-9 / Blast
                           :ARG0-of (MRPNode-10 / die-01)))

# ::id 587
# ::snt Backstage Moves Intensify as Fight Against Islamic State Widens
# ::tok Backstage Moves Intensify as Fight Against Islamic State Widens
# ::collapsed instance nodes 3
(MRPNode-0 / intensify-01
           :ARG1 (MRPNode-1 / fight-01
                            :ARG1 (MRPNode-2 / deny-01
                                             :ARG1 (MRPNode-3 / islamic_state_4)))
           :ARG1 (MRPNode-4 / move-02
                            :ARG1 (MRPNode-5 / back)))

# ::id 588
# ::snt Taiwan coast guard launches new ships as South China Sea tensions rise
# ::tok Taiwan coast guard launches new ships as South China Sea tensions rise
# ::collapsed instance nodes 3
(MRPNode-0 / launch-01
           :ARG1 (MRPNode-1 / ship
                            :ARG1-of (MRPNode-2 / new-01))
           :ARG0 (MRPNode-3 / guard-01
                            :ARG1 (MRPNode-4 / taiwan_coast_4))
           :time (MRPNode-5 / rise-01
                            :ARG1 (MRPNode-6 / tension
                                             :location (MRPNode-7 / sea
                                                                  :name (MRPNode-8 / name
                                                                                   :op1 (MRPNode-9 / south)
                                                                                   :op2 (MRPNode-10 / china)
                                                                                   :op3 (MRPNode-11 / sea))))))

# ::id 589
# ::snt Pro-Palestinian Activists March to UN Headquarters
# ::tok Pro - Palestinian Activists March to UN Headquarters
# ::collapsed instance nodes 0
(MRPNode-0 / byline-91
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / favor-01
                                                :ARG1 (MRPNode-3 / country
                                                                 :name (MRPNode-4 / name
                                                                                  :op1 (MRPNode-5 / palestine))))
                            :ARG0-of (MRPNode-6 / act-02))
           :ARG4 (MRPNode-7 / headquarters
                            :poss (MRPNode-8 / organization
                                             :name (MRPNode-9 / name
                                                              :op1 (MRPNode-10 / un)))))

# ::id 590
# ::snt All 224 dead in Russian airliner mystery crash
# ::tok All 224 dead in Russian airliner mystery crash
# ::collapsed instance nodes 6
(MRPNode-0 / die-01
           :ARG1 (MRPNode-1 / cause-01
                            :ARG0 (MRPNode-2 / crash-01
                                             :ARG1 (MRPNode-3 / russian_airliner_mystery_5)))
           :ARG1 (MRPNode-4 / all_224_3
                            :quant (MRPNode-5 / 224)))

# ::id 591
# ::snt Scientists prove there is water on Mars
# ::tok Scientists prove there is water on Mars
# ::collapsed instance nodes 0
(MRPNode-0 / prove-01
           :ARG1 (MRPNode-1 / water
                            :location (MRPNode-2 / planet
                                                 :name (MRPNode-3 / name
                                                                  :op1 (MRPNode-4 / mars))))
           :ARG0 (MRPNode-5 / scientist))

# ::id 592
# ::snt Editors from around the world urge Turkey to protect media
# ::tok Editors from around the world urge Turkey to protect media
# ::collapsed instance nodes 0
(MRPNode-0 / urge-01
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / turkey)))
           :ARG0 (MRPNode-4 / person
                            :ARG0-of (MRPNode-5 / have-org-role-91
                                                :ARG2 (MRPNode-6 / editor))
                            :source (MRPNode-7 / around
                                               :op1 (MRPNode-8 / world)))
           :ARG2 (MRPNode-9 / protect-01
                            :ARG0 MRPNode-1
                            :ARG1 (MRPNode-10 / media)))

# ::id 593
# ::snt North Korea to put US citizen on trial
# ::tok North Korea to put US citizen on trial
# ::collapsed instance nodes 3
(MRPNode-0 / try-01
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / north)
                                             :op2 (MRPNode-4 / korea)))
           :ARG1 (MRPNode-5 / us_citizen_4
                            :ARG0 MRPNode-1))

# ::id 594
# ::snt Hong Kong officials resume work as protests thin
# ::tok Hong Kong officials resume work as protests thin
# ::collapsed instance nodes 0
(MRPNode-0 / resume-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / have-org-role-91
                                                :ARG1 (MRPNode-3 / city
                                                                 :name (MRPNode-4 / name
                                                                                  :op1 (MRPNode-5 / hong)
                                                                                  :op2 (MRPNode-6 / kong)))
                                                :ARG2 (MRPNode-7 / official)))
           :ARG1 (MRPNode-8 / protest-01)
           :ARG1 (MRPNode-9 / work-01
                            :ARG0 MRPNode-1))

# ::id 595
# ::snt Volkswagen skids into red in wake of pollution scandal
# ::tok Volkswagen skids into red in wake of pollution scandal
# ::collapsed instance nodes 0
(MRPNode-0 / switch-01
           :ARG1 (MRPNode-1 / company
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / volkswagen)))
           :ARG1-of (MRPNode-4 / cause-01
                               :ARG0 (MRPNode-5 / scandal
                                                :topic (MRPNode-6 / pollute-01)))
           :ARG2 (MRPNode-7 / red-02))

# ::id 596
# ::snt France shuts mosque, arrests man in crackdown after attacks
# ::tok France shuts mosque , arrests man in crackdown after attacks
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / shut-down-05
                           :ARG1 (MRPNode-2 / mosque)
                           :ARG0 (MRPNode-3 / country
                                            :name (MRPNode-4 / name
                                                             :op1 (MRPNode-5 / france))))
           :op2 (MRPNode-6 / arrest-01
                           :ARG0 MRPNode-3
                           :ARG1 (MRPNode-7 / attack-01
                                            :time (MRPNode-8 / after))
                           :ARG1 (MRPNode-9 / man)))

# ::id 597
# ::snt Russian plane reportedly crashes in Egypt
# ::tok Russian plane reportedly crashes in Egypt
# ::collapsed instance nodes 3
(MRPNode-0 / crash-01
           :ARG1 (MRPNode-1 / russian_plane_4)
           :ARG1-of (MRPNode-2 / report-01)
           :location (MRPNode-3 / country
                                :name (MRPNode-4 / name
                                                 :op1 (MRPNode-5 / egypt))))

# ::id 598
# ::snt Mandela's condition has 'improved'
# ::tok Mandela 's condition has ' improved '
# ::collapsed instance nodes 0
(MRPNode-0 / improve-01
           :ARG1 (MRPNode-1 / condition
                            :poss (MRPNode-2 / person
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / mandela)))))

# ::id 599
# ::snt Search leader urges caution in findings related to missing Malaysian jetliner
# ::tok Search leader urges caution in findings related to missing Malaysian jetliner
# ::collapsed instance nodes 3
(MRPNode-0 / urge-01
           :ARG1 (MRPNode-1 / cautious-02
                            :ARG1 (MRPNode-2 / find-01
                                             :ARG1-of (MRPNode-3 / relate-01
                                                                 :ARG2 (MRPNode-4 / miss-01
                                                                                  :ARG1 (MRPNode-5 / malaysian_jetliner_4))))
                            :ARG0 (MRPNode-6 / person
                                             :ARG0-of (MRPNode-7 / lead-02
                                                                 :ARG1 (MRPNode-8 / search-01))))
           :ARG0 MRPNode-6)

# ::id 600
# ::snt Mandela remembered by family, as stadium memorial service is planned
# ::tok Mandela remembered by family , as stadium memorial service is planned
# ::collapsed instance nodes 2
(MRPNode-0 / remember-01
           :ARG1 (MRPNode-1 / person
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / mandela)))
           :ARG0 (MRPNode-4 / family)
           :time (MRPNode-5 / plan-01
                            :ARG1 (MRPNode-6 / stadium_memorial_service_3
                                             :ARG1 (MRPNode-7 / memorial))))

# ::id 601
# ::snt Obama holds out over Syria strikes
# ::tok Obama holds out over Syria strikes
# ::collapsed instance nodes 0
(MRPNode-0 / hold-up-11
           :ARG1 (MRPNode-1 / person
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / obama)))
           :ARG2 (MRPNode-4 / strike-01
                            :ARG1 (MRPNode-5 / country
                                             :name (MRPNode-6 / name
                                                              :op1 (MRPNode-7 / syria)))))

# ::id 602
# ::snt George Zimmerman found not guilty of Trayvon Martin murder
# ::tok George Zimmerman found not guilty of Trayvon Martin murder
# ::collapsed instance nodes 0
(MRPNode-0 / find-02
           :ARG1 (MRPNode-1 / guilty-01
                            :polarity (MRPNode-2 / -)
                            :ARG1 (MRPNode-3 / person
                                             :name (MRPNode-4 / name
                                                              :op1 (MRPNode-5 / george)
                                                              :op2 (MRPNode-6 / zimmerman)))
                            :ARG2 (MRPNode-7 / murder-01
                                             :ARG0 (MRPNode-8 / person
                                                              :name (MRPNode-9 / name
                                                                               :op1 (MRPNode-10 / trayvon)
                                                                               :op2 (MRPNode-11 / martin))))))

# ::id 603
# ::snt Obama, Hollande Hail Transformed US-French Relationship
# ::tok Obama , Hollande Hail Transformed US - French Relationship
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / person
                           :name (MRPNode-2 / name
                                            :op1 (MRPNode-3 / obama)))
           :op2 (MRPNode-4 / surrender-01
                           :ARG1 (MRPNode-5 / relation-03
                                            :ARG0 (MRPNode-6 / country
                                                             :name (MRPNode-7 / name
                                                                              :op1 (MRPNode-8 / us)))
                                            :ARG0 (MRPNode-9 / country
                                                             :name (MRPNode-10 / name
                                                                               :op1 (MRPNode-11 / france))))
                           :ARG0 (MRPNode-12 / person
                                             :name (MRPNode-13 / name
                                                               :op1 (MRPNode-14 / obama)))))

# ::id 604
# ::snt Russian parliament allows Putin to use military in Ukraine
# ::tok Russian parliament allows Putin to use military in Ukraine
# ::collapsed instance nodes 0
(MRPNode-0 / allow-01
           :ARG1 (MRPNode-1 / use-01
                            :ARG1 (MRPNode-2 / military)
                            :ARG0 (MRPNode-3 / person
                                             :name (MRPNode-4 / name
                                                              :op1 (MRPNode-5 / putin)))
                            :location (MRPNode-6 / country
                                                 :name (MRPNode-7 / name
                                                                  :op1 (MRPNode-8 / ukraine))))
           :ARG0 (MRPNode-9 / government-organization
                            :name (MRPNode-10 / name
                                              :op1 (MRPNode-11 / parliament))))

# ::id 605
# ::snt World stocks rise on hopes Fed to keep stimulus
# ::tok World stocks rise on hopes Fed to keep stimulus
# ::collapsed instance nodes 1
(MRPNode-0 / rise-01
           :ARG1 (MRPNode-1 / world_stocks_2)
           :ARG2 (MRPNode-2 / hope-01
                            :ARG1 (MRPNode-3 / keep-01
                                             :ARG1 (MRPNode-4 / stimulus)
                                             :ARG0 (MRPNode-5 / government-organization
                                                              :name (MRPNode-6 / name
                                                                               :op1 (MRPNode-7 / fed))))))

# ::id 606
# ::snt No winners in a war of sanctions
# ::tok No winners in a war of sanctions
# ::collapsed instance nodes 0
(MRPNode-0 / person
           :polarity (MRPNode-1 / -)
           :ARG0-of (MRPNode-2 / win-01
                               :location (MRPNode-3 / war-01
                                                    :ARG1 (MRPNode-4 / sanction-02))))

# ::id 607
# ::snt Tata Nano and other Indian small cars fail crash tests
# ::tok Tata Nano and other Indian small cars fail crash tests
# ::collapsed instance nodes 5
(MRPNode-0 / fail-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / person
                                            :name (MRPNode-3 / name
                                                             :op1 (MRPNode-4 / tata)
                                                             :op2 (MRPNode-5 / nano)))
                            :op2 (MRPNode-6 / other_indian_small_cars_6))
           :ARG2 (MRPNode-7 / test-01
                            :ARG2 (MRPNode-8 / crash-01)))

# ::id 608
# ::snt Turkey unrest goes on despite end to park protest
# ::tok Turkey unrest goes on despite end to park protest
# ::collapsed instance nodes 0
(MRPNode-0 / go-on-15
           :ARG1 (MRPNode-1 / unrest
                            :location (MRPNode-2 / country
                                                 :name (MRPNode-3 / name
                                                                  :op1 (MRPNode-4 / turkey))))
           :concession (MRPNode-5 / end-01
                                  :ARG1 (MRPNode-6 / protest-01
                                                   :ARG1 (MRPNode-7 / park-01))))

# ::id 609
# ::snt Top Asian News at 2:30 p.m. GMT
# ::tok Top Asian News at 2:30 p.m. GMT
# ::collapsed instance nodes 0
(MRPNode-0 / broadcast-program
           :mod (MRPNode-1 / name
                           :op1 (MRPNode-2 / top)
                           :op2 (MRPNode-3 / asian)
                           :op3 (MRPNode-4 / news))
           :time (MRPNode-5 / broadcast-program
                            :name (MRPNode-6 / name
                                             :op1 (MRPNode-7 / gmt)))
           :time (MRPNode-8 / date-entity
                            :time (MRPNode-9 / "2:30")))

# ::id 610
# ::snt Singapore shares open 0.83% higher on Wednesday
# ::tok Singapore shares open 0.83 % higher on Wednesday
# ::collapsed instance nodes 0
(MRPNode-0 / open-01
           :ARG1 (MRPNode-1 / share-01
                            :ARG0 (MRPNode-2 / country
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / singapore)))
                            :quant (MRPNode-5 / percentage-entity
                                              :value (MRPNode-6 / 0.83)))
           :time (MRPNode-7 / high-02
                            :ARG2-of (MRPNode-8 / have-degree-91
                                                :ARG3 (MRPNode-9 / more)))
           :time (MRPNode-10 / date-entity
                             :weekday (MRPNode-11 / wednesday)))

# ::id 611
# ::snt China treasury bond futures open higher Tuesday
# ::tok China treasury bond futures open higher Tuesday
# ::collapsed instance nodes 5
(MRPNode-0 / open-01
           :ARG1 (MRPNode-1 / china_treasury_bond_futures_6)
           :ARG1-of (MRPNode-2 / have-degree-91
                               :ARG3 (MRPNode-3 / tuesday)
                               :ARG3 (MRPNode-4 / more)
                               :ARG2 (MRPNode-5 / high-02))
           :ARG1-of MRPNode-5)

# ::id 612
# ::snt 7.3 magnitude earthquake strikes Nepal
# ::tok 7.3 magnitude earthquake strikes Nepal
# ::collapsed instance nodes 0
(MRPNode-0 / strike-01
           :ARG0 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / nepal)))
           :ARG0 (MRPNode-4 / earthquake
                            :quant (MRPNode-5 / seismic-quantity
                                              :quant (MRPNode-6 / 7.3))))

# ::id 613
# ::snt Iran's parliament backs nuclear deal
# ::tok Iran 's parliament backs nuclear deal
# ::collapsed instance nodes 0
(MRPNode-0 / back-01
           :ARG1 (MRPNode-1 / deal-01
                            :ARG2 (MRPNode-2 / nucleus))
           :ARG0 (MRPNode-3 / government-organization
                            :mod (MRPNode-4 / country
                                            :name (MRPNode-5 / name
                                                             :op1 (MRPNode-6 / iran)))
                            :name (MRPNode-7 / name
                                             :op1 (MRPNode-8 / parliament))))

# ::id 614
# ::snt Israeli forces arrest 21 Palestinians overnight, clash with locals
# ::tok Israeli forces arrest 21 Palestinians overnight , clash with locals
# ::collapsed instance nodes 7
(MRPNode-0 / and
           :op1 (MRPNode-1 / arrest-01
                           :ARG1 (MRPNode-2 / 21_palestinians_5
                                            :quant (MRPNode-3 / 21))
                           :ARG0 (MRPNode-4 / israeli_forces_4)
                           :time (MRPNode-5 / overnight))
           :op2 (MRPNode-6 / clash-01
                           :ARG1 (MRPNode-7 / local-02)))

# ::id 615
# ::snt CCTV of gunmen in Tunisia museum attack
# ::tok CCTV of gunmen in Tunisia museum attack
# ::collapsed instance nodes 0
(MRPNode-0 / attack-01
           :ARG0 (MRPNode-1 / gunman
                            :location (MRPNode-2 / country
                                                 :name (MRPNode-3 / name
                                                                  :op1 (MRPNode-4 / tunisia))))
           :mod (MRPNode-5 / television
                           :mod (MRPNode-6 / circuit
                                           :ARG1-of (MRPNode-7 / close-01)))
           :location (MRPNode-8 / museum))

# ::id 616
# ::snt Teenager tests negative for Ebola
# ::tok Teenager tests negative for Ebola
# ::collapsed instance nodes 0
(MRPNode-0 / test-01
           :ARG2 (MRPNode-1 / Teenager)
           :ARG2 (MRPNode-2 / disease
                            :name (MRPNode-3 / name
                                             :op1 (MRPNode-4 / ebola)))
           :ARG2 (MRPNode-5 / negative-03))

# ::id 617
# ::snt Texas sues over Syrian refugees
# ::tok Texas sues over Syrian refugees
# ::collapsed instance nodes 3
(MRPNode-0 / sue-02
           :ARG0 (MRPNode-1 / state
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / texas)))
           :ARG2 (MRPNode-4 / syrian_refugees_4))

# ::id 618
# ::snt Rooney helps Man United beat Everton 3-0 in Premier League
# ::tok Rooney helps Man United beat Everton 3-0 in Premier League
# ::collapsed instance nodes 0
(MRPNode-0 / help-01
           :ARG1 (MRPNode-1 / team
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / man)
                                             :op2 (MRPNode-4 / united)))
           :ARG0 (MRPNode-5 / person
                            :name (MRPNode-6 / name
                                             :op1 (MRPNode-7 / rooney)))
           :ARG1 (MRPNode-8 / beat-03
                            :arg1 (MRPNode-9 / 0)
                            :ARG0 MRPNode-1
                            :location (MRPNode-10 / team
                                                  :name (MRPNode-11 / name
                                                                    :op1 (MRPNode-12 / everton)))
                            :location (MRPNode-13 / league
                                                  :name (MRPNode-14 / name
                                                                    :op1 (MRPNode-15 / premier)
                                                                    :op3 (MRPNode-16 / league)))))

# ::id 619
# ::snt Hard-line Jewish leader shot in Jerusalem
# ::tok Hard - line Jewish leader shot in Jerusalem
# ::collapsed instance nodes 0
(MRPNode-0 / shoot-02
           :ARG1 (MRPNode-1 / person
                            :mod (MRPNode-2 / line
                                            :ARG1-of (MRPNode-3 / hard-04))
                            :mod (MRPNode-4 / religious-group
                                            :name (MRPNode-5 / name
                                                             :op1 (MRPNode-6 / jew)))
                            :ARG0-of (MRPNode-7 / lead-02))
           :location (MRPNode-8 / city
                                :name (MRPNode-9 / name
                                                 :op1 (MRPNode-10 / jerusalem))))

# ::id 620
# ::snt Waba emerges new NLC president
# ::tok Waba emerges new NLC president
# ::collapsed instance nodes 0
(MRPNode-0 / emerge-01
           :ARG1 (MRPNode-1 / person
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / waba)))
           :ARG1 (MRPNode-4 / person
                            :ARG0-of (MRPNode-5 / have-org-role-91
                                                :ARG1 (MRPNode-6 / political-party
                                                                 :name (MRPNode-7 / name
                                                                                  :op1 (MRPNode-8 / nlc)))
                                                :ARG2 (MRPNode-9 / president
                                                                 :ARG1-of (MRPNode-10 / new-01)))))

# ::id 621
# ::snt Egypt: IPI Urges Release of Al Jazeera Journalist Arrested in Berlin
# ::tok Egypt : IPI Urges Release of Al Jazeera Journalist Arrested in Berlin
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / urge-01
                           :ARG1 (MRPNode-2 / country
                                            :name (MRPNode-3 / name
                                                             :op1 (MRPNode-4 / egypt)))
                           :ARG0 (MRPNode-5 / release-01
                                            :ARG1 (MRPNode-6 / publication
                                                             :name (MRPNode-7 / name
                                                                              :op1 (MRPNode-8 / ipi))))
                           :ARG0 (MRPNode-9 / publication
                                            :name (MRPNode-10 / name
                                                              :op1 (MRPNode-11 / al)
                                                              :op2 (MRPNode-12 / jazeera))))
           :op2 (MRPNode-13 / arrest-01
                            :location (MRPNode-14 / city
                                                  :name (MRPNode-15 / name
                                                                    :op1 (MRPNode-16 / berlin)))))

# ::id 622
# ::snt 5 US airstrikes target Islamic State fighters
# ::tok 5 US airstrikes target Islamic State fighters
# ::collapsed instance nodes 3
(MRPNode-0 / target-01
           :ARG1 (MRPNode-1 / fight-01
                            :ARG0 (MRPNode-2 / islamic_state_4))
           :ARG0 (MRPNode-3 / strike-01
                            :path (MRPNode-4 / 5)
                            :path (MRPNode-5 / air))
           :ARG0 (MRPNode-6 / country
                            :name (MRPNode-7 / name
                                             :op1 (MRPNode-8 / us))))

# ::id 623
# ::snt Burundi police fire tear gas at protesters
# ::tok Burundi police fire tear gas at protesters
# ::collapsed instance nodes 4
(MRPNode-0 / fire-01
           :ARG1 (MRPNode-1 / tear_gas_2)
           :ARG0 (MRPNode-2 / burundi_police_4)
           :destination (MRPNode-3 / person
                                   :ARG0-of (MRPNode-4 / protest-01)))

# ::id 624
# ::snt Ashya's Parents Arrive For Extradition Hearing
# ::tok Ashya 's Parents Arrive For Extradition Hearing
# ::collapsed instance nodes 0
(MRPNode-0 / arrive-01
           :ARG1 (MRPNode-1 / person
                            :ARG0-of (MRPNode-2 / have-rel-role-91
                                                :ARG1 (MRPNode-3 / person
                                                                 :name (MRPNode-4 / name
                                                                                  :op1 (MRPNode-5 / ashya)))
                                                :ARG2 (MRPNode-6 / parent)))
           :purpose (MRPNode-7 / hear-01
                               :ARG2 (MRPNode-8 / extradite-01)))

# ::id 625
# ::snt Nigeria admits slow response in Ebola case
# ::tok Nigeria admits slow response in Ebola case
# ::collapsed instance nodes 0
(MRPNode-0 / admit-02
           :ARG1 (MRPNode-1 / respond-01
                            :ARG1 (MRPNode-2 / case-04
                                             :ARG1 (MRPNode-3 / disease
                                                              :name (MRPNode-4 / name
                                                                               :op1 (MRPNode-5 / ebola))))
                            :ARG1-of (MRPNode-6 / slow-05)
                            :ARG0 (MRPNode-7 / country
                                             :name (MRPNode-8 / name
                                                              :op1 (MRPNode-9 / nigeria))))
           :ARG0 MRPNode-7)

# ::id 626
# ::snt Thousands cross Austria-Hungary border
# ::tok Thousands cross Austria - Hungary border
# ::collapsed instance nodes 0
(MRPNode-0 / cross-02
           :ARG1 (MRPNode-1 / border-01
                            :ARG2 (MRPNode-2 / country
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / austria))))
           :ARG0 (MRPNode-5 / person
                            :quant (MRPNode-6 / multiple
                                              :op1 (MRPNode-7 / 1000))))

# ::id 627
# ::snt Benzema faces possible charges in sex-tape case
# ::tok Benzema faces possible charges in sex - tape case
# ::collapsed instance nodes 0
(MRPNode-0 / face-01
           :ARG1 (MRPNode-1 / charge-05
                            :ARG1-of (MRPNode-2 / possible-01)
                            :ARG2 (MRPNode-3 / tape-02
                                             :ARG1 (MRPNode-4 / sex-01))
                            :ARG1 (MRPNode-5 / person
                                             :name (MRPNode-6 / name
                                                              :op1 (MRPNode-7 / benzema))))
           :ARG0 MRPNode-5)

# ::id 628
# ::snt US Senate votes to advance Iran nuclear review bill
# ::tok US Senate votes to advance Iran nuclear review bill
# ::collapsed instance nodes 10
(MRPNode-0 / vote-01
           :ARG1 (MRPNode-1 / advance-01
                            :ARG1 (MRPNode-2 / iran_nuclear_review_bill_6)
                            :ARG0 (MRPNode-3 / us_senate_6))
           :ARG0 MRPNode-3)

# ::id 629
# ::snt Gunners fire but fail to advance in Champions League
# ::tok Gunners fire but fail to advance in Champions League
# ::collapsed instance nodes 1
(MRPNode-0 / contrast-01
           :ARG1 (MRPNode-1 / fail-01
                            :ARG1 (MRPNode-2 / person
                                             :ARG0-of (MRPNode-3 / team
                                                                 :name (MRPNode-4 / name
                                                                                  :op2 (MRPNode-5 / league)))
                                             :ARG0-of (MRPNode-6 / fight-01))
                            :ARG2 (MRPNode-7 / advance-01
                                             :ARG0 MRPNode-2
                                             :ARG1 (MRPNode-8 / champions_2)))
           :ARG1 (MRPNode-9 / fire-01
                            :ARG0 MRPNode-2))

# ::id 630
# ::snt Iranian President praises nuclear deal
# ::tok Iranian President praises nuclear deal
# ::collapsed instance nodes 0
(MRPNode-0 / praise-01
           :ARG1 (MRPNode-1 / deal-01
                            :ARG2 (MRPNode-2 / nucleus))
           :ARG0 (MRPNode-3 / person
                            :ARG0-of (MRPNode-4 / have-org-role-91
                                                :ARG1 (MRPNode-5 / country
                                                                 :name (MRPNode-6 / name
                                                                                  :op1 (MRPNode-7 / iran)))
                                                :ARG2 (MRPNode-8 / president))))

# ::id 631
# ::snt Boko Haram disrupts Nigerian elections
# ::tok Boko Haram disrupts Nigerian elections
# ::collapsed instance nodes 0
(MRPNode-0 / disrupt-01
           :ARG1 (MRPNode-1 / elect-01
                            :ARG1 (MRPNode-2 / disrupt-01)
                            :location (MRPNode-3 / country
                                                 :name (MRPNode-4 / name
                                                                  :op1 (MRPNode-5 / vietnam))))
           :ARG0 (MRPNode-6 / person
                            :name (MRPNode-7 / name
                                             :op1 (MRPNode-8 / boko)
                                             :op2 (MRPNode-9 / haram))))

# ::id 632
# ::snt South Korea regrets North's refusal of talks
# ::tok South Korea regrets North 's refusal of talks
# ::collapsed instance nodes 0
(MRPNode-0 / regret-01
           :ARG1 (MRPNode-1 / refuse-01
                            :ARG1 (MRPNode-2 / talk-01
                                             :ARG0 (MRPNode-3 / country
                                                              :name (MRPNode-4 / name
                                                                               :op1 (MRPNode-5 / north)
                                                                               :op2 (MRPNode-6 / korea))))
                            :ARG0 MRPNode-3)
           :ARG0 (MRPNode-7 / country
                            :name (MRPNode-8 / name
                                             :op1 (MRPNode-9 / south)
                                             :op2 (MRPNode-10 / korea))))

# ::id 633
# ::snt South Korea reports seven new MERS cases
# ::tok South Korea reports seven new MERS cases
# ::collapsed instance nodes 0
(MRPNode-0 / report-01
           :ARG1 (MRPNode-1 / case-04
                            :quant (MRPNode-2 / 7)
                            :ARG1-of (MRPNode-3 / new-01)
                            :ARG1 (MRPNode-4 / product
                                             :name (MRPNode-5 / name
                                                              :op1 (MRPNode-6 / mers))))
           :ARG0 (MRPNode-7 / country
                            :name (MRPNode-8 / name
                                             :op1 (MRPNode-9 / south)
                                             :op2 (MRPNode-10 / korea))))

# ::id 634
# ::snt U.S. military says it conducts airstrikes against IS in Syria, Iraq
# ::tok U.S. military says it conducts airstrikes against IS in Syria , Iraq
# ::collapsed instance nodes 0
(MRPNode-0 / say-01
           :ARG1 (MRPNode-1 / conduct-01
                            :ARG1 (MRPNode-2 / strike-01
                                             :ARG1 (MRPNode-3 / country
                                                              :name (MRPNode-4 / name
                                                                               :op1 (MRPNode-5 / u.s.)))
                                             :ARG1 (MRPNode-6 / counter-01
                                                              :ARG1 (MRPNode-7 / military
                                                                               :name (MRPNode-8 / name
                                                                                                :op1 (MRPNode-9 / is))))
                                             :path (MRPNode-10 / air))
                            :ARG0 (MRPNode-11 / military
                                              :mod (MRPNode-12 / country
                                                               :name (MRPNode-13 / name
                                                                                 :op1 (MRPNode-14 / syria)))))
           :ARG0 MRPNode-11)

# ::id 635
# ::snt UK Leader Signals Support for Airstrikes on IS in Syria
# ::tok UK Leader Signals Support for Airstrikes on IS in Syria
# ::collapsed instance nodes 0
(MRPNode-0 / support-01
           :ARG1 (MRPNode-1 / strike-01
                            :location (MRPNode-2 / country
                                                 :name (MRPNode-3 / name
                                                                  :op1 (MRPNode-4 / syria)))
                            :location (MRPNode-5 / air))
           :ARG0 (MRPNode-6 / military
                            :name (MRPNode-7 / name
                                             :op1 (MRPNode-8 / uk)
                                             :op2 (MRPNode-9 / gun))
                            :ARG0-of (MRPNode-10 / lead-02)))

# ::id 636
# ::snt Israel bars Palestinians from Jerusalem's Old City
# ::tok Israel bars Palestinians from Jerusalem 's Old City
# ::collapsed instance nodes 3
(MRPNode-0 / bar-01
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / israel)))
           :ARG2 (MRPNode-4 / city
                            :name (MRPNode-5 / name
                                             :op1 (MRPNode-6 / old)
                                             :op2 (MRPNode-7 / city)))
           :ARG1 (MRPNode-8 / palestinians_4))

# ::id 637
# ::snt How much do you know about Secret Service?
# ::tok How much do you know about Secret Service ?
# ::collapsed instance nodes 0
(MRPNode-0 / know-01
           :ARG1 (MRPNode-1 / much
                            :topic (MRPNode-2 / amr-unknown)
                            :topic (MRPNode-3 / military
                                              :name (MRPNode-4 / name
                                                               :op1 (MRPNode-5 / secret)
                                                               :op2 (MRPNode-6 / service))))
           :ARG0 (MRPNode-7 / you))

# ::id 638
# ::snt UN chief welcomes peaceful presidential elections in Guinea
# ::tok UN chief welcomes peaceful presidential elections in Guinea
# ::collapsed instance nodes 0
(MRPNode-0 / welcome-01
           :ARG1 (MRPNode-1 / elect-01
                            :mod (MRPNode-2 / country
                                            :name (MRPNode-3 / name
                                                             :op1 (MRPNode-4 / guinea)))
                            :mod (MRPNode-5 / president)
                            :mod (MRPNode-6 / peaceful))
           :ARG0 (MRPNode-7 / person
                            :ARG0-of (MRPNode-8 / have-org-role-91
                                                :ARG1 (MRPNode-9 / organization
                                                                 :name (MRPNode-10 / name
                                                                                   :op1 (MRPNode-11 / un)))
                                                :ARG2 (MRPNode-12 / chief))))

# ::id 639
# ::snt At least 18 killed in Iraq mosque bombing
# ::tok At least 18 killed in Iraq mosque bombing
# ::collapsed instance nodes 0
(MRPNode-0 / kill-01
           :ARG1 (MRPNode-1 / person
                            :quant (MRPNode-2 / at-least
                                              :op1 (MRPNode-3 / 18)))
           :ARG1-of (MRPNode-4 / bomb-01
                               :ARG1 (MRPNode-5 / mosque
                                                :location (MRPNode-6 / country
                                                                     :name (MRPNode-7 / name
                                                                                      :op1 (MRPNode-8 / iraq))))))

# ::id 640
# ::snt Malaysia Airlines plane crashes on Ukraine-Russia border - live
# ::tok Malaysia Airlines plane crashes on Ukraine - Russia border - live
# ::collapsed instance nodes 0
(MRPNode-0 / crash-01
           :ARG1 (MRPNode-1 / cause-01
                            :ARG0 (MRPNode-2 / border-01
                                             :ARG2 (MRPNode-3 / country
                                                              :name (MRPNode-4 / name
                                                                               :op1 (MRPNode-5 / ukraine)))
                                             :ARG2 (MRPNode-6 / country
                                                              :name (MRPNode-7 / name
                                                                               :op1 (MRPNode-8 / russia)))
                                             :ARG2 (MRPNode-9 / live-01)))
           :ARG1 (MRPNode-10 / plane
                             :poss (MRPNode-11 / company
                                               :name (MRPNode-12 / name
                                                                 :op1 (MRPNode-13 / malaysia)
                                                                 :op2 (MRPNode-14 / airlines)))))

# ::id 641
# ::snt Tycoon claims win in Ukraine and promises to seek future in EU
# ::tok Tycoon claims win in Ukraine and promises to seek future in EU
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / claim-01
                           :ARG1 (MRPNode-2 / win-01
                                            :location (MRPNode-3 / country
                                                                 :name (MRPNode-4 / name
                                                                                  :op1 (MRPNode-5 / eu))))
                           :ARG0 (MRPNode-6 / company
                                            :name (MRPNode-7 / name
                                                             :op1 (MRPNode-8 / tycoon))))
           :op2 (MRPNode-9 / promise-01
                           :ARG0 MRPNode-6
                           :ARG2 (MRPNode-10 / seek-01
                                             :ARG0 MRPNode-6
                                             :ARG1 (MRPNode-11 / future))))

# ::id 642
# ::snt The covert war in Pakistan
# ::tok The covert war in Pakistan
# ::collapsed instance nodes 0
(MRPNode-0 / war-01
           :mod (MRPNode-1 / covert)
           :location (MRPNode-2 / country
                                :name (MRPNode-3 / name
                                                 :op1 (MRPNode-4 / pakistan))))

# ::id 643
# ::snt 4 killed, several injured in SW China car accident
# ::tok 4 killed , several injured in SW China car accident
# ::collapsed instance nodes 5
(MRPNode-0 / and
           :op1 (MRPNode-1 / kill-01
                           :ARG1 (MRPNode-2 / person
                                            :quant (MRPNode-3 / 4)))
           :op2 (MRPNode-4 / injure-01
                           :ARG1 (MRPNode-5 / person
                                            :quant (MRPNode-6 / several)))
           :location (MRPNode-7 / sw_china_car_accident_6))

# ::id 644
# ::snt 4 dead, 3 injured in east China road accident
# ::tok 4 dead , 3 injured in east China road accident
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / die-01
                           :ARG1 (MRPNode-2 / person
                                            :quant (MRPNode-3 / 4)))
           :op2 (MRPNode-4 / injure-01
                           :ARG1 (MRPNode-5 / person
                                            :quant (MRPNode-6 / 3)))
           :location (MRPNode-7 / accident
                                :mod (MRPNode-8 / road)
                                :location (MRPNode-9 / east
                                                     :part-of (MRPNode-10 / country
                                                                          :name (MRPNode-11 / name
                                                                                            :op1 (MRPNode-12 / china))))))

# ::id 645
# ::snt Pope canonizes 2 Palestinians
# ::tok Pope canonizes 2 Palestinians
# ::collapsed instance nodes 7
(MRPNode-0 / condemn-01
           :ARG1 (MRPNode-1 / pope_4)
           :ARG0 (MRPNode-2 / 2_palestinians_5
                            :quant (MRPNode-3 / 2)))

# ::id 646
# ::snt 3 killed, 4 injured in Los Angeles shootings
# ::tok 3 killed , 4 injured in Los Angeles shootings
# ::collapsed instance nodes 0
(MRPNode-0 / and
           :op1 (MRPNode-1 / kill-01
                           :ARG1 (MRPNode-2 / cause-01
                                            :ARG0 (MRPNode-3 / shoot-02
                                                             :location (MRPNode-4 / city
                                                                                  :name (MRPNode-5 / name
                                                                                                   :op1 (MRPNode-6 / los)
                                                                                                   :op2 (MRPNode-7 / angeles)))))
                           :ARG1 (MRPNode-8 / person
                                            :quant (MRPNode-9 / 3)))
           :op2 (MRPNode-10 / injure-01
                            :ARG1 (MRPNode-11 / person
                                              :quant (MRPNode-12 / 4))))

# ::id 647
# ::snt 5 killed in Israeli air strikes in Gaza
# ::tok 5 killed in Israeli air strikes in Gaza
# ::collapsed instance nodes 0
(MRPNode-0 / kill-01
           :ARG1 (MRPNode-1 / strike-01
                            :ARG1 (MRPNode-2 / country
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / israel)))
                            :ARG0 (MRPNode-5 / air)
                            :location (MRPNode-6 / country-region
                                                 :name (MRPNode-7 / name
                                                                  :op1 (MRPNode-8 / gaza))))
           :ARG1-of (MRPNode-9 / cause-01))

# ::id 648
# ::snt Funeral of Ian Paisley to take place in Belfast
# ::tok Funeral of Ian Paisley to take place in Belfast
# ::collapsed instance nodes 0
(MRPNode-0 / funeral
           :location (MRPNode-1 / person
                                :name (MRPNode-2 / name
                                                 :op1 (MRPNode-3 / ian)
                                                 :op2 (MRPNode-4 / paisley)))
           :location (MRPNode-5 / city
                                :name (MRPNode-6 / name
                                                 :op1 (MRPNode-7 / belfast))))

# ::id 649
# ::snt Libya: UN orders investigation into Libya rights abuses
# ::tok Libya : UN orders investigation into Libya rights abuses
# ::collapsed instance nodes 0
(MRPNode-0 / investigate-01
           :ARG1 (MRPNode-1 / abuse-01
                            :ARG1 (MRPNode-2 / right-05))
           :ARG0 (MRPNode-3 / country
                            :name (MRPNode-4 / name
                                             :op1 (MRPNode-5 / libya)))
           :ARG1-of (MRPNode-6 / order-01
                               :ARG0 (MRPNode-7 / organization
                                                :name (MRPNode-8 / name
                                                                 :op1 (MRPNode-9 / un)))))

# ::id 650
# ::snt Oscar Pistorius sentenced to 5 years in prison
# ::tok Oscar Pistorius sentenced to 5 years in prison
# ::collapsed instance nodes 0
(MRPNode-0 / sentence-01
           :ARG1 (MRPNode-1 / person
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / oscar)
                                             :op2 (MRPNode-4 / pistorius)))
           :ARG2 (MRPNode-5 / temporal-quantity
                            :quant (MRPNode-6 / 5)
                            :location (MRPNode-7 / prison)
                            :unit (MRPNode-8 / year)))

# ::id 651
# ::snt Govt. to hold talks with FTII students
# ::tok Govt. to hold talks with FTII students
# ::collapsed instance nodes 3
(MRPNode-0 / hold-04
           :ARG1 (MRPNode-1 / talk-01
                            :ARG2 (MRPNode-2 / students_4)
                            :ARG0 (MRPNode-3 / government-organization
                                             :ARG0-of (MRPNode-4 / govern-01)))
           :ARG0 MRPNode-3)

# ::id 652
# ::snt Li Na to announce retirement
# ::tok Li Na to announce retirement
# ::collapsed instance nodes 0
(MRPNode-0 / announce-01
           :ARG1 (MRPNode-1 / retire-01
                            :ARG0 (MRPNode-2 / person
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / li)
                                                              :op2 (MRPNode-5 / na))))
           :ARG0 MRPNode-2)

# ::id 653
# ::snt Plane Crash Site Search Called off for the Night
# ::tok Plane Crash Site Search Called off for the Night
# ::collapsed instance nodes 0
(MRPNode-0 / search-01
           :ARG1 (MRPNode-1 / fly-01
                            :duration (MRPNode-2 / date-entity
                                                 :dayperiod (MRPNode-3 / night)))
           :ARG2 (MRPNode-4 / crash-01
                            :ARG1 (MRPNode-5 / plane)))

# ::id 654
# ::snt Obama queries Turnbull over China port deal
# ::tok Obama queries Turnbull over China port deal
# ::collapsed instance nodes 0
(MRPNode-0 / query-01
           :ARG1 (MRPNode-1 / deal-01
                            :ARG2 (MRPNode-2 / port)
                            :ARG0 (MRPNode-3 / country
                                             :name (MRPNode-4 / name
                                                              :op1 (MRPNode-5 / china))))
           :ARG0 (MRPNode-6 / person
                            :name (MRPNode-7 / name
                                             :op1 (MRPNode-8 / obama)))
           :ARG0 (MRPNode-9 / person
                            :name (MRPNode-10 / name
                                              :op1 (MRPNode-11 / turnbull))))

# ::id 655
# ::snt China's generous 1MDB bid seen reaping it big returns in Malaysia
# ::tok China 's generous 1MDB bid seen reaping it big returns in Malaysia
# ::collapsed instance nodes 1
(MRPNode-0 / see-01
           :ARG1 (MRPNode-1 / reap-01
                            :ARG1 (MRPNode-2 / big_returns_2)
                            :ARG0 (MRPNode-3 / country
                                             :name (MRPNode-4 / name
                                                              :op1 (MRPNode-5 / malaysia)))
                            :ARG0 (MRPNode-6 / bid-01
                                             :ARG0 MRPNode-3
                                             :ARG1 (MRPNode-7 / country
                                                              :name (MRPNode-8 / name
                                                                               :op1 (MRPNode-9 / china)))
                                             :ARG1 (MRPNode-10 / generous-01)
                                             :ARG1 (MRPNode-11 / product
                                                               :name (MRPNode-12 / name
                                                                                 :op1 (MRPNode-13 / 1mdb)))))
           :ARG0 MRPNode-6)

# ::id 656
# ::snt Hezbollah targets Qaeda gathering along border with Syria
# ::tok Hezbollah targets Qaeda gathering along border with Syria
# ::collapsed instance nodes 0
(MRPNode-0 / target-01
           :ARG1 (MRPNode-1 / criminal-organization
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / hezbollah)))
           :ARG1 (MRPNode-4 / gather-01
                            :ARG1 (MRPNode-5 / criminal-organization
                                             :name (MRPNode-6 / name
                                                              :op1 (MRPNode-7 / qaeda)))
                            :location (MRPNode-8 / along
                                                 :op1 (MRPNode-9 / border-01
                                                                 :ARG2 (MRPNode-10 / country
                                                                                   :name (MRPNode-11 / name
                                                                                                     :op1 (MRPNode-12 / syria)))))))

# ::id 657
# ::snt Obama calls for international front against IS
# ::tok Obama calls for international front against IS
# ::collapsed instance nodes 2
(MRPNode-0 / call-03
           :ARG1 (MRPNode-1 / person
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / obama)))
           :ARG1 (MRPNode-4 / international_front_3))

# ::id 658
# ::snt Who abandoned 3 Boeing planes at the airport?
# ::tok Who abandoned 3 Boeing planes at the airport ?
# ::collapsed instance nodes 0
(MRPNode-0 / abandon-01
           :ARG1 (MRPNode-1 / plane
                            :quant (MRPNode-2 / 3)
                            :quant (MRPNode-3 / company
                                              :name (MRPNode-4 / name
                                                               :op1 (MRPNode-5 / boeing))))
           :ARG0 (MRPNode-6 / amr-unknown)
           :location (MRPNode-7 / airport))

# ::id 659
# ::snt Ebola UK: NHS staff 'panicked' after suspected Ebola cases
# ::tok Ebola UK : NHS staff ' panicked ' after suspected Ebola cases
# ::collapsed instance nodes 0
(MRPNode-0 / say-01
           :ARG1 (MRPNode-1 / panic-01
                            :ARG1 (MRPNode-2 / person
                                             :ARG2-of (MRPNode-3 / staff-01
                                                                 :ARG1 (MRPNode-4 / government-organization
                                                                                  :name (MRPNode-5 / name
                                                                                                   :op1 (MRPNode-6 / nhs)))))
                            :time (MRPNode-7 / after
                                             :op1 (MRPNode-8 / case-04
                                                             :ARG1 (MRPNode-9 / disease
                                                                              :name (MRPNode-10 / name
                                                                                                :op1 (MRPNode-11 / ebola)))
                                                             :ARG1-of (MRPNode-12 / suspect-01))))
           :ARG0 (MRPNode-13 / organization
                             :name (MRPNode-14 / name
                                               :op1 (MRPNode-15 / ebola))
                             :location (MRPNode-16 / country
                                                   :name (MRPNode-17 / name
                                                                     :op1 (MRPNode-18 / uk)))))

# ::id 660
# ::snt Philippines, Canada pledge to further boost relations
# ::tok Philippines , Canada pledge to further boost relations
# ::collapsed instance nodes 0
(MRPNode-0 / pledge-01
           :ARG0 (MRPNode-1 / boost-01
                            :ARG1 (MRPNode-2 / relation-03)
                            :degree (MRPNode-3 / further)
                            :ARG0 (MRPNode-4 / country
                                             :name (MRPNode-5 / name
                                                              :op1 (MRPNode-6 / philippines))))
           :ARG0 MRPNode-4
           :ARG0 (MRPNode-7 / country
                            :name (MRPNode-8 / name
                                             :op1 (MRPNode-9 / canada))))

# ::id 661
# ::snt N. Korea agrees to talks with South
# ::tok N. Korea agrees to talks with South
# ::collapsed instance nodes 0
(MRPNode-0 / agree-01
           :ARG1 (MRPNode-1 / talk-01
                            :ARG2 (MRPNode-2 / country
                                             :name (MRPNode-3 / name
                                                              :op1 (MRPNode-4 / south)
                                                              :op2 (MRPNode-5 / korea)))
                            :ARG0 (MRPNode-6 / country
                                             :name (MRPNode-7 / name
                                                              :op1 (MRPNode-8 / n.)
                                                              :op2 (MRPNode-9 / korea))))
           :ARG0 MRPNode-6)

# ::id 662
# ::snt Iran, a large important partner for Russia: Novak
# ::tok Iran , a large important partner for Russia : Novak
# ::collapsed instance nodes 0
(MRPNode-0 / partner-01
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / iran)))
           :mod (MRPNode-4 / large)
           :ARG1-of (MRPNode-5 / important-01)
           :ARG1 (MRPNode-6 / country
                            :name (MRPNode-7 / name
                                             :op1 (MRPNode-8 / novak))))

# ::id 663
# ::snt Taiwan's president charters plane to pay respects to Lee
# ::tok Taiwan 's president charters plane to pay respects to Lee
# ::collapsed instance nodes 0
(MRPNode-0 / bark-01
           :ARG1 (MRPNode-1 / plane)
           :ARG0 (MRPNode-2 / person
                            :ARG0-of (MRPNode-3 / have-org-role-91
                                                :ARG1 (MRPNode-4 / country
                                                                 :name (MRPNode-5 / name
                                                                                  :op1 (MRPNode-6 / taiwan)))
                                                :ARG2 (MRPNode-7 / president)))
           :purpose (MRPNode-8 / pay-01
                               :ARG0 MRPNode-2
                               :ARG1 (MRPNode-9 / respect-01
                                                :ARG1 (MRPNode-10 / person
                                                                  :name (MRPNode-11 / name
                                                                                    :op1 (MRPNode-12 / lee))))))

# ::id 664
# ::snt Two Palestinians die in attacks on Israelis ahead of Kerry visit
# ::tok Two Palestinians die in attacks on Israelis ahead of Kerry visit
# ::collapsed instance nodes 3
(MRPNode-0 / die-01
           :ARG1 (MRPNode-1 / person
                            :quant (MRPNode-2 / 2)
                            :mod (MRPNode-3 / country
                                            :name (MRPNode-4 / name
                                                             :op1 (MRPNode-5 / palestine)))
                            :ARG0-of (MRPNode-6 / attack-01
                                                :ARG1 (MRPNode-7 / israelis_4)))
           :ARG1-of (MRPNode-8 / cause-01
                               :ARG0 MRPNode-6)
           :time (MRPNode-9 / ahead
                            :op1 (MRPNode-10 / visit-01
                                             :ARG0 (MRPNode-11 / person
                                                               :name (MRPNode-12 / name
                                                                                 :op1 (MRPNode-13 / kerry))))))

# ::id 665
# ::snt Thomas Cook accused of putting costs before customers
# ::tok Thomas Cook accused of putting costs before customers
# ::collapsed instance nodes 0
(MRPNode-0 / accuse-01
           :ARG1 (MRPNode-1 / put-01
                            :ARG1 (MRPNode-2 / cost-01)
                            :ARG2 (MRPNode-3 / before
                                             :op1 (MRPNode-4 / customer))
                            :ARG0 (MRPNode-5 / person
                                             :name (MRPNode-6 / name
                                                              :op1 (MRPNode-7 / thomas)
                                                              :op2 (MRPNode-8 / cook))))
           :ARG1 MRPNode-5)

# ::id 666
# ::snt Narendra Modi 'photoshopped' image of Chennai floods visit goes viral
# ::tok Narendra Modi ' photoshopped ' image of Chennai floods visit goes viral
# ::collapsed instance nodes 0
(MRPNode-0 / go-08
           :ARG1 (MRPNode-1 / image
                            :mod (MRPNode-2 / person
                                            :name (MRPNode-3 / name
                                                             :op1 (MRPNode-4 / narendra)
                                                             :op2 (MRPNode-5 / modi)))
                            :topic (MRPNode-6 / shop-01)
                            :topic (MRPNode-7 / visit-01
                                              :ARG1 (MRPNode-8 / flood-01)
                                              :location (MRPNode-9 / city
                                                                   :name (MRPNode-10 / name
                                                                                     :op1 (MRPNode-11 / chennai)))))
           :ARG2 (MRPNode-12 / viral))

# ::id 667
# ::snt Obama Struggles to Soothe Saudi Fears As Iran Talks Resume
# ::tok Obama Struggles to Soothe Saudi Fears As Iran Talks Resume
# ::collapsed instance nodes 0
(MRPNode-0 / struggle-01
           :ARG1 (MRPNode-1 / person
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / obama)))
           :ARG2 (MRPNode-4 / fuss-01
                            :ARG0 MRPNode-1
                            :ARG1 (MRPNode-5 / fear-01
                                             :ARG0 (MRPNode-6 / country
                                                              :name (MRPNode-7 / name
                                                                               :op1 (MRPNode-8 / iran)))))
           :time (MRPNode-9 / desire-01
                            :ARG0 (MRPNode-10 / talk-01)))

# ::id 668
# ::snt Pakistan executions draw international ire
# ::tok Pakistan executions draw international ire
# ::collapsed instance nodes 1
(MRPNode-0 / draw-02
           :ARG1 (MRPNode-1 / international_ire_2)
           :ARG0 (MRPNode-2 / execute-01
                            :ARG1 (MRPNode-3 / country
                                             :name (MRPNode-4 / name
                                                              :op1 (MRPNode-5 / pakistan)))))

# ::id 669
# ::snt South Korea declares end to MERS outbreak
# ::tok South Korea declares end to MERS outbreak
# ::collapsed instance nodes 0
(MRPNode-0 / declare-02
           :ARG1 (MRPNode-1 / end-01
                            :ARG1 (MRPNode-2 / break-13
                                             :ARG1 (MRPNode-3 / sea
                                                              :name (MRPNode-4 / name
                                                                               :op1 (MRPNode-5 / mers))))
                            :ARG0 (MRPNode-6 / country
                                             :name (MRPNode-7 / name
                                                              :op1 (MRPNode-8 / south)
                                                              :op2 (MRPNode-9 / korea))))
           :ARG0 MRPNode-6)

# ::id 670
# ::snt Pranab stresses need to strive for peace by nations
# ::tok Pranab stresses need to strive for peace by nations
# ::collapsed instance nodes 0
(MRPNode-0 / stress-01
           :ARG1 (MRPNode-1 / need-01
                            :ARG1 (MRPNode-2 / strive-01
                                             :ARG1 (MRPNode-3 / peace)
                                             :ARG0 (MRPNode-4 / nation)))
           :ARG0 (MRPNode-5 / person
                            :name (MRPNode-6 / name
                                             :op1 (MRPNode-7 / pranab))))

# ::id 671
# ::snt Two Australians killed in Kenya after bus crashed into river
# ::tok Two Australians killed in Kenya after bus crashed into river
# ::collapsed instance nodes 4
(MRPNode-0 / kill-01
           :ARG1 (MRPNode-1 / two_australians_5
                            :quant (MRPNode-2 / 2))
           :time (MRPNode-3 / after
                            :op1 (MRPNode-4 / crash-01
                                            :ARG1 (MRPNode-5 / bus)
                                            :ARG1 (MRPNode-6 / river)))
           :location (MRPNode-7 / country
                                :name (MRPNode-8 / name
                                                 :op1 (MRPNode-9 / kenya))))

# ::id 672
# ::snt Severe Gales As Storm Clodagh Hits Britain
# ::tok Severe Gales As Storm Clodagh Hits Britain
# ::collapsed instance nodes 0
(MRPNode-0 / gas-03
           :time (MRPNode-1 / severe)
           :time (MRPNode-2 / hit-01
                            :ARG1 (MRPNode-3 / country
                                             :name (MRPNode-4 / name
                                                              :op1 (MRPNode-5 / britain)))
                            :ARG0 (MRPNode-6 / storm-01))
           :ARG1 (MRPNode-7 / person
                            :name (MRPNode-8 / name
                                             :op1 (MRPNode-9 / clodagh))))

# ::id 673
# ::snt Dozens of Egyptians hostages taken by Libyan terrorists as revenge for airstrikes
# ::tok Dozens of Egyptians hostages taken by Libyan terrorists as revenge for airstrikes
# ::collapsed instance nodes 3
(MRPNode-0 / hostage
           :mod (MRPNode-1 / country
                           :name (MRPNode-2 / name
                                            :op1 (MRPNode-3 / egypt)))
           :ARG1-of (MRPNode-4 / take-01
                               :ARG0 (MRPNode-5 / revenge
                                                :mod (MRPNode-6 / strike-01
                                                                :path (MRPNode-7 / air)
                                                                :ARG0 (MRPNode-8 / libyan_terrorists_4)))
                               :ARG0 MRPNode-8)
           :quant (MRPNode-9 / multiple
                             :op1 (MRPNode-10 / 12)))

# ::id 674
# ::snt President heading to Bahrain
# ::tok President heading to Bahrain
# ::collapsed instance nodes 0
(MRPNode-0 / head-02
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / bahrain)))
           :ARG0 (MRPNode-4 / person
                            :ARG0-of (MRPNode-5 / have-org-role-91
                                                :ARG2 (MRPNode-6 / president))))

# ::id 675
# ::snt China, India vow to further bilateral ties
# ::tok China , India vow to further bilateral ties
# ::collapsed instance nodes 1
(MRPNode-0 / vow-01
           :ARG1 (MRPNode-1 / further-01
                            :ARG1 (MRPNode-2 / bilateral_ties_2)
                            :ARG0 (MRPNode-3 / and
                                             :op1 (MRPNode-4 / country
                                                             :name (MRPNode-5 / name
                                                                              :op1 (MRPNode-6 / china)))
                                             :op2 (MRPNode-7 / country
                                                             :name (MRPNode-8 / name
                                                                              :op1 (MRPNode-9 / india)))))
           :ARG0 MRPNode-3)

# ::id 676
# ::snt Obama is right: Africa deserves better leadership
# ::tok Obama is right : Africa deserves better leadership
# ::collapsed instance nodes 0
(MRPNode-0 / right-06
           :ARG1 (MRPNode-1 / deserve-01
                            :ARG1 (MRPNode-2 / lead-02
                                             :ARG1-of (MRPNode-3 / good-02)
                                             :ARG1-of (MRPNode-4 / have-degree-91
                                                                 :ARG2 MRPNode-3
                                                                 :ARG3 (MRPNode-5 / more))
                                             :ARG0 (MRPNode-6 / continent
                                                              :name (MRPNode-7 / name
                                                                               :op1 (MRPNode-8 / africa))))
                            :ARG0 MRPNode-6)
           :ARG1 (MRPNode-9 / person
                            :name (MRPNode-10 / name
                                              :op1 (MRPNode-11 / obama))))

# ::id 677
# ::snt Putin spokesman: Doping charges appear unfounded
# ::tok Putin spokesman : Doping charges appear unfounded
# ::collapsed instance nodes 0
(MRPNode-0 / say-01
           :ARG1 (MRPNode-1 / appear-02
                            :ARG1 (MRPNode-2 / found-01
                                             :polarity (MRPNode-3 / -)
                                             :ARG1 (MRPNode-4 / charge-05
                                                              :ARG2 (MRPNode-5 / test-01))))
           :ARG0 (MRPNode-6 / person
                            :ARG0-of (MRPNode-7 / have-org-role-91
                                                :ARG1 (MRPNode-8 / person
                                                                 :name (MRPNode-9 / name
                                                                                  :op1 (MRPNode-10 / putin)))
                                                :ARG2 (MRPNode-11 / spokesman))))

# ::id 678
# ::snt New video shows US police officers beating mentally-ill man
# ::tok New video shows US police officers beating mentally - ill man
# ::collapsed instance nodes 3
(MRPNode-0 / show-01
           :ARG1 (MRPNode-1 / beat-01
                            :ARG1 (MRPNode-2 / man
                                             :ARG1-of (MRPNode-3 / ill-01
                                                                 :mod (MRPNode-4 / mental)))
                            :ARG0 (MRPNode-5 / person
                                             :ARG0-of (MRPNode-6 / have-org-role-91
                                                                 :ARG1 (MRPNode-7 / us_police_4)
                                                                 :ARG2 (MRPNode-8 / officer))))
           :ARG0 (MRPNode-9 / video
                            :ARG1-of (MRPNode-10 / new-01)))

# ::id 679
# ::snt You do not need to worry.
# ::tok You do not need to worry .
# ::collapsed instance nodes 0
(MRPNode-0 / need-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / worry-01
                            :ARG1 (MRPNode-3 / you))
           :ARG0 MRPNode-3)

# ::id 680
# ::snt You can do it, too.
# ::tok You can do it , too .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / it)
                            :ARG0 (MRPNode-3 / you)
                            :mod (MRPNode-4 / too)))

# ::id 681
# ::snt The answer to both questions is: Yes.
# ::tok The answer to both questions is : Yes .
# ::collapsed instance nodes 1
(MRPNode-0 / answer-01
           :ARG2 (MRPNode-1 / yes)
           :ARG2 (MRPNode-2 / both_questions_2))

# ::id 682
# ::snt You guys are making this all WAAAAAY too complicated.
# ::tok You guys are making this all WAAAAAY too complicated .
# ::collapsed instance nodes 2
(MRPNode-0 / make-02
           :ARG1 (MRPNode-1 / complicate-01
                            :ARG1 (MRPNode-2 / this_all_2)
                            :ARG2-of (MRPNode-3 / have-degree-91
                                                :ARG1 MRPNode-2
                                                :ARG3 (MRPNode-4 / too
                                                                 :mod (MRPNode-5 / way))))
           :ARG0 (MRPNode-6 / you_guys_2))

# ::id 683
# ::snt It's not a good idea.
# ::tok It 's not a good idea .
# ::collapsed instance nodes 0
(MRPNode-0 / idea
           :ARG1-of (MRPNode-1 / good-02
                               :polarity (MRPNode-2 / -))
           :domain (MRPNode-3 / it))

# ::id 684
# ::snt Take a look at these:
# ::tok Take a look at these :
# ::collapsed instance nodes 0
(MRPNode-0 / look-01
           :mode (MRPNode-1 / imperative)
           :ARG1 (MRPNode-2 / this)
           :ARG0 (MRPNode-3 / you))

# ::id 685
# ::snt This is not a good idea.
# ::tok This is not a good idea .
# ::collapsed instance nodes 0
(MRPNode-0 / idea
           :ARG1-of (MRPNode-1 / good-02
                               :polarity (MRPNode-2 / -))
           :domain (MRPNode-3 / this))

# ::id 686
# ::snt I was in a similar situation.
# ::tok I was in a similar situation .
# ::collapsed instance nodes 0
(MRPNode-0 / be-located-at-91
           :ARG1 (MRPNode-1 / i)
           :ARG2 (MRPNode-2 / situation
                            :ARG1-of (MRPNode-3 / resemble-01)))

# ::id 687
# ::snt I've had this same problem.
# ::tok I 've had this same problem .
# ::collapsed instance nodes 2
(MRPNode-0 / have-03
           :ARG1 (MRPNode-1 / this_same_problem_3)
           :ARG0 (MRPNode-2 / i))

# ::id 688
# ::snt You answered your own question.
# ::tok You answered your own question .
# ::collapsed instance nodes 0
(MRPNode-0 / answer-01
           :ARG1 (MRPNode-1 / question-01
                            :ARG0 (MRPNode-2 / you))
           :ARG0 MRPNode-2)

# ::id 689
# ::snt I don't see why there should be any problem with this whatsoever.
# ::tok I do n't see why there should be any problem with this whatsoever .
# ::collapsed instance nodes 0
(MRPNode-0 / see-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / thing
                            :ARG0-of (MRPNode-3 / cause-01
                                                :ARG1 (MRPNode-4 / recommend-01
                                                                 :ARG1 (MRPNode-5 / problem
                                                                                  :mod (MRPNode-6 / this)
                                                                                  :degree (MRPNode-7 / whatsoever)))))
           :ARG0 (MRPNode-8 / i))

# ::id 690
# ::snt It makes absolutely NO difference.
# ::tok It makes absolutely NO difference .
# ::collapsed instance nodes 0
(MRPNode-0 / make-02
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / differ-02
                            :degree (MRPNode-3 / absolute))
           :ARG0 (MRPNode-4 / it))

# ::id 691
# ::snt I think it's fine to ask this question.
# ::tok I think it 's fine to ask this question .
# ::collapsed instance nodes 1
(MRPNode-0 / think-01
           :ARG1 (MRPNode-1 / fine-04
                            :ARG1 (MRPNode-2 / ask-01
                                             :ARG1 (MRPNode-3 / this_question_2)))
           :ARG0 (MRPNode-4 / i))

# ::id 692
# ::snt There's not a lot you can do about that.
# ::tok There 's not a lot you can do about that .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / lot
                                             :polarity (MRPNode-3 / -))
                            :ARG0 (MRPNode-4 / you)
                            :ARG2 (MRPNode-5 / that)))

# ::id 693
# ::snt You answered your own question.
# ::tok You answered your own question .
# ::collapsed instance nodes 0
(MRPNode-0 / answer-01
           :ARG1 (MRPNode-1 / question-01
                            :ARG0 (MRPNode-2 / you))
           :ARG0 MRPNode-2)

# ::id 694
# ::snt Can you do this?
# ::tok Can you do this ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / this)
                            :ARG0 (MRPNode-3 / you))
           :ARG1-of (MRPNode-4 / amr-unknown))

# ::id 695
# ::snt How do you do that?
# ::tok How do you do that ?
# ::collapsed instance nodes 0
(MRPNode-0 / do-02
           :ARG1 (MRPNode-1 / that)
           :ARG0 (MRPNode-2 / you)
           :manner (MRPNode-3 / amr-unknown))

# ::id 696
# ::snt It's also a matter of taste.
# ::tok It 's also a matter of taste .
# ::collapsed instance nodes 0
(MRPNode-0 / matter
           :mod (MRPNode-1 / also)
           :domain (MRPNode-2 / it)
           :topic (MRPNode-3 / taste))

# ::id 697
# ::snt I don't see why there should be any problem with this whatsoever.
# ::tok I do n't see why there should be any problem with this whatsoever .
# ::collapsed instance nodes 0
(MRPNode-0 / see-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / thing
                            :ARG0-of (MRPNode-3 / cause-01
                                                :ARG1 (MRPNode-4 / recommend-01
                                                                 :ARG1 (MRPNode-5 / problem
                                                                                  :mod (MRPNode-6 / this)
                                                                                  :degree (MRPNode-7 / whatsoever)))))
           :ARG0 (MRPNode-8 / i))

# ::id 698
# ::snt There's not a lot you can do about that.
# ::tok There 's not a lot you can do about that .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / lot
                                             :polarity (MRPNode-3 / -))
                            :ARG0 (MRPNode-4 / you)
                            :ARG2 (MRPNode-5 / that)))

# ::id 699
# ::snt You got it right.
# ::tok You got it right .
# ::collapsed instance nodes 0
(MRPNode-0 / get-04
           :ARG1 (MRPNode-1 / right-06
                            :ARG2 (MRPNode-2 / it))
           :ARG0 (MRPNode-3 / you))

# ::id 700
# ::snt There are two things to consider:
# ::tok There are two things to consider :
# ::collapsed instance nodes 0
(MRPNode-0 / thing
           :quant (MRPNode-1 / 2)
           :ARG1-of (MRPNode-2 / consider-02))

# ::id 701
# ::snt Can you do this?
# ::tok Can you do this ?
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / this)
                            :ARG0 (MRPNode-3 / you))
           :ARG1-of (MRPNode-4 / amr-unknown))

# ::id 702
# ::snt There are a few things you can do:
# ::tok There are a few things you can do :
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / thing
                                             :quant (MRPNode-3 / few))
                            :ARG0 (MRPNode-4 / you)))

# ::id 703
# ::snt You got it right.
# ::tok You got it right .
# ::collapsed instance nodes 0
(MRPNode-0 / get-04
           :ARG1 (MRPNode-1 / right-06
                            :ARG2 (MRPNode-2 / it))
           :ARG0 (MRPNode-3 / you))

# ::id 704
# ::snt You answered your own question.
# ::tok You answered your own question .
# ::collapsed instance nodes 0
(MRPNode-0 / answer-01
           :ARG1 (MRPNode-1 / question-01
                            :ARG0 (MRPNode-2 / you))
           :ARG0 MRPNode-2)

# ::id 705
# ::snt You are on the right path.
# ::tok You are on the right path .
# ::collapsed instance nodes 0
(MRPNode-0 / be-located-at-91
           :ARG1 (MRPNode-1 / you)
           :ARG2 (MRPNode-2 / path
                            :ARG1-of (MRPNode-3 / right-06)))

# ::id 706
# ::snt What are your goals?
# ::tok What are your goals ?
# ::collapsed instance nodes 0
(MRPNode-0 / goal
           :domain (MRPNode-1 / amr-unknown)
           :poss (MRPNode-2 / you))

# ::id 707
# ::snt A few more point to think about:
# ::tok A few more point to think about :
# ::collapsed instance nodes 0
(MRPNode-0 / point-03
           :quant (MRPNode-1 / more)
           :quant (MRPNode-2 / think-01)
           :quant (MRPNode-3 / few))

# ::id 708
# ::snt I'm afraid we are out of luck in this one.
# ::tok I 'm afraid we are out of luck in this one .
# ::collapsed instance nodes 1
(MRPNode-0 / fear-01
           :ARG1 (MRPNode-1 / out-05
                            :ARG1 (MRPNode-2 / we)
                            :ARG2 (MRPNode-3 / luck)
                            :ARG2 (MRPNode-4 / this_one_2))
           :ARG0 (MRPNode-5 / i))

# ::id 709
# ::snt It's also a matter of taste.
# ::tok It 's also a matter of taste .
# ::collapsed instance nodes 0
(MRPNode-0 / matter
           :mod (MRPNode-1 / also)
           :domain (MRPNode-2 / it)
           :topic (MRPNode-3 / taste))

# ::id 710
# ::snt I had the same problem as you.
# ::tok I had the same problem as you .
# ::collapsed instance nodes 0
(MRPNode-0 / have-03
           :ARG1 (MRPNode-1 / problem
                            :ARG1-of (MRPNode-2 / same-01
                                                :ARG2 (MRPNode-3 / you)))
           :ARG0 (MRPNode-4 / i))

# ::id 711
# ::snt I'm thinking it's a bad idea.
# ::tok I 'm thinking it 's a bad idea .
# ::collapsed instance nodes 0
(MRPNode-0 / think-01
           :ARG1 (MRPNode-1 / idea
                            :ARG1-of (MRPNode-2 / bad-07)
                            :domain (MRPNode-3 / it))
           :ARG0 (MRPNode-4 / i))

# ::id 712
# ::snt It's not a good idea.
# ::tok It 's not a good idea .
# ::collapsed instance nodes 0
(MRPNode-0 / idea
           :ARG1-of (MRPNode-1 / good-02
                               :polarity (MRPNode-2 / -))
           :domain (MRPNode-3 / it))

# ::id 713
# ::snt I had the same problem as you.
# ::tok I had the same problem as you .
# ::collapsed instance nodes 0
(MRPNode-0 / have-03
           :ARG1 (MRPNode-1 / problem
                            :ARG1-of (MRPNode-2 / same-01
                                                :ARG2 (MRPNode-3 / you)))
           :ARG0 (MRPNode-4 / i))

# ::id 714
# ::snt There are two things to consider:
# ::tok There are two things to consider :
# ::collapsed instance nodes 0
(MRPNode-0 / thing
           :quant (MRPNode-1 / 2)
           :ARG1-of (MRPNode-2 / consider-02))

# ::id 715
# ::snt It's pretty much up to you.
# ::tok It 's pretty much up to you .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / you)
           :ARG0 (MRPNode-2 / it)
           :degree (MRPNode-3 / pretty-much))

# ::id 716
# ::snt There are three options:
# ::tok There are three options :
# ::collapsed instance nodes 0
(MRPNode-0 / null)

# ::id 717
# ::snt So think it in this way.
# ::tok So think it in this way .
# ::collapsed instance nodes 1
(MRPNode-0 / think-01
           :mode (MRPNode-1 / imperative)
           :ARG1 (MRPNode-2 / it)
           :ARG0 (MRPNode-3 / you)
           :manner (MRPNode-4 / this_way_2))

# ::id 718
# ::snt Maybe this could work for you.
# ::tok Maybe this could work for you .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / work-09
                            :ARG1 (MRPNode-2 / this)
                            :ARG2 (MRPNode-3 / you)))

# ::id 719
# ::snt This is not a good idea.
# ::tok This is not a good idea .
# ::collapsed instance nodes 0
(MRPNode-0 / idea
           :ARG1-of (MRPNode-1 / good-02
                               :polarity (MRPNode-2 / -))
           :domain (MRPNode-3 / this))

# ::id 720
# ::snt I realized there is already an accepted answer but I figure I would add my 2 cents.
# ::tok I realized there is already an accepted answer but I figure I would add my 2 cents .
# ::collapsed instance nodes 0
(MRPNode-0 / contrast-01
           :ARG1 (MRPNode-1 / figure-01
                            :ARG1 (MRPNode-2 / add-02
                                             :ARG1 (MRPNode-3 / monetary-quantity
                                                              :quant (MRPNode-4 / 2)
                                                              :unit (MRPNode-5 / cent))
                                             :ARG0 (MRPNode-6 / i))
                            :ARG0 MRPNode-6)
           :ARG1 (MRPNode-7 / realize-01
                            :ARG0 MRPNode-6
                            :ARG1 (MRPNode-8 / accept-01
                                             :ARG1 (MRPNode-9 / answer-01)
                                             :time (MRPNode-10 / already))))

# ::id 721
# ::snt You may have to experiment and find what you like.
# ::tok You may have to experiment and find what you like .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / obligate-01
                            :ARG1 (MRPNode-2 / and
                                             :op1 (MRPNode-3 / experiment-01
                                                             :ARG0 (MRPNode-4 / you
                                                                              :ARG0-of (MRPNode-5 / like-02
                                                                                                  :ARG1 (MRPNode-6 / thing))))
                                             :op2 (MRPNode-7 / find-01
                                                             :ARG1 MRPNode-6
                                                             :ARG0 MRPNode-4))
                            :ARG1 MRPNode-4))

# ::id 722
# ::snt I agree with the other comments.
# ::tok I agree with the other comments .
# ::collapsed instance nodes 1
(MRPNode-0 / agree-01
           :ARG1 (MRPNode-1 / i)
           :ARG1 (MRPNode-2 / other_comments_2))

# ::id 723
# ::snt It rather depends on which country you're in.
# ::tok It rather depends on which country you 're in .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / country
                            :ARG2-of (MRPNode-2 / you))
           :ARG0 (MRPNode-3 / it)
           :mod (MRPNode-4 / rather))

# ::id 724
# ::snt This is a terrible idea.
# ::tok This is a terrible idea .
# ::collapsed instance nodes 0
(MRPNode-0 / idea
           :ARG1-of (MRPNode-1 / terrible-01)
           :domain (MRPNode-2 / this))

# ::id 725
# ::snt You have to decide what you want to get out of this.
# ::tok You have to decide what you want to get out of this .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / you
                            :ARG0-of (MRPNode-2 / want-01
                                                :ARG1 (MRPNode-3 / get-05
                                                                 :ARG2 (MRPNode-4 / this)
                                                                 :ARG1 (MRPNode-5 / thing)))
                            :ARG0-of MRPNode-3)
           :ARG2 (MRPNode-6 / decide-01
                            :ARG0 MRPNode-1
                            :ARG1 MRPNode-5))

# ::id 726
# ::snt I have few suggestions for you:
# ::tok I have few suggestions for you :
# ::collapsed instance nodes 0
(MRPNode-0 / suggest-01
           :ARG1 (MRPNode-1 / thing
                            :quant (MRPNode-2 / few))
           :ARG0 (MRPNode-3 / i)
           :ARG2 (MRPNode-4 / you))

# ::id 727
# ::snt As soon as possible.
# ::tok As soon as possible .
# ::collapsed instance nodes 0
(MRPNode-0 / have-degree-91
           :ARG2 (MRPNode-1 / possible-01)
           :ARG2 (MRPNode-2 / soon)
           :ARG3 (MRPNode-3 / equal))

# ::id 728
# ::snt To give this an answer:
# ::tok To give this an answer :
# ::collapsed instance nodes 0
(MRPNode-0 / give-01
           :mode (MRPNode-1 / imperative)
           :ARG1 (MRPNode-2 / thing
                            :ARG2-of (MRPNode-3 / this)
                            :ARG2-of (MRPNode-4 / answer-01))
           :ARG0 (MRPNode-5 / you))

# ::id 729
# ::snt Unfortunately the answer to your question is we simply do not know.
# ::tok Unfortunately the answer to your question is we simply do not know .
# ::collapsed instance nodes 0
(MRPNode-0 / fortunate-01
           :polarity (MRPNode-1 / -)
           :ARG2 (MRPNode-2 / answer-01
                            :ARG1 (MRPNode-3 / question-01
                                             :ARG0 (MRPNode-4 / you))
                            :ARG2 (MRPNode-5 / we)
                            :ARG2 (MRPNode-6 / know-01
                                             :polarity (MRPNode-7 / -)
                                             :ARG0 MRPNode-5
                                             :mod (MRPNode-8 / simple))))

# ::id 730
# ::snt The rule - When in doubt throw it out!
# ::tok The rule - When in doubt throw it out !
# ::collapsed instance nodes 0
(MRPNode-0 / rule-01
           :ARG3 (MRPNode-1 / throw-out-06
                            :mode (MRPNode-2 / imperative)
                            :ARG1 (MRPNode-3 / it)
                            :ARG0 (MRPNode-4 / you)
                            :time (MRPNode-5 / doubt-01)))

# ::id 731
# ::snt This is not a good idea.
# ::tok This is not a good idea .
# ::collapsed instance nodes 0
(MRPNode-0 / idea
           :ARG1-of (MRPNode-1 / good-02
                               :polarity (MRPNode-2 / -))
           :domain (MRPNode-3 / this))

# ::id 732
# ::snt It probably depends on the cut of meat.
# ::tok It probably depends on the cut of meat .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / cut-02
                            :ARG1 (MRPNode-2 / meat))
           :ARG0 (MRPNode-3 / it)
           :mod (MRPNode-4 / probable))

# ::id 733
# ::snt Have you tried asking your employees?
# ::tok Have you tried asking your employees ?
# ::collapsed instance nodes 0
(MRPNode-0 / try-01
           :ARG1 (MRPNode-1 / ask-01
                            :ARG2 (MRPNode-2 / person)
                            :ARG0 (MRPNode-3 / you
                                             :ARG1-of (MRPNode-4 / employ-01
                                                                 :ARG1 MRPNode-2)))
           :ARG0 MRPNode-3
           :ARG1-of (MRPNode-5 / amr-unknown))

# ::id 734
# ::snt There are two things to consider:
# ::tok There are two things to consider :
# ::collapsed instance nodes 0
(MRPNode-0 / thing
           :quant (MRPNode-1 / 2)
           :ARG1-of (MRPNode-2 / consider-02))

# ::id 735
# ::snt It depends on what you want to do next, and where you want to do it.
# ::tok It depends on what you want to do next , and where you want to do it .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / thing
                                            :ARG1-of (MRPNode-3 / do-02
                                                                :ARG0 (MRPNode-4 / you)
                                                                :time (MRPNode-5 / next)))
                            :op2 (MRPNode-6 / location
                                            :location-of (MRPNode-7 / want-01
                                                                    :ARG1 MRPNode-3
                                                                    :ARG0 MRPNode-4)))
           :ARG0 (MRPNode-8 / it))

# ::id 736
# ::snt I have the same thing.
# ::tok I have the same thing .
# ::collapsed instance nodes 0
(MRPNode-0 / have-03
           :ARG1 (MRPNode-1 / thing
                            :ARG1-of (MRPNode-2 / same-01))
           :ARG0 (MRPNode-3 / i))

# ::id 737
# ::snt "My answer to your question is ""Probably Not""."
# ::tok " My answer to your question is " " Probably Not " " . "
# ::collapsed instance nodes 2
(MRPNode-0 / answer-01
           :ARG1 (MRPNode-1 / question-01
                            :ARG0 (MRPNode-2 / you))
           :ARG0 (MRPNode-3 / i)
           :ARG2 (MRPNode-4 / probably_not_3
                            :arg2 (MRPNode-5 / -)))

# ::id 738
# ::snt I don't think it makes any tremendous difference.
# ::tok I do n't think it makes any tremendous difference .
# ::collapsed instance nodes 0
(MRPNode-0 / think-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / make-02
                            :ARG1 (MRPNode-3 / differ-02
                                             :degree (MRPNode-4 / tremendous))
                            :ARG0 (MRPNode-5 / it))
           :ARG0 (MRPNode-6 / i))

# ::id 739
# ::snt It's not a good idea.
# ::tok It 's not a good idea .
# ::collapsed instance nodes 0
(MRPNode-0 / idea
           :ARG1-of (MRPNode-1 / good-02
                               :polarity (MRPNode-2 / -))
           :domain (MRPNode-3 / it))

# ::id 740
# ::snt You are on the right path.
# ::tok You are on the right path .
# ::collapsed instance nodes 0
(MRPNode-0 / be-located-at-91
           :ARG1 (MRPNode-1 / you)
           :ARG2 (MRPNode-2 / path
                            :ARG1-of (MRPNode-3 / right-06)))

# ::id 741
# ::snt How should I proceed about this?
# ::tok How should I proceed about this ?
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / proceed-01
                            :ARG1 (MRPNode-2 / this)
                            :ARG0 (MRPNode-3 / i)
                            :manner (MRPNode-4 / amr-unknown)))

# ::id 742
# ::snt Does this page answer your question?
# ::tok Does this page answer your question ?
# ::collapsed instance nodes 1
(MRPNode-0 / answer-01
           :ARG1 (MRPNode-1 / question-01
                            :ARG0 (MRPNode-2 / you))
           :ARG0 (MRPNode-3 / this_page_2)
           :ARG2 (MRPNode-4 / amr-unknown))

# ::id 743
# ::snt I'm going to be very direct here.
# ::tok I 'm going to be very direct here .
# ::collapsed instance nodes 0
(MRPNode-0 / direct-01
           :ARG1 (MRPNode-1 / i)
           :location (MRPNode-2 / here)
           :degree (MRPNode-3 / very))

# ::id 744
# ::snt It depends entirely on your company and your contract.
# ::tok It depends entirely on your company and your contract .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / company
                                            :poss (MRPNode-3 / you))
                            :op2 (MRPNode-4 / contract
                                            :poss MRPNode-3))
           :ARG0 (MRPNode-5 / it)
           :degree (MRPNode-6 / entire))

# ::id 745
# ::snt There are a few things I think you should do.
# ::tok There are a few things I think you should do .
# ::collapsed instance nodes 0
(MRPNode-0 / think-01
           :ARG1 (MRPNode-1 / recommend-01
                            :ARG1 (MRPNode-2 / do-02
                                             :ARG1 (MRPNode-3 / thing
                                                              :quant (MRPNode-4 / few))
                                             :ARG0 (MRPNode-5 / you))
                            :ARG2 MRPNode-5)
           :ARG0 (MRPNode-6 / i))

# ::id 746
# ::snt How do you do that?
# ::tok How do you do that ?
# ::collapsed instance nodes 0
(MRPNode-0 / do-02
           :ARG1 (MRPNode-1 / that)
           :ARG0 (MRPNode-2 / you)
           :manner (MRPNode-3 / amr-unknown))

# ::id 747
# ::snt I was in a similar situation.
# ::tok I was in a similar situation .
# ::collapsed instance nodes 0
(MRPNode-0 / be-located-at-91
           :ARG1 (MRPNode-1 / i)
           :ARG2 (MRPNode-2 / situation
                            :ARG1-of (MRPNode-3 / resemble-01)))

# ::id 748
# ::snt It depends on what you want to do next, and where you want to do it.
# ::tok It depends on what you want to do next , and where you want to do it .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / thing
                                            :ARG1-of (MRPNode-3 / do-02
                                                                :ARG0 (MRPNode-4 / you)
                                                                :time (MRPNode-5 / next)))
                            :op2 (MRPNode-6 / location
                                            :location-of (MRPNode-7 / want-01
                                                                    :ARG1 MRPNode-3
                                                                    :ARG0 MRPNode-4)))
           :ARG0 (MRPNode-8 / it))

# ::id 749
# ::snt Well, I wouldn't put it on my cv.
# ::tok Well , I would n't put it on my cv .
# ::collapsed instance nodes 0
(MRPNode-0 / put-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / it)
           :ARG0 (MRPNode-3 / i)
           :mod (MRPNode-4 / well)
           :ARG2 (MRPNode-5 / cv))

# ::id 750
# ::snt I think there isn't a general answer.
# ::tok I think there is n't a general answer .
# ::collapsed instance nodes 0
(MRPNode-0 / think-01
           :ARG1 (MRPNode-1 / answer-01
                            :polarity (MRPNode-2 / -)
                            :ARG1-of (MRPNode-3 / general-02))
           :ARG0 (MRPNode-4 / i))

# ::id 751
# ::snt Work into it slowly.
# ::tok Work into it slowly .
# ::collapsed instance nodes 0
(MRPNode-0 / work-01
           :mode (MRPNode-1 / imperative)
           :ARG1 (MRPNode-2 / it)
           :ARG0 (MRPNode-3 / you)
           :ARG1-of (MRPNode-4 / slow-05))

# ::id 752
# ::snt It varies by the situation.
# ::tok It varies by the situation .
# ::collapsed instance nodes 0
(MRPNode-0 / vary-01
           :ARG1 (MRPNode-1 / it)
           :ARG1-of (MRPNode-2 / situation))

# ::id 753
# ::snt I have the same thing.
# ::tok I have the same thing .
# ::collapsed instance nodes 0
(MRPNode-0 / have-03
           :ARG1 (MRPNode-1 / thing
                            :ARG1-of (MRPNode-2 / same-01))
           :ARG0 (MRPNode-3 / i))

# ::id 754
# ::snt I have the same thing.
# ::tok I have the same thing .
# ::collapsed instance nodes 0
(MRPNode-0 / have-03
           :ARG1 (MRPNode-1 / thing
                            :ARG1-of (MRPNode-2 / same-01))
           :ARG0 (MRPNode-3 / i))

# ::id 755
# ::snt You have to decide what you want to get out of this.
# ::tok You have to decide what you want to get out of this .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / you
                            :ARG0-of (MRPNode-2 / want-01
                                                :ARG1 (MRPNode-3 / get-05
                                                                 :ARG2 (MRPNode-4 / this)
                                                                 :ARG1 (MRPNode-5 / thing)))
                            :ARG0-of MRPNode-3)
           :ARG2 (MRPNode-6 / decide-01
                            :ARG0 MRPNode-1
                            :ARG1 MRPNode-5))

# ::id 756
# ::snt It's not a good idea.
# ::tok It 's not a good idea .
# ::collapsed instance nodes 0
(MRPNode-0 / idea
           :ARG1-of (MRPNode-1 / good-02
                               :polarity (MRPNode-2 / -))
           :domain (MRPNode-3 / it))

# ::id 757
# ::snt You have a problem.
# ::tok You have a problem .
# ::collapsed instance nodes 0
(MRPNode-0 / have-03
           :ARG1 (MRPNode-1 / problem)
           :ARG0 (MRPNode-2 / you))

# ::id 758
# ::snt Unfortunately, this question cannot be answered in its full generality.
# ::tok Unfortunately , this question cannot be answered in its full generality .
# ::collapsed instance nodes 1
(MRPNode-0 / possible-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / answer-01
                            :ARG1 (MRPNode-3 / this_question_2)
                            :ARG2 (MRPNode-4 / generality
                                             :poss MRPNode-3
                                             :degree (MRPNode-5 / full)))
           :ARG2-of (MRPNode-6 / fortunate-01
                               :polarity (MRPNode-7 / -)))

# ::id 759
# ::snt I think there isn't a general answer.
# ::tok I think there is n't a general answer .
# ::collapsed instance nodes 0
(MRPNode-0 / think-01
           :ARG1 (MRPNode-1 / answer-01
                            :polarity (MRPNode-2 / -)
                            :ARG1-of (MRPNode-3 / general-02))
           :ARG0 (MRPNode-4 / i))

# ::id 760
# ::snt "My answer to your question is ""Probably Not""."
# ::tok " My answer to your question is " " Probably Not " " . "
# ::collapsed instance nodes 2
(MRPNode-0 / answer-01
           :ARG1 (MRPNode-1 / question-01
                            :ARG0 (MRPNode-2 / you))
           :ARG0 (MRPNode-3 / i)
           :ARG2 (MRPNode-4 / probably_not_3
                            :arg2 (MRPNode-5 / -)))

# ::id 761
# ::snt I had the same problem as you.
# ::tok I had the same problem as you .
# ::collapsed instance nodes 0
(MRPNode-0 / have-03
           :ARG1 (MRPNode-1 / problem
                            :ARG1-of (MRPNode-2 / same-01
                                                :ARG2 (MRPNode-3 / you)))
           :ARG0 (MRPNode-4 / i))

# ::id 762
# ::snt Hope this is what you are looking for.
# ::tok Hope this is what you are looking for .
# ::collapsed instance nodes 0
(MRPNode-0 / hope-01
           :ARG1 (MRPNode-1 / look-01
                            :ARG1 (MRPNode-2 / you)
                            :ARG1 (MRPNode-3 / this)))

# ::id 763
# ::snt There are a few things you can do:
# ::tok There are a few things you can do :
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / thing
                                             :quant (MRPNode-3 / few))
                            :ARG0 (MRPNode-4 / you)))

# ::id 764
# ::snt It depends on what you want to do next, and where you want to do it.
# ::tok It depends on what you want to do next , and where you want to do it .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / thing
                                            :ARG1-of (MRPNode-3 / do-02
                                                                :ARG0 (MRPNode-4 / you)
                                                                :time (MRPNode-5 / next)))
                            :op2 (MRPNode-6 / location
                                            :location-of (MRPNode-7 / want-01
                                                                    :ARG1 MRPNode-3
                                                                    :ARG0 MRPNode-4)))
           :ARG0 (MRPNode-8 / it))

# ::id 765
# ::snt In the US, it will depend on the school.
# ::tok In the US , it will depend on the school .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / school)
           :ARG0 (MRPNode-2 / it)
           :location (MRPNode-3 / country
                                :name (MRPNode-4 / name
                                                 :op1 (MRPNode-5 / us))))

# ::id 766
# ::snt There are a few things I think you should do.
# ::tok There are a few things I think you should do .
# ::collapsed instance nodes 0
(MRPNode-0 / think-01
           :ARG1 (MRPNode-1 / recommend-01
                            :ARG1 (MRPNode-2 / do-02
                                             :ARG1 (MRPNode-3 / thing
                                                              :quant (MRPNode-4 / few))
                                             :ARG0 (MRPNode-5 / you))
                            :ARG2 MRPNode-5)
           :ARG0 (MRPNode-6 / i))

# ::id 767
# ::snt I've had this same problem.
# ::tok I 've had this same problem .
# ::collapsed instance nodes 2
(MRPNode-0 / have-03
           :ARG1 (MRPNode-1 / this_same_problem_3)
           :ARG0 (MRPNode-2 / i))

# ::id 768
# ::snt Not a direct answer to the question, but something to consider.
# ::tok Not a direct answer to the question , but something to consider .
# ::collapsed instance nodes 0
(MRPNode-0 / contrast-01
           :ARG1 (MRPNode-1 / answer-01
                            :ARG1-of (MRPNode-2 / question-01)
                            :ARG1-of (MRPNode-3 / direct-02
                                                :polarity (MRPNode-4 / -)))
           :ARG2 (MRPNode-5 / something
                            :ARG1-of (MRPNode-6 / consider-02)))

# ::id 769
# ::snt I remained under the banyan tree, exhausted by my daily ritual of dragooning the men every two hours.
# ::tok I remained under the banyan tree , exhausted by my daily ritual of dragooning the men every two hours .
# ::collapsed instance nodes 1
(MRPNode-0 / and
           :op1 (MRPNode-1 / remain-01
                           :ARG1 (MRPNode-2 / i
                                            :ARG0-of (MRPNode-3 / drag-01
                                                                :ARG1 (MRPNode-4 / man)))
                           :ARG3 (MRPNode-5 / under
                                            :op1 (MRPNode-6 / banyan_tree_2)))
           :op2 (MRPNode-7 / exhaust-01
                           :ARG1 MRPNode-2
                           :ARG0 (MRPNode-8 / ritual
                                            :ARG0 MRPNode-2
                                            :purpose MRPNode-3
                                            :frequency (MRPNode-9 / rate-entity-91
                                                                  :ARG3 (MRPNode-10 / temporal-quantity
                                                                                    :quant (MRPNode-11 / 2)
                                                                                    :unit (MRPNode-12 / hour))))))

# ::id 770
# ::snt In the US, it will depend on the school.
# ::tok In the US , it will depend on the school .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / school)
           :ARG0 (MRPNode-2 / it)
           :location (MRPNode-3 / country
                                :name (MRPNode-4 / name
                                                 :op1 (MRPNode-5 / us))))

# ::id 771
# ::snt You should do it.
# ::tok You should do it .
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG0 (MRPNode-2 / you)
                            :ARG1 (MRPNode-3 / it)))

# ::id 772
# ::snt Yes, it's probably a good idea to renew your passport.
# ::tok Yes , it 's probably a good idea to renew your passport .
# ::collapsed instance nodes 0
(MRPNode-0 / probable
           :domain (MRPNode-1 / idea
                              :ARG1-of (MRPNode-2 / good-02)
                              :domain (MRPNode-3 / renew-01
                                                 :ARG1 (MRPNode-4 / passport
                                                                  :poss (MRPNode-5 / you)))))

# ::id 773
# ::snt Yes, you should mention your experience.
# ::tok Yes , you should mention your experience .
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / mention-01
                            :ARG0 (MRPNode-2 / thing
                                             :ARG1-of (MRPNode-3 / experience-01
                                                                 :ARG0 (MRPNode-4 / you)))
                            :ARG0 MRPNode-4))

# ::id 774
# ::snt It depends on what you want to do next, and where you want to do it.
# ::tok It depends on what you want to do next , and where you want to do it .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / thing
                                            :ARG1-of (MRPNode-3 / do-02
                                                                :ARG0 (MRPNode-4 / you)
                                                                :time (MRPNode-5 / next)))
                            :op2 (MRPNode-6 / location
                                            :location-of (MRPNode-7 / want-01
                                                                    :ARG1 MRPNode-3
                                                                    :ARG0 MRPNode-4)))
           :ARG0 (MRPNode-8 / it))

# ::id 775
# ::snt It depends on what you want to do next, and where you want to do it.
# ::tok It depends on what you want to do next , and where you want to do it .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / thing
                                            :ARG1-of (MRPNode-3 / do-02
                                                                :ARG0 (MRPNode-4 / you)
                                                                :time (MRPNode-5 / next)))
                            :op2 (MRPNode-6 / location
                                            :location-of (MRPNode-7 / want-01
                                                                    :ARG1 MRPNode-3
                                                                    :ARG0 MRPNode-4)))
           :ARG0 (MRPNode-8 / it))

# ::id 776
# ::snt This is a very unusual request.
# ::tok This is a very unusual request .
# ::collapsed instance nodes 0
(MRPNode-0 / request-01
           :mod (MRPNode-1 / this)
           :mod (MRPNode-2 / usual
                           :polarity (MRPNode-3 / -)
                           :degree (MRPNode-4 / very)))

# ::id 777
# ::snt It depends on what you want to do next, and where you want to do it.
# ::tok It depends on what you want to do next , and where you want to do it .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / thing
                                            :ARG1-of (MRPNode-3 / do-02
                                                                :ARG0 (MRPNode-4 / you)
                                                                :time (MRPNode-5 / next)))
                            :op2 (MRPNode-6 / location
                                            :location-of (MRPNode-7 / want-01
                                                                    :ARG1 MRPNode-3
                                                                    :ARG0 MRPNode-4)))
           :ARG0 (MRPNode-8 / it))

# ::id 778
# ::snt It really doesn't matter.
# ::tok It really does n't matter .
# ::collapsed instance nodes 0
(MRPNode-0 / matter-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / it)
           :ARG1-of (MRPNode-3 / real-04))

# ::id 779
# ::snt You don't need to know everything.
# ::tok You do n't need to know everything .
# ::collapsed instance nodes 0
(MRPNode-0 / need-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / know-01
                            :ARG1 (MRPNode-3 / everything)
                            :ARG0 (MRPNode-4 / you))
           :ARG0 MRPNode-4)

# ::id 780
# ::snt I think you're looking for Mikey (1992).
# ::tok I think you 're looking for Mikey ( 1992 ) .
# ::collapsed instance nodes 0
(MRPNode-0 / think-01
           :ARG1 (MRPNode-1 / look-01
                            :ARG1 (MRPNode-2 / person
                                             :ARG1-of (MRPNode-3 / name
                                                                 :op1 (MRPNode-4 / mikey))
                                             :time (MRPNode-5 / date-entity
                                                              :year (MRPNode-6 / 1992)))
                            :ARG0 (MRPNode-7 / you))
           :ARG0 (MRPNode-8 / i))

# ::id 781
# ::snt I don't think that there's any.
# ::tok I do n't think that there 's any .
# ::collapsed instance nodes 0
(MRPNode-0 / think-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / exist-01
                            :ARG1 (MRPNode-3 / any))
           :ARG0 (MRPNode-4 / i))

# ::id 782
# ::snt There are a few things you can do:
# ::tok There are a few things you can do :
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / thing
                                             :quant (MRPNode-3 / few))
                            :ARG0 (MRPNode-4 / you)))

# ::id 783
# ::snt This is the tip I find most useful:
# ::tok This is the tip I find most useful :
# ::collapsed instance nodes 0
(MRPNode-0 / thing
           :ARG1-of (MRPNode-1 / useful-05
                               :ARG1-of (MRPNode-2 / find-01
                                                   :ARG0 (MRPNode-3 / i)))
           :domain (MRPNode-4 / have-degree-91
                              :ARG3 (MRPNode-5 / most))
           :domain (MRPNode-6 / tip-05)
           :domain (MRPNode-7 / this))

# ::id 784
# ::snt Sure, I've  done this very trip.
# ::tok Sure , I 've done this very trip .
# ::collapsed instance nodes 1
(MRPNode-0 / sure-02
           :ARG1 (MRPNode-1 / trip-03
                            :mod (MRPNode-2 / this_very_2)
                            :ARG0 (MRPNode-3 / i)))

# ::id 785
# ::snt You can use it, too.
# ::tok You can use it , too .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / use-01
                            :ARG1 (MRPNode-2 / it)
                            :ARG0 (MRPNode-3 / you)
                            :mod (MRPNode-4 / too)))

# ::id 786
# ::snt I've located an article that might be of some help: http://www.dsattorney.com/qa-pseudonyms-in-contracts/
# ::tok I 've located an article that might be of some help : http://www.dsattorney.com/qa-pseudonyms-in-contracts/
# ::collapsed instance nodes 0
(MRPNode-0 / locate-01
           :ARG1 (MRPNode-1 / article
                            :ARG0-of (MRPNode-2 / help-01
                                                :ARG1-of (MRPNode-3 / possible-01)
                                                :mod (MRPNode-4 / some))
                            :location (MRPNode-5 / url-entity
                                                 :value (MRPNode-6 / "http://www.dsattorney.com/qa-pseudonyms-in-contracts/")))
           :ARG0 (MRPNode-7 / i))

# ::id 787
# ::snt You don't have to worry.
# ::tok You do n't have to worry .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / you)
           :ARG2 (MRPNode-3 / worry-02
                            :ARG0 MRPNode-2))

# ::id 788
# ::snt It depends entirely on your company and your contract.
# ::tok It depends entirely on your company and your contract .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / company
                                            :poss (MRPNode-3 / you))
                            :op2 (MRPNode-4 / contract
                                            :poss MRPNode-3))
           :ARG0 (MRPNode-5 / it)
           :degree (MRPNode-6 / entire))

# ::id 789
# ::snt The wood probably isn't rotten, it's just worn out.
# ::tok The wood probably is n't rotten , it 's just worn out .
# ::collapsed instance nodes 0
(MRPNode-0 / have-concession-91
           :ARG1 (MRPNode-1 / wear-01
                            :ARG1 (MRPNode-2 / just)
                            :ARG1 (MRPNode-3 / wood))
           :ARG2 (MRPNode-4 / probable
                            :domain (MRPNode-5 / rot-01
                                               :polarity (MRPNode-6 / -)
                                               :ARG1 MRPNode-3)))

# ::id 790
# ::snt I have the same thing.
# ::tok I have the same thing .
# ::collapsed instance nodes 0
(MRPNode-0 / have-03
           :ARG1 (MRPNode-1 / thing
                            :ARG1-of (MRPNode-2 / same-01))
           :ARG0 (MRPNode-3 / i))

# ::id 791
# ::snt Yes it is common!
# ::tok Yes it is common !
# ::collapsed instance nodes 0
(MRPNode-0 / common
           :domain (MRPNode-1 / it))

# ::id 792
# ::snt I don't think that there's any.
# ::tok I do n't think that there 's any .
# ::collapsed instance nodes 0
(MRPNode-0 / think-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / exist-01
                            :ARG1 (MRPNode-3 / any))
           :ARG0 (MRPNode-4 / i))

# ::id 793
# ::snt You can use it, too.
# ::tok You can use it , too .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / use-01
                            :ARG1 (MRPNode-2 / it)
                            :ARG0 (MRPNode-3 / you)
                            :mod (MRPNode-4 / too)))

# ::id 794
# ::snt There are a few things you can do:
# ::tok There are a few things you can do :
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / thing
                                             :quant (MRPNode-3 / few))
                            :ARG0 (MRPNode-4 / you)))

# ::id 795
# ::snt There are a few possible reasons.
# ::tok There are a few possible reasons .
# ::collapsed instance nodes 0
(MRPNode-0 / reason
           :quant (MRPNode-1 / few)
           :ARG1-of (MRPNode-2 / possible-01))

# ::id 796
# ::snt I've had this same problem.
# ::tok I 've had this same problem .
# ::collapsed instance nodes 2
(MRPNode-0 / have-03
           :ARG1 (MRPNode-1 / this_same_problem_3)
           :ARG0 (MRPNode-2 / i))

# ::id 797
# ::snt The answer to both questions is: Yes.
# ::tok The answer to both questions is : Yes .
# ::collapsed instance nodes 1
(MRPNode-0 / answer-01
           :ARG2 (MRPNode-1 / yes)
           :ARG2 (MRPNode-2 / both_questions_2))

# ::id 798
# ::snt I did this one time as well.
# ::tok I did this one time as well .
# ::collapsed instance nodes 0
(MRPNode-0 / do-02
           :frequency (MRPNode-1 / 1)
           :ARG1 (MRPNode-2 / this)
           :ARG0 (MRPNode-3 / i)
           :mod (MRPNode-4 / as-well))

# ::id 799
# ::snt You should just ask your boss what he wants you to do.
# ::tok You should just ask your boss what he wants you to do .
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / ask-01
                            :ARG0 (MRPNode-2 / thing
                                             :ARG1-of (MRPNode-3 / do-02
                                                                 :ARG0 (MRPNode-4 / person
                                                                                  :ARG0-of (MRPNode-5 / want-01
                                                                                                      :ARG1 MRPNode-3))))
                            :ARG0 (MRPNode-6 / you
                                             :ARG1-of (MRPNode-7 / have-rel-role-91
                                                                 :ARG2 (MRPNode-8 / boss)
                                                                 :ARG0 MRPNode-4))
                            :mod (MRPNode-9 / just)
                            :ARG2 MRPNode-4))

# ::id 800
# ::snt It depends on what you want to have in your tank.
# ::tok It depends on what you want to have in your tank .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / thing
                            :ARG1-of (MRPNode-2 / have-03
                                                :ARG0 (MRPNode-3 / you)
                                                :ARG1-of (MRPNode-4 / want-01
                                                                    :ARG0 MRPNode-3)
                                                :location (MRPNode-5 / tank
                                                                     :poss MRPNode-3)))
           :ARG0 (MRPNode-6 / it))

# ::id 801
# ::snt You don't have to know.
# ::tok You do n't have to know .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / you)
           :ARG2 (MRPNode-3 / know-01
                            :ARG0 MRPNode-2))

# ::id 802
# ::snt You can buy it on amazon for $5.
# ::tok You can buy it on amazon for $ 5 .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / buy-01
                            :ARG1 (MRPNode-2 / it)
                            :ARG0 (MRPNode-3 / you)
                            :ARG3 (MRPNode-4 / company
                                             :name (MRPNode-5 / name
                                                              :op1 (MRPNode-6 / amazon)))
                            :ARG3 (MRPNode-7 / monetary-quantity
                                             :quant (MRPNode-8 / 5)
                                             :unit (MRPNode-9 / dollar))))

# ::id 803
# ::snt You might have to try a variety before you find one that clicks with him.
# ::tok You might have to try a variety before you find one that clicks with him .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / obligate-01
                            :ARG1 (MRPNode-2 / you
                                             :ARG0-of (MRPNode-3 / find-01
                                                                 :ARG1 (MRPNode-4 / thing
                                                                                  :ARG0-of (MRPNode-5 / click-01
                                                                                                      :accompanier (MRPNode-6 / he)))))
                            :ARG2 (MRPNode-7 / try-01
                                             :ARG0 MRPNode-2
                                             :ARG1 (MRPNode-8 / variety
                                                              :op1 MRPNode-3)
                                             :time (MRPNode-9 / before
                                                              :op1 MRPNode-3))))

# ::id 804
# ::snt From what I understand this is what you can do :
# ::tok From what I understand this is what you can do :
# ::collapsed instance nodes 0
(MRPNode-0 / understand-01
           :ARG1 (MRPNode-1 / thing
                            :ARG1-of (MRPNode-2 / do-02
                                                :ARG0 (MRPNode-3 / you)
                                                :ARG1-of (MRPNode-4 / possible-01))
                            :domain (MRPNode-5 / this))
           :ARG0 (MRPNode-6 / i))

# ::id 805
# ::snt I'd say it primarily depends on two things:
# ::tok I 'd say it primarily depends on two things :
# ::collapsed instance nodes 0
(MRPNode-0 / say-01
           :ARG1 (MRPNode-1 / depend-01
                            :ARG1 (MRPNode-2 / it)
                            :mod (MRPNode-3 / primary)
                            :ARG1 (MRPNode-4 / thing
                                             :quant (MRPNode-5 / 2)))
           :ARG0 (MRPNode-6 / i))

# ::id 806
# ::snt I am not sure this is the right site for the question.
# ::tok I am not sure this is the right site for the question .
# ::collapsed instance nodes 0
(MRPNode-0 / sure-02
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / site
                            :ARG1-of (MRPNode-3 / right-02)
                            :domain (MRPNode-4 / this)
                            :purpose (MRPNode-5 / question-01))
           :ARG0 (MRPNode-6 / i))

# ::id 807
# ::snt You are not disclosing key info.
# ::tok You are not disclosing key info .
# ::collapsed instance nodes 0
(MRPNode-0 / disclose-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / information
                            :ARG1-of (MRPNode-3 / key-02))
           :ARG0 (MRPNode-4 / you))

# ::id 808
# ::snt It very much depends on the grant in question.
# ::tok It very much depends on the grant in question .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / thing
                            :ARG1-of (MRPNode-2 / grant-01
                                                :ARG1-of (MRPNode-3 / question-01)))
           :ARG0 (MRPNode-4 / it)
           :degree (MRPNode-5 / much
                              :degree (MRPNode-6 / very)))

# ::id 809
# ::snt It depends on what they are.
# ::tok It depends on what they are .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / thing
                            :domain (MRPNode-2 / they))
           :ARG0 (MRPNode-3 / it))

# ::id 810
# ::snt There's not a lot you can do about that.
# ::tok There 's not a lot you can do about that .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / lot
                                             :polarity (MRPNode-3 / -))
                            :ARG0 (MRPNode-4 / you)
                            :ARG2 (MRPNode-5 / that)))

# ::id 811
# ::snt You just have to base your answer on what you do know, which is what you want.
# ::tok You just have to base your answer on what you do know , which is what you want .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / you
                            :ARG0-of (MRPNode-2 / know-01
                                                :ARG1 (MRPNode-3 / thing))
                            :ARG0-of (MRPNode-4 / want-01)
                            :ARG0-of (MRPNode-5 / answer-01))
           :mod (MRPNode-6 / just)
           :ARG2 (MRPNode-7 / base-02
                            :ARG0 MRPNode-1
                            :ARG1 MRPNode-5
                            :ARG1 MRPNode-3))

# ::id 812
# ::snt This is not a good idea.
# ::tok This is not a good idea .
# ::collapsed instance nodes 0
(MRPNode-0 / idea
           :ARG1-of (MRPNode-1 / good-02
                               :polarity (MRPNode-2 / -))
           :domain (MRPNode-3 / this))

# ::id 813
# ::snt I'd say it primarily depends on two things:
# ::tok I 'd say it primarily depends on two things :
# ::collapsed instance nodes 0
(MRPNode-0 / say-01
           :ARG1 (MRPNode-1 / depend-01
                            :ARG1 (MRPNode-2 / it)
                            :mod (MRPNode-3 / primary)
                            :ARG1 (MRPNode-4 / thing
                                             :quant (MRPNode-5 / 2)))
           :ARG0 (MRPNode-6 / i))

# ::id 814
# ::snt I have the same thing.
# ::tok I have the same thing .
# ::collapsed instance nodes 0
(MRPNode-0 / have-03
           :ARG1 (MRPNode-1 / thing
                            :ARG1-of (MRPNode-2 / same-01))
           :ARG0 (MRPNode-3 / i))

# ::id 815
# ::snt You can use it, too.
# ::tok You can use it , too .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / use-01
                            :ARG1 (MRPNode-2 / it)
                            :ARG0 (MRPNode-3 / you)
                            :mod (MRPNode-4 / too)))

# ::id 816
# ::snt It really depends on how the employer documents it.
# ::tok It really depends on how the employer documents it .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / thing
                            :manner-of (MRPNode-2 / document-01
                                                  :ARG0 (MRPNode-3 / person
                                                                   :ARG0-of (MRPNode-4 / employ-01))
                                                  :ARG1 (MRPNode-5 / it)))
           :ARG0 MRPNode-5
           :ARG1-of (MRPNode-6 / real-04))

# ::id 817
# ::snt I've had this same problem.
# ::tok I 've had this same problem .
# ::collapsed instance nodes 2
(MRPNode-0 / have-03
           :ARG1 (MRPNode-1 / this_same_problem_3)
           :ARG0 (MRPNode-2 / i))

# ::id 818
# ::snt It depends on the dish and how amenable it is at the stage you make the mistake.
# ::tok It depends on the dish and how amenable it is at the stage you make the mistake .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / dish
                                            :ARG1-of (MRPNode-3 / stage))
                            :op2 (MRPNode-4 / thing
                                            :degree-of (MRPNode-5 / enable-01
                                                                  :ARG0 (MRPNode-6 / mistake-02
                                                                                   :ARG0 (MRPNode-7 / you)))))
           :ARG0 (MRPNode-8 / it))

# ::id 819
# ::snt You just have to base your answer on what you do know, which is what you want.
# ::tok You just have to base your answer on what you do know , which is what you want .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / you
                            :ARG0-of (MRPNode-2 / know-01
                                                :ARG1 (MRPNode-3 / thing))
                            :ARG0-of (MRPNode-4 / want-01)
                            :ARG0-of (MRPNode-5 / answer-01))
           :mod (MRPNode-6 / just)
           :ARG2 (MRPNode-7 / base-02
                            :ARG0 MRPNode-1
                            :ARG1 MRPNode-5
                            :ARG1 MRPNode-3))

# ::id 820
# ::snt That's what I believe.
# ::tok That 's what I believe .
# ::collapsed instance nodes 0
(MRPNode-0 / believe-01
           :ARG1 (MRPNode-1 / that)
           :ARG0 (MRPNode-2 / i))

# ::id 821
# ::snt If you are not sure how to do it, don't do it at all.
# ::tok If you are not sure how to do it , do n't do it at all .
# ::collapsed instance nodes 0
(MRPNode-0 / do-02
           :polarity (MRPNode-1 / -)
           :mode (MRPNode-2 / imperative)
           :ARG1 (MRPNode-3 / it
                            :ARG1-of (MRPNode-4 / do-02
                                                :manner (MRPNode-5 / thing)))
           :ARG0 (MRPNode-6 / you)
           :mod (MRPNode-7 / at-all)
           :condition (MRPNode-8 / sure-02
                                 :arg1 (MRPNode-9 / -)
                                 :ARG0 MRPNode-6
                                 :ARG1 MRPNode-5))

# ::id 822
# ::snt I would say you can do it, but it wouldn't be advised.
# ::tok I would say you can do it , but it would n't be advised .
# ::collapsed instance nodes 0
(MRPNode-0 / contrast-01
           :ARG1 (MRPNode-1 / say-01
                            :ARG1 (MRPNode-2 / possible-01
                                             :ARG1 (MRPNode-3 / do-02
                                                              :ARG0 (MRPNode-4 / you)
                                                              :ARG1 (MRPNode-5 / it)))
                            :ARG0 (MRPNode-6 / i))
           :ARG2 (MRPNode-7 / advise-01
                            :polarity (MRPNode-8 / -)
                            :ARG1 MRPNode-5))

# ::id 823
# ::snt I would say you can do it, but it wouldn't be advised.
# ::tok I would say you can do it , but it would n't be advised .
# ::collapsed instance nodes 0
(MRPNode-0 / contrast-01
           :ARG1 (MRPNode-1 / say-01
                            :ARG1 (MRPNode-2 / possible-01
                                             :ARG1 (MRPNode-3 / do-02
                                                              :ARG0 (MRPNode-4 / you)
                                                              :ARG1 (MRPNode-5 / it)))
                            :ARG0 (MRPNode-6 / i))
           :ARG2 (MRPNode-7 / advise-01
                            :polarity (MRPNode-8 / -)
                            :ARG1 MRPNode-5))

# ::id 824
# ::snt This answer is based on my experience teaching undergraduate math in the US.
# ::tok This answer is based on my experience teaching undergraduate math in the US .
# ::collapsed instance nodes 3
(MRPNode-0 / base-02
           :ARG1 (MRPNode-1 / this_answer_3)
           :ARG2 (MRPNode-2 / experience-01
                            :ARG1 (MRPNode-3 / teach-01
                                             :ARG1 (MRPNode-4 / undergraduate_math_2)
                                             :location (MRPNode-5 / country
                                                                  :name (MRPNode-6 / name
                                                                                   :op1 (MRPNode-7 / us)))
                                             :ARG0 (MRPNode-8 / i))
                            :ARG0 MRPNode-8))

# ::id 825
# ::snt It depends on what you want to have in your tank.
# ::tok It depends on what you want to have in your tank .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / thing
                            :ARG1-of (MRPNode-2 / have-03
                                                :ARG0 (MRPNode-3 / you)
                                                :ARG1-of (MRPNode-4 / want-01
                                                                    :ARG0 MRPNode-3)
                                                :location (MRPNode-5 / tank
                                                                     :poss MRPNode-3)))
           :ARG0 (MRPNode-6 / it))

# ::id 826
# ::snt That is your problem, not your supervisor's.
# ::tok That is your problem , not your supervisor 's .
# ::collapsed instance nodes 0
(MRPNode-0 / contrast-01
           :ARG1 (MRPNode-1 / problem
                            :domain (MRPNode-2 / that)
                            :poss (MRPNode-3 / you
                                             :ARG1-of (MRPNode-4 / have-rel-role-91
                                                                 :ARG2 (MRPNode-5 / supervisor)
                                                                 :ARG0 (MRPNode-6 / person))))
           :ARG2 (MRPNode-7 / problem
                            :polarity (MRPNode-8 / -)
                            :domain MRPNode-2
                            :poss MRPNode-3
                            :poss MRPNode-6))

# ::id 827
# ::snt Yes, there is a reason to not do what you propose.
# ::tok Yes , there is a reason to not do what you propose .
# ::collapsed instance nodes 0
(MRPNode-0 / reason
           :ARG0-of (MRPNode-1 / cause-01
                               :ARG1 (MRPNode-2 / do-02
                                                :polarity (MRPNode-3 / -)
                                                :ARG1 (MRPNode-4 / thing
                                                                 :ARG1-of (MRPNode-5 / propose-01
                                                                                     :ARG0 (MRPNode-6 / you))))))

# ::id 828
# ::snt I think it is depends on the program.
# ::tok I think it is depends on the program .
# ::collapsed instance nodes 0
(MRPNode-0 / think-01
           :ARG1 (MRPNode-1 / depend-01
                            :ARG1 (MRPNode-2 / program)
                            :ARG0 (MRPNode-3 / it))
           :ARG0 (MRPNode-4 / i))

# ::id 829
# ::snt I think you've pretty much done your review.
# ::tok I think you 've pretty much done your review .
# ::collapsed instance nodes 0
(MRPNode-0 / think-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG1 (MRPNode-2 / review-01
                                             :ARG0 (MRPNode-3 / you))
                            :ARG0 MRPNode-3
                            :degree (MRPNode-4 / pretty-much))
           :ARG0 (MRPNode-5 / i))

# ::id 830
# ::snt You burn more Calories digesting protein than you do carbohydrates and fat.
# ::tok You burn more Calories digesting protein than you do carbohydrates and fat .
# ::collapsed instance nodes 0
(MRPNode-0 / burn-01
           :ARG1 (MRPNode-1 / product
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / calorie))
                            :quant (MRPNode-4 / have-quant-91
                                              :ARG3 (MRPNode-5 / more)
                                              :ARG4 (MRPNode-6 / and
                                                               :op1 (MRPNode-7 / carbohydrate)
                                                               :op2 (MRPNode-8 / fat))))
           :ARG0 (MRPNode-9 / you
                            :ARG0-of (MRPNode-10 / digest-01
                                                 :ARG1 (MRPNode-11 / protein))))

# ::id 831
# ::snt I would look at this: U.S.
# ::tok I would look at this : U.S.
# ::collapsed instance nodes 0
(MRPNode-0 / look-01
           :ARG1 (MRPNode-1 / country
                            :name (MRPNode-2 / name
                                             :op1 (MRPNode-3 / u.s.)))
           :ARG0 (MRPNode-4 / i)
           :ARG1 (MRPNode-5 / this))

# ::id 832
# ::snt It looks to me that this is set up for what you want:
# ::tok It looks to me that this is set up for what you want :
# ::collapsed instance nodes 0
(MRPNode-0 / look-02
           :ARG1 (MRPNode-1 / set-up-03
                            :ARG1 (MRPNode-2 / this)
                            :purpose (MRPNode-3 / thing
                                                :ARG1-of (MRPNode-4 / want-01
                                                                    :ARG0 (MRPNode-5 / you))))
           :ARG0 (MRPNode-6 / i))

# ::id 833
# ::snt It is impossible to answer this question without a form check.
# ::tok It is impossible to answer this question without a form check .
# ::collapsed instance nodes 1
(MRPNode-0 / possible-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / answer-01
                            :ARG1 (MRPNode-3 / check-01
                                             :polarity (MRPNode-4 / -)
                                             :ARG1 (MRPNode-5 / form))
                            :ARG1 (MRPNode-6 / answer_this_2)))

# ::id 834
# ::snt You need to add this to your resume because it is the only position you have had.
# ::tok You need to add this to your resume because it is the only position you have had .
# ::collapsed instance nodes 1
(MRPNode-0 / need-01
           :ARG1 (MRPNode-1 / add-02
                            :ARG1 (MRPNode-2 / resume)
                            :ARG1 (MRPNode-3 / this)
                            :ARG0 (MRPNode-4 / you
                                             :ARG0-of (MRPNode-5 / have-03
                                                                 :ARG1 (MRPNode-6 / only_position_2))
                                             :ARG0-of MRPNode-0))
           :ARG1-of (MRPNode-7 / cause-01
                               :ARG0 MRPNode-6))

# ::id 835
# ::snt Yes, you should mention your experience.
# ::tok Yes , you should mention your experience .
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / mention-01
                            :ARG0 (MRPNode-2 / thing
                                             :ARG1-of (MRPNode-3 / experience-01
                                                                 :ARG0 (MRPNode-4 / you)))
                            :ARG0 MRPNode-4))

# ::id 836
# ::snt I think it is great that you had a test conducted.
# ::tok I think it is great that you had a test conducted .
# ::collapsed instance nodes 0
(MRPNode-0 / think-01
           :ARG1 (MRPNode-1 / great
                            :domain (MRPNode-2 / test-01
                                               :ARG0 (MRPNode-3 / you)
                                               :ARG1-of (MRPNode-4 / conduct-01)))
           :ARG0 (MRPNode-5 / i))

# ::id 837
# ::snt I'm going to go out on a limb here...
# ::tok I 'm going to go out on a limb here ...
# ::collapsed instance nodes 0
(MRPNode-0 / go-out-17
           :ARG1 (MRPNode-1 / i)
           :location (MRPNode-2 / here)
           :manner (MRPNode-3 / limb))

# ::id 838
# ::snt If your long stay visa for Switzerland is valid, then you will not need a transit visa.
# ::tok If your long stay visa for Switzerland is valid , then you will not need a transit visa .
# ::collapsed instance nodes 0
(MRPNode-0 / need-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / visa
                            :mod (MRPNode-3 / transit)
                            :poss (MRPNode-4 / you
                                             :poss-of (MRPNode-5 / visa
                                                                 :mod (MRPNode-6 / stay-01
                                                                                 :ARG1-of (MRPNode-7 / long-03))
                                                                 :destination (MRPNode-8 / country
                                                                                         :name (MRPNode-9 / name
                                                                                                          :op1 (MRPNode-10 / switzerland))))))
           :ARG0 MRPNode-4
           :condition (MRPNode-11 / valid-02
                                  :ARG1 MRPNode-5))

# ::id 839
# ::snt Now you don't have to be perfect on every answer.
# ::tok Now you do n't have to be perfect on every answer .
# ::collapsed instance nodes 2
(MRPNode-0 / obligate-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / you)
           :ARG2 (MRPNode-3 / perfect-02
                            :ARG1 MRPNode-2
                            :ARG2 (MRPNode-4 / every_answer_3))
           :time (MRPNode-5 / now))

# ::id 840
# ::snt Primer/paint will not work.
# ::tok Primer / paint will not work .
# ::collapsed instance nodes 0
(MRPNode-0 / work-09
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / slash
                            :op1 (MRPNode-3 / primer)
                            :op2 (MRPNode-4 / paint)))

# ::id 841
# ::snt The best thing you can do is to know your stuff.
# ::tok The best thing you can do is to know your stuff .
# ::collapsed instance nodes 0
(MRPNode-0 / thing
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / do-02
                               :ARG0 (MRPNode-3 / you)
                               :ARG1-of (MRPNode-4 / possible-01))
           :ARG1-of (MRPNode-5 / know-01
                               :ARG2 MRPNode-1
                               :ARG0 MRPNode-3
                               :ARG1 (MRPNode-6 / stuff
                                                :poss MRPNode-3))
           :ARG1-of (MRPNode-7 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-8 / most)))

# ::id 842
# ::snt I was in a similar situation.
# ::tok I was in a similar situation .
# ::collapsed instance nodes 0
(MRPNode-0 / be-located-at-91
           :ARG1 (MRPNode-1 / i)
           :ARG2 (MRPNode-2 / situation
                            :ARG1-of (MRPNode-3 / resemble-01)))

# ::id 843
# ::snt Sometime if you really want it you might need to pay an agency to get the place for you.
# ::tok Sometime if you really want it you might need to pay an agency to get the place for you .
# ::collapsed instance nodes 0
(MRPNode-0 / have-condition-91
           :ARG1 (MRPNode-1 / possible-01
                            :ARG1 (MRPNode-2 / need-01
                                             :ARG1 (MRPNode-3 / pay-01
                                                              :ARG2 (MRPNode-4 / agency)
                                                              :ARG0 (MRPNode-5 / you
                                                                               :ARG0-of (MRPNode-6 / get-01
                                                                                                   :ARG0 MRPNode-4
                                                                                                   :ARG1 (MRPNode-7 / place)))
                                                              :ARG3 MRPNode-6)
                                             :time (MRPNode-8 / sometime)
                                             :ARG0 MRPNode-5))
           :ARG2 (MRPNode-9 / want-01
                            :ARG1 (MRPNode-10 / it)
                            :ARG0 MRPNode-5
                            :ARG1-of (MRPNode-11 / real-04)))

# ::id 844
# ::snt Also it is useful to keep the consistency in your story.
# ::tok Also it is useful to keep the consistency in your story .
# ::collapsed instance nodes 0
(MRPNode-0 / useful-05
           :ARG1 (MRPNode-1 / also)
           :ARG2 (MRPNode-2 / keep-02
                            :ARG1 (MRPNode-3 / consistent-02
                                             :location (MRPNode-4 / story
                                                                  :poss (MRPNode-5 / you)))))

# ::id 845
# ::snt Unfortunately the answer to your question is we simply do not know.
# ::tok Unfortunately the answer to your question is we simply do not know .
# ::collapsed instance nodes 0
(MRPNode-0 / fortunate-01
           :polarity (MRPNode-1 / -)
           :ARG2 (MRPNode-2 / answer-01
                            :ARG1 (MRPNode-3 / question-01
                                             :ARG0 (MRPNode-4 / you))
                            :ARG2 (MRPNode-5 / we)
                            :ARG2 (MRPNode-6 / know-01
                                             :polarity (MRPNode-7 / -)
                                             :ARG0 MRPNode-5
                                             :mod (MRPNode-8 / simple))))

# ::id 846
# ::snt I would personally beware of the Motley Fool.
# ::tok I would personally beware of the Motley Fool .
# ::collapsed instance nodes 0
(MRPNode-0 / beware-01
           :ARG1 (MRPNode-1 / personal-02)
           :ARG1 (MRPNode-2 / broadcast-program
                            :name (MRPNode-3 / name
                                             :op1 (MRPNode-4 / motley)
                                             :op2 (MRPNode-5 / fool)))
           :ARG0 (MRPNode-6 / i))

# ::id 847
# ::snt You should do it.
# ::tok You should do it .
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG0 (MRPNode-2 / you)
                            :ARG1 (MRPNode-3 / it)))

# ::id 848
# ::snt You want to start in the room that is the largest to make sure you have the straightest start.
# ::tok You want to start in the room that is the largest to make sure you have the straightest start .
# ::collapsed instance nodes 0
(MRPNode-0 / want-01
           :ARG1 (MRPNode-1 / start-01
                            :ARG2 (MRPNode-2 / room
                                             :ARG1-of (MRPNode-3 / have-degree-91
                                                                 :ARG2 (MRPNode-4 / large)
                                                                 :ARG3 (MRPNode-5 / most))
                                             :ARG0 (MRPNode-6 / you
                                                              :ARG0-of (MRPNode-7 / have-03
                                                                                  :ARG1 (MRPNode-8 / start-01)
                                                                                  :ARG1 (MRPNode-9 / start-01
                                                                                                   :ARG1-of (MRPNode-10 / straight-04)))))
                            :purpose (MRPNode-11 / ensure-01
                                                 :ARG0 MRPNode-6
                                                 :ARG1 MRPNode-7)
                            :ARG0 MRPNode-6)
           :ARG0 MRPNode-6)

# ::id 849
# ::snt if you don't want to derail the meeting, but the key is to speak up.
# ::tok if you do n't want to derail the meeting , but the key is to speak up .
# ::collapsed instance nodes 0
(MRPNode-0 / key-02
           :ARG1 (MRPNode-1 / speak-out-03
                            :ARG0 (MRPNode-2 / you))
           :condition (MRPNode-3 / want-01
                                 :polarity (MRPNode-4 / -)
                                 :ARG0 MRPNode-2
                                 :ARG1 (MRPNode-5 / derail-01
                                                  :ARG1 (MRPNode-6 / meet-03))))

# ::id 850
# ::snt Unfortunately the answer to your question is we simply do not know.
# ::tok Unfortunately the answer to your question is we simply do not know .
# ::collapsed instance nodes 0
(MRPNode-0 / fortunate-01
           :polarity (MRPNode-1 / -)
           :ARG2 (MRPNode-2 / answer-01
                            :ARG1 (MRPNode-3 / question-01
                                             :ARG0 (MRPNode-4 / you))
                            :ARG2 (MRPNode-5 / we)
                            :ARG2 (MRPNode-6 / know-01
                                             :polarity (MRPNode-7 / -)
                                             :ARG0 MRPNode-5
                                             :mod (MRPNode-8 / simple))))

# ::id 851
# ::snt You just have to base your answer on what you do know, which is what you want.
# ::tok You just have to base your answer on what you do know , which is what you want .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / you
                            :ARG0-of (MRPNode-2 / know-01
                                                :ARG1 (MRPNode-3 / thing))
                            :ARG0-of (MRPNode-4 / want-01)
                            :ARG0-of (MRPNode-5 / answer-01))
           :mod (MRPNode-6 / just)
           :ARG2 (MRPNode-7 / base-02
                            :ARG0 MRPNode-1
                            :ARG1 MRPNode-5
                            :ARG1 MRPNode-3))

# ::id 852
# ::snt Yes, there is a reason for it.
# ::tok Yes , there is a reason for it .
# ::collapsed instance nodes 0
(MRPNode-0 / reason
           :purpose (MRPNode-1 / it))

# ::id 853
# ::snt The coffee simply picks up the aluminum from the pot, as the coffee is acidic.
# ::tok The coffee simply picks up the aluminum from the pot , as the coffee is acidic .
# ::collapsed instance nodes 0
(MRPNode-0 / pick-up-04
           :ARG1 (MRPNode-1 / aluminum)
           :ARG0 (MRPNode-2 / coffee)
           :ARG1-of (MRPNode-3 / simple-02)
           :ARG1-of (MRPNode-4 / cause-01
                               :ARG0 (MRPNode-5 / addictive-02))
           :ARG2 (MRPNode-6 / pot))

# ::id 854
# ::snt You just have to base your answer on what you do know, which is what you want.
# ::tok You just have to base your answer on what you do know , which is what you want .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / you
                            :ARG0-of (MRPNode-2 / know-01
                                                :ARG1 (MRPNode-3 / thing))
                            :ARG0-of (MRPNode-4 / want-01)
                            :ARG0-of (MRPNode-5 / answer-01))
           :mod (MRPNode-6 / just)
           :ARG2 (MRPNode-7 / base-02
                            :ARG0 MRPNode-1
                            :ARG1 MRPNode-5
                            :ARG1 MRPNode-3))

# ::id 855
# ::snt Some of what you can do:
# ::tok Some of what you can do :
# ::collapsed instance nodes 0
(MRPNode-0 / thing
           :ARG1-of (MRPNode-1 / include-91
                               :ARG2 (MRPNode-2 / some)
                               :ARG2 (MRPNode-3 / thing
                                                :ARG1-of (MRPNode-4 / do-02
                                                                    :ARG0 (MRPNode-5 / you)
                                                                    :ARG1-of (MRPNode-6 / possible-01)))))

# ::id 856
# ::snt This is a problem that the professor has to deal with.
# ::tok This is a problem that the professor has to deal with .
# ::collapsed instance nodes 0
(MRPNode-0 / problem
           :domain (MRPNode-1 / deal-01
                              :ARG0 (MRPNode-2 / professor)
                              :ARG2-of (MRPNode-3 / obligate-01
                                                  :ARG1 MRPNode-2))
           :domain (MRPNode-4 / this))

# ::id 857
# ::snt This doesn't answer your question, but:
# ::tok This does n't answer your question , but :
# ::collapsed instance nodes 0
(MRPNode-0 / contrast-01
           :ARG2 (MRPNode-1 / answer-01
                            :polarity (MRPNode-2 / -)
                            :ARG1 (MRPNode-3 / question-01
                                             :ARG0 (MRPNode-4 / you))
                            :ARG0 (MRPNode-5 / this)))

# ::id 858
# ::snt Yes, you have to file a tax return in Canada.
# ::tok Yes , you have to file a tax return in Canada .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / you)
           :ARG2 (MRPNode-2 / file-01
                            :ARG0 MRPNode-1
                            :ARG1 (MRPNode-3 / return-06
                                             :ARG0 (MRPNode-4 / tax-01))
                            :ARG4 (MRPNode-5 / country
                                             :name (MRPNode-6 / name
                                                              :op1 (MRPNode-7 / canada)))))

# ::id 859
# ::snt Hope this is what you are looking for.
# ::tok Hope this is what you are looking for .
# ::collapsed instance nodes 0
(MRPNode-0 / hope-01
           :ARG1 (MRPNode-1 / look-01
                            :ARG1 (MRPNode-2 / you)
                            :ARG1 (MRPNode-3 / this)))

# ::id 860
# ::snt You just have to base your answer on what you do know, which is what you want.
# ::tok You just have to base your answer on what you do know , which is what you want .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / you
                            :ARG0-of (MRPNode-2 / know-01
                                                :ARG1 (MRPNode-3 / thing))
                            :ARG0-of (MRPNode-4 / want-01)
                            :ARG0-of (MRPNode-5 / answer-01))
           :mod (MRPNode-6 / just)
           :ARG2 (MRPNode-7 / base-02
                            :ARG0 MRPNode-1
                            :ARG1 MRPNode-5
                            :ARG1 MRPNode-3))

# ::id 861
# ::snt If you are not sure how to do it, don't do it at all.
# ::tok If you are not sure how to do it , do n't do it at all .
# ::collapsed instance nodes 0
(MRPNode-0 / do-02
           :polarity (MRPNode-1 / -)
           :mode (MRPNode-2 / imperative)
           :ARG1 (MRPNode-3 / it
                            :ARG1-of (MRPNode-4 / do-02
                                                :manner (MRPNode-5 / thing)))
           :ARG0 (MRPNode-6 / you)
           :mod (MRPNode-7 / at-all)
           :condition (MRPNode-8 / sure-02
                                 :arg1 (MRPNode-9 / -)
                                 :ARG0 MRPNode-6
                                 :ARG1 MRPNode-5))

# ::id 862
# ::snt Unfortunately the answer to your question is we simply do not know.
# ::tok Unfortunately the answer to your question is we simply do not know .
# ::collapsed instance nodes 0
(MRPNode-0 / fortunate-01
           :polarity (MRPNode-1 / -)
           :ARG2 (MRPNode-2 / answer-01
                            :ARG1 (MRPNode-3 / question-01
                                             :ARG0 (MRPNode-4 / you))
                            :ARG2 (MRPNode-5 / we)
                            :ARG2 (MRPNode-6 / know-01
                                             :polarity (MRPNode-7 / -)
                                             :ARG0 MRPNode-5
                                             :mod (MRPNode-8 / simple))))

# ::id 863
# ::snt If you are not sure how to do it, don't do it at all.
# ::tok If you are not sure how to do it , do n't do it at all .
# ::collapsed instance nodes 0
(MRPNode-0 / do-02
           :polarity (MRPNode-1 / -)
           :mode (MRPNode-2 / imperative)
           :ARG1 (MRPNode-3 / it
                            :ARG1-of (MRPNode-4 / do-02
                                                :manner (MRPNode-5 / thing)))
           :ARG0 (MRPNode-6 / you)
           :mod (MRPNode-7 / at-all)
           :condition (MRPNode-8 / sure-02
                                 :arg1 (MRPNode-9 / -)
                                 :ARG0 MRPNode-6
                                 :ARG1 MRPNode-5))

# ::id 864
# ::snt It's not a good idea.
# ::tok It 's not a good idea .
# ::collapsed instance nodes 0
(MRPNode-0 / idea
           :ARG1-of (MRPNode-1 / good-02
                               :polarity (MRPNode-2 / -))
           :domain (MRPNode-3 / it))

# ::id 865
# ::snt There are a couple of options that you could consider:
# ::tok There are a couple of options that you could consider :
# ::collapsed instance nodes 0
(MRPNode-0 / option
           :ARG1-of (MRPNode-1 / consider-02
                               :ARG0 (MRPNode-2 / you)
                               :ARG1-of (MRPNode-3 / possible-01))
           :quant (MRPNode-4 / couple))

# ::id 866
# ::snt Vietnamese citizens need a visa to visit the USA.
# ::tok Vietnamese citizens need a visa to visit the USA .
# ::collapsed instance nodes 0
(MRPNode-0 / need-01
           :ARG1 (MRPNode-1 / visa)
           :ARG0 (MRPNode-2 / citizen
                            :mod (MRPNode-3 / country
                                            :name (MRPNode-4 / name
                                                             :op1 (MRPNode-5 / usa))))
           :purpose (MRPNode-6 / visit-01
                               :ARG0 MRPNode-2
                               :ARG1 (MRPNode-7 / country
                                                :name (MRPNode-8 / name
                                                                 :op1 (MRPNode-9 / vietnam)))))

# ::id 867
# ::snt It depends on how it's used.
# ::tok It depends on how it 's used .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / thing
                            :manner-of (MRPNode-2 / use-01
                                                  :ARG1 (MRPNode-3 / it)))
           :ARG0 MRPNode-3)

# ::id 868
# ::snt This is a great one...
# ::tok This is a great one ...
# ::collapsed instance nodes 0
(MRPNode-0 / one
           :mod (MRPNode-1 / great)
           :domain (MRPNode-2 / this))

# ::id 869
# ::snt The key is you have to find something that works for you, and your goals.
# ::tok The key is you have to find something that works for you , and your goals .
# ::collapsed instance nodes 0
(MRPNode-0 / key-02
           :ARG1 (MRPNode-1 / obligate-01
                            :ARG1 (MRPNode-2 / find-01
                                             :ARG1 (MRPNode-3 / something
                                                              :ARG0-of (MRPNode-4 / work-09
                                                                                  :ARG2 (MRPNode-5 / and)))
                                             :ARG0 (MRPNode-6 / you
                                                              :poss-of (MRPNode-7 / goal
                                                                                  :op2-of MRPNode-5)))
                            :ARG1 MRPNode-6))

# ::id 870
# ::snt It depends on what you want to do next, and where you want to do it.
# ::tok It depends on what you want to do next , and where you want to do it .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / thing
                                            :ARG1-of (MRPNode-3 / do-02
                                                                :ARG0 (MRPNode-4 / you)
                                                                :time (MRPNode-5 / next)))
                            :op2 (MRPNode-6 / location
                                            :location-of (MRPNode-7 / want-01
                                                                    :ARG1 MRPNode-3
                                                                    :ARG0 MRPNode-4)))
           :ARG0 (MRPNode-8 / it))

# ::id 871
# ::snt If you haven't, you should.
# ::tok If you have n't , you should .
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG2 (MRPNode-1 / have-03
                            :polarity (MRPNode-2 / -)
                            :ARG0 (MRPNode-3 / you))
           :ARG2 MRPNode-3)

# ::id 872
# ::snt Problem is, the system doesn't account for people who could care less about money, or title.
# ::tok Problem is , the system does n't account for people who could care less about money , or title .
# ::collapsed instance nodes 0
(MRPNode-0 / problem
           :domain (MRPNode-1 / account-01
                              :polarity (MRPNode-2 / -)
                              :ARG1 (MRPNode-3 / person
                                               :ARG0-of (MRPNode-4 / care-01
                                                                   :ARG1 (MRPNode-5 / or
                                                                                    :op1 (MRPNode-6 / money)
                                                                                    :op2 (MRPNode-7 / title))
                                                                   :ARG1-of (MRPNode-8 / have-quant-91
                                                                                       :ARG3 (MRPNode-9 / less))
                                                                   :ARG1-of (MRPNode-10 / possible-01)))
                              :ARG0 (MRPNode-11 / system)))

# ::id 873
# ::snt In the first case, I think you don't need it.
# ::tok In the first case , I think you do n't need it .
# ::collapsed instance nodes 0
(MRPNode-0 / think-01
           :ARG1 (MRPNode-1 / need-01
                            :polarity (MRPNode-2 / -)
                            :ARG1 (MRPNode-3 / it)
                            :ARG0 (MRPNode-4 / you))
           :ARG0 (MRPNode-5 / i)
           :prep-in (MRPNode-6 / case-04
                               :ord (MRPNode-7 / ordinal-entity
                                               :value (MRPNode-8 / 1))))

# ::id 874
# ::snt Yes, it is possible to publish a paper on model analysis.
# ::tok Yes , it is possible to publish a paper on model analysis .
# ::collapsed instance nodes 0
(MRPNode-0 / possible-01
           :ARG1 (MRPNode-1 / publish-01
                            :ARG1 (MRPNode-2 / paper
                                             :topic (MRPNode-3 / analyze-01
                                                               :ARG1 (MRPNode-4 / model)))))

# ::id 875
# ::snt You just have to base your answer on what you do know, which is what you want.
# ::tok You just have to base your answer on what you do know , which is what you want .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / you
                            :ARG0-of (MRPNode-2 / know-01
                                                :ARG1 (MRPNode-3 / thing))
                            :ARG0-of (MRPNode-4 / want-01)
                            :ARG0-of (MRPNode-5 / answer-01))
           :mod (MRPNode-6 / just)
           :ARG2 (MRPNode-7 / base-02
                            :ARG0 MRPNode-1
                            :ARG1 MRPNode-5
                            :ARG1 MRPNode-3))

# ::id 876
# ::snt Yes, there is a rule against this.
# ::tok Yes , there is a rule against this .
# ::collapsed instance nodes 0
(MRPNode-0 / rule-01
           :ARG3 (MRPNode-1 / this))

# ::id 877
# ::snt It depends on what they are.
# ::tok It depends on what they are .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / thing
                            :domain (MRPNode-2 / they))
           :ARG0 (MRPNode-3 / it))

# ::id 878
# ::snt You don't need to know everything.
# ::tok You do n't need to know everything .
# ::collapsed instance nodes 0
(MRPNode-0 / need-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / know-01
                            :ARG1 (MRPNode-3 / everything)
                            :ARG0 (MRPNode-4 / you))
           :ARG0 MRPNode-4)

# ::id 879
# ::snt I think it's just a habit.
# ::tok I think it 's just a habit .
# ::collapsed instance nodes 0
(MRPNode-0 / think-01
           :ARG1 (MRPNode-1 / habit
                            :mod (MRPNode-2 / just)
                            :domain (MRPNode-3 / it))
           :ARG0 (MRPNode-4 / i))

# ::id 880
# ::snt It depends on what you want to do next, and where you want to do it.
# ::tok It depends on what you want to do next , and where you want to do it .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / thing
                                            :ARG1-of (MRPNode-3 / do-02
                                                                :ARG0 (MRPNode-4 / you)
                                                                :time (MRPNode-5 / next)))
                            :op2 (MRPNode-6 / location
                                            :location-of (MRPNode-7 / want-01
                                                                    :ARG1 MRPNode-3
                                                                    :ARG0 MRPNode-4)))
           :ARG0 (MRPNode-8 / it))

# ::id 881
# ::snt You should do it.
# ::tok You should do it .
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG0 (MRPNode-2 / you)
                            :ARG1 (MRPNode-3 / it)))

# ::id 882
# ::snt The answer to this and all such similar questions is in two stages:
# ::tok The answer to this and all such similar questions is in two stages :
# ::collapsed instance nodes 3
(MRPNode-0 / answer-01
           :ARG2 (MRPNode-1 / and
                            :op1 (MRPNode-2 / this)
                            :op2 (MRPNode-3 / all_such_similar_questions_4))
           :ARG2 (MRPNode-4 / stage
                            :quant (MRPNode-5 / 2)))

# ::id 883
# ::snt It depends on what you want to do next, and where you want to do it.
# ::tok It depends on what you want to do next , and where you want to do it .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / thing
                                            :ARG1-of (MRPNode-3 / do-02
                                                                :ARG0 (MRPNode-4 / you)
                                                                :time (MRPNode-5 / next)))
                            :op2 (MRPNode-6 / location
                                            :location-of (MRPNode-7 / want-01
                                                                    :ARG1 MRPNode-3
                                                                    :ARG0 MRPNode-4)))
           :ARG0 (MRPNode-8 / it))

# ::id 884
# ::snt It's not a good idea.
# ::tok It 's not a good idea .
# ::collapsed instance nodes 0
(MRPNode-0 / idea
           :ARG1-of (MRPNode-1 / good-02
                               :polarity (MRPNode-2 / -))
           :domain (MRPNode-3 / it))

# ::id 885
# ::snt Yes, there is at least one to my knowledge.
# ::tok Yes , there is at least one to my knowledge .
# ::collapsed instance nodes 0
(MRPNode-0 / know-01
           :ARG1 (MRPNode-1 / at-least
                            :op1 (MRPNode-2 / 1))
           :ARG0 (MRPNode-3 / i))

# ::id 886
# ::snt "My answer to your question is ""Probably Not""."
# ::tok " My answer to your question is " " Probably Not " " . "
# ::collapsed instance nodes 2
(MRPNode-0 / answer-01
           :ARG1 (MRPNode-1 / question-01
                            :ARG0 (MRPNode-2 / you))
           :ARG0 (MRPNode-3 / i)
           :ARG2 (MRPNode-4 / probably_not_3
                            :arg2 (MRPNode-5 / -)))

# ::id 887
# ::snt The key thing to realize here is that it's not your job to make people do their work.
# ::tok The key thing to realize here is that it 's not your job to make people do their work .
# ::collapsed instance nodes 0
(MRPNode-0 / key-02
           :ARG1 (MRPNode-1 / realize-01
                            :location (MRPNode-2 / here))
           :ARG1 (MRPNode-3 / job
                            :polarity (MRPNode-4 / -)
                            :domain (MRPNode-5 / make-02
                                               :ARG1 (MRPNode-6 / do-02
                                                                :ARG1 (MRPNode-7 / work-01
                                                                                 :ARG0 (MRPNode-8 / person))
                                                                :ARG0 MRPNode-8)
                                               :ARG0 (MRPNode-9 / you))
                            :poss MRPNode-9))

# ::id 888
# ::snt There are two possible causes for this:
# ::tok There are two possible causes for this :
# ::collapsed instance nodes 0
(MRPNode-0 / cause-01
           :quant (MRPNode-1 / 2)
           :ARG1 (MRPNode-2 / this)
           :ARG0 (MRPNode-3 / possible-01))

# ::id 889
# ::snt There's also what the string is made of.
# ::tok There 's also what the string is made of .
# ::collapsed instance nodes 0
(MRPNode-0 / make-01
           :ARG1 (MRPNode-1 / string)
           :mod (MRPNode-2 / also))

# ::id 890
# ::snt You also imply you may not be paid if they cannot place you with a client.
# ::tok You also imply you may not be paid if they cannot place you with a client .
# ::collapsed instance nodes 0
(MRPNode-0 / imply-01
           :ARG1 (MRPNode-1 / possible-01
                            :polarity (MRPNode-2 / -)
                            :ARG1 (MRPNode-3 / pay-01
                                             :condition (MRPNode-4 / possible-01
                                                                   :polarity (MRPNode-5 / -)
                                                                   :ARG1 (MRPNode-6 / place-01
                                                                                    :ARG0 (MRPNode-7 / they)
                                                                                    :ARG2 (MRPNode-8 / person))))
                            :condition MRPNode-6)
           :ARG0 (MRPNode-9 / you
                            :ARG1-of (MRPNode-10 / have-rel-role-91
                                                 :ARG0 MRPNode-7
                                                 :ARG0 MRPNode-8
                                                 :ARG2 (MRPNode-11 / client)))
           :mod (MRPNode-12 / also))

# ::id 891
# ::snt You just have to base your answer on what you do know, which is what you want.
# ::tok You just have to base your answer on what you do know , which is what you want .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / you
                            :ARG0-of (MRPNode-2 / know-01
                                                :ARG1 (MRPNode-3 / thing))
                            :ARG0-of (MRPNode-4 / want-01)
                            :ARG0-of (MRPNode-5 / answer-01))
           :mod (MRPNode-6 / just)
           :ARG2 (MRPNode-7 / base-02
                            :ARG0 MRPNode-1
                            :ARG1 MRPNode-5
                            :ARG1 MRPNode-3))

# ::id 892
# ::snt You need to read a lot to know what you like and what you don't.
# ::tok You need to read a lot to know what you like and what you do n't .
# ::collapsed instance nodes 0
(MRPNode-0 / need-01
           :ARG1 (MRPNode-1 / read-01
                            :purpose (MRPNode-2 / know-01
                                                :ARG1 (MRPNode-3 / and
                                                                 :op2 (MRPNode-4 / thing)
                                                                 :op1 (MRPNode-5 / dislike-01)
                                                                 :op2 (MRPNode-6 / thing))
                                                :ARG0 (MRPNode-7 / you
                                                                 :ARG0-of MRPNode-5
                                                                 :ARG0-of (MRPNode-8 / do-02
                                                                                     :polarity (MRPNode-9 / -)
                                                                                     :ARG1 MRPNode-6)))
                            :quant (MRPNode-10 / lot)
                            :ARG0 MRPNode-7)
           :ARG0 MRPNode-7)

# ::id 893
# ::snt It's not a good idea.
# ::tok It 's not a good idea .
# ::collapsed instance nodes 0
(MRPNode-0 / idea
           :ARG1-of (MRPNode-1 / good-02
                               :polarity (MRPNode-2 / -))
           :domain (MRPNode-3 / it))

# ::id 894
# ::snt It's pretty much up to you.
# ::tok It 's pretty much up to you .
# ::collapsed instance nodes 0
(MRPNode-0 / depend-01
           :ARG1 (MRPNode-1 / you)
           :ARG0 (MRPNode-2 / it)
           :degree (MRPNode-3 / pretty-much))

# ::id 895
# ::snt Work into it slowly.
# ::tok Work into it slowly .
# ::collapsed instance nodes 0
(MRPNode-0 / work-01
           :mode (MRPNode-1 / imperative)
           :ARG1 (MRPNode-2 / it)
           :ARG0 (MRPNode-3 / you)
           :ARG1-of (MRPNode-4 / slow-05))

# ::id 896
# ::snt There are two ways to start with: plunging and dripping.
# ::tok There are two ways to start with : plunging and dripping .
# ::collapsed instance nodes 0
(MRPNode-0 / way
           :quant (MRPNode-1 / 2)
           :quant (MRPNode-2 / mean-01
                             :ARG2 (MRPNode-3 / and
                                              :op1 (MRPNode-4 / plunging)
                                              :op2 (MRPNode-5 / dripping)))
           :domain (MRPNode-6 / start-01))

# ::id 897
# ::snt The answers so far are already good, but I'd like to add a map for Switzerland:
# ::tok The answers so far are already good , but I 'd like to add a map for Switzerland :
# ::collapsed instance nodes 0
(MRPNode-0 / have-concession-91
           :ARG1 (MRPNode-1 / good-02
                            :ARG1 (MRPNode-2 / answer-01
                                             :time (MRPNode-3 / so-far))
                            :time (MRPNode-4 / already))
           :ARG2 (MRPNode-5 / like-02
                            :ARG1 (MRPNode-6 / add-02
                                             :ARG1 (MRPNode-7 / map
                                                              :beneficiary (MRPNode-8 / country
                                                                                      :name (MRPNode-9 / name
                                                                                                       :op1 (MRPNode-10 / switzerland))))
                                             :ARG0 (MRPNode-11 / i))
                            :ARG0 MRPNode-11))

# ::id 898
# ::snt There is no maximum.
# ::tok There is no maximum .
# ::collapsed instance nodes 0
(MRPNode-0 / null)

# ::id 899
# ::snt You need to read a lot to know what you like and what you don't.
# ::tok You need to read a lot to know what you like and what you do n't .
# ::collapsed instance nodes 0
(MRPNode-0 / need-01
           :ARG1 (MRPNode-1 / read-01
                            :purpose (MRPNode-2 / know-01
                                                :ARG1 (MRPNode-3 / and
                                                                 :op2 (MRPNode-4 / thing)
                                                                 :op1 (MRPNode-5 / dislike-01)
                                                                 :op2 (MRPNode-6 / thing))
                                                :ARG0 (MRPNode-7 / you
                                                                 :ARG0-of MRPNode-5
                                                                 :ARG0-of (MRPNode-8 / do-02
                                                                                     :polarity (MRPNode-9 / -)
                                                                                     :ARG1 MRPNode-6)))
                            :quant (MRPNode-10 / lot)
                            :ARG0 MRPNode-7)
           :ARG0 MRPNode-7)

# ::id 900
# ::snt You just have to base your answer on what you do know, which is what you want.
# ::tok You just have to base your answer on what you do know , which is what you want .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / you
                            :ARG0-of (MRPNode-2 / know-01
                                                :ARG1 (MRPNode-3 / thing))
                            :ARG0-of (MRPNode-4 / want-01)
                            :ARG0-of (MRPNode-5 / answer-01))
           :mod (MRPNode-6 / just)
           :ARG2 (MRPNode-7 / base-02
                            :ARG0 MRPNode-1
                            :ARG1 MRPNode-5
                            :ARG1 MRPNode-3))

# ::id 901
# ::snt No it does not affect your ratings.
# ::tok No it does not affect your ratings .
# ::collapsed instance nodes 0
(MRPNode-0 / affect-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / rate-01
                            :ARG1 (MRPNode-3 / you))
           :ARG0 (MRPNode-4 / it))

# ::id 902
# ::snt The best thing you can do is to know your stuff.
# ::tok The best thing you can do is to know your stuff .
# ::collapsed instance nodes 0
(MRPNode-0 / thing
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / do-02
                               :ARG0 (MRPNode-3 / you)
                               :ARG1-of (MRPNode-4 / possible-01))
           :ARG1-of (MRPNode-5 / know-01
                               :ARG2 MRPNode-1
                               :ARG0 MRPNode-3
                               :ARG1 (MRPNode-6 / stuff
                                                :poss MRPNode-3))
           :ARG1-of (MRPNode-7 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-8 / most)))

# ::id 903
# ::snt You don't have to know.
# ::tok You do n't have to know .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / you)
           :ARG2 (MRPNode-3 / know-01
                            :ARG0 MRPNode-2))

# ::id 904
# ::snt You need to read a lot to know what you like and what you don't.
# ::tok You need to read a lot to know what you like and what you do n't .
# ::collapsed instance nodes 0
(MRPNode-0 / need-01
           :ARG1 (MRPNode-1 / read-01
                            :purpose (MRPNode-2 / know-01
                                                :ARG1 (MRPNode-3 / and
                                                                 :op2 (MRPNode-4 / thing)
                                                                 :op1 (MRPNode-5 / dislike-01)
                                                                 :op2 (MRPNode-6 / thing))
                                                :ARG0 (MRPNode-7 / you
                                                                 :ARG0-of MRPNode-5
                                                                 :ARG0-of (MRPNode-8 / do-02
                                                                                     :polarity (MRPNode-9 / -)
                                                                                     :ARG1 MRPNode-6)))
                            :quant (MRPNode-10 / lot)
                            :ARG0 MRPNode-7)
           :ARG0 MRPNode-7)

# ::id 905
# ::snt The best thing you can do is to know your stuff.
# ::tok The best thing you can do is to know your stuff .
# ::collapsed instance nodes 0
(MRPNode-0 / thing
           :ARG1-of (MRPNode-1 / good-02)
           :ARG1-of (MRPNode-2 / do-02
                               :ARG0 (MRPNode-3 / you)
                               :ARG1-of (MRPNode-4 / possible-01))
           :ARG1-of (MRPNode-5 / know-01
                               :ARG2 MRPNode-1
                               :ARG0 MRPNode-3
                               :ARG1 (MRPNode-6 / stuff
                                                :poss MRPNode-3))
           :ARG1-of (MRPNode-7 / have-degree-91
                               :ARG2 MRPNode-1
                               :ARG3 (MRPNode-8 / most)))

# ::id 906
# ::snt You PROBABLY don't have any chance at the moment.
# ::tok You PROBABLY do n't have any chance at the moment .
# ::collapsed instance nodes 0
(MRPNode-0 / have-03
           :mod (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / chance-02
                            :mod (MRPNode-3 / any)
                            :ARG0 (MRPNode-4 / you))
           :ARG0 MRPNode-4
           :time (MRPNode-5 / moment)
           :manner (MRPNode-6 / probable))

# ::id 907
# ::snt You should do it.
# ::tok You should do it .
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / do-02
                            :ARG0 (MRPNode-2 / you)
                            :ARG1 (MRPNode-3 / it)))

# ::id 908
# ::snt What kind of insulation is it?
# ::tok What kind of insulation is it ?
# ::collapsed instance nodes 0
(MRPNode-0 / insulation
           :mod (MRPNode-1 / kind
                           :mod (MRPNode-2 / amr-unknown)
                           :mod (MRPNode-3 / it)))

# ::id 909
# ::snt It's all in her head.
# ::tok It 's all in her head .
# ::collapsed instance nodes 0
(MRPNode-0 / be-located-at-91
           :ARG1 (MRPNode-1 / it
                            :mod (MRPNode-2 / all))
           :ARG2 (MRPNode-3 / head
                            :part-of (MRPNode-4 / she)))

# ::id 910
# ::snt You need to read a lot to know what you like and what you don't.
# ::tok You need to read a lot to know what you like and what you do n't .
# ::collapsed instance nodes 0
(MRPNode-0 / need-01
           :ARG1 (MRPNode-1 / read-01
                            :purpose (MRPNode-2 / know-01
                                                :ARG1 (MRPNode-3 / and
                                                                 :op2 (MRPNode-4 / thing)
                                                                 :op1 (MRPNode-5 / dislike-01)
                                                                 :op2 (MRPNode-6 / thing))
                                                :ARG0 (MRPNode-7 / you
                                                                 :ARG0-of MRPNode-5
                                                                 :ARG0-of (MRPNode-8 / do-02
                                                                                     :polarity (MRPNode-9 / -)
                                                                                     :ARG1 MRPNode-6)))
                            :quant (MRPNode-10 / lot)
                            :ARG0 MRPNode-7)
           :ARG0 MRPNode-7)

# ::id 911
# ::snt You will want to clean the area first.
# ::tok You will want to clean the area first .
# ::collapsed instance nodes 0
(MRPNode-0 / want-01
           :ARG1 (MRPNode-1 / clean-up-02
                            :ARG1 (MRPNode-2 / area)
                            :ord (MRPNode-3 / ordinal-entity
                                            :value (MRPNode-4 / 1))
                            :ARG0 (MRPNode-5 / you))
           :ARG0 MRPNode-5)

# ::id 912
# ::snt You just have to base your answer on what you do know, which is what you want.
# ::tok You just have to base your answer on what you do know , which is what you want .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / you
                            :ARG0-of (MRPNode-2 / know-01
                                                :ARG1 (MRPNode-3 / thing))
                            :ARG0-of (MRPNode-4 / want-01)
                            :ARG0-of (MRPNode-5 / answer-01))
           :mod (MRPNode-6 / just)
           :ARG2 (MRPNode-7 / base-02
                            :ARG0 MRPNode-1
                            :ARG1 MRPNode-5
                            :ARG1 MRPNode-3))

# ::id 913
# ::snt What is your lid made of?
# ::tok What is your lid made of ?
# ::collapsed instance nodes 0
(MRPNode-0 / make-01
           :ARG1 (MRPNode-1 / lid
                            :poss (MRPNode-2 / you))
           :ARG2 (MRPNode-3 / amr-unknown))

# ::id 914
# ::snt You don't need any visa.
# ::tok You do n't need any visa .
# ::collapsed instance nodes 1
(MRPNode-0 / need-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / any_visa_2)
           :ARG0 (MRPNode-3 / you))

# ::id 915
# ::snt The answer to both questions is: Yes.
# ::tok The answer to both questions is : Yes .
# ::collapsed instance nodes 1
(MRPNode-0 / answer-01
           :ARG2 (MRPNode-1 / yes)
           :ARG2 (MRPNode-2 / both_questions_2))

# ::id 916
# ::snt You don't have to know.
# ::tok You do n't have to know .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / you)
           :ARG2 (MRPNode-3 / know-01
                            :ARG0 MRPNode-2))

# ::id 917
# ::snt There are a few things I think you should do.
# ::tok There are a few things I think you should do .
# ::collapsed instance nodes 0
(MRPNode-0 / think-01
           :ARG1 (MRPNode-1 / recommend-01
                            :ARG1 (MRPNode-2 / do-02
                                             :ARG1 (MRPNode-3 / thing
                                                              :quant (MRPNode-4 / few))
                                             :ARG0 (MRPNode-5 / you))
                            :ARG2 MRPNode-5)
           :ARG0 (MRPNode-6 / i))

# ::id 918
# ::snt Yes, there is a chemical difference.
# ::tok Yes , there is a chemical difference .
# ::collapsed instance nodes 1
(MRPNode-0 / chemical_difference_2)

# ::id 919
# ::snt They can be out of level by a bit, but flat is important.
# ::tok They can be out of level by a bit , but flat is important .
# ::collapsed instance nodes 0
(MRPNode-0 / have-concession-91
           :ARG1 (MRPNode-1 / important-01
                            :ARG1 (MRPNode-2 / flat-06))
           :ARG2 (MRPNode-3 / possible-01
                            :ARG1 (MRPNode-4 / out-06
                                             :ARG1 MRPNode-2
                                             :ARG1 (MRPNode-5 / they)
                                             :ARG2 (MRPNode-6 / level)
                                             :degree (MRPNode-7 / bit))))

# ::id 920
# ::snt No, you do not NEED a bread machine.
# ::tok No , you do not NEED a bread machine .
# ::collapsed instance nodes 1
(MRPNode-0 / need-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / bread_machine_2)
           :ARG0 (MRPNode-3 / you))

# ::id 921
# ::snt You don't have to know.
# ::tok You do n't have to know .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / you)
           :ARG2 (MRPNode-3 / know-01
                            :ARG0 MRPNode-2))

# ::id 922
# ::snt It is more deciding what you should do and what you should get others to do.
# ::tok It is more deciding what you should do and what you should get others to do .
# ::collapsed instance nodes 0
(MRPNode-0 / decide-01
           :ARG1 (MRPNode-1 / and
                            :op1 (MRPNode-2 / thing)
                            :op2 (MRPNode-3 / thing
                                            :ARG1-of (MRPNode-4 / do-02
                                                                :ARG0 (MRPNode-5 / other))))
           :ARG0 (MRPNode-6 / you
                            :ARG0-of (MRPNode-7 / do-02)
                            :ARG0-of (MRPNode-8 / recommend-01
                                                :ARG1 MRPNode-3))
           :mod (MRPNode-9 / more))

# ::id 923
# ::snt You are on the right path.
# ::tok You are on the right path .
# ::collapsed instance nodes 0
(MRPNode-0 / be-located-at-91
           :ARG1 (MRPNode-1 / you)
           :ARG2 (MRPNode-2 / path
                            :ARG1-of (MRPNode-3 / right-06)))

# ::id 924
# ::snt You don't need any visa.
# ::tok You do n't need any visa .
# ::collapsed instance nodes 1
(MRPNode-0 / need-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / any_visa_2)
           :ARG0 (MRPNode-3 / you))

# ::id 925
# ::snt You have to decide what you want to get out of this.
# ::tok You have to decide what you want to get out of this .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :ARG1 (MRPNode-1 / you
                            :ARG0-of (MRPNode-2 / want-01
                                                :ARG1 (MRPNode-3 / get-05
                                                                 :ARG2 (MRPNode-4 / this)
                                                                 :ARG1 (MRPNode-5 / thing)))
                            :ARG0-of MRPNode-3)
           :ARG2 (MRPNode-6 / decide-01
                            :ARG0 MRPNode-1
                            :ARG1 MRPNode-5))

# ::id 926
# ::snt It is impossible to answer this question without a form check.
# ::tok It is impossible to answer this question without a form check .
# ::collapsed instance nodes 1
(MRPNode-0 / possible-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / answer-01
                            :ARG1 (MRPNode-3 / check-01
                                             :polarity (MRPNode-4 / -)
                                             :ARG1 (MRPNode-5 / form))
                            :ARG1 (MRPNode-6 / answer_this_2)))

# ::id 927
# ::snt Microwave would be your best bet.
# ::tok Microwave would be your best bet .
# ::collapsed instance nodes 0
(MRPNode-0 / bet-01
           :ARG0 (MRPNode-1 / Microwave)
           :ARG1-of (MRPNode-2 / you)
           :ARG1-of (MRPNode-3 / good-02)
           :ARG1-of (MRPNode-4 / have-degree-91
                               :ARG2 MRPNode-3
                               :ARG3 (MRPNode-5 / most)))

# ::id 928
# ::snt Yes, there is a reason to not do what you propose.
# ::tok Yes , there is a reason to not do what you propose .
# ::collapsed instance nodes 0
(MRPNode-0 / reason
           :ARG0-of (MRPNode-1 / cause-01
                               :ARG1 (MRPNode-2 / do-02
                                                :polarity (MRPNode-3 / -)
                                                :ARG1 (MRPNode-4 / thing
                                                                 :ARG1-of (MRPNode-5 / propose-01
                                                                                     :ARG0 (MRPNode-6 / you))))))

# ::id 929
# ::snt You don't have to worry.
# ::tok You do n't have to worry .
# ::collapsed instance nodes 0
(MRPNode-0 / obligate-01
           :polarity (MRPNode-1 / -)
           :ARG1 (MRPNode-2 / you)
           :ARG2 (MRPNode-3 / worry-02
                            :ARG0 MRPNode-2))

# ::id 930
# ::snt There is no test that can tell you if it is sealed or not.
# ::tok There is no test that can tell you if it is sealed or not .
# ::collapsed instance nodes 0
(MRPNode-0 / test-01
           :polarity (MRPNode-1 / -)
           :ARG2 (MRPNode-2 / possible-01
                            :ARG1 (MRPNode-3 / tell-01
                                             :ARG1 (MRPNode-4 / truth-value
                                                              :polarity-of (MRPNode-5 / or
                                                                                      :op1 (MRPNode-6 / seal-01
                                                                                                      :ARG1 (MRPNode-7 / it))
                                                                                      :op2 (MRPNode-8 / seal-01
                                                                                                      :polarity (MRPNode-9 / -)
                                                                                                      :ARG1 MRPNode-7)))
                                             :ARG2 (MRPNode-10 / you))))

# ::id 931
# ::snt Yes, you should make a résumé.
# ::tok Yes , you should make a résumé .
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / make-01
                            :ARG1 (MRPNode-2 / résumé)
                            :ARG0 (MRPNode-3 / you)))

# ::id 932
# ::snt You shouldn't feel any obligation at all.
# ::tok You should n't feel any obligation at all .
# ::collapsed instance nodes 0
(MRPNode-0 / recommend-01
           :ARG1 (MRPNode-1 / feel-01
                            :polarity (MRPNode-2 / -)
                            :ARG1 (MRPNode-3 / obligate-01
                                             :mod (MRPNode-4 / any)
                                             :ARG1 (MRPNode-5 / you))
                            :ARG0 MRPNode-5
                            :mod (MRPNode-6 / at-all)))

