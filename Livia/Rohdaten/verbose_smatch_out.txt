('AMR pair', 1) ,
('============================================',) ,
('AMR 1 (one-line):', '(r0 / remove-01:ARG1 (m0 / mold):ARG0 (y0 / you):ARG2 (t0 / tent):manner (a0 / amr-unknown))') ,
('AMR 2 (one-line):', '(r0 / remove-01:ARG1 (m0 / mildew):ARG0 (i0 / i):ARG2 (t0 / tent):manner (a0 / amr-unknown))') ,
('Instance triples of AMR 1:', 5) ,
([('instance', 'a0', 'remove-01'), ('instance', 'a1', 'mold'), ('instance', 'a2', 'you'), ('instance', 'a3', 'tent'), ('instance', 'a4', 'amr-unknown')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'remove-01')],) ,
('Relation triples of AMR 1:', 4) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a2'), ('ARG2', 'a0', 'a3'), ('manner', 'a0', 'a4')],) ,
('Instance triples of AMR 2:', 5) ,
([('instance', 'b0', 'remove-01'), ('instance', 'b1', 'mildew'), ('instance', 'b2', 'i'), ('instance', 'b3', 'tent'), ('instance', 'b4', 'amr-unknown')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'remove-01')],) ,
('Relation triples of AMR 2:', 4) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b2'), ('ARG2', 'b0', 'b3'), ('manner', 'b0', 'b4')],) ,
('Candidate mappings:',) ,
([{0}, {1}, {2}, {3}, {4}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2, (1, 1): 1, (2, 2): 1, (3, 3): 1, (4, 4): 1}, (3, 3): {-1: 1, (0, 0): 1}, (4, 4): {-1: 1, (0, 0): 1}, (1, 1): {-1: 0, (0, 0): 1}, (2, 2): {-1: 0, (0, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2) ,
('relation match with', (1, 1), 1) ,
('relation match with', (2, 2), 1) ,
('relation match with', (3, 3), 1) ,
('relation match with', (4, 4), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 8) ,
('Node mapping at start', [0, 1, 2, 3, 4]) ,
('Triple match number at start:', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 2, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -2) ,
([0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 4, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3],) ,
('saved value', 4) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4]) ,
('Current mapping', [0, 1, 2, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4],) ,
('saved value', 8) ,
('Node mapping at start', [0, 1, 2, 3, 4]) ,
('Triple match number at start:', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 2, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -2) ,
([0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 4, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3],) ,
('saved value', 4) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4]) ,
('Current mapping', [0, 1, 2, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4],) ,
('saved value', 8) ,
('Node mapping at start', [0, 1, 2, 3, 4]) ,
('Triple match number at start:', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 2, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -2) ,
([0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 4, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3],) ,
('saved value', 4) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4]) ,
('Current mapping', [0, 1, 2, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4],) ,
('saved value', 8) ,
('Node mapping at start', [0, 1, 2, 3, 4]) ,
('Triple match number at start:', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 2, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -2) ,
([0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 4, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3],) ,
('saved value', 4) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4]) ,
('Current mapping', [0, 1, 2, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4],) ,
('saved value', 8) ,
('Node mapping at start', [0, 1, 2, 3, 4]) ,
('Triple match number at start:', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 2, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -2) ,
([0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 4, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3],) ,
('saved value', 4) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4]) ,
('Current mapping', [0, 1, 2, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 8) ,
('best node mapping', [0, 1, 2, 3, 4]) ,
('Best node mapping alignment:', 'a0(remove-01)-b0(remove-01) a1(mold)-b1(mildew) a2(you)-b2(i) a3(tent)-b3(tent) a4(amr-unknown)-b4(amr-unknown)') ,
('F-score:', 0.8000000000000002) ,
0.800
('AMR pair', 2) ,
('============================================',) ,
('AMR 1 (one-line):', '(p0 / possible-01:ARG1 (w0 / wrong-02:ARG1 (a0 / amr-unknown):ARG2 (c0 / conditioner:mod (i0 / i):mod (a1 / air))))') ,
('AMR 2 (one-line):', '(p0 / possible-01:ARG1 (w0 / wrong-02:ARG1 (a0 / amr-unknown):ARG2 (u0 / unit:mod (i0 / i):mod (a1 / air-conditioning))))') ,
('Instance triples of AMR 1:', 6) ,
([('instance', 'a0', 'possible-01'), ('instance', 'a1', 'wrong-02'), ('instance', 'a2', 'amr-unknown'), ('instance', 'a3', 'conditioner'), ('instance', 'a4', 'i'), ('instance', 'a5', 'air')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'possible-01')],) ,
('Relation triples of AMR 1:', 5) ,
([('ARG1', 'a0', 'a1'), ('ARG1', 'a1', 'a2'), ('ARG2', 'a1', 'a3'), ('mod', 'a3', 'a4'), ('mod', 'a3', 'a5')],) ,
('Instance triples of AMR 2:', 6) ,
([('instance', 'b0', 'possible-01'), ('instance', 'b1', 'wrong-02'), ('instance', 'b2', 'amr-unknown'), ('instance', 'b3', 'unit'), ('instance', 'b4', 'i'), ('instance', 'b5', 'air-conditioning')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'possible-01')],) ,
('Relation triples of AMR 2:', 5) ,
([('ARG1', 'b0', 'b1'), ('ARG1', 'b1', 'b2'), ('ARG2', 'b1', 'b3'), ('mod', 'b3', 'b4'), ('mod', 'b3', 'b5')],) ,
('Candidate mappings:',) ,
([{0, 1}, {0, 1, 2}, {1, 2}, {3}, {4, 5}, {4, 5}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2, (1, 1): 1}, (1, 1): {-1: 1, (0, 0): 1, (2, 2): 1, (3, 3): 1}, (2, 2): {-1: 1, (1, 1): 1}, (4, 4): {-1: 1, (3, 3): 1}, (0, 1): {-1: 0, (1, 2): 1}, (1, 2): {-1: 0, (0, 1): 1}, (1, 0): {-1: 0, (2, 1): 1}, (2, 1): {-1: 0, (1, 0): 1}, (3, 3): {-1: 0, (1, 1): 1, (4, 4): 1, (4, 5): 1, (5, 4): 1, (5, 5): 1}, (4, 5): {-1: 0, (3, 3): 1}, (5, 4): {-1: 0, (3, 3): 1}, (5, 5): {-1: 0, (3, 3): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1) ,
('relation match with', (2, 2), 1) ,
('relation match with', (3, 3), 1) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0) ,
('relation match with', (4, 4), 1) ,
('relation match with', (5, 5), 1) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 1) ,
('node_pair', (5, 5)) ,
('instance/attribute match', 0) ,
('match computing complete, result:', 10) ,
('Node mapping at start', [0, 1, 2, 3, 4, 5]) ,
('Triple match number at start:', 10) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([4, 1, 2, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 2, 1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 2, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([0, 1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([1, 2, -1, 3, 5, 4],) ,
('node_pair', (0, 1)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 2), 1) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0) ,
('relation match with', (4, 5), 1) ,
('relation match with', (5, 4), 1) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 0) ,
('node_pair', (5, 4)) ,
('instance/attribute match', 0) ,
('match computing complete, result:', 3) ,
('Node mapping at start', [1, 2, -1, 3, 5, 4]) ,
('Triple match number at start:', 3) ,
('Remap node', 0, 'from ', 1, 'to', 0) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 2, -1, 3, 5, 4],) ,
('saved value', 4) ,
('Remap node', 1, 'from ', 2, 'to', 0) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([1, 0, -1, 3, 5, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, -1, 3, 5, 4],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', 1) ,
([2, 1, -1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([2, 1, -1, 3, 5, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 2, -1, 3, 5, 4],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([-1, 2, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([-1, 2, 1, 3, 5, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 3) ,
([1, 2, -1, 3, 5, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([3, 2, -1, 1, 5, 4],) ,
('Computing match for mapping',) ,
([3, 2, -1, 1, 5, 4],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 5) ,
([1, 2, -1, 3, 5, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([5, 2, -1, 3, 1, 4],) ,
('Computing match for mapping',) ,
([5, 2, -1, 3, 1, 4],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 4) ,
([1, 2, -1, 3, 5, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([4, 2, -1, 3, 5, 1],) ,
('Computing match for mapping',) ,
([4, 2, -1, 3, 5, 1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', -1) ,
([1, 2, -1, 3, 5, 4],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 2) ,
('Swap gain:', 0) ,
([1, -1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([1, -1, 2, 3, 5, 4],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 3) ,
([1, 2, -1, 3, 5, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([1, 3, -1, 2, 5, 4],) ,
('Computing match for mapping',) ,
([1, 3, -1, 2, 5, 4],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 5) ,
([1, 2, -1, 3, 5, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([1, 5, -1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([1, 5, -1, 3, 2, 4],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 4) ,
([1, 2, -1, 3, 5, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -2) ,
([1, 4, -1, 3, 5, 2],) ,
('Computing match for mapping',) ,
([1, 4, -1, 3, 5, 2],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 3) ,
([1, 2, -1, 3, 5, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', -1) ,
('Swap gain:', -2) ,
([1, 2, 3, -1, 5, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, -1, 5, 4],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 5) ,
([1, 2, -1, 3, 5, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', -1) ,
('Swap gain:', -1) ,
([1, 2, 5, 3, -1, 4],) ,
('Computing match for mapping',) ,
([1, 2, 5, 3, -1, 4],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', -1, ',', 5, '-', 4) ,
([1, 2, -1, 3, 5, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -1) ,
([1, 2, 4, 3, 5, -1],) ,
('Computing match for mapping',) ,
([1, 2, 4, 3, 5, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([1, 2, -1, 3, 5, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([1, 2, -1, 5, 3, 4],) ,
('Computing match for mapping',) ,
([1, 2, -1, 5, 3, 4],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([1, 2, -1, 3, 5, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([1, 2, -1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([1, 2, -1, 4, 5, 3],) ,
('saved value', 1) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([1, 2, -1, 3, 5, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 1) ,
([1, 2, -1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 2, -1, 3, 4, 5],) ,
('saved value', 4) ,
('Use move gain',) ,
('Original mapping', [1, 2, -1, 3, 5, 4]) ,
('Current mapping', [0, 2, -1, 3, 5, 4]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 4) ,
('Current mapping:', [0, 2, -1, 3, 5, 4]) ,
('Remap node', 0, 'from ', 0, 'to', 1) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([1, 2, -1, 3, 5, 4],) ,
('saved value', 3) ,
('Remap node', 1, 'from ', 2, 'to', 1) ,
('Move gain:', 3) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 5, 4],) ,
('saved value', 7) ,
('Remap node', 2, 'from ', -1, 'to', 1) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 5, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, -1, 3, 5, 4],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([2, 0, -1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([2, 0, -1, 3, 5, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 2, -1, 3, 5, 4],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([-1, 2, 0, 3, 5, 4],) ,
('Computing match for mapping',) ,
([-1, 2, 0, 3, 5, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 2, -1, 3, 5, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([3, 2, -1, 0, 5, 4],) ,
('Computing match for mapping',) ,
([3, 2, -1, 0, 5, 4],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 2, -1, 3, 5, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -3) ,
([5, 2, -1, 3, 0, 4],) ,
('Computing match for mapping',) ,
([5, 2, -1, 3, 0, 4],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 2, -1, 3, 5, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([4, 2, -1, 3, 5, 0],) ,
('Computing match for mapping',) ,
([4, 2, -1, 3, 5, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', -1) ,
([0, 2, -1, 3, 5, 4],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 2) ,
('Swap gain:', 1) ,
([0, -1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 5, 4],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 3) ,
([0, 2, -1, 3, 5, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -2) ,
([0, 3, -1, 2, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, -1, 2, 5, 4],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 5) ,
([0, 2, -1, 3, 5, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([0, 5, -1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 5, -1, 3, 2, 4],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 4) ,
([0, 2, -1, 3, 5, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 4, -1, 3, 5, 2],) ,
('Computing match for mapping',) ,
([0, 4, -1, 3, 5, 2],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 3) ,
([0, 2, -1, 3, 5, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', -1) ,
('Swap gain:', -2) ,
([0, 2, 3, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 2, 3, -1, 5, 4],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 5) ,
([0, 2, -1, 3, 5, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', -1) ,
('Swap gain:', -1) ,
([0, 2, 5, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 2, 5, 3, -1, 4],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', -1, ',', 5, '-', 4) ,
([0, 2, -1, 3, 5, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -1) ,
([0, 2, 4, 3, 5, -1],) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 5, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([0, 2, -1, 3, 5, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([0, 2, -1, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, -1, 5, 3, 4],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([0, 2, -1, 3, 5, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([0, 2, -1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 2, -1, 4, 5, 3],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([0, 2, -1, 3, 5, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 1) ,
([0, 2, -1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, -1, 3, 4, 5],) ,
('saved value', 5) ,
('Use move gain',) ,
('Original mapping', [0, 2, -1, 3, 5, 4]) ,
('Current mapping', [0, 1, -1, 3, 5, 4]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 7) ,
('Current mapping:', [0, 1, -1, 3, 5, 4]) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 2, -1, 3, 5, 4],) ,
('saved value', 4) ,
('Remap node', 2, 'from ', -1, 'to', 2) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 3, 5, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, -1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([1, 0, -1, 3, 5, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 3, 5, 4],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 0, 3, 5, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 3, 5, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, -1, 3, 5, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, -1, 0, 5, 4],) ,
('Computing match for mapping',) ,
([3, 1, -1, 0, 5, 4],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, -1, 3, 5, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, -1, 3, 0, 4],) ,
('Computing match for mapping',) ,
([5, 1, -1, 3, 0, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, -1, 3, 5, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, -1, 3, 5, 0],) ,
('Computing match for mapping',) ,
([4, 1, -1, 3, 5, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 3, 5, 4],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, -1, 1, 3, 5, 4],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, -1, 3, 5, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 3, -1, 1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, -1, 1, 5, 4],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, -1, 3, 5, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 5, -1, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 5, -1, 3, 1, 4],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, -1, 3, 5, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, -1, 3, 5, 1],) ,
('Computing match for mapping',) ,
([0, 4, -1, 3, 5, 1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 3) ,
([0, 1, -1, 3, 5, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 3, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, 5, 4],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 5) ,
([0, 1, -1, 3, 5, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', -1) ,
('Swap gain:', -1) ,
([0, 1, 5, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, -1, 4],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', -1, ',', 5, '-', 4) ,
([0, 1, -1, 3, 5, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -1) ,
([0, 1, 4, 3, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([0, 1, -1, 3, 5, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, -1, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 5, 3, 4],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([0, 1, -1, 3, 5, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, -1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 3],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([0, 1, -1, 3, 5, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 1) ,
([0, 1, -1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 4, 5],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [0, 1, -1, 3, 5, 4]) ,
('Current mapping', [0, 1, 2, 3, 5, 4]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 2, 3, 5, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 5, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, 3, 5, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 5, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, 0, 5, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 5, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 2, 3, 0, 4],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 4],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, 3, 5, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 2, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 5, 4],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 2, 1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 5, 4],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 1, 4],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 4, 2, 3, 5, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 5, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 3, 2, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 4],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 4],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, 3, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 4],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 1) ,
([0, 1, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5],) ,
('saved value', 10) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 3, 5, 4]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 10) ,
('Current mapping:', [0, 1, 2, 3, 4, 5]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([4, 1, 2, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 2, 1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 2, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([0, 1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5],) ,
('saved value', 10) ,
('Node mapping at start', [0, 1, 2, 3, 4, 5]) ,
('Triple match number at start:', 10) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([4, 1, 2, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 2, 1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 2, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([0, 1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 5, 4],) ,
('saved value', 3) ,
('Node mapping at start', [1, 0, 2, 3, 5, 4]) ,
('Triple match number at start:', 3) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 6) ,
([0, 1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 2) ,
([1, 0, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', 0) ,
([2, 0, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([2, 0, 1, 3, 5, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 3) ,
([1, 0, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([3, 0, 2, 1, 5, 4],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1, 5, 4],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 5) ,
([1, 0, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -1) ,
([5, 0, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([5, 0, 2, 3, 1, 4],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 4) ,
([1, 0, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([4, 0, 2, 3, 5, 1],) ,
('Computing match for mapping',) ,
([4, 0, 2, 3, 5, 1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 2) ,
([1, 0, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', 0) ,
([1, 2, 0, 3, 5, 4],) ,
('Computing match for mapping',) ,
([1, 2, 0, 3, 5, 4],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 3) ,
([1, 0, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 2, 0, 5, 4],) ,
('Computing match for mapping',) ,
([1, 3, 2, 0, 5, 4],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', 5) ,
([1, 0, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([1, 5, 2, 3, 0, 4],) ,
('Computing match for mapping',) ,
([1, 5, 2, 3, 0, 4],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 0, ',', 5, '-', 4) ,
([1, 0, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -1) ,
([1, 4, 2, 3, 5, 0],) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 5, 0],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([1, 0, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([1, 0, 3, 2, 5, 4],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2, 5, 4],) ,
('saved value', 0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([1, 0, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([1, 0, 5, 3, 2, 4],) ,
('Computing match for mapping',) ,
([1, 0, 5, 3, 2, 4],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([1, 0, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -2) ,
([1, 0, 4, 3, 5, 2],) ,
('Computing match for mapping',) ,
([1, 0, 4, 3, 5, 2],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([1, 0, 2, 3, 5, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([1, 0, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 3, 4],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([1, 0, 2, 3, 5, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([1, 0, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 3],) ,
('saved value', 1) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([1, 0, 2, 3, 5, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 1) ,
([1, 0, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5],) ,
('saved value', 4) ,
('Use swap gain',) ,
('Original mapping', [1, 0, 2, 3, 5, 4]) ,
('Current mapping', [0, 1, 2, 3, 5, 4]) ,
('Gain after the hill-climbing', 6) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 2, 3, 5, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 5, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, 3, 5, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 5, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, 0, 5, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 5, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 2, 3, 0, 4],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 4],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, 3, 5, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 2, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 5, 4],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 2, 1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 5, 4],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 1, 4],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 4, 2, 3, 5, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 5, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 3, 2, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 4],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 4],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, 3, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 4],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 1) ,
([0, 1, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5],) ,
('saved value', 10) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 3, 5, 4]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 10) ,
('Current mapping:', [0, 1, 2, 3, 4, 5]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([4, 1, 2, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 2, 1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 2, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([0, 1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9) ,
('Node mapping at start', [0, 1, 2, 3, 5, 4]) ,
('Triple match number at start:', 9) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 5, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, 3, 5, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 5, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, 0, 5, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 5, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 2, 3, 0, 4],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 4],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, 3, 5, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 2, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 5, 4],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 2, 1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 5, 4],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 1, 4],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 4, 2, 3, 5, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 5, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 3, 2, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 4],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 4],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, 3, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 4],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 1) ,
([0, 1, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5],) ,
('saved value', 10) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 3, 5, 4]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 10) ,
('Current mapping:', [0, 1, 2, 3, 4, 5]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([4, 1, 2, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 2, 1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 2, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([0, 1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 10) ,
('best node mapping', [0, 1, 2, 3, 4, 5]) ,
('Best node mapping alignment:', 'a0(possible-01)-b0(possible-01) a1(wrong-02)-b1(wrong-02) a2(amr-unknown)-b2(amr-unknown) a3(conditioner)-b3(unit) a4(i)-b4(i) a5(air)-b5(air-conditioning)') ,
('F-score:', 0.8333333333333334) ,
0.833
('AMR pair', 3) ,
('============================================',) ,
('AMR 1 (one-line):', '(c0 / confirm-01:ARG1 (n0 / nominate-01:ARG1 (p0 / person:name (n2 / name:op1 "Obama" )):ARG2 (c1 / court:mod (a0 / appeal-01):ARG1-of (k0 / key-02))):ARG0 (g0 / government-organization:name (n1 / name:op1 "Senate" )))') ,
('AMR 2 (one-line):', '(a0 / approve-01:ARG1 (g0 / government-organization:name (n1 / name:op1 "Senate" )):ARG1 (n0 / nominate-01:ARG1 (p0 / person:name (n2 / name:op1 "Obama" )):ARG2 (c0 / court:mod (a1 / appeal-01):ARG1-of (k0 / key-02))))') ,
('Instance triples of AMR 1:', 9) ,
([('instance', 'a0', 'confirm-01'), ('instance', 'a1', 'nominate-01'), ('instance', 'a2', 'person'), ('instance', 'a3', 'name'), ('instance', 'a4', 'court'), ('instance', 'a5', 'appeal-01'), ('instance', 'a6', 'key-02'), ('instance', 'a7', 'government-organization'), ('instance', 'a8', 'name')],) ,
('Attribute triples of AMR 1:', 3) ,
([('TOP', 'a0', 'confirm-01'), ('op1', 'a3', 'Obama_'), ('op1', 'a8', 'Senate_')],) ,
('Relation triples of AMR 1:', 8) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a7'), ('ARG1', 'a1', 'a2'), ('ARG2', 'a1', 'a4'), ('name', 'a2', 'a3'), ('mod', 'a4', 'a5'), ('ARG1', 'a6', 'a4'), ('name', 'a7', 'a8')],) ,
('Instance triples of AMR 2:', 9) ,
([('instance', 'b0', 'approve-01'), ('instance', 'b1', 'government-organization'), ('instance', 'b2', 'name'), ('instance', 'b3', 'nominate-01'), ('instance', 'b4', 'person'), ('instance', 'b5', 'name'), ('instance', 'b6', 'court'), ('instance', 'b7', 'appeal-01'), ('instance', 'b8', 'key-02')],) ,
('Attribute triples of AMR 2:', 3) ,
([('TOP', 'b0', 'approve-01'), ('op1', 'b2', 'Senate_'), ('op1', 'b5', 'Obama_')],) ,
('Relation triples of AMR 2:', 8) ,
([('ARG1', 'b0', 'b1'), ('ARG1', 'b0', 'b3'), ('name', 'b1', 'b2'), ('ARG1', 'b3', 'b4'), ('ARG2', 'b3', 'b6'), ('name', 'b4', 'b5'), ('mod', 'b6', 'b7'), ('ARG1', 'b8', 'b6')],) ,
('Candidate mappings:',) ,
([{0, 8, 3}, {0, 1, 3, 4, 6, 8}, {1, 3, 4, 6}, {2, 5}, {1, 3, 4, 6}, {7}, {8, 0, 3}, {1, 4}, {2, 5}],) ,
('Weight dictionary',) ,
({(1, 3): {-1: 1, (0, 0): 1, (2, 4): 1, (4, 6): 1}, (2, 4): {-1: 1, (1, 3): 1, (3, 5): 1}, (3, 2): {-1: 1, (2, 1): 1}, (3, 5): {-1: 2, (2, 4): 1}, (4, 6): {-1: 1, (1, 3): 1, (5, 7): 1, (6, 8): 1}, (5, 7): {-1: 1, (4, 6): 1}, (6, 8): {-1: 1, (4, 6): 1}, (7, 1): {-1: 1, (8, 2): 1}, (8, 2): {-1: 2, (7, 1): 1}, (8, 5): {-1: 1, (7, 4): 1}, (0, 0): {-1: 0, (1, 1): 1, (1, 3): 1}, (1, 1): {-1: 0, (0, 0): 1}, (0, 3): {-1: 0, (1, 4): 1}, (1, 4): {-1: 0, (0, 3): 1}, (0, 8): {-1: 0, (1, 6): 1}, (1, 6): {-1: 0, (0, 8): 1}, (1, 0): {-1: 0, (2, 1): 1, (2, 3): 1}, (2, 1): {-1: 0, (1, 0): 1, (3, 2): 1}, (2, 3): {-1: 0, (1, 0): 1}, (1, 8): {-1: 0, (2, 6): 1}, (2, 6): {-1: 0, (1, 8): 1}, (4, 1): {-1: 0, (6, 0): 1}, (6, 0): {-1: 0, (4, 1): 1, (4, 3): 1}, (4, 3): {-1: 0, (6, 0): 1}, (4, 4): {-1: 0, (6, 3): 1}, (6, 3): {-1: 0, (4, 4): 1}, (7, 4): {-1: 0, (8, 5): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 3), 1) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 1) ,
('relation match with', (2, 4), 1) ,
('relation match with', (4, 6), 1) ,
('node_pair', (2, 4)) ,
('instance/attribute match', 1) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 6)) ,
('instance/attribute match', 1) ,
('relation match with', (5, 7), 1) ,
('relation match with', (6, 8), 1) ,
('node_pair', (5, 7)) ,
('instance/attribute match', 1) ,
('node_pair', (6, 8)) ,
('instance/attribute match', 1) ,
('node_pair', (7, 1)) ,
('instance/attribute match', 1) ,
('node_pair', (8, 5)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 13) ,
('Node mapping at start', [0, 3, 4, 2, 6, 7, 8, 1, 5]) ,
('Triple match number at start:', 13) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([3, 0, 4, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([3, 0, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([4, 3, 0, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 0, 2, 6, 7, 8, 1, 5],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([2, 3, 4, 0, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([2, 3, 4, 0, 6, 7, 8, 1, 5],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([6, 3, 4, 2, 0, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([6, 3, 4, 2, 0, 7, 8, 1, 5],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([7, 3, 4, 2, 6, 0, 8, 1, 5],) ,
('Computing match for mapping',) ,
([7, 3, 4, 2, 6, 0, 8, 1, 5],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([8, 3, 4, 2, 6, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 3, 4, 2, 6, 7, 0, 1, 5],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 4, 2, 6, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([1, 3, 4, 2, 6, 7, 8, 0, 5],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 0) ,
('Swap gain:', -2) ,
([5, 3, 4, 2, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([5, 3, 4, 2, 6, 7, 8, 1, 0],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -5) ,
([0, 4, 3, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 3, 2, 6, 7, 8, 1, 5],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -5) ,
([0, 2, 4, 3, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 6, 7, 8, 1, 5],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -7) ,
([0, 6, 4, 2, 3, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 3, 7, 8, 1, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -6) ,
([0, 7, 4, 2, 6, 3, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 7, 4, 2, 6, 3, 8, 1, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -6) ,
([0, 8, 4, 2, 6, 7, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 8, 4, 2, 6, 7, 3, 1, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 4, 2, 6, 7, 8, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 7, 8, 3, 5],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', -5) ,
([0, 5, 4, 2, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 4, 2, 6, 7, 8, 1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 2) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -3) ,
([0, 3, 2, 4, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 6, 7, 8, 1, 5],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -6) ,
([0, 3, 6, 2, 4, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 4, 7, 8, 1, 5],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 3, 7, 2, 6, 4, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 6, 4, 8, 1, 5],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 3, 8, 2, 6, 7, 4, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 8, 2, 6, 7, 4, 1, 5],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -1) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', -3) ,
([0, 3, 5, 2, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 6, 7, 8, 1, 4],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -5) ,
([0, 3, 4, 6, 2, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 2, 7, 8, 1, 5],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 3, 4, 7, 6, 2, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 7, 6, 2, 8, 1, 5],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([0, 3, 4, 8, 6, 7, 2, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 8, 6, 7, 2, 1, 5],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([0, 3, 4, 1, 6, 7, 8, 2, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 7, 8, 2, 5],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 17) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 2, 7, 6, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 7, 6, 8, 1, 5],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 2, 8, 7, 6, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 8, 7, 6, 1, 5],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 2, 1, 7, 8, 6, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 1, 7, 8, 6, 5],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 2, 5, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 5, 7, 8, 1, 6],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 4, 2, 6, 8, 7, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 8, 7, 1, 5],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -3) ,
([0, 3, 4, 2, 6, 1, 8, 7, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 1, 8, 7, 5],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', -3) ,
([0, 3, 4, 2, 6, 5, 8, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 5, 8, 1, 7],) ,
('saved value', 10) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -3) ,
([0, 3, 4, 2, 6, 7, 1, 8, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 1, 8, 5],) ,
('saved value', 10) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -3) ,
([0, 3, 4, 2, 6, 7, 5, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 5, 1, 8],) ,
('saved value', 10) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 4, 2, 6, 7, 8, 5, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 5, 1],) ,
('saved value', 11) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 4, 2, 6, 7, 8, 1, 5]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 17) ,
('Current mapping:', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -3) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -4) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('saved value', 13) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -6) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -7) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -7) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -6) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -6) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -7) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -7) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -6) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -7) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -4) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 13) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -6) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -7) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('saved value', 13) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('saved value', 13) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('saved value', 12) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('saved value', 13) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('saved value', 12) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('saved value', 13) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('node_pair', (0, 3)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 6)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 0) ,
('relation match with', (3, 2), 1) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 0) ,
('node_pair', (5, 7)) ,
('instance/attribute match', 1) ,
('node_pair', (6, 8)) ,
('instance/attribute match', 1) ,
('node_pair', (8, 5)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 5) ,
('Node mapping at start', [3, 6, 1, 2, 4, 7, 8, -1, 5]) ,
('Triple match number at start:', 5) ,
('Remap node', 0, 'from ', 3, 'to', 0) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('saved value', 5) ,
('Remap node', 1, 'from ', 6, 'to', 0) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([3, 0, 1, 2, 4, 7, 8, -1, 5],) ,
('saved value', 6) ,
('Remap node', 6, 'from ', 8, 'to', 0) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 6, 1, 2, 4, 7, 0, -1, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 6) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 3) ,
('Swap gain:', 1) ,
([6, 3, 1, 2, 4, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([6, 3, 1, 2, 4, 7, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 1) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -1) ,
([1, 6, 3, 2, 4, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([1, 6, 3, 2, 4, 7, 8, -1, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 2) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -2) ,
([2, 6, 1, 3, 4, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([2, 6, 1, 3, 4, 7, 8, -1, 5],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 4) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([4, 6, 1, 2, 3, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([4, 6, 1, 2, 3, 7, 8, -1, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 7) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([7, 6, 1, 2, 4, 3, 8, -1, 5],) ,
('Computing match for mapping',) ,
([7, 6, 1, 2, 4, 3, 8, -1, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', 8) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', 1) ,
([8, 6, 1, 2, 4, 7, 3, -1, 5],) ,
('Computing match for mapping',) ,
([8, 6, 1, 2, 4, 7, 3, -1, 5],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 3, ',', 7, '-', -1) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', 0) ,
([-1, 6, 1, 2, 4, 7, 8, 3, 5],) ,
('Computing match for mapping',) ,
([-1, 6, 1, 2, 4, 7, 8, 3, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 3, ',', 8, '-', 5) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', -1) ,
([5, 6, 1, 2, 4, 7, 8, -1, 3],) ,
('Computing match for mapping',) ,
([5, 6, 1, 2, 4, 7, 8, -1, 3],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 1) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 6) ,
('Swap gain:', -1) ,
([3, 1, 6, 2, 4, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 1, 6, 2, 4, 7, 8, -1, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 2) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 6) ,
('Swap gain:', -2) ,
([3, 2, 1, 6, 4, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 2, 1, 6, 4, 7, 8, -1, 5],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 4) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', 4) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', 7) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -1) ,
([3, 7, 1, 2, 4, 6, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 7, 1, 2, 4, 6, 8, -1, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 8) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -1) ,
([3, 8, 1, 2, 4, 7, 6, -1, 5],) ,
('Computing match for mapping',) ,
([3, 8, 1, 2, 4, 7, 6, -1, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 6, ',', 7, '-', -1) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 6) ,
('Swap gain:', 0) ,
([3, -1, 1, 2, 4, 7, 8, 6, 5],) ,
('Computing match for mapping',) ,
([3, -1, 1, 2, 4, 7, 8, 6, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 6, ',', 8, '-', 5) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', -1) ,
([3, 5, 1, 2, 4, 7, 8, -1, 6],) ,
('Computing match for mapping',) ,
([3, 5, 1, 2, 4, 7, 8, -1, 6],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([3, 6, 2, 1, 4, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 6, 2, 1, 4, 7, 8, -1, 5],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 4) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', 0) ,
([3, 6, 4, 2, 1, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 6, 4, 2, 1, 7, 8, -1, 5],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([3, 6, 7, 2, 4, 1, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 6, 7, 2, 4, 1, 8, -1, 5],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 1, ',', 6, '-', 8) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([3, 6, 8, 2, 4, 7, 1, -1, 5],) ,
('Computing match for mapping',) ,
([3, 6, 8, 2, 4, 7, 1, -1, 5],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 1, ',', 7, '-', -1) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 1) ,
('Swap gain:', 0) ,
([3, 6, -1, 2, 4, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([3, 6, -1, 2, 4, 7, 8, 1, 5],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 1, ',', 8, '-', 5) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([3, 6, 5, 2, 4, 7, 8, -1, 1],) ,
('Computing match for mapping',) ,
([3, 6, 5, 2, 4, 7, 8, -1, 1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 4) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([3, 6, 1, 4, 2, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 6, 1, 4, 2, 7, 8, -1, 5],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([3, 6, 1, 7, 4, 2, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 6, 1, 7, 4, 2, 8, -1, 5],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 8) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([3, 6, 1, 8, 4, 7, 2, -1, 5],) ,
('Computing match for mapping',) ,
([3, 6, 1, 8, 4, 7, 2, -1, 5],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', -1) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([3, 6, 1, -1, 4, 7, 8, 2, 5],) ,
('Computing match for mapping',) ,
([3, 6, 1, -1, 4, 7, 8, 2, 5],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 1) ,
([3, 6, 1, 5, 4, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([3, 6, 1, 5, 4, 7, 8, -1, 2],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 7) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([3, 6, 1, 2, 7, 4, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 6, 1, 2, 7, 4, 8, -1, 5],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 8) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -1) ,
([3, 6, 1, 2, 8, 7, 4, -1, 5],) ,
('Computing match for mapping',) ,
([3, 6, 1, 2, 8, 7, 4, -1, 5],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 4, ',', 7, '-', -1) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', 1) ,
([3, 6, 1, 2, -1, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([3, 6, 1, 2, -1, 7, 8, 4, 5],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 4, ',', 8, '-', 5) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', -1) ,
([3, 6, 1, 2, 5, 7, 8, -1, 4],) ,
('Computing match for mapping',) ,
([3, 6, 1, 2, 5, 7, 8, -1, 4],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([3, 6, 1, 2, 4, 8, 7, -1, 5],) ,
('Computing match for mapping',) ,
([3, 6, 1, 2, 4, 8, 7, -1, 5],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', -1) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 7) ,
('Swap gain:', -1) ,
([3, 6, 1, 2, 4, -1, 8, 7, 5],) ,
('Computing match for mapping',) ,
([3, 6, 1, 2, 4, -1, 8, 7, 5],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 5) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', -2) ,
([3, 6, 1, 2, 4, 5, 8, -1, 7],) ,
('Computing match for mapping',) ,
([3, 6, 1, 2, 4, 5, 8, -1, 7],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', -1) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', 8) ,
('Swap gain:', -1) ,
([3, 6, 1, 2, 4, 7, -1, 8, 5],) ,
('Computing match for mapping',) ,
([3, 6, 1, 2, 4, 7, -1, 8, 5],) ,
('saved value', 4) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 5) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -2) ,
([3, 6, 1, 2, 4, 7, 5, -1, 8],) ,
('Computing match for mapping',) ,
([3, 6, 1, 2, 4, 7, 5, -1, 8],) ,
('saved value', 3) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', -1, ',', 8, '-', 5) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', -1) ,
('Swap gain:', -1) ,
([3, 6, 1, 2, 4, 7, 8, 5, -1],) ,
('Computing match for mapping',) ,
([3, 6, 1, 2, 4, 7, 8, 5, -1],) ,
('saved value', 4) ,
('Use swap gain',) ,
('Original mapping', [3, 6, 1, 2, 4, 7, 8, -1, 5]) ,
('Current mapping', [3, 4, 1, 2, 6, 7, 8, -1, 5]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 9) ,
('Current mapping:', [3, 4, 1, 2, 6, 7, 8, -1, 5]) ,
('Remap node', 0, 'from ', 3, 'to', 0) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('saved value', 8) ,
('Remap node', 1, 'from ', 4, 'to', 0) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 0, 1, 2, 6, 7, 8, -1, 5],) ,
('saved value', 9) ,
('Remap node', 6, 'from ', 8, 'to', 0) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 6, 7, 0, -1, 5],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 4) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 3) ,
('Swap gain:', 1) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 1) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -2) ,
([1, 4, 3, 2, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([1, 4, 3, 2, 6, 7, 8, -1, 5],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 2) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -3) ,
([2, 4, 1, 3, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([2, 4, 1, 3, 6, 7, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 6) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([6, 4, 1, 2, 3, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([6, 4, 1, 2, 3, 7, 8, -1, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 7) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -3) ,
([7, 4, 1, 2, 6, 3, 8, -1, 5],) ,
('Computing match for mapping',) ,
([7, 4, 1, 2, 6, 3, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', 8) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([8, 4, 1, 2, 6, 7, 3, -1, 5],) ,
('Computing match for mapping',) ,
([8, 4, 1, 2, 6, 7, 3, -1, 5],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 3, ',', 7, '-', -1) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', -1) ,
([-1, 4, 1, 2, 6, 7, 8, 3, 5],) ,
('Computing match for mapping',) ,
([-1, 4, 1, 2, 6, 7, 8, 3, 5],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 3, ',', 8, '-', 5) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', -2) ,
([5, 4, 1, 2, 6, 7, 8, -1, 3],) ,
('Computing match for mapping',) ,
([5, 4, 1, 2, 6, 7, 8, -1, 3],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 1) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 4) ,
('Swap gain:', -1) ,
([3, 1, 4, 2, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 1, 4, 2, 6, 7, 8, -1, 5],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 2) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -3) ,
([3, 2, 1, 4, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 2, 1, 4, 6, 7, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 6) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 6, 1, 2, 4, 7, 8, -1, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 4, ',', 5, '-', 7) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([3, 7, 1, 2, 6, 4, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 7, 1, 2, 6, 4, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 4, ',', 6, '-', 8) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([3, 8, 1, 2, 6, 7, 4, -1, 5],) ,
('Computing match for mapping',) ,
([3, 8, 1, 2, 6, 7, 4, -1, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 4, ',', 7, '-', -1) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', 0) ,
([3, -1, 1, 2, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([3, -1, 1, 2, 6, 7, 8, 4, 5],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 4, ',', 8, '-', 5) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', -2) ,
([3, 5, 1, 2, 6, 7, 8, -1, 4],) ,
('Computing match for mapping',) ,
([3, 5, 1, 2, 6, 7, 8, -1, 4],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([3, 4, 2, 1, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 4, 2, 1, 6, 7, 8, -1, 5],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 6) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([3, 4, 6, 2, 1, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 4, 6, 2, 1, 7, 8, -1, 5],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([3, 4, 7, 2, 6, 1, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 4, 7, 2, 6, 1, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 1, ',', 6, '-', 8) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([3, 4, 8, 2, 6, 7, 1, -1, 5],) ,
('Computing match for mapping',) ,
([3, 4, 8, 2, 6, 7, 1, -1, 5],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 1, ',', 7, '-', -1) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 1) ,
('Swap gain:', 0) ,
([3, 4, -1, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([3, 4, -1, 2, 6, 7, 8, 1, 5],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 1, ',', 8, '-', 5) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([3, 4, 5, 2, 6, 7, 8, -1, 1],) ,
('Computing match for mapping',) ,
([3, 4, 5, 2, 6, 7, 8, -1, 1],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 6) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -5) ,
([3, 4, 1, 6, 2, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 4, 1, 6, 2, 7, 8, -1, 5],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -4) ,
([3, 4, 1, 7, 6, 2, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 4, 1, 7, 6, 2, 8, -1, 5],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 8) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([3, 4, 1, 8, 6, 7, 2, -1, 5],) ,
('Computing match for mapping',) ,
([3, 4, 1, 8, 6, 7, 2, -1, 5],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', -1) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([3, 4, 1, -1, 6, 7, 8, 2, 5],) ,
('Computing match for mapping',) ,
([3, 4, 1, -1, 6, 7, 8, 2, 5],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 1) ,
([3, 4, 1, 5, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([3, 4, 1, 5, 6, 7, 8, -1, 2],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4) ,
([3, 4, 1, 2, 7, 6, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 7, 6, 8, -1, 5],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -4) ,
([3, 4, 1, 2, 8, 7, 6, -1, 5],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 8, 7, 6, -1, 5],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', -1) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([3, 4, 1, 2, -1, 7, 8, 6, 5],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, -1, 7, 8, 6, 5],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 5) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', -4) ,
([3, 4, 1, 2, 5, 7, 8, -1, 6],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 5, 7, 8, -1, 6],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([3, 4, 1, 2, 6, 8, 7, -1, 5],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 6, 8, 7, -1, 5],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', -1) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 7) ,
('Swap gain:', -2) ,
([3, 4, 1, 2, 6, -1, 8, 7, 5],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 6, -1, 8, 7, 5],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 5) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', -3) ,
([3, 4, 1, 2, 6, 5, 8, -1, 7],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 6, 5, 8, -1, 7],) ,
('saved value', 6) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', -1) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', 8) ,
('Swap gain:', -2) ,
([3, 4, 1, 2, 6, 7, -1, 8, 5],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 6, 7, -1, 8, 5],) ,
('saved value', 7) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 5) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -3) ,
([3, 4, 1, 2, 6, 7, 5, -1, 8],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 6, 7, 5, -1, 8],) ,
('saved value', 6) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', -1, ',', 8, '-', 5) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', -1) ,
('Swap gain:', -1) ,
([3, 4, 1, 2, 6, 7, 8, 5, -1],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 6, 7, 8, 5, -1],) ,
('saved value', 8) ,
('Use swap gain',) ,
('Original mapping', [3, 4, 1, 2, 6, 7, 8, -1, 5]) ,
('Current mapping', [4, 3, 1, 2, 6, 7, 8, -1, 5]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 10) ,
('Current mapping:', [4, 3, 1, 2, 6, 7, 8, -1, 5]) ,
('Remap node', 0, 'from ', 4, 'to', 0) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('saved value', 11) ,
('Remap node', 1, 'from ', 3, 'to', 0) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([4, 0, 1, 2, 6, 7, 8, -1, 5],) ,
('saved value', 9) ,
('Remap node', 6, 'from ', 8, 'to', 0) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 7, 0, -1, 5],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 3) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 4) ,
('Swap gain:', -1) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 1) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 4) ,
('Swap gain:', 1) ,
([1, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([1, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 2) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -2) ,
([2, 3, 1, 4, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([2, 3, 1, 4, 6, 7, 8, -1, 5],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 6) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([6, 3, 1, 2, 4, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([6, 3, 1, 2, 4, 7, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 7) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -2) ,
([7, 3, 1, 2, 6, 4, 8, -1, 5],) ,
('Computing match for mapping',) ,
([7, 3, 1, 2, 6, 4, 8, -1, 5],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 8) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([8, 3, 1, 2, 6, 7, 4, -1, 5],) ,
('Computing match for mapping',) ,
([8, 3, 1, 2, 6, 7, 4, -1, 5],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', -1) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', 1) ,
([-1, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([-1, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', -1) ,
([5, 3, 1, 2, 6, 7, 8, -1, 4],) ,
('Computing match for mapping',) ,
([5, 3, 1, 2, 6, 7, 8, -1, 4],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -3) ,
([4, 1, 3, 2, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([4, 1, 3, 2, 6, 7, 8, -1, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -4) ,
([4, 2, 1, 3, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([4, 2, 1, 3, 6, 7, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -5) ,
([4, 6, 1, 2, 3, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([4, 6, 1, 2, 3, 7, 8, -1, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([4, 7, 1, 2, 6, 3, 8, -1, 5],) ,
('Computing match for mapping',) ,
([4, 7, 1, 2, 6, 3, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -4) ,
([4, 8, 1, 2, 6, 7, 3, -1, 5],) ,
('Computing match for mapping',) ,
([4, 8, 1, 2, 6, 7, 3, -1, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', -1) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', -2) ,
([4, -1, 1, 2, 6, 7, 8, 3, 5],) ,
('Computing match for mapping',) ,
([4, -1, 1, 2, 6, 7, 8, 3, 5],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', -3) ,
([4, 5, 1, 2, 6, 7, 8, -1, 3],) ,
('Computing match for mapping',) ,
([4, 5, 1, 2, 6, 7, 8, -1, 3],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([4, 3, 2, 1, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 6, 7, 8, -1, 5],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 6) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([4, 3, 6, 2, 1, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 6, 2, 1, 7, 8, -1, 5],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([4, 3, 7, 2, 6, 1, 8, -1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 7, 2, 6, 1, 8, -1, 5],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 1, ',', 6, '-', 8) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([4, 3, 8, 2, 6, 7, 1, -1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 8, 2, 6, 7, 1, -1, 5],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 1, ',', 7, '-', -1) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 1) ,
('Swap gain:', 0) ,
([4, 3, -1, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([4, 3, -1, 2, 6, 7, 8, 1, 5],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 1, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([4, 3, 5, 2, 6, 7, 8, -1, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 7, 8, -1, 1],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 6) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -6) ,
([4, 3, 1, 6, 2, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 6, 2, 7, 8, -1, 5],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -4) ,
([4, 3, 1, 7, 6, 2, 8, -1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 7, 6, 2, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 8) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([4, 3, 1, 8, 6, 7, 2, -1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 8, 6, 7, 2, -1, 5],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', -1) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([4, 3, 1, -1, 6, 7, 8, 2, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, -1, 6, 7, 8, 2, 5],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 1) ,
([4, 3, 1, 5, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 1, 5, 6, 7, 8, -1, 2],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -5) ,
([4, 3, 1, 2, 7, 6, 8, -1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 7, 6, 8, -1, 5],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5) ,
([4, 3, 1, 2, 8, 7, 6, -1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 8, 7, 6, -1, 5],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', -1) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 6) ,
('Swap gain:', -4) ,
([4, 3, 1, 2, -1, 7, 8, 6, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, -1, 7, 8, 6, 5],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', -5) ,
([4, 3, 1, 2, 5, 7, 8, -1, 6],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 5, 7, 8, -1, 6],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([4, 3, 1, 2, 6, 8, 7, -1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 8, 7, -1, 5],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', -1) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 7) ,
('Swap gain:', -2) ,
([4, 3, 1, 2, 6, -1, 8, 7, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, -1, 8, 7, 5],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', -3) ,
([4, 3, 1, 2, 6, 5, 8, -1, 7],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 5, 8, -1, 7],) ,
('saved value', 7) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', -1) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', 8) ,
('Swap gain:', -2) ,
([4, 3, 1, 2, 6, 7, -1, 8, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 7, -1, 8, 5],) ,
('saved value', 8) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -3) ,
([4, 3, 1, 2, 6, 7, 5, -1, 8],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 7, 5, -1, 8],) ,
('saved value', 7) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', -1, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', -1) ,
('Swap gain:', -1) ,
([4, 3, 1, 2, 6, 7, 8, 5, -1],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 7, 8, 5, -1],) ,
('saved value', 9) ,
('Use move gain',) ,
('Original mapping', [4, 3, 1, 2, 6, 7, 8, -1, 5]) ,
('Current mapping', [0, 3, 1, 2, 6, 7, 8, -1, 5]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 11) ,
('Current mapping:', [0, 3, 1, 2, 6, 7, 8, -1, 5]) ,
('Remap node', 1, 'from ', 3, 'to', 4) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 6, 7, 8, -1, 5],) ,
('saved value', 8) ,
('Remap node', 2, 'from ', 1, 'to', 4) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('saved value', 12) ,
('Remap node', 4, 'from ', 6, 'to', 4) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 4, 7, 8, -1, 5],) ,
('saved value', 7) ,
('Remap node', 7, 'from ', -1, 'to', 4) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([3, 0, 1, 2, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2, 6, 7, 8, -1, 5],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 0, 2, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2, 6, 7, 8, -1, 5],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -3) ,
([2, 3, 1, 0, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0, 6, 7, 8, -1, 5],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([6, 3, 1, 2, 0, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([6, 3, 1, 2, 0, 7, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([7, 3, 1, 2, 6, 0, 8, -1, 5],) ,
('Computing match for mapping',) ,
([7, 3, 1, 2, 6, 0, 8, -1, 5],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([8, 3, 1, 2, 6, 7, 0, -1, 5],) ,
('Computing match for mapping',) ,
([8, 3, 1, 2, 6, 7, 0, -1, 5],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', -1) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 0) ,
('Swap gain:', -1) ,
([-1, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([-1, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 0) ,
('Swap gain:', -2) ,
([5, 3, 1, 2, 6, 7, 8, -1, 0],) ,
('Computing match for mapping',) ,
([5, 3, 1, 2, 6, 7, 8, -1, 0],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 6, 7, 8, -1, 5],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -5) ,
([0, 2, 1, 3, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 6, 7, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -6) ,
([0, 6, 1, 2, 3, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 6, 1, 2, 3, 7, 8, -1, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([0, 7, 1, 2, 6, 3, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 6, 3, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -5) ,
([0, 8, 1, 2, 6, 7, 3, -1, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 6, 7, 3, -1, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', -1) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', -3) ,
([0, -1, 1, 2, 6, 7, 8, 3, 5],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2, 6, 7, 8, 3, 5],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', -4) ,
([0, 5, 1, 2, 6, 7, 8, -1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 1, 2, 6, 7, 8, -1, 3],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 2, 1, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 6, 7, 8, -1, 5],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([0, 3, 6, 2, 1, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 1, 7, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 7, 2, 6, 1, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 6, 1, 8, -1, 5],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 1, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 8, 2, 6, 7, 1, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 8, 2, 6, 7, 1, -1, 5],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 1, ',', 7, '-', -1) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 1) ,
('Swap gain:', 0) ,
([0, 3, -1, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, -1, 2, 6, 7, 8, 1, 5],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 1, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 5, 2, 6, 7, 8, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 6, 7, 8, -1, 1],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -6) ,
([0, 3, 1, 6, 2, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 6, 2, 7, 8, -1, 5],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -4) ,
([0, 3, 1, 7, 6, 2, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 7, 6, 2, 8, -1, 5],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 3, 1, 8, 6, 7, 2, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 8, 6, 7, 2, -1, 5],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', -1) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([0, 3, 1, -1, 6, 7, 8, 2, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, -1, 6, 7, 8, 2, 5],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 1) ,
([0, 3, 1, 5, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 6, 7, 8, -1, 2],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 1, 2, 7, 6, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 7, 6, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 1, 2, 8, 7, 6, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 8, 7, 6, -1, 5],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', -1) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 6) ,
('Swap gain:', -4) ,
([0, 3, 1, 2, -1, 7, 8, 6, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, -1, 7, 8, 6, 5],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 1, 2, 5, 7, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 5, 7, 8, -1, 6],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 1, 2, 6, 8, 7, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 8, 7, -1, 5],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', -1) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 7) ,
('Swap gain:', -2) ,
([0, 3, 1, 2, 6, -1, 8, 7, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, -1, 8, 7, 5],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', -3) ,
([0, 3, 1, 2, 6, 5, 8, -1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 5, 8, -1, 7],) ,
('saved value', 8) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', -1) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', 8) ,
('Swap gain:', -2) ,
([0, 3, 1, 2, 6, 7, -1, 8, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, -1, 8, 5],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -3) ,
([0, 3, 1, 2, 6, 7, 5, -1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 5, -1, 8],) ,
('saved value', 8) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', -1, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', -1) ,
('Swap gain:', -1) ,
([0, 3, 1, 2, 6, 7, 8, 5, -1],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 8, 5, -1],) ,
('saved value', 10) ,
('Use move gain',) ,
('Original mapping', [0, 3, 1, 2, 6, 7, 8, -1, 5]) ,
('Current mapping', [0, 3, 4, 2, 6, 7, 8, -1, 5]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 12) ,
('Current mapping:', [0, 3, 4, 2, 6, 7, 8, -1, 5]) ,
('Remap node', 1, 'from ', 3, 'to', 1) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 7, 8, -1, 5],) ,
('saved value', 9) ,
('Remap node', 2, 'from ', 4, 'to', 1) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 8, -1, 5],) ,
('saved value', 11) ,
('Remap node', 4, 'from ', 6, 'to', 1) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 1, 7, 8, -1, 5],) ,
('saved value', 8) ,
('Remap node', 7, 'from ', -1, 'to', 1) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([3, 0, 4, 2, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([3, 0, 4, 2, 6, 7, 8, -1, 5],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([4, 3, 0, 2, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 0, 2, 6, 7, 8, -1, 5],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([2, 3, 4, 0, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([2, 3, 4, 0, 6, 7, 8, -1, 5],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([6, 3, 4, 2, 0, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([6, 3, 4, 2, 0, 7, 8, -1, 5],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([7, 3, 4, 2, 6, 0, 8, -1, 5],) ,
('Computing match for mapping',) ,
([7, 3, 4, 2, 6, 0, 8, -1, 5],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([8, 3, 4, 2, 6, 7, 0, -1, 5],) ,
('Computing match for mapping',) ,
([8, 3, 4, 2, 6, 7, 0, -1, 5],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', -1) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 0) ,
('Swap gain:', -1) ,
([-1, 3, 4, 2, 6, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 2, 6, 7, 8, 0, 5],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 0) ,
('Swap gain:', -2) ,
([5, 3, 4, 2, 6, 7, 8, -1, 0],) ,
('Computing match for mapping',) ,
([5, 3, 4, 2, 6, 7, 8, -1, 0],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -5) ,
([0, 4, 3, 2, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 3, 2, 6, 7, 8, -1, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -5) ,
([0, 2, 4, 3, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 6, 7, 8, -1, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -7) ,
([0, 6, 4, 2, 3, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 3, 7, 8, -1, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -6) ,
([0, 7, 4, 2, 6, 3, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 7, 4, 2, 6, 3, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -6) ,
([0, 8, 4, 2, 6, 7, 3, -1, 5],) ,
('Computing match for mapping',) ,
([0, 8, 4, 2, 6, 7, 3, -1, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', -1) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', -4) ,
([0, -1, 4, 2, 6, 7, 8, 3, 5],) ,
('Computing match for mapping',) ,
([0, -1, 4, 2, 6, 7, 8, 3, 5],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', -5) ,
([0, 5, 4, 2, 6, 7, 8, -1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 4, 2, 6, 7, 8, -1, 3],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 2) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -3) ,
([0, 3, 2, 4, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 6, 7, 8, -1, 5],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -6) ,
([0, 3, 6, 2, 4, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 4, 7, 8, -1, 5],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 3, 7, 2, 6, 4, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 6, 4, 8, -1, 5],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 3, 8, 2, 6, 7, 4, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 8, 2, 6, 7, 4, -1, 5],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', -1) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', -1) ,
([0, 3, -1, 2, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, -1, 2, 6, 7, 8, 4, 5],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', -3) ,
([0, 3, 5, 2, 6, 7, 8, -1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 6, 7, 8, -1, 4],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -5) ,
([0, 3, 4, 6, 2, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 2, 7, 8, -1, 5],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 3, 4, 7, 6, 2, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 7, 6, 2, 8, -1, 5],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([0, 3, 4, 8, 6, 7, 2, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 8, 6, 7, 2, -1, 5],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', -1) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 2) ,
('Swap gain:', -1) ,
([0, 3, 4, -1, 6, 7, 8, 2, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, -1, 6, 7, 8, 2, 5],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 3) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('saved value', 15) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 2, 7, 6, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 7, 6, 8, -1, 5],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 2, 8, 7, 6, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 8, 7, 6, -1, 5],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', -1) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 6) ,
('Swap gain:', -4) ,
([0, 3, 4, 2, -1, 7, 8, 6, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, -1, 7, 8, 6, 5],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 2, 5, 7, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 5, 7, 8, -1, 6],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 4, 2, 6, 8, 7, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 8, 7, -1, 5],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', -1) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 7) ,
('Swap gain:', -2) ,
([0, 3, 4, 2, 6, -1, 8, 7, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, -1, 8, 7, 5],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', -3) ,
([0, 3, 4, 2, 6, 5, 8, -1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 5, 8, -1, 7],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', -1) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', 8) ,
('Swap gain:', -2) ,
([0, 3, 4, 2, 6, 7, -1, 8, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, -1, 8, 5],) ,
('saved value', 10) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -3) ,
([0, 3, 4, 2, 6, 7, 5, -1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 5, -1, 8],) ,
('saved value', 9) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', -1, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', -1) ,
('Swap gain:', -1) ,
([0, 3, 4, 2, 6, 7, 8, 5, -1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 5, -1],) ,
('saved value', 11) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 4, 2, 6, 7, 8, -1, 5]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, -1, 2]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 15) ,
('Current mapping:', [0, 3, 4, 5, 6, 7, 8, -1, 2]) ,
('Remap node', 1, 'from ', 3, 'to', 1) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 6, 7, 8, -1, 2],) ,
('saved value', 12) ,
('Remap node', 2, 'from ', 4, 'to', 1) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 6, 7, 8, -1, 2],) ,
('saved value', 12) ,
('Remap node', 4, 'from ', 6, 'to', 1) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 1, 7, 8, -1, 2],) ,
('saved value', 11) ,
('Remap node', 7, 'from ', -1, 'to', 1) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 17) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([3, 0, 4, 5, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 6, 7, 8, -1, 2],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([4, 3, 0, 5, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 6, 7, 8, -1, 2],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([5, 3, 4, 0, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 0, 6, 7, 8, -1, 2],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([6, 3, 4, 5, 0, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 0, 7, 8, -1, 2],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([7, 3, 4, 5, 6, 0, 8, -1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 0, 8, -1, 2],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([8, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', -1) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 0) ,
('Swap gain:', -1) ,
([-1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -3) ,
([2, 3, 4, 5, 6, 7, 8, -1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 7, 8, -1, 0],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -6) ,
([0, 4, 3, 5, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 3, 5, 6, 7, 8, -1, 2],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -7) ,
([0, 5, 4, 3, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 4, 3, 6, 7, 8, -1, 2],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -7) ,
([0, 6, 4, 5, 3, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 4, 5, 3, 7, 8, -1, 2],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -6) ,
([0, 7, 4, 5, 6, 3, 8, -1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 4, 5, 6, 3, 8, -1, 2],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -6) ,
([0, 8, 4, 5, 6, 7, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 8, 4, 5, 6, 7, 3, -1, 2],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', -1) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', -4) ,
([0, -1, 4, 5, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([0, -1, 4, 5, 6, 7, 8, 3, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -6) ,
([0, 2, 4, 5, 6, 7, 8, -1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 6, 7, 8, -1, 3],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 5, 4, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 8, -1, 2],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -7) ,
([0, 3, 6, 5, 4, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 5, 4, 7, 8, -1, 2],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 7, 5, 6, 4, 8, -1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 5, 6, 4, 8, -1, 2],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 8, 5, 6, 7, 4, -1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 5, 6, 7, 4, -1, 2],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', -1) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', -3) ,
([0, 3, -1, 5, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, -1, 5, 6, 7, 8, 4, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 2, 5, 6, 7, 8, -1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 6, 7, 8, -1, 4],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -7) ,
([0, 3, 4, 6, 5, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 5, 7, 8, -1, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 7, 6, 5, 8, -1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 7, 6, 5, 8, -1, 2],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 8, 6, 7, 5, -1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 8, 6, 7, 5, -1, 2],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', -1) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 5) ,
('Swap gain:', -3) ,
([0, 3, 4, -1, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, -1, 6, 7, 8, 5, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -3) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 7, 6, 8, -1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 7, 6, 8, -1, 2],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 8, 7, 6, -1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 8, 7, 6, -1, 2],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', -1) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 6) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, -1, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, -1, 7, 8, 6, 2],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -6) ,
([0, 3, 4, 5, 2, 7, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 2, 7, 8, -1, 6],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 8, 7, -1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 8, 7, -1, 2],) ,
('saved value', 11) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', -1) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 7) ,
('Swap gain:', -2) ,
([0, 3, 4, 5, 6, -1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, -1, 8, 7, 2],) ,
('saved value', 13) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 2, 8, -1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 2, 8, -1, 7],) ,
('saved value', 11) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', -1) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', 8) ,
('Swap gain:', -2) ,
([0, 3, 4, 5, 6, 7, -1, 8, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, -1, 8, 2],) ,
('saved value', 13) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 7, 2, -1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 2, -1, 8],) ,
('saved value', 11) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', -1, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', -1) ,
('Swap gain:', -2) ,
([0, 3, 4, 5, 6, 7, 8, 2, -1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 2, -1],) ,
('saved value', 13) ,
('Use move gain',) ,
('Original mapping', [0, 3, 4, 5, 6, 7, 8, -1, 2]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 17) ,
('Current mapping:', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -3) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -4) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('saved value', 13) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -6) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -7) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -7) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -6) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -6) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -7) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -7) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -6) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -7) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -4) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 13) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -6) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -7) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('saved value', 13) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('saved value', 13) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('saved value', 12) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('saved value', 13) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('saved value', 12) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('saved value', 13) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('node_pair', (0, 8)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 4)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 6)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 3)) ,
('instance/attribute match', 0) ,
('relation match with', (6, 0), 1) ,
('node_pair', (5, 7)) ,
('instance/attribute match', 1) ,
('node_pair', (6, 0)) ,
('instance/attribute match', 0) ,
('node_pair', (7, 1)) ,
('instance/attribute match', 1) ,
('node_pair', (8, 5)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 5) ,
('Node mapping at start', [8, 4, 6, 2, 3, 7, 0, 1, 5]) ,
('Triple match number at start:', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 8, ',', 1, '-', 4) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 8) ,
('Swap gain:', 1) ,
([4, 8, 6, 2, 3, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([4, 8, 6, 2, 3, 7, 0, 1, 5],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 8, ',', 2, '-', 6) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 8) ,
('Swap gain:', 0) ,
([6, 4, 8, 2, 3, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([6, 4, 8, 2, 3, 7, 0, 1, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 8, ',', 3, '-', 2) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 8) ,
('Swap gain:', -1) ,
([2, 4, 6, 8, 3, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([2, 4, 6, 8, 3, 7, 0, 1, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 8, ',', 4, '-', 3) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 8) ,
('Swap gain:', 0) ,
([3, 4, 6, 2, 8, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([3, 4, 6, 2, 8, 7, 0, 1, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 8, ',', 5, '-', 7) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 8) ,
('Swap gain:', -1) ,
([7, 4, 6, 2, 3, 8, 0, 1, 5],) ,
('Computing match for mapping',) ,
([7, 4, 6, 2, 3, 8, 0, 1, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 8, ',', 6, '-', 0) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 0, '-', 0, ',', 6, '-', 8) ,
('Swap gain:', 0) ,
([0, 4, 6, 2, 3, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 6, 2, 3, 7, 8, 1, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 8, ',', 7, '-', 1) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -1) ,
([1, 4, 6, 2, 3, 7, 0, 8, 5],) ,
('Computing match for mapping',) ,
([1, 4, 6, 2, 3, 7, 0, 8, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 8, ',', 8, '-', 5) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -1) ,
([5, 4, 6, 2, 3, 7, 0, 1, 8],) ,
('Computing match for mapping',) ,
([5, 4, 6, 2, 3, 7, 0, 1, 8],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 6) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 4) ,
('Swap gain:', 2) ,
([8, 6, 4, 2, 3, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 6, 4, 2, 3, 7, 0, 1, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 2) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -1) ,
([8, 2, 6, 4, 3, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 2, 6, 4, 3, 7, 0, 1, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 3) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', 0) ,
([8, 3, 6, 2, 4, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 3, 6, 2, 4, 7, 0, 1, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 4, ',', 5, '-', 7) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([8, 7, 6, 2, 3, 4, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 7, 6, 2, 3, 4, 0, 1, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 4, ',', 6, '-', 0) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 1, '-', 0, ',', 6, '-', 4) ,
('Swap gain:', -1) ,
([8, 0, 6, 2, 3, 7, 4, 1, 5],) ,
('Computing match for mapping',) ,
([8, 0, 6, 2, 3, 7, 4, 1, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 4, ',', 7, '-', 1) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', 0) ,
([8, 1, 6, 2, 3, 7, 0, 4, 5],) ,
('Computing match for mapping',) ,
([8, 1, 6, 2, 3, 7, 0, 4, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 4, ',', 8, '-', 5) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', -1) ,
([8, 5, 6, 2, 3, 7, 0, 1, 4],) ,
('Computing match for mapping',) ,
([8, 5, 6, 2, 3, 7, 0, 1, 4],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 2) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 6) ,
('Swap gain:', -1) ,
([8, 4, 2, 6, 3, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 4, 2, 6, 3, 7, 0, 1, 5],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 3) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 6) ,
('Swap gain:', 1) ,
([8, 4, 3, 2, 6, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 4, 3, 2, 6, 7, 0, 1, 5],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 7) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -1) ,
([8, 4, 7, 2, 3, 6, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 4, 7, 2, 3, 6, 0, 1, 5],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 0) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 2, '-', 0, ',', 6, '-', 6) ,
('Swap gain:', -1) ,
([8, 4, 0, 2, 3, 7, 6, 1, 5],) ,
('Computing match for mapping',) ,
([8, 4, 0, 2, 3, 7, 6, 1, 5],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 6, ',', 7, '-', 1) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', 0) ,
([8, 4, 1, 2, 3, 7, 0, 6, 5],) ,
('Computing match for mapping',) ,
([8, 4, 1, 2, 3, 7, 0, 6, 5],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 6, ',', 8, '-', 5) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', -1) ,
([8, 4, 5, 2, 3, 7, 0, 1, 6],) ,
('Computing match for mapping',) ,
([8, 4, 5, 2, 3, 7, 0, 1, 6],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 3) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([8, 4, 6, 3, 2, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 4, 6, 3, 2, 7, 0, 1, 5],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -2) ,
([8, 4, 6, 7, 3, 2, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 4, 6, 7, 3, 2, 0, 1, 5],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 0) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 3, '-', 0, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([8, 4, 6, 0, 3, 7, 2, 1, 5],) ,
('Computing match for mapping',) ,
([8, 4, 6, 0, 3, 7, 2, 1, 5],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 1) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([8, 4, 6, 1, 3, 7, 0, 2, 5],) ,
('Computing match for mapping',) ,
([8, 4, 6, 1, 3, 7, 0, 2, 5],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 3) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 7) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([8, 4, 6, 2, 7, 3, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 4, 6, 2, 7, 3, 0, 1, 5],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 0) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 4, '-', 0, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([8, 4, 6, 2, 0, 7, 3, 1, 5],) ,
('Computing match for mapping',) ,
([8, 4, 6, 2, 0, 7, 3, 1, 5],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 3, ',', 7, '-', 1) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -1) ,
([8, 4, 6, 2, 1, 7, 0, 3, 5],) ,
('Computing match for mapping',) ,
([8, 4, 6, 2, 1, 7, 0, 3, 5],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 3, ',', 8, '-', 5) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', -2) ,
([8, 4, 6, 2, 5, 7, 0, 1, 3],) ,
('Computing match for mapping',) ,
([8, 4, 6, 2, 5, 7, 0, 1, 3],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 0) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 5, '-', 0, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([8, 4, 6, 2, 3, 0, 7, 1, 5],) ,
('Computing match for mapping',) ,
([8, 4, 6, 2, 3, 0, 7, 1, 5],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -2) ,
([8, 4, 6, 2, 3, 1, 0, 7, 5],) ,
('Computing match for mapping',) ,
([8, 4, 6, 2, 3, 1, 0, 7, 5],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 5) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', -2) ,
([8, 4, 6, 2, 3, 5, 0, 1, 7],) ,
('Computing match for mapping',) ,
([8, 4, 6, 2, 3, 5, 0, 1, 7],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 0, ',', 7, '-', 1) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -2) ,
([8, 4, 6, 2, 3, 7, 1, 0, 5],) ,
('Computing match for mapping',) ,
([8, 4, 6, 2, 3, 7, 1, 0, 5],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 0, ',', 8, '-', 5) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 0) ,
('Swap gain:', -2) ,
([8, 4, 6, 2, 3, 7, 5, 1, 0],) ,
('Computing match for mapping',) ,
([8, 4, 6, 2, 3, 7, 5, 1, 0],) ,
('saved value', 3) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 5) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([8, 4, 6, 2, 3, 7, 0, 5, 1],) ,
('Computing match for mapping',) ,
([8, 4, 6, 2, 3, 7, 0, 5, 1],) ,
('saved value', 3) ,
('Use swap gain',) ,
('Original mapping', [8, 4, 6, 2, 3, 7, 0, 1, 5]) ,
('Current mapping', [8, 4, 6, 5, 3, 7, 0, 1, 2]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 8) ,
('Current mapping:', [8, 4, 6, 5, 3, 7, 0, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 8, ',', 1, '-', 4) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 8) ,
('Swap gain:', 1) ,
([4, 8, 6, 5, 3, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([4, 8, 6, 5, 3, 7, 0, 1, 2],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 8, ',', 2, '-', 6) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 8) ,
('Swap gain:', 0) ,
([6, 4, 8, 5, 3, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([6, 4, 8, 5, 3, 7, 0, 1, 2],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 8, ',', 3, '-', 5) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 8) ,
('Swap gain:', -2) ,
([5, 4, 6, 8, 3, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([5, 4, 6, 8, 3, 7, 0, 1, 2],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 8, ',', 4, '-', 3) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 8) ,
('Swap gain:', 0) ,
([3, 4, 6, 5, 8, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 4, 6, 5, 8, 7, 0, 1, 2],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 8, ',', 5, '-', 7) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 8) ,
('Swap gain:', -1) ,
([7, 4, 6, 5, 3, 8, 0, 1, 2],) ,
('Computing match for mapping',) ,
([7, 4, 6, 5, 3, 8, 0, 1, 2],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 8, ',', 6, '-', 0) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 0, ',', 6, '-', 8) ,
('Swap gain:', 0) ,
([0, 4, 6, 5, 3, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 6, 5, 3, 7, 8, 1, 2],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 8, ',', 7, '-', 1) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -2) ,
([1, 4, 6, 5, 3, 7, 0, 8, 2],) ,
('Computing match for mapping',) ,
([1, 4, 6, 5, 3, 7, 0, 8, 2],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 8, ',', 8, '-', 2) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -3) ,
([2, 4, 6, 5, 3, 7, 0, 1, 8],) ,
('Computing match for mapping',) ,
([2, 4, 6, 5, 3, 7, 0, 1, 8],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 6) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 4) ,
('Swap gain:', 3) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 5) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -2) ,
([8, 5, 6, 4, 3, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 5, 6, 4, 3, 7, 0, 1, 2],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 3) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', 0) ,
([8, 3, 6, 5, 4, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 6, 5, 4, 7, 0, 1, 2],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 4, ',', 5, '-', 7) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([8, 7, 6, 5, 3, 4, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 7, 6, 5, 3, 4, 0, 1, 2],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 4, ',', 6, '-', 0) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 0, ',', 6, '-', 4) ,
('Swap gain:', -1) ,
([8, 0, 6, 5, 3, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([8, 0, 6, 5, 3, 7, 4, 1, 2],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 4, ',', 7, '-', 1) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -2) ,
([8, 1, 6, 5, 3, 7, 0, 4, 2],) ,
('Computing match for mapping',) ,
([8, 1, 6, 5, 3, 7, 0, 4, 2],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 4, ',', 8, '-', 2) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -3) ,
([8, 2, 6, 5, 3, 7, 0, 1, 4],) ,
('Computing match for mapping',) ,
([8, 2, 6, 5, 3, 7, 0, 1, 4],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 5) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 6) ,
('Swap gain:', -2) ,
([8, 4, 5, 6, 3, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 4, 5, 6, 3, 7, 0, 1, 2],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 3) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 6) ,
('Swap gain:', 1) ,
([8, 4, 3, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 4, 3, 5, 6, 7, 0, 1, 2],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 7) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -1) ,
([8, 4, 7, 5, 3, 6, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 4, 7, 5, 3, 6, 0, 1, 2],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 0) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 0, ',', 6, '-', 6) ,
('Swap gain:', -1) ,
([8, 4, 0, 5, 3, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([8, 4, 0, 5, 3, 7, 6, 1, 2],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 6, ',', 7, '-', 1) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -2) ,
([8, 4, 1, 5, 3, 7, 0, 6, 2],) ,
('Computing match for mapping',) ,
([8, 4, 1, 5, 3, 7, 0, 6, 2],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 6, ',', 8, '-', 2) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -3) ,
([8, 4, 2, 5, 3, 7, 0, 1, 6],) ,
('Computing match for mapping',) ,
([8, 4, 2, 5, 3, 7, 0, 1, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 3) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 5) ,
('Swap gain:', -3) ,
([8, 4, 6, 3, 5, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 4, 6, 3, 5, 7, 0, 1, 2],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([8, 4, 6, 7, 3, 5, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 4, 6, 7, 3, 5, 0, 1, 2],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 0) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 3, '-', 0, ',', 6, '-', 5) ,
('Swap gain:', -3) ,
([8, 4, 6, 0, 3, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([8, 4, 6, 0, 3, 7, 5, 1, 2],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 1) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -4) ,
([8, 4, 6, 1, 3, 7, 0, 5, 2],) ,
('Computing match for mapping',) ,
([8, 4, 6, 1, 3, 7, 0, 5, 2],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -3) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 4, 6, 2, 3, 7, 0, 1, 5],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 7) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([8, 4, 6, 5, 7, 3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 4, 6, 5, 7, 3, 0, 1, 2],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 0) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 4, '-', 0, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([8, 4, 6, 5, 0, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([8, 4, 6, 5, 0, 7, 3, 1, 2],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 3, ',', 7, '-', 1) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -2) ,
([8, 4, 6, 5, 1, 7, 0, 3, 2],) ,
('Computing match for mapping',) ,
([8, 4, 6, 5, 1, 7, 0, 3, 2],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 3, ',', 8, '-', 2) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -4) ,
([8, 4, 6, 5, 2, 7, 0, 1, 3],) ,
('Computing match for mapping',) ,
([8, 4, 6, 5, 2, 7, 0, 1, 3],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 0) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 5, '-', 0, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([8, 4, 6, 5, 3, 0, 7, 1, 2],) ,
('Computing match for mapping',) ,
([8, 4, 6, 5, 3, 0, 7, 1, 2],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -3) ,
([8, 4, 6, 5, 3, 1, 0, 7, 2],) ,
('Computing match for mapping',) ,
([8, 4, 6, 5, 3, 1, 0, 7, 2],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -4) ,
([8, 4, 6, 5, 3, 2, 0, 1, 7],) ,
('Computing match for mapping',) ,
([8, 4, 6, 5, 3, 2, 0, 1, 7],) ,
('saved value', 4) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 0, ',', 7, '-', 1) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -3) ,
([8, 4, 6, 5, 3, 7, 1, 0, 2],) ,
('Computing match for mapping',) ,
([8, 4, 6, 5, 3, 7, 1, 0, 2],) ,
('saved value', 5) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 0, ',', 8, '-', 2) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -4) ,
([8, 4, 6, 5, 3, 7, 2, 1, 0],) ,
('Computing match for mapping',) ,
([8, 4, 6, 5, 3, 7, 2, 1, 0],) ,
('saved value', 4) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4) ,
([8, 4, 6, 5, 3, 7, 0, 2, 1],) ,
('Computing match for mapping',) ,
([8, 4, 6, 5, 3, 7, 0, 2, 1],) ,
('saved value', 4) ,
('Use swap gain',) ,
('Original mapping', [8, 4, 6, 5, 3, 7, 0, 1, 2]) ,
('Current mapping', [8, 6, 4, 5, 3, 7, 0, 1, 2]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 11) ,
('Current mapping:', [8, 6, 4, 5, 3, 7, 0, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 8, ',', 1, '-', 6) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 8) ,
('Swap gain:', -1) ,
([6, 8, 4, 5, 3, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([6, 8, 4, 5, 3, 7, 0, 1, 2],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 8, ',', 2, '-', 4) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 8) ,
('Swap gain:', -3) ,
([4, 6, 8, 5, 3, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([4, 6, 8, 5, 3, 7, 0, 1, 2],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 8, ',', 3, '-', 5) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 8) ,
('Swap gain:', -4) ,
([5, 6, 4, 8, 3, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([5, 6, 4, 8, 3, 7, 0, 1, 2],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 8, ',', 4, '-', 3) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 8) ,
('Swap gain:', -2) ,
([3, 6, 4, 5, 8, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 6, 4, 5, 8, 7, 0, 1, 2],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 8, ',', 5, '-', 7) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 8) ,
('Swap gain:', -2) ,
([7, 6, 4, 5, 3, 8, 0, 1, 2],) ,
('Computing match for mapping',) ,
([7, 6, 4, 5, 3, 8, 0, 1, 2],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 8, ',', 6, '-', 0) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 0, ',', 6, '-', 8) ,
('Swap gain:', -1) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 8, ',', 7, '-', 1) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -3) ,
([1, 6, 4, 5, 3, 7, 0, 8, 2],) ,
('Computing match for mapping',) ,
([1, 6, 4, 5, 3, 7, 0, 8, 2],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 8, ',', 8, '-', 2) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -4) ,
([2, 6, 4, 5, 3, 7, 0, 1, 8],) ,
('Computing match for mapping',) ,
([2, 6, 4, 5, 3, 7, 0, 1, 8],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 4) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 6) ,
('Swap gain:', -3) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 4, 6, 5, 3, 7, 0, 1, 2],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 5) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 6) ,
('Swap gain:', -4) ,
([8, 5, 4, 6, 3, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 5, 4, 6, 3, 7, 0, 1, 2],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 3) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 6) ,
('Swap gain:', 3) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('saved value', 14) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', 7) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -2) ,
([8, 7, 4, 5, 3, 6, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 7, 4, 5, 3, 6, 0, 1, 2],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 0) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 0, ',', 6, '-', 6) ,
('Swap gain:', -2) ,
([8, 0, 4, 5, 3, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([8, 0, 4, 5, 3, 7, 6, 1, 2],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 6, ',', 7, '-', 1) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([8, 1, 4, 5, 3, 7, 0, 6, 2],) ,
('Computing match for mapping',) ,
([8, 1, 4, 5, 3, 7, 0, 6, 2],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 6, ',', 8, '-', 2) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -4) ,
([8, 2, 4, 5, 3, 7, 0, 1, 6],) ,
('Computing match for mapping',) ,
([8, 2, 4, 5, 3, 7, 0, 1, 6],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -4) ,
([8, 6, 5, 4, 3, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 6, 5, 4, 3, 7, 0, 1, 2],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 3) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([8, 6, 3, 5, 4, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 6, 3, 5, 4, 7, 0, 1, 2],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([8, 6, 7, 5, 3, 4, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 6, 7, 5, 3, 4, 0, 1, 2],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 0) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 0, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([8, 6, 0, 5, 3, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([8, 6, 0, 5, 3, 7, 4, 1, 2],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -4) ,
([8, 6, 1, 5, 3, 7, 0, 4, 2],) ,
('Computing match for mapping',) ,
([8, 6, 1, 5, 3, 7, 0, 4, 2],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -5) ,
([8, 6, 2, 5, 3, 7, 0, 1, 4],) ,
('Computing match for mapping',) ,
([8, 6, 2, 5, 3, 7, 0, 1, 4],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 3) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 5) ,
('Swap gain:', -4) ,
([8, 6, 4, 3, 5, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 6, 4, 3, 5, 7, 0, 1, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -4) ,
([8, 6, 4, 7, 3, 5, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 6, 4, 7, 3, 5, 0, 1, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 0) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 3, '-', 0, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([8, 6, 4, 0, 3, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([8, 6, 4, 0, 3, 7, 5, 1, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 1) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([8, 6, 4, 1, 3, 7, 0, 5, 2],) ,
('Computing match for mapping',) ,
([8, 6, 4, 1, 3, 7, 0, 5, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -4) ,
([8, 6, 4, 2, 3, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 6, 4, 2, 3, 7, 0, 1, 5],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 7) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([8, 6, 4, 5, 7, 3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 6, 4, 5, 7, 3, 0, 1, 2],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 0) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 4, '-', 0, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([8, 6, 4, 5, 0, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([8, 6, 4, 5, 0, 7, 3, 1, 2],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 3, ',', 7, '-', 1) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -2) ,
([8, 6, 4, 5, 1, 7, 0, 3, 2],) ,
('Computing match for mapping',) ,
([8, 6, 4, 5, 1, 7, 0, 3, 2],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 3, ',', 8, '-', 2) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -4) ,
([8, 6, 4, 5, 2, 7, 0, 1, 3],) ,
('Computing match for mapping',) ,
([8, 6, 4, 5, 2, 7, 0, 1, 3],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 0) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 5, '-', 0, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([8, 6, 4, 5, 3, 0, 7, 1, 2],) ,
('Computing match for mapping',) ,
([8, 6, 4, 5, 3, 0, 7, 1, 2],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -3) ,
([8, 6, 4, 5, 3, 1, 0, 7, 2],) ,
('Computing match for mapping',) ,
([8, 6, 4, 5, 3, 1, 0, 7, 2],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -4) ,
([8, 6, 4, 5, 3, 2, 0, 1, 7],) ,
('Computing match for mapping',) ,
([8, 6, 4, 5, 3, 2, 0, 1, 7],) ,
('saved value', 7) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 0, ',', 7, '-', 1) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -3) ,
([8, 6, 4, 5, 3, 7, 1, 0, 2],) ,
('Computing match for mapping',) ,
([8, 6, 4, 5, 3, 7, 1, 0, 2],) ,
('saved value', 8) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 0, ',', 8, '-', 2) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -4) ,
([8, 6, 4, 5, 3, 7, 2, 1, 0],) ,
('Computing match for mapping',) ,
([8, 6, 4, 5, 3, 7, 2, 1, 0],) ,
('saved value', 7) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4) ,
([8, 6, 4, 5, 3, 7, 0, 2, 1],) ,
('Computing match for mapping',) ,
([8, 6, 4, 5, 3, 7, 0, 2, 1],) ,
('saved value', 7) ,
('Use swap gain',) ,
('Original mapping', [8, 6, 4, 5, 3, 7, 0, 1, 2]) ,
('Current mapping', [8, 3, 4, 5, 6, 7, 0, 1, 2]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 14) ,
('Current mapping:', [8, 3, 4, 5, 6, 7, 0, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 8, ',', 1, '-', 3) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 8) ,
('Swap gain:', -3) ,
([3, 8, 4, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 8, 4, 5, 6, 7, 0, 1, 2],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 8, ',', 2, '-', 4) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 8) ,
('Swap gain:', -3) ,
([4, 3, 8, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 8, 5, 6, 7, 0, 1, 2],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 8, ',', 3, '-', 5) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 8) ,
('Swap gain:', -3) ,
([5, 3, 4, 8, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 8, 6, 7, 0, 1, 2],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 8, ',', 4, '-', 6) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 8) ,
('Swap gain:', -3) ,
([6, 3, 4, 5, 8, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 8, 7, 0, 1, 2],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 8, ',', 5, '-', 7) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 8) ,
('Swap gain:', -2) ,
([7, 3, 4, 5, 6, 8, 0, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 8, 0, 1, 2],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 8, ',', 6, '-', 0) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 0, ',', 6, '-', 8) ,
('Swap gain:', 3) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 17) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 8, ',', 7, '-', 1) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -2) ,
([1, 3, 4, 5, 6, 7, 0, 8, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 0, 8, 2],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 8, ',', 8, '-', 2) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -3) ,
([2, 3, 4, 5, 6, 7, 0, 1, 8],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 7, 0, 1, 8],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -5) ,
([8, 4, 3, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 4, 3, 5, 6, 7, 0, 1, 2],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -6) ,
([8, 5, 4, 3, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 5, 4, 3, 6, 7, 0, 1, 2],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 6, 4, 5, 3, 7, 0, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([8, 7, 4, 5, 6, 3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 7, 4, 5, 6, 3, 0, 1, 2],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 0) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 0, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([8, 0, 4, 5, 6, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([8, 0, 4, 5, 6, 7, 3, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -5) ,
([8, 1, 4, 5, 6, 7, 0, 3, 2],) ,
('Computing match for mapping',) ,
([8, 1, 4, 5, 6, 7, 0, 3, 2],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -6) ,
([8, 2, 4, 5, 6, 7, 0, 1, 3],) ,
('Computing match for mapping',) ,
([8, 2, 4, 5, 6, 7, 0, 1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -5) ,
([8, 3, 5, 4, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 5, 4, 6, 7, 0, 1, 2],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -6) ,
([8, 3, 6, 5, 4, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 6, 5, 4, 7, 0, 1, 2],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([8, 3, 7, 5, 6, 4, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 7, 5, 6, 4, 0, 1, 2],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 0) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 0, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([8, 3, 0, 5, 6, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 0, 5, 6, 7, 4, 1, 2],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([8, 3, 1, 5, 6, 7, 0, 4, 2],) ,
('Computing match for mapping',) ,
([8, 3, 1, 5, 6, 7, 0, 4, 2],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -6) ,
([8, 3, 2, 5, 6, 7, 0, 1, 4],) ,
('Computing match for mapping',) ,
([8, 3, 2, 5, 6, 7, 0, 1, 4],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -6) ,
([8, 3, 4, 6, 5, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 6, 5, 7, 0, 1, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -5) ,
([8, 3, 4, 7, 6, 5, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 7, 6, 5, 0, 1, 2],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 0) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 3, '-', 0, ',', 6, '-', 5) ,
('Swap gain:', -3) ,
([8, 3, 4, 0, 6, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 0, 6, 7, 5, 1, 2],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 1) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([8, 3, 4, 1, 6, 7, 0, 5, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 1, 6, 7, 0, 5, 2],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -4) ,
([8, 3, 4, 2, 6, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 3, 4, 2, 6, 7, 0, 1, 5],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4) ,
([8, 3, 4, 5, 7, 6, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 7, 6, 0, 1, 2],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 0) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 4, '-', 0, ',', 6, '-', 6) ,
('Swap gain:', -3) ,
([8, 3, 4, 5, 0, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 0, 7, 6, 1, 2],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -4) ,
([8, 3, 4, 5, 1, 7, 0, 6, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 1, 7, 0, 6, 2],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -6) ,
([8, 3, 4, 5, 2, 7, 0, 1, 6],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 2, 7, 0, 1, 6],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 0) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 5, '-', 0, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([8, 3, 4, 5, 6, 0, 7, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 0, 7, 1, 2],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -4) ,
([8, 3, 4, 5, 6, 1, 0, 7, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 1, 0, 7, 2],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -5) ,
([8, 3, 4, 5, 6, 2, 0, 1, 7],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 2, 0, 1, 7],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 0, ',', 7, '-', 1) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -2) ,
([8, 3, 4, 5, 6, 7, 1, 0, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 1, 0, 2],) ,
('saved value', 12) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 0, ',', 8, '-', 2) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -3) ,
([8, 3, 4, 5, 6, 7, 2, 1, 0],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 2, 1, 0],) ,
('saved value', 11) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4) ,
([8, 3, 4, 5, 6, 7, 0, 2, 1],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 0, 2, 1],) ,
('saved value', 10) ,
('Use swap gain',) ,
('Original mapping', [8, 3, 4, 5, 6, 7, 0, 1, 2]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 17) ,
('Current mapping:', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -3) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -4) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('saved value', 13) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -6) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -7) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -7) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -6) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -6) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -7) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -7) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -6) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -7) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -4) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 13) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -6) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -7) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('saved value', 13) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('saved value', 13) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('saved value', 12) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('saved value', 13) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('saved value', 12) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('saved value', 13) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 8)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 0) ,
('relation match with', (3, 2), 1) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 3)) ,
('instance/attribute match', 0) ,
('node_pair', (5, 7)) ,
('instance/attribute match', 1) ,
('node_pair', (7, 4)) ,
('instance/attribute match', 0) ,
('relation match with', (8, 5), 1) ,
('node_pair', (8, 5)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 5) ,
('Node mapping at start', [0, 8, 1, 2, 3, 7, -1, 4, 5]) ,
('Triple match number at start:', 5) ,
('Remap node', 1, 'from ', 8, 'to', 6) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 1, 2, 3, 7, -1, 4, 5],) ,
('saved value', 5) ,
('Remap node', 2, 'from ', 1, 'to', 6) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 8, 6, 2, 3, 7, -1, 4, 5],) ,
('saved value', 5) ,
('Remap node', 4, 'from ', 3, 'to', 6) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 8) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 8, ',', 1, '-', 0) ,
('Swap gain:', 1) ,
([8, 0, 1, 2, 3, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([8, 0, 1, 2, 3, 7, -1, 4, 5],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([1, 8, 0, 2, 3, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([1, 8, 0, 2, 3, 7, -1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([2, 8, 1, 0, 3, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([2, 8, 1, 0, 3, 7, -1, 4, 5],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', 0) ,
([3, 8, 1, 2, 0, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([3, 8, 1, 2, 0, 7, -1, 4, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -1) ,
([7, 8, 1, 2, 3, 0, -1, 4, 5],) ,
('Computing match for mapping',) ,
([7, 8, 1, 2, 3, 0, -1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', 1) ,
([-1, 8, 1, 2, 3, 7, 0, 4, 5],) ,
('Computing match for mapping',) ,
([-1, 8, 1, 2, 3, 7, 0, 4, 5],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 4) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 7, '-', 0) ,
('Swap gain:', -1) ,
([4, 8, 1, 2, 3, 7, -1, 0, 5],) ,
('Computing match for mapping',) ,
([4, 8, 1, 2, 3, 7, -1, 0, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 5) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 0) ,
('Swap gain:', -2) ,
([5, 8, 1, 2, 3, 7, -1, 4, 0],) ,
('Computing match for mapping',) ,
([5, 8, 1, 2, 3, 7, -1, 4, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 8, ',', 2, '-', 1) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 8) ,
('Swap gain:', 0) ,
([0, 1, 8, 2, 3, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 8, 2, 3, 7, -1, 4, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 8, ',', 3, '-', 2) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 8) ,
('Swap gain:', -2) ,
([0, 2, 1, 8, 3, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 8, 3, 7, -1, 4, 5],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 8, ',', 4, '-', 3) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 8) ,
('Swap gain:', 2) ,
([0, 3, 1, 2, 8, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 8, 7, -1, 4, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 8, ',', 5, '-', 7) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 8) ,
('Swap gain:', -1) ,
([0, 7, 1, 2, 3, 8, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 3, 8, -1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 8, ',', 6, '-', -1) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 8) ,
('Swap gain:', 1) ,
([0, -1, 1, 2, 3, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2, 3, 7, 8, 4, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 8, ',', 7, '-', 4) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 7, '-', 8) ,
('Swap gain:', -1) ,
([0, 4, 1, 2, 3, 7, -1, 8, 5],) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 3, 7, -1, 8, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 8, ',', 8, '-', 5) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -2) ,
([0, 5, 1, 2, 3, 7, -1, 4, 8],) ,
('Computing match for mapping',) ,
([0, 5, 1, 2, 3, 7, -1, 4, 8],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([0, 8, 2, 1, 3, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 2, 1, 3, 7, -1, 4, 5],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 3) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -1) ,
([0, 8, 3, 2, 1, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 3, 2, 1, 7, -1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, 8, 7, 2, 3, 1, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 7, 2, 3, 1, -1, 4, 5],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 1, ',', 6, '-', -1) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -1) ,
([0, 8, -1, 2, 3, 7, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, -1, 2, 3, 7, 1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 1, ',', 7, '-', 4) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 7, '-', 1) ,
('Swap gain:', 0) ,
([0, 8, 4, 2, 3, 7, -1, 1, 5],) ,
('Computing match for mapping',) ,
([0, 8, 4, 2, 3, 7, -1, 1, 5],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 1, ',', 8, '-', 5) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -3) ,
([0, 8, 5, 2, 3, 7, -1, 4, 1],) ,
('Computing match for mapping',) ,
([0, 8, 5, 2, 3, 7, -1, 4, 1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 3) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([0, 8, 1, 3, 2, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 3, 2, 7, -1, 4, 5],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 8, 1, 7, 3, 2, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 7, 3, 2, -1, 4, 5],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', -1) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([0, 8, 1, -1, 3, 7, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, -1, 3, 7, 2, 4, 5],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 4) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 7, '-', 2) ,
('Swap gain:', -3) ,
([0, 8, 1, 4, 3, 7, -1, 2, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 4, 3, 7, -1, 2, 5],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 0) ,
([0, 8, 1, 5, 3, 7, -1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 8, 1, 5, 3, 7, -1, 4, 2],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 7) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([0, 8, 1, 2, 7, 3, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 7, 3, -1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', -1) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', 0) ,
([0, 8, 1, 2, -1, 7, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, -1, 7, 3, 4, 5],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 3, ',', 7, '-', 4) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 4, '-', 4, ',', 7, '-', 3) ,
('Swap gain:', -1) ,
([0, 8, 1, 2, 4, 7, -1, 3, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 4, 7, -1, 3, 5],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 3, ',', 8, '-', 5) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', -2) ,
([0, 8, 1, 2, 5, 7, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 5, 7, -1, 4, 3],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', -1) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', -1) ,
([0, 8, 1, 2, 3, -1, 7, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 3, -1, 7, 4, 5],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 4) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 5, '-', 4, ',', 7, '-', 7) ,
('Swap gain:', -2) ,
([0, 8, 1, 2, 3, 4, -1, 7, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 3, 4, -1, 7, 5],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 5) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', -3) ,
([0, 8, 1, 2, 3, 5, -1, 4, 7],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 3, 5, -1, 4, 7],) ,
('saved value', 2) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 4) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 6, '-', 4, ',', 7, '-', -1) ,
('Swap gain:', -1) ,
([0, 8, 1, 2, 3, 7, 4, -1, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 3, 7, 4, -1, 5],) ,
('saved value', 4) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', -1, ',', 8, '-', 5) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', -1) ,
('Swap gain:', -2) ,
([0, 8, 1, 2, 3, 7, 5, 4, -1],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 3, 7, 5, 4, -1],) ,
('saved value', 3) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 4, ',', 8, '-', 5) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', -2) ,
([0, 8, 1, 2, 3, 7, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 3, 7, -1, 5, 4],) ,
('saved value', 3) ,
('Use move gain',) ,
('Original mapping', [0, 8, 1, 2, 3, 7, -1, 4, 5]) ,
('Current mapping', [0, 8, 1, 2, 6, 7, -1, 4, 5]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 7) ,
('Current mapping:', [0, 8, 1, 2, 6, 7, -1, 4, 5]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('saved value', 7) ,
('Remap node', 1, 'from ', 8, 'to', 3) ,
('Move gain:', 3) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('saved value', 10) ,
('Remap node', 2, 'from ', 1, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 8, 3, 2, 6, 7, -1, 4, 5],) ,
('saved value', 6) ,
('Remap node', 4, 'from ', 6, 'to', 3) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 3, 7, -1, 4, 5],) ,
('saved value', 5) ,
('Remap node', 6, 'from ', -1, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 6, 7, 3, 4, 5],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 8) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 8, ',', 1, '-', 0) ,
('Swap gain:', 1) ,
([8, 0, 1, 2, 6, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([8, 0, 1, 2, 6, 7, -1, 4, 5],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([1, 8, 0, 2, 6, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([1, 8, 0, 2, 6, 7, -1, 4, 5],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([2, 8, 1, 0, 6, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([2, 8, 1, 0, 6, 7, -1, 4, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -2) ,
([6, 8, 1, 2, 0, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([6, 8, 1, 2, 0, 7, -1, 4, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -2) ,
([7, 8, 1, 2, 6, 0, -1, 4, 5],) ,
('Computing match for mapping',) ,
([7, 8, 1, 2, 6, 0, -1, 4, 5],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', 0) ,
([-1, 8, 1, 2, 6, 7, 0, 4, 5],) ,
('Computing match for mapping',) ,
([-1, 8, 1, 2, 6, 7, 0, 4, 5],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 4) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 7, '-', 0) ,
('Swap gain:', -1) ,
([4, 8, 1, 2, 6, 7, -1, 0, 5],) ,
('Computing match for mapping',) ,
([4, 8, 1, 2, 6, 7, -1, 0, 5],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 5) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 0) ,
('Swap gain:', -2) ,
([5, 8, 1, 2, 6, 7, -1, 4, 0],) ,
('Computing match for mapping',) ,
([5, 8, 1, 2, 6, 7, -1, 4, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 8, ',', 2, '-', 1) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 8) ,
('Swap gain:', 0) ,
([0, 1, 8, 2, 6, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 8, 2, 6, 7, -1, 4, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 8, ',', 3, '-', 2) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 8) ,
('Swap gain:', -2) ,
([0, 2, 1, 8, 6, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 8, 6, 7, -1, 4, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 8, ',', 4, '-', 6) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 1, 2, 8, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 6, 1, 2, 8, 7, -1, 4, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 8, ',', 5, '-', 7) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 8) ,
('Swap gain:', -2) ,
([0, 7, 1, 2, 6, 8, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 6, 8, -1, 4, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 8, ',', 6, '-', -1) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 8) ,
('Swap gain:', 2) ,
([0, -1, 1, 2, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2, 6, 7, 8, 4, 5],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 8, ',', 7, '-', 4) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 7, '-', 8) ,
('Swap gain:', -1) ,
([0, 4, 1, 2, 6, 7, -1, 8, 5],) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 6, 7, -1, 8, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 8, ',', 8, '-', 5) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -2) ,
([0, 5, 1, 2, 6, 7, -1, 4, 8],) ,
('Computing match for mapping',) ,
([0, 5, 1, 2, 6, 7, -1, 4, 8],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([0, 8, 2, 1, 6, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 2, 1, 6, 7, -1, 4, 5],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 6) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([0, 8, 6, 2, 1, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 6, 2, 1, 7, -1, 4, 5],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, 8, 7, 2, 6, 1, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 7, 2, 6, 1, -1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 1, ',', 6, '-', -1) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -1) ,
([0, 8, -1, 2, 6, 7, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, -1, 2, 6, 7, 1, 4, 5],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 1, ',', 7, '-', 4) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 7, '-', 1) ,
('Swap gain:', 0) ,
([0, 8, 4, 2, 6, 7, -1, 1, 5],) ,
('Computing match for mapping',) ,
([0, 8, 4, 2, 6, 7, -1, 1, 5],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 1, ',', 8, '-', 5) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -3) ,
([0, 8, 5, 2, 6, 7, -1, 4, 1],) ,
('Computing match for mapping',) ,
([0, 8, 5, 2, 6, 7, -1, 4, 1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 6) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 8, 1, 6, 2, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 6, 2, 7, -1, 4, 5],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -4) ,
([0, 8, 1, 7, 6, 2, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 7, 6, 2, -1, 4, 5],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', -1) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([0, 8, 1, -1, 6, 7, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, -1, 6, 7, 2, 4, 5],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 4) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 7, '-', 2) ,
('Swap gain:', -3) ,
([0, 8, 1, 4, 6, 7, -1, 2, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 4, 6, 7, -1, 2, 5],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 0) ,
([0, 8, 1, 5, 6, 7, -1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 8, 1, 5, 6, 7, -1, 4, 2],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -3) ,
([0, 8, 1, 2, 7, 6, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 7, 6, -1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', -1) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 6) ,
('Swap gain:', -2) ,
([0, 8, 1, 2, -1, 7, 6, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, -1, 7, 6, 4, 5],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 4) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 4, '-', 4, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([0, 8, 1, 2, 4, 7, -1, 6, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 4, 7, -1, 6, 5],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 5) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', -4) ,
([0, 8, 1, 2, 5, 7, -1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 5, 7, -1, 4, 6],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', -1) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([0, 8, 1, 2, 6, -1, 7, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 6, -1, 7, 4, 5],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 4) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 5, '-', 4, ',', 7, '-', 7) ,
('Swap gain:', -3) ,
([0, 8, 1, 2, 6, 4, -1, 7, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 6, 4, -1, 7, 5],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 5) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', -4) ,
([0, 8, 1, 2, 6, 5, -1, 4, 7],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 6, 5, -1, 4, 7],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 4) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 6, '-', 4, ',', 7, '-', -1) ,
('Swap gain:', -1) ,
([0, 8, 1, 2, 6, 7, 4, -1, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 6, 7, 4, -1, 5],) ,
('saved value', 6) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', -1, ',', 8, '-', 5) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', -1) ,
('Swap gain:', -2) ,
([0, 8, 1, 2, 6, 7, 5, 4, -1],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 6, 7, 5, 4, -1],) ,
('saved value', 5) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 4, ',', 8, '-', 5) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', -2) ,
([0, 8, 1, 2, 6, 7, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 6, 7, -1, 5, 4],) ,
('saved value', 5) ,
('Use move gain',) ,
('Original mapping', [0, 8, 1, 2, 6, 7, -1, 4, 5]) ,
('Current mapping', [0, 3, 1, 2, 6, 7, -1, 4, 5]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 10) ,
('Current mapping:', [0, 3, 1, 2, 6, 7, -1, 4, 5]) ,
('Remap node', 0, 'from ', 0, 'to', 8) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([8, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('saved value', 9) ,
('Remap node', 1, 'from ', 3, 'to', 8) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 6, 7, -1, 4, 5],) ,
('saved value', 7) ,
('Remap node', 6, 'from ', -1, 'to', 8) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([3, 0, 1, 2, 6, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2, 6, 7, -1, 4, 5],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 0, 2, 6, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2, 6, 7, -1, 4, 5],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -3) ,
([2, 3, 1, 0, 6, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0, 6, 7, -1, 4, 5],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([6, 3, 1, 2, 0, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([6, 3, 1, 2, 0, 7, -1, 4, 5],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([7, 3, 1, 2, 6, 0, -1, 4, 5],) ,
('Computing match for mapping',) ,
([7, 3, 1, 2, 6, 0, -1, 4, 5],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([-1, 3, 1, 2, 6, 7, 0, 4, 5],) ,
('Computing match for mapping',) ,
([-1, 3, 1, 2, 6, 7, 0, 4, 5],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 7, '-', 0) ,
('Swap gain:', -2) ,
([4, 3, 1, 2, 6, 7, -1, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 7, -1, 0, 5],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 0) ,
('Swap gain:', -3) ,
([5, 3, 1, 2, 6, 7, -1, 4, 0],) ,
('Computing match for mapping',) ,
([5, 3, 1, 2, 6, 7, -1, 4, 0],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, 6, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 6, 7, -1, 4, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -5) ,
([0, 2, 1, 3, 6, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 6, 7, -1, 4, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -5) ,
([0, 6, 1, 2, 3, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 6, 1, 2, 3, 7, -1, 4, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([0, 7, 1, 2, 6, 3, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 6, 3, -1, 4, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', -1) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([0, -1, 1, 2, 6, 7, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2, 6, 7, 3, 4, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 7, '-', 3) ,
('Swap gain:', -4) ,
([0, 4, 1, 2, 6, 7, -1, 3, 5],) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 6, 7, -1, 3, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', -5) ,
([0, 5, 1, 2, 6, 7, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 5, 1, 2, 6, 7, -1, 4, 3],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 2, 1, 6, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 6, 7, -1, 4, 5],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 6, 2, 1, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 1, 7, -1, 4, 5],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 7, 2, 6, 1, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 6, 1, -1, 4, 5],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 1, ',', 6, '-', -1) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -1) ,
([0, 3, -1, 2, 6, 7, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, -1, 2, 6, 7, 1, 4, 5],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 1, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 7, '-', 1) ,
('Swap gain:', 1) ,
([0, 3, 4, 2, 6, 7, -1, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, -1, 1, 5],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 1, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 5, 2, 6, 7, -1, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 6, 7, -1, 4, 1],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -5) ,
([0, 3, 1, 6, 2, 7, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 6, 2, 7, -1, 4, 5],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -4) ,
([0, 3, 1, 7, 6, 2, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 7, 6, 2, -1, 4, 5],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', -1) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([0, 3, 1, -1, 6, 7, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, -1, 6, 7, 2, 4, 5],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 7, '-', 2) ,
('Swap gain:', -3) ,
([0, 3, 1, 4, 6, 7, -1, 2, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 6, 7, -1, 2, 5],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 0) ,
([0, 3, 1, 5, 6, 7, -1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 6, 7, -1, 4, 2],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4) ,
([0, 3, 1, 2, 7, 6, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 7, 6, -1, 4, 5],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', -1) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 6) ,
('Swap gain:', -3) ,
([0, 3, 1, 2, -1, 7, 6, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, -1, 7, 6, 4, 5],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 4, '-', 4, ',', 7, '-', 6) ,
('Swap gain:', -4) ,
([0, 3, 1, 2, 4, 7, -1, 6, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 4, 7, -1, 6, 5],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 1, 2, 5, 7, -1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 5, 7, -1, 4, 6],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', -1) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([0, 3, 1, 2, 6, -1, 7, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, -1, 7, 4, 5],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 5, '-', 4, ',', 7, '-', 7) ,
('Swap gain:', -3) ,
([0, 3, 1, 2, 6, 4, -1, 7, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 4, -1, 7, 5],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 1, 2, 6, 5, -1, 4, 7],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 5, -1, 4, 7],) ,
('saved value', 6) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 6, '-', 4, ',', 7, '-', -1) ,
('Swap gain:', -1) ,
([0, 3, 1, 2, 6, 7, 4, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 4, -1, 5],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', -1, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', -1) ,
('Swap gain:', -2) ,
([0, 3, 1, 2, 6, 7, 5, 4, -1],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 5, 4, -1],) ,
('saved value', 8) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 4, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, -1, 4, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', -2) ,
([0, 3, 1, 2, 6, 7, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, -1, 5, 4],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [0, 3, 1, 2, 6, 7, -1, 4, 5]) ,
('Current mapping', [0, 3, 1, 2, 6, 7, 8, 4, 5]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 12) ,
('Current mapping:', [0, 3, 1, 2, 6, 7, 8, 4, 5]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([3, 0, 1, 2, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2, 6, 7, 8, 4, 5],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 0, 2, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2, 6, 7, 8, 4, 5],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -3) ,
([2, 3, 1, 0, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0, 6, 7, 8, 4, 5],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([6, 3, 1, 2, 0, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([6, 3, 1, 2, 0, 7, 8, 4, 5],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([7, 3, 1, 2, 6, 0, 8, 4, 5],) ,
('Computing match for mapping',) ,
([7, 3, 1, 2, 6, 0, 8, 4, 5],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([8, 3, 1, 2, 6, 7, 0, 4, 5],) ,
('Computing match for mapping',) ,
([8, 3, 1, 2, 6, 7, 0, 4, 5],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 7, '-', 0) ,
('Swap gain:', -2) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 0) ,
('Swap gain:', -3) ,
([5, 3, 1, 2, 6, 7, 8, 4, 0],) ,
('Computing match for mapping',) ,
([5, 3, 1, 2, 6, 7, 8, 4, 0],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 6, 7, 8, 4, 5],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -5) ,
([0, 2, 1, 3, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 6, 7, 8, 4, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -6) ,
([0, 6, 1, 2, 3, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 6, 1, 2, 3, 7, 8, 4, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([0, 7, 1, 2, 6, 3, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 6, 3, 8, 4, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -5) ,
([0, 8, 1, 2, 6, 7, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 6, 7, 3, 4, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 7, '-', 3) ,
('Swap gain:', -4) ,
([0, 4, 1, 2, 6, 7, 8, 3, 5],) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 6, 7, 8, 3, 5],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', -5) ,
([0, 5, 1, 2, 6, 7, 8, 4, 3],) ,
('Computing match for mapping',) ,
([0, 5, 1, 2, 6, 7, 8, 4, 3],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 2, 1, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 6, 7, 8, 4, 5],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([0, 3, 6, 2, 1, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 1, 7, 8, 4, 5],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 7, 2, 6, 1, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 6, 1, 8, 4, 5],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 1, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 8, 2, 6, 7, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 8, 2, 6, 7, 1, 4, 5],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 1, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 7, '-', 1) ,
('Swap gain:', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 13) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 1, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 5, 2, 6, 7, 8, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 6, 7, 8, 4, 1],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -6) ,
([0, 3, 1, 6, 2, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 6, 2, 7, 8, 4, 5],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -4) ,
([0, 3, 1, 7, 6, 2, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 7, 6, 2, 8, 4, 5],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 3, 1, 8, 6, 7, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 8, 6, 7, 2, 4, 5],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 7, '-', 2) ,
('Swap gain:', -3) ,
([0, 3, 1, 4, 6, 7, 8, 2, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 6, 7, 8, 2, 5],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 0) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 1, 2, 7, 6, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 7, 6, 8, 4, 5],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 1, 2, 8, 7, 6, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 8, 7, 6, 4, 5],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 4, '-', 4, ',', 7, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 1, 2, 4, 7, 8, 6, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 4, 7, 8, 6, 5],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', -6) ,
([0, 3, 1, 2, 5, 7, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 5, 7, 8, 4, 6],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 1, 2, 6, 8, 7, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 8, 7, 4, 5],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 5, '-', 4, ',', 7, '-', 7) ,
('Swap gain:', -3) ,
([0, 3, 1, 2, 6, 4, 8, 7, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 4, 8, 7, 5],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 1, 2, 6, 5, 8, 4, 7],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 5, 8, 4, 7],) ,
('saved value', 8) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 6, '-', 4, ',', 7, '-', 8) ,
('Swap gain:', -3) ,
([0, 3, 1, 2, 6, 7, 4, 8, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 4, 8, 5],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -4) ,
([0, 3, 1, 2, 6, 7, 5, 4, 8],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 5, 4, 8],) ,
('saved value', 8) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 4, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', -2) ,
([0, 3, 1, 2, 6, 7, 8, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 8, 5, 4],) ,
('saved value', 10) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 1, 2, 6, 7, 8, 4, 5]) ,
('Current mapping', [0, 3, 4, 2, 6, 7, 8, 1, 5]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 13) ,
('Current mapping:', [0, 3, 4, 2, 6, 7, 8, 1, 5]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([3, 0, 4, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([3, 0, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([4, 3, 0, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 0, 2, 6, 7, 8, 1, 5],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([2, 3, 4, 0, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([2, 3, 4, 0, 6, 7, 8, 1, 5],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([6, 3, 4, 2, 0, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([6, 3, 4, 2, 0, 7, 8, 1, 5],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([7, 3, 4, 2, 6, 0, 8, 1, 5],) ,
('Computing match for mapping',) ,
([7, 3, 4, 2, 6, 0, 8, 1, 5],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([8, 3, 4, 2, 6, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 3, 4, 2, 6, 7, 0, 1, 5],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 4, 2, 6, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([1, 3, 4, 2, 6, 7, 8, 0, 5],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 0) ,
('Swap gain:', -2) ,
([5, 3, 4, 2, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([5, 3, 4, 2, 6, 7, 8, 1, 0],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -5) ,
([0, 4, 3, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 3, 2, 6, 7, 8, 1, 5],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -5) ,
([0, 2, 4, 3, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 6, 7, 8, 1, 5],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -7) ,
([0, 6, 4, 2, 3, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 3, 7, 8, 1, 5],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -6) ,
([0, 7, 4, 2, 6, 3, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 7, 4, 2, 6, 3, 8, 1, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -6) ,
([0, 8, 4, 2, 6, 7, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 8, 4, 2, 6, 7, 3, 1, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 4, 2, 6, 7, 8, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 7, 8, 3, 5],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', -5) ,
([0, 5, 4, 2, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 4, 2, 6, 7, 8, 1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 2) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -3) ,
([0, 3, 2, 4, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 6, 7, 8, 1, 5],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -6) ,
([0, 3, 6, 2, 4, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 4, 7, 8, 1, 5],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 3, 7, 2, 6, 4, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 6, 4, 8, 1, 5],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 3, 8, 2, 6, 7, 4, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 8, 2, 6, 7, 4, 1, 5],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -1) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', -3) ,
([0, 3, 5, 2, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 6, 7, 8, 1, 4],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -5) ,
([0, 3, 4, 6, 2, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 2, 7, 8, 1, 5],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 3, 4, 7, 6, 2, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 7, 6, 2, 8, 1, 5],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([0, 3, 4, 8, 6, 7, 2, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 8, 6, 7, 2, 1, 5],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([0, 3, 4, 1, 6, 7, 8, 2, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 7, 8, 2, 5],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 17) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 2, 7, 6, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 7, 6, 8, 1, 5],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 2, 8, 7, 6, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 8, 7, 6, 1, 5],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 2, 1, 7, 8, 6, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 1, 7, 8, 6, 5],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 2, 5, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 5, 7, 8, 1, 6],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 4, 2, 6, 8, 7, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 8, 7, 1, 5],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -3) ,
([0, 3, 4, 2, 6, 1, 8, 7, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 1, 8, 7, 5],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', -3) ,
([0, 3, 4, 2, 6, 5, 8, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 5, 8, 1, 7],) ,
('saved value', 10) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -3) ,
([0, 3, 4, 2, 6, 7, 1, 8, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 1, 8, 5],) ,
('saved value', 10) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -3) ,
([0, 3, 4, 2, 6, 7, 5, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 5, 1, 8],) ,
('saved value', 10) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 4, 2, 6, 7, 8, 5, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 5, 1],) ,
('saved value', 11) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 4, 2, 6, 7, 8, 1, 5]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 17) ,
('Current mapping:', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -3) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -4) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('saved value', 13) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -6) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -7) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -7) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -6) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -6) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -7) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -7) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -6) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -7) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -4) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 13) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -6) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -7) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('saved value', 13) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('saved value', 13) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('saved value', 12) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('saved value', 13) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('saved value', 12) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('saved value', 13) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('node_pair', (0, 3)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 6)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 5)) ,
('instance/attribute match', 2) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 0) ,
('node_pair', (5, 7)) ,
('instance/attribute match', 1) ,
('node_pair', (6, 0)) ,
('instance/attribute match', 0) ,
('node_pair', (8, 2)) ,
('instance/attribute match', 2) ,
('match computing complete, result:', 5) ,
('Node mapping at start', [3, 1, 6, 5, 4, 7, 0, -1, 2]) ,
('Triple match number at start:', 5) ,
('Remap node', 0, 'from ', 3, 'to', 8) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([8, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('saved value', 5) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([3, 8, 6, 5, 4, 7, 0, -1, 2],) ,
('saved value', 6) ,
('Remap node', 6, 'from ', 0, 'to', 8) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 4, 7, 8, -1, 2],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 1) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 3) ,
('Swap gain:', 1) ,
([1, 3, 6, 5, 4, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 4, 7, 0, -1, 2],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 6) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 3) ,
('Swap gain:', 0) ,
([6, 1, 3, 5, 4, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([6, 1, 3, 5, 4, 7, 0, -1, 2],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 5) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -2) ,
([5, 1, 6, 3, 4, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([5, 1, 6, 3, 4, 7, 0, -1, 2],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 4) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', 1) ,
([4, 1, 6, 5, 3, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([4, 1, 6, 5, 3, 7, 0, -1, 2],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 7) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([7, 1, 6, 5, 4, 3, 0, -1, 2],) ,
('Computing match for mapping',) ,
([7, 1, 6, 5, 4, 3, 0, -1, 2],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', 0) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 0, ',', 6, '-', 3) ,
('Swap gain:', 2) ,
([0, 1, 6, 5, 4, 7, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 4, 7, 3, -1, 2],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 3, ',', 7, '-', -1) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', 0) ,
([-1, 1, 6, 5, 4, 7, 0, 3, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 6, 5, 4, 7, 0, 3, 2],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 3, ',', 8, '-', 2) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -2) ,
([2, 1, 6, 5, 4, 7, 0, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 6, 5, 4, 7, 0, -1, 3],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', 0) ,
([3, 6, 1, 5, 4, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 6, 1, 5, 4, 7, 0, -1, 2],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 5) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([3, 5, 6, 1, 4, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 5, 6, 1, 4, 7, 0, -1, 2],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', 2) ,
([3, 4, 6, 5, 1, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 4, 6, 5, 1, 7, 0, -1, 2],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 7) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([3, 7, 6, 5, 4, 1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 7, 6, 5, 4, 1, 0, -1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 0) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 0, ',', 6, '-', 1) ,
('Swap gain:', 0) ,
([3, 0, 6, 5, 4, 7, 1, -1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 6, 5, 4, 7, 1, -1, 2],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', -1) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 1) ,
('Swap gain:', 2) ,
([3, -1, 6, 5, 4, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, -1, 6, 5, 4, 7, 0, 1, 2],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 1, ',', 8, '-', 2) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([3, 2, 6, 5, 4, 7, 0, -1, 1],) ,
('Computing match for mapping',) ,
([3, 2, 6, 5, 4, 7, 0, -1, 1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 5) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 6) ,
('Swap gain:', -2) ,
([3, 1, 5, 6, 4, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 5, 6, 4, 7, 0, -1, 2],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', 4) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 7) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -1) ,
([3, 1, 7, 5, 4, 6, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 7, 5, 4, 6, 0, -1, 2],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 0) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', 0, ',', 6, '-', 6) ,
('Swap gain:', 0) ,
([3, 1, 0, 5, 4, 7, 6, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 0, 5, 4, 7, 6, -1, 2],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 6, ',', 7, '-', -1) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 6) ,
('Swap gain:', 0) ,
([3, 1, -1, 5, 4, 7, 0, 6, 2],) ,
('Computing match for mapping',) ,
([3, 1, -1, 5, 4, 7, 0, 6, 2],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 6, ',', 8, '-', 2) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -2) ,
([3, 1, 2, 5, 4, 7, 0, -1, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 4, 7, 0, -1, 6],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -2) ,
([3, 1, 6, 4, 5, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 4, 5, 7, 0, -1, 2],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([3, 1, 6, 7, 4, 5, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 4, 5, 0, -1, 2],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 0) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 3, '-', 0, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([3, 1, 6, 0, 4, 7, 5, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 0, 4, 7, 5, -1, 2],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', -1) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 5) ,
('Swap gain:', -2) ,
([3, 1, 6, -1, 4, 7, 0, 5, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, -1, 4, 7, 0, 5, 2],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -2) ,
([3, 1, 6, 2, 4, 7, 0, -1, 5],) ,
('Computing match for mapping',) ,
([3, 1, 6, 2, 4, 7, 0, -1, 5],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 7) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([3, 1, 6, 5, 7, 4, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 7, 4, 0, -1, 2],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 0) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 4, '-', 0, ',', 6, '-', 4) ,
('Swap gain:', 0) ,
([3, 1, 6, 5, 0, 7, 4, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 0, 7, 4, -1, 2],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 4, ',', 7, '-', -1) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', 0) ,
([3, 1, 6, 5, -1, 7, 0, 4, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, -1, 7, 0, 4, 2],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 4, ',', 8, '-', 2) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -2) ,
([3, 1, 6, 5, 2, 7, 0, -1, 4],) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 2, 7, 0, -1, 4],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 0) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 5, '-', 0, ',', 6, '-', 7) ,
('Swap gain:', -1) ,
([3, 1, 6, 5, 4, 0, 7, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 4, 0, 7, -1, 2],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', -1) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 7) ,
('Swap gain:', -1) ,
([3, 1, 6, 5, 4, -1, 0, 7, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 4, -1, 0, 7, 2],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -3) ,
([3, 1, 6, 5, 4, 2, 0, -1, 7],) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 4, 2, 0, -1, 7],) ,
('saved value', 2) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 0, ',', 7, '-', -1) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', 0) ,
('Swap gain:', 0) ,
([3, 1, 6, 5, 4, 7, -1, 0, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 4, 7, -1, 0, 2],) ,
('saved value', 5) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 0, ',', 8, '-', 2) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -2) ,
([3, 1, 6, 5, 4, 7, 2, -1, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 4, 7, 2, -1, 0],) ,
('saved value', 3) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', -1, ',', 8, '-', 2) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', -1) ,
('Swap gain:', -2) ,
([3, 1, 6, 5, 4, 7, 0, 2, -1],) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 4, 7, 0, 2, -1],) ,
('saved value', 3) ,
('Use swap gain',) ,
('Original mapping', [3, 1, 6, 5, 4, 7, 0, -1, 2]) ,
('Current mapping', [3, 1, 4, 5, 6, 7, 0, -1, 2]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 9) ,
('Current mapping:', [3, 1, 4, 5, 6, 7, 0, -1, 2]) ,
('Remap node', 0, 'from ', 3, 'to', 8) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([8, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('saved value', 9) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 8, 4, 5, 6, 7, 0, -1, 2],) ,
('saved value', 9) ,
('Remap node', 6, 'from ', 0, 'to', 8) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 6, 7, 8, -1, 2],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 1) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 3) ,
('Swap gain:', 3) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 4) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -2) ,
([4, 1, 3, 5, 6, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([4, 1, 3, 5, 6, 7, 0, -1, 2],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 5) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -3) ,
([5, 1, 4, 3, 6, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([5, 1, 4, 3, 6, 7, 0, -1, 2],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 6) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -1) ,
([6, 1, 4, 5, 3, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([6, 1, 4, 5, 3, 7, 0, -1, 2],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 7) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([7, 1, 4, 5, 6, 3, 0, -1, 2],) ,
('Computing match for mapping',) ,
([7, 1, 4, 5, 6, 3, 0, -1, 2],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', 0) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 0, ',', 6, '-', 3) ,
('Swap gain:', 1) ,
([0, 1, 4, 5, 6, 7, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 6, 7, 3, -1, 2],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 3, ',', 7, '-', -1) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', 0) ,
([-1, 1, 4, 5, 6, 7, 0, 3, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 4, 5, 6, 7, 0, 3, 2],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 3, ',', 8, '-', 2) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -2) ,
([2, 1, 4, 5, 6, 7, 0, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 4, 5, 6, 7, 0, -1, 3],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([3, 4, 1, 5, 6, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 4, 1, 5, 6, 7, 0, -1, 2],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 5) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([3, 5, 4, 1, 6, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 5, 4, 1, 6, 7, 0, -1, 2],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 6) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -1) ,
([3, 6, 4, 5, 1, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 6, 4, 5, 1, 7, 0, -1, 2],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 7) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([3, 7, 4, 5, 6, 1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 7, 4, 5, 6, 1, 0, -1, 2],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 0) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 0, ',', 6, '-', 1) ,
('Swap gain:', 0) ,
([3, 0, 4, 5, 6, 7, 1, -1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 6, 7, 1, -1, 2],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', -1) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 1) ,
('Swap gain:', 2) ,
([3, -1, 4, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, -1, 4, 5, 6, 7, 0, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 1, ',', 8, '-', 2) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([3, 2, 4, 5, 6, 7, 0, -1, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 6, 7, 0, -1, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -4) ,
([3, 1, 5, 4, 6, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 5, 4, 6, 7, 0, -1, 2],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 4, 7, 0, -1, 2],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([3, 1, 7, 5, 6, 4, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 7, 5, 6, 4, 0, -1, 2],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 0) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', 0, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([3, 1, 0, 5, 6, 7, 4, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 0, 5, 6, 7, 4, -1, 2],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', -1) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', -2) ,
([3, 1, -1, 5, 6, 7, 0, 4, 2],) ,
('Computing match for mapping',) ,
([3, 1, -1, 5, 6, 7, 0, 4, 2],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -4) ,
([3, 1, 2, 5, 6, 7, 0, -1, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 6, 7, 0, -1, 4],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -5) ,
([3, 1, 4, 6, 5, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, 6, 5, 7, 0, -1, 2],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -5) ,
([3, 1, 4, 7, 6, 5, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, 7, 6, 5, 0, -1, 2],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 0) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 3, '-', 0, ',', 6, '-', 5) ,
('Swap gain:', -3) ,
([3, 1, 4, 0, 6, 7, 5, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, 0, 6, 7, 5, -1, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', -1) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 5) ,
('Swap gain:', -3) ,
([3, 1, 4, -1, 6, 7, 0, 5, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, -1, 6, 7, 0, 5, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -3) ,
([3, 1, 4, 2, 6, 7, 0, -1, 5],) ,
('Computing match for mapping',) ,
([3, 1, 4, 2, 6, 7, 0, -1, 5],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -3) ,
([3, 1, 4, 5, 7, 6, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 7, 6, 0, -1, 2],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 0) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 4, '-', 0, ',', 6, '-', 6) ,
('Swap gain:', -2) ,
([3, 1, 4, 5, 0, 7, 6, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 0, 7, 6, -1, 2],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', -1) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 6) ,
('Swap gain:', -2) ,
([3, 1, 4, 5, -1, 7, 0, 6, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, -1, 7, 0, 6, 2],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -4) ,
([3, 1, 4, 5, 2, 7, 0, -1, 6],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 2, 7, 0, -1, 6],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 0) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 5, '-', 0, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([3, 1, 4, 5, 6, 0, 7, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 6, 0, 7, -1, 2],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', -1) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 7) ,
('Swap gain:', -2) ,
([3, 1, 4, 5, 6, -1, 0, 7, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 6, -1, 0, 7, 2],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -4) ,
([3, 1, 4, 5, 6, 2, 0, -1, 7],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 6, 2, 0, -1, 7],) ,
('saved value', 5) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 0, ',', 7, '-', -1) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', 0) ,
('Swap gain:', 0) ,
([3, 1, 4, 5, 6, 7, -1, 0, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 6, 7, -1, 0, 2],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 0, ',', 8, '-', 2) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -2) ,
([3, 1, 4, 5, 6, 7, 2, -1, 0],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 6, 7, 2, -1, 0],) ,
('saved value', 7) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', -1, ',', 8, '-', 2) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', -1) ,
('Swap gain:', -2) ,
([3, 1, 4, 5, 6, 7, 0, 2, -1],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 6, 7, 0, 2, -1],) ,
('saved value', 7) ,
('Use swap gain',) ,
('Original mapping', [3, 1, 4, 5, 6, 7, 0, -1, 2]) ,
('Current mapping', [1, 3, 4, 5, 6, 7, 0, -1, 2]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 12) ,
('Current mapping:', [1, 3, 4, 5, 6, 7, 0, -1, 2]) ,
('Remap node', 0, 'from ', 1, 'to', 8) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('saved value', 12) ,
('Remap node', 1, 'from ', 3, 'to', 8) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([1, 8, 4, 5, 6, 7, 0, -1, 2],) ,
('saved value', 9) ,
('Remap node', 6, 'from ', 0, 'to', 8) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 3) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 1) ,
('Swap gain:', -3) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 6, 7, 0, -1, 2],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 4) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([4, 3, 1, 5, 6, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 1, 5, 6, 7, 0, -1, 2],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([5, 3, 4, 1, 6, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 1, 6, 7, 0, -1, 2],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 6) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([6, 3, 4, 5, 1, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 1, 7, 0, -1, 2],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 7) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([7, 3, 4, 5, 6, 1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 1, 0, -1, 2],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 1, ',', 6, '-', 0) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 0, ',', 6, '-', 1) ,
('Swap gain:', 1) ,
([0, 3, 4, 5, 6, 7, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 1, -1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 1, ',', 7, '-', -1) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 1) ,
('Swap gain:', 2) ,
([-1, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 1, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([2, 3, 4, 5, 6, 7, 0, -1, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 7, 0, -1, 1],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -5) ,
([1, 4, 3, 5, 6, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 4, 3, 5, 6, 7, 0, -1, 2],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -6) ,
([1, 5, 4, 3, 6, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 5, 4, 3, 6, 7, 0, -1, 2],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([1, 6, 4, 5, 3, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 6, 4, 5, 3, 7, 0, -1, 2],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([1, 7, 4, 5, 6, 3, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 7, 4, 5, 6, 3, 0, -1, 2],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 0) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 0, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([1, 0, 4, 5, 6, 7, 3, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, 4, 5, 6, 7, 3, -1, 2],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', -1) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', -3) ,
([1, -1, 4, 5, 6, 7, 0, 3, 2],) ,
('Computing match for mapping',) ,
([1, -1, 4, 5, 6, 7, 0, 3, 2],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -5) ,
([1, 2, 4, 5, 6, 7, 0, -1, 3],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 6, 7, 0, -1, 3],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -5) ,
([1, 3, 5, 4, 6, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 5, 4, 6, 7, 0, -1, 2],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -6) ,
([1, 3, 6, 5, 4, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 4, 7, 0, -1, 2],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([1, 3, 7, 5, 6, 4, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 7, 5, 6, 4, 0, -1, 2],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 0) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', 0, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([1, 3, 0, 5, 6, 7, 4, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 6, 7, 4, -1, 2],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', -1) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', -3) ,
([1, 3, -1, 5, 6, 7, 0, 4, 2],) ,
('Computing match for mapping',) ,
([1, 3, -1, 5, 6, 7, 0, 4, 2],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -5) ,
([1, 3, 2, 5, 6, 7, 0, -1, 4],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 6, 7, 0, -1, 4],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -6) ,
([1, 3, 4, 6, 5, 7, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 6, 5, 7, 0, -1, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -5) ,
([1, 3, 4, 7, 6, 5, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 7, 6, 5, 0, -1, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 0) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 3, '-', 0, ',', 6, '-', 5) ,
('Swap gain:', -3) ,
([1, 3, 4, 0, 6, 7, 5, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 0, 6, 7, 5, -1, 2],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', -1) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 5) ,
('Swap gain:', -3) ,
([1, 3, 4, -1, 6, 7, 0, 5, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, -1, 6, 7, 0, 5, 2],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -3) ,
([1, 3, 4, 2, 6, 7, 0, -1, 5],) ,
('Computing match for mapping',) ,
([1, 3, 4, 2, 6, 7, 0, -1, 5],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4) ,
([1, 3, 4, 5, 7, 6, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 7, 6, 0, -1, 2],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 0) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 4, '-', 0, ',', 6, '-', 6) ,
('Swap gain:', -3) ,
([1, 3, 4, 5, 0, 7, 6, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 0, 7, 6, -1, 2],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', -1) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([1, 3, 4, 5, -1, 7, 0, 6, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, -1, 7, 0, 6, 2],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -5) ,
([1, 3, 4, 5, 2, 7, 0, -1, 6],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 2, 7, 0, -1, 6],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 0) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 5, '-', 0, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([1, 3, 4, 5, 6, 0, 7, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 0, 7, -1, 2],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', -1) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 7) ,
('Swap gain:', -2) ,
([1, 3, 4, 5, 6, -1, 0, 7, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, -1, 0, 7, 2],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -4) ,
([1, 3, 4, 5, 6, 2, 0, -1, 7],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 2, 0, -1, 7],) ,
('saved value', 8) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 0, ',', 7, '-', -1) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', 0) ,
('Swap gain:', 0) ,
([1, 3, 4, 5, 6, 7, -1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, -1, 0, 2],) ,
('saved value', 12) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 0, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 4, 5, 6, 7, 2, -1, 0],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 2, -1, 0],) ,
('saved value', 10) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', -1, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', -1) ,
('Swap gain:', -2) ,
([1, 3, 4, 5, 6, 7, 0, 2, -1],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 0, 2, -1],) ,
('saved value', 10) ,
('Use move gain',) ,
('Original mapping', [1, 3, 4, 5, 6, 7, 0, -1, 2]) ,
('Current mapping', [1, 3, 4, 5, 6, 7, 8, -1, 2]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 14) ,
('Current mapping:', [1, 3, 4, 5, 6, 7, 8, -1, 2]) ,
('Remap node', 0, 'from ', 1, 'to', 0) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('saved value', 15) ,
('Remap node', 1, 'from ', 3, 'to', 0) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([1, 0, 4, 5, 6, 7, 8, -1, 2],) ,
('saved value', 11) ,
('Remap node', 6, 'from ', 8, 'to', 0) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 0, -1, 2],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 3) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 1) ,
('Swap gain:', -3) ,
([3, 1, 4, 5, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 6, 7, 8, -1, 2],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 4) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([4, 3, 1, 5, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 1, 5, 6, 7, 8, -1, 2],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([5, 3, 4, 1, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 1, 6, 7, 8, -1, 2],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 6) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([6, 3, 4, 5, 1, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 1, 7, 8, -1, 2],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 7) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([7, 3, 4, 5, 6, 1, 8, -1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 1, 8, -1, 2],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 1, ',', 6, '-', 8) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([8, 3, 4, 5, 6, 7, 1, -1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 1, -1, 2],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 1, ',', 7, '-', -1) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 1) ,
('Swap gain:', 2) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 16) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 1, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([2, 3, 4, 5, 6, 7, 8, -1, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 7, 8, -1, 1],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -5) ,
([1, 4, 3, 5, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([1, 4, 3, 5, 6, 7, 8, -1, 2],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -6) ,
([1, 5, 4, 3, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([1, 5, 4, 3, 6, 7, 8, -1, 2],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -6) ,
([1, 6, 4, 5, 3, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([1, 6, 4, 5, 3, 7, 8, -1, 2],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([1, 7, 4, 5, 6, 3, 8, -1, 2],) ,
('Computing match for mapping',) ,
([1, 7, 4, 5, 6, 3, 8, -1, 2],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -5) ,
([1, 8, 4, 5, 6, 7, 3, -1, 2],) ,
('Computing match for mapping',) ,
([1, 8, 4, 5, 6, 7, 3, -1, 2],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', -1) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', -3) ,
([1, -1, 4, 5, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([1, -1, 4, 5, 6, 7, 8, 3, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -5) ,
([1, 2, 4, 5, 6, 7, 8, -1, 3],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 6, 7, 8, -1, 3],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -5) ,
([1, 3, 5, 4, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 5, 4, 6, 7, 8, -1, 2],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -7) ,
([1, 3, 6, 5, 4, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 4, 7, 8, -1, 2],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([1, 3, 7, 5, 6, 4, 8, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 7, 5, 6, 4, 8, -1, 2],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -5) ,
([1, 3, 8, 5, 6, 7, 4, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 8, 5, 6, 7, 4, -1, 2],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', -1) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', -3) ,
([1, 3, -1, 5, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([1, 3, -1, 5, 6, 7, 8, 4, 2],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -5) ,
([1, 3, 2, 5, 6, 7, 8, -1, 4],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 6, 7, 8, -1, 4],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -7) ,
([1, 3, 4, 6, 5, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 6, 5, 7, 8, -1, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -5) ,
([1, 3, 4, 7, 6, 5, 8, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 7, 6, 5, 8, -1, 2],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -5) ,
([1, 3, 4, 8, 6, 7, 5, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 8, 6, 7, 5, -1, 2],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', -1) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 5) ,
('Swap gain:', -3) ,
([1, 3, 4, -1, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, -1, 6, 7, 8, 5, 2],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -3) ,
([1, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('Computing match for mapping',) ,
([1, 3, 4, 2, 6, 7, 8, -1, 5],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -5) ,
([1, 3, 4, 5, 7, 6, 8, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 7, 6, 8, -1, 2],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5) ,
([1, 3, 4, 5, 8, 7, 6, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 8, 7, 6, -1, 2],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', -1) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 6) ,
('Swap gain:', -4) ,
([1, 3, 4, 5, -1, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, -1, 7, 8, 6, 2],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -6) ,
([1, 3, 4, 5, 2, 7, 8, -1, 6],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 2, 7, 8, -1, 6],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([1, 3, 4, 5, 6, 8, 7, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 8, 7, -1, 2],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', -1) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 7) ,
('Swap gain:', -2) ,
([1, 3, 4, 5, 6, -1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, -1, 8, 7, 2],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -4) ,
([1, 3, 4, 5, 6, 2, 8, -1, 7],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 2, 8, -1, 7],) ,
('saved value', 10) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', -1) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', 8) ,
('Swap gain:', -2) ,
([1, 3, 4, 5, 6, 7, -1, 8, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, -1, 8, 2],) ,
('saved value', 12) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -4) ,
([1, 3, 4, 5, 6, 7, 2, -1, 8],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 2, -1, 8],) ,
('saved value', 10) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', -1, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', -1) ,
('Swap gain:', -2) ,
([1, 3, 4, 5, 6, 7, 8, 2, -1],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 8, 2, -1],) ,
('saved value', 12) ,
('Use swap gain',) ,
('Original mapping', [1, 3, 4, 5, 6, 7, 8, -1, 2]) ,
('Current mapping', [-1, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 16) ,
('Current mapping:', [-1, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Remap node', 0, 'from ', -1, 'to', 0) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 17) ,
('Remap node', 1, 'from ', 3, 'to', 0) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([-1, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Remap node', 6, 'from ', 8, 'to', 0) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([-1, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', -1, ',', 1, '-', 3) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', -1) ,
('Swap gain:', -3) ,
([3, -1, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([3, -1, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', -1, ',', 2, '-', 4) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', -1) ,
('Swap gain:', -3) ,
([4, 3, -1, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, -1, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', -1, ',', 3, '-', 5) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', -1) ,
('Swap gain:', -3) ,
([5, 3, 4, -1, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, -1, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', -1, ',', 4, '-', 6) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', -1) ,
('Swap gain:', -4) ,
([6, 3, 4, 5, -1, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, -1, 7, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', -1, ',', 5, '-', 7) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', -1) ,
('Swap gain:', -2) ,
([7, 3, 4, 5, 6, -1, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, -1, 8, 1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', -1, ',', 6, '-', 8) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', -1) ,
('Swap gain:', -2) ,
([8, 3, 4, 5, 6, 7, -1, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, -1, 1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', -1, ',', 7, '-', 1) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', -1) ,
('Swap gain:', -2) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 8, -1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', -1, ',', 8, '-', 2) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', -1) ,
('Swap gain:', -3) ,
([2, 3, 4, 5, 6, 7, 8, 1, -1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 7, 8, 1, -1],) ,
('saved value', 13) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -5) ,
([-1, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -6) ,
([-1, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -6) ,
([-1, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([-1, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -5) ,
([-1, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -5) ,
([-1, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -6) ,
([-1, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([-1, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -5) ,
([-1, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -7) ,
([-1, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([-1, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -5) ,
([-1, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([-1, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -6) ,
([-1, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([-1, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -7) ,
([-1, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -5) ,
([-1, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -5) ,
([-1, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 1) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([-1, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -4) ,
([-1, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -5) ,
([-1, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5) ,
([-1, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -6) ,
([-1, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -7) ,
([-1, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([-1, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -4) ,
([-1, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -5) ,
([-1, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('saved value', 11) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -4) ,
([-1, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('saved value', 12) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -5) ,
([-1, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('saved value', 11) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([-1, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4) ,
([-1, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('saved value', 12) ,
('Use move gain',) ,
('Original mapping', [-1, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 17) ,
('Current mapping:', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -3) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -4) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('saved value', 13) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -6) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -7) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -7) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -6) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -6) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -7) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -7) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -6) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -7) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -4) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 13) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -6) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -7) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('saved value', 13) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('saved value', 13) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('saved value', 12) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('saved value', 13) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -5) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('saved value', 12) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('saved value', 13) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 17) ,
('best node mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Best node mapping alignment:', 'a0(confirm-01)-b0(approve-01) a1(nominate-01)-b3(nominate-01) a2(person)-b4(person) a3(name)-b5(name) a4(court)-b6(court) a5(appeal-01)-b7(appeal-01) a6(key-02)-b8(key-02) a7(government-organization)-b1(government-organization) a8(name)-b2(name)') ,
('F-score:', 0.85) ,
0.850
('AMR pair', 4) ,
('============================================',) ,
('AMR 1 (one-line):', '(p0 / possible-01:ARG1 (d0 / do-02:ARG1 (i0 / improve-01:ARG0 i1:ARG1 (s0 / score:poss i1:mod (c0 / credit))):ARG0 (a0 / amr-unknown:mod (m0 / more)):ARG0 (i1 / i)))') ,
('AMR 2 (one-line):', '(p0 / possible-01:ARG1 (d0 / do-02:ARG1 (a0 / amr-unknown):ARG0 (i0 / i:poss-of (s0 / score:mod (c0 / credit))):ARG2 (r0 / realistic-03):ARG2 (r1 / raise-01:ARG0 i0:ARG1 s0)))') ,
('Instance triples of AMR 1:', 8) ,
([('instance', 'a0', 'possible-01'), ('instance', 'a1', 'do-02'), ('instance', 'a2', 'improve-01'), ('instance', 'a3', 'score'), ('instance', 'a4', 'credit'), ('instance', 'a5', 'amr-unknown'), ('instance', 'a6', 'more'), ('instance', 'a7', 'i')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'possible-01')],) ,
('Relation triples of AMR 1:', 9) ,
([('ARG1', 'a0', 'a1'), ('ARG1', 'a1', 'a2'), ('ARG0', 'a1', 'a5'), ('ARG0', 'a1', 'a7'), ('ARG1', 'a2', 'a3'), ('ARG0', 'a2', 'a7'), ('mod', 'a3', 'a4'), ('poss', 'a3', 'a7'), ('mod', 'a5', 'a6')],) ,
('Instance triples of AMR 2:', 8) ,
([('instance', 'b0', 'possible-01'), ('instance', 'b1', 'do-02'), ('instance', 'b2', 'amr-unknown'), ('instance', 'b3', 'i'), ('instance', 'b4', 'score'), ('instance', 'b5', 'credit'), ('instance', 'b6', 'realistic-03'), ('instance', 'b7', 'raise-01')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'possible-01')],) ,
('Relation triples of AMR 2:', 9) ,
([('ARG1', 'b0', 'b1'), ('ARG1', 'b1', 'b2'), ('ARG0', 'b1', 'b3'), ('ARG2', 'b1', 'b6'), ('ARG2', 'b1', 'b7'), ('poss', 'b4', 'b3'), ('mod', 'b4', 'b5'), ('ARG0', 'b7', 'b3'), ('ARG1', 'b7', 'b4')],) ,
('Candidate mappings:',) ,
([{0, 1, 7}, {0, 1, 2, 4, 7}, {0, 1, 2, 4, 7}, {1, 2, 4}, {5}, {2, 3, 4}, {5}, {3}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2, (1, 1): 1}, (1, 1): {-1: 1, (0, 0): 1, (2, 2): 1, (5, 3): 1, (7, 3): 1}, (3, 4): {-1: 1, (2, 7): 1, (4, 5): 1, (7, 3): 1}, (4, 5): {-1: 1, (3, 4): 1}, (5, 2): {-1: 1}, (7, 3): {-1: 1, (1, 1): 1, (1, 7): 1, (2, 1): 1, (2, 7): 1, (3, 4): 1}, (0, 1): {-1: 0, (1, 2): 1}, (1, 2): {-1: 0, (0, 1): 1}, (0, 7): {-1: 0, (1, 4): 1}, (1, 4): {-1: 0, (0, 7): 1}, (1, 0): {-1: 0, (2, 1): 1}, (2, 1): {-1: 0, (1, 0): 1, (3, 2): 1, (7, 3): 1}, (2, 2): {-1: 0, (1, 1): 1}, (1, 7): {-1: 0, (2, 4): 1, (5, 3): 1, (7, 3): 1}, (2, 4): {-1: 0, (1, 7): 1}, (5, 3): {-1: 0, (1, 1): 1, (1, 7): 1}, (2, 0): {-1: 0, (3, 1): 1}, (3, 1): {-1: 0, (2, 0): 1}, (3, 2): {-1: 0, (2, 1): 1}, (2, 7): {-1: 0, (3, 4): 1, (7, 3): 1}, (5, 4): {-1: 0, (6, 5): 1}, (6, 5): {-1: 0, (5, 4): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1) ,
('relation match with', (7, 3), 1) ,
('node_pair', (2, 7)) ,
('instance/attribute match', 0) ,
('relation match with', (3, 4), 1) ,
('relation match with', (7, 3), 1) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 1) ,
('relation match with', (4, 5), 1) ,
('relation match with', (7, 3), 1) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 1) ,
('node_pair', (5, 2)) ,
('instance/attribute match', 1) ,
('node_pair', (7, 3)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 13) ,
('Node mapping at start', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Triple match number at start:', 13) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 7, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([7, 1, 0, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 7, 0, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 5, 2, -1, 3],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 7, 4, 0, 2, -1, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 0, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 7, 4, 5, 0, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 5, 0, -1, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 4, 5, 2, 0, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 4, 5, 2, 0, 3],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 7, 4, 5, 2, -1, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 5, 2, -1, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 4, 7, 1, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 5, 2, -1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 7, 4, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 1, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 7, 4, 5, 1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 1, -1, 3],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 7, 4, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 7, 4, 5, 2, 1, 3],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 7, 4, 5, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, 2, -1, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 4, 7, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 5, 4, 7, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 2, -1, 3],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, 5, 7, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, -1, 3],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, -1, 4, 5, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 2, 7, 3],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 3, 4, 5, 2, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2, -1, 7],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 7, 5, 4, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 7, 2, 5, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 7, -1, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 5, 2, 4, 3],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -7) ,
([0, 1, 7, 3, 5, 2, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, -1, 4],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 7, 4, 2, 5, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 5, -1, 3],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, -1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, -1, 2, 5, 3],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6) ,
([0, 1, 7, 4, 3, 2, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 2, -1, 5],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 7, 4, 5, -1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, -1, 2, 3],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 7, 4, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, -1, 2],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -4) ,
([0, 1, 7, 4, 5, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 3, -1],) ,
('saved value', 9) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('node_pair', (0, 7)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 4), 1) ,
('node_pair', (1, 4)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 0) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 1) ,
('node_pair', (5, 3)) ,
('instance/attribute match', 0) ,
('match computing complete, result:', 2) ,
('Node mapping at start', [7, 4, 2, 1, 5, 3, -1, -1]) ,
('Triple match number at start:', 2) ,
('Remap node', 0, 'from ', 7, 'to', 0) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Remap node', 1, 'from ', 4, 'to', 0) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([7, 0, 2, 1, 5, 3, -1, -1],) ,
('saved value', 1) ,
('Remap node', 2, 'from ', 2, 'to', 0) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([7, 4, 0, 1, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 4) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 7) ,
('Swap gain:', 0) ,
([4, 7, 2, 1, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([4, 7, 2, 1, 5, 3, -1, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 2) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 7) ,
('Swap gain:', -1) ,
([2, 4, 7, 1, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([2, 4, 7, 1, 5, 3, -1, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 7) ,
('Swap gain:', -1) ,
([1, 4, 2, 7, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([1, 4, 2, 7, 5, 3, -1, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 5) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([5, 4, 2, 1, 7, 3, -1, -1],) ,
('Computing match for mapping',) ,
([5, 4, 2, 1, 7, 3, -1, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 3) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([3, 4, 2, 1, 5, 7, -1, -1],) ,
('Computing match for mapping',) ,
([3, 4, 2, 1, 5, 7, -1, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', -1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', -1) ,
([-1, 4, 2, 1, 5, 3, 7, -1],) ,
('Computing match for mapping',) ,
([-1, 4, 2, 1, 5, 3, 7, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 7, ',', 7, '-', -1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 7) ,
('Swap gain:', -1) ,
([-1, 4, 2, 1, 5, 3, -1, 7],) ,
('Computing match for mapping',) ,
([-1, 4, 2, 1, 5, 3, -1, 7],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 2) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', -1) ,
([7, 2, 4, 1, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 2, 4, 1, 5, 3, -1, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', 4) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 5) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -2) ,
([7, 5, 2, 1, 4, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 5, 2, 1, 4, 3, -1, -1],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 4, ',', 5, '-', 3) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([7, 3, 2, 1, 5, 4, -1, -1],) ,
('Computing match for mapping',) ,
([7, 3, 2, 1, 5, 4, -1, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 4, ',', 6, '-', -1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -1) ,
([7, -1, 2, 1, 5, 3, 4, -1],) ,
('Computing match for mapping',) ,
([7, -1, 2, 1, 5, 3, 4, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 4, ',', 7, '-', -1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', -1) ,
([7, -1, 2, 1, 5, 3, -1, 4],) ,
('Computing match for mapping',) ,
([7, -1, 2, 1, 5, 3, -1, 4],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', 1) ,
([7, 4, 1, 2, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 4, 1, 2, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([7, 4, 5, 1, 2, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 4, 5, 1, 2, 3, -1, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', 1) ,
([7, 4, 3, 1, 5, 2, -1, -1],) ,
('Computing match for mapping',) ,
([7, 4, 3, 1, 5, 2, -1, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', 0) ,
([7, 4, -1, 1, 5, 3, 2, -1],) ,
('Computing match for mapping',) ,
([7, 4, -1, 1, 5, 3, 2, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', -1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 2) ,
('Swap gain:', 0) ,
([7, 4, -1, 1, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([7, 4, -1, 1, 5, 3, -1, 2],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 5) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -1) ,
([7, 4, 2, 5, 1, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 4, 2, 5, 1, 3, -1, -1],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 3) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', 0) ,
([7, 4, 2, 3, 5, 1, -1, -1],) ,
('Computing match for mapping',) ,
([7, 4, 2, 3, 5, 1, -1, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', -1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', 0) ,
([7, 4, 2, -1, 5, 3, 1, -1],) ,
('Computing match for mapping',) ,
([7, 4, 2, -1, 5, 3, 1, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', -1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 1) ,
('Swap gain:', 0) ,
([7, 4, 2, -1, 5, 3, -1, 1],) ,
('Computing match for mapping',) ,
([7, 4, 2, -1, 5, 3, -1, 1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -1) ,
([7, 4, 2, 1, 3, 5, -1, -1],) ,
('Computing match for mapping',) ,
([7, 4, 2, 1, 3, 5, -1, -1],) ,
('saved value', 1) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -1) ,
([7, 4, 2, 1, -1, 3, 5, -1],) ,
('Computing match for mapping',) ,
([7, 4, 2, 1, -1, 3, 5, -1],) ,
('saved value', 1) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', -1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 5) ,
('Swap gain:', -1) ,
([7, 4, 2, 1, -1, 3, -1, 5],) ,
('Computing match for mapping',) ,
([7, 4, 2, 1, -1, 3, -1, 5],) ,
('saved value', 1) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', -1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', 0) ,
([7, 4, 2, 1, 5, -1, 3, -1],) ,
('Computing match for mapping',) ,
([7, 4, 2, 1, 5, -1, 3, -1],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', -1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', 1) ,
([7, 4, 2, 1, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([7, 4, 2, 1, 5, -1, -1, 3],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', -1) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', -1) ,
('Swap gain:', 0) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('saved value', 2) ,
('Use swap gain',) ,
('Original mapping', [7, 4, 2, 1, 5, 3, -1, -1]) ,
('Current mapping', [7, 1, 2, 4, 5, 3, -1, -1]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 6) ,
('Current mapping:', [7, 1, 2, 4, 5, 3, -1, -1]) ,
('Remap node', 0, 'from ', 7, 'to', 0) ,
('Move gain:', 3) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 9) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Remap node', 2, 'from ', 2, 'to', 0) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 3, -1, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 7) ,
('Swap gain:', -2) ,
([1, 7, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([1, 7, 2, 4, 5, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 2) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 7) ,
('Swap gain:', 0) ,
([2, 1, 7, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 4) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -2) ,
([4, 1, 2, 7, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 7, 5, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 5) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([5, 1, 2, 4, 7, 3, -1, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 7, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 3) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([3, 1, 2, 4, 5, 7, -1, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 7, -1, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 0) ,
([-1, 1, 2, 4, 5, 3, 7, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 3, 7, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 7, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 7) ,
('Swap gain:', 0) ,
([-1, 1, 2, 4, 5, 3, -1, 7],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 3, -1, 7],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([7, 2, 1, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 2, 1, 4, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([7, 5, 2, 4, 1, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 5, 2, 4, 1, 3, -1, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([7, 3, 2, 4, 5, 1, -1, -1],) ,
('Computing match for mapping',) ,
([7, 3, 2, 4, 5, 1, -1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([7, -1, 2, 4, 5, 3, 1, -1],) ,
('Computing match for mapping',) ,
([7, -1, 2, 4, 5, 3, 1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 1) ,
('Swap gain:', -3) ,
([7, -1, 2, 4, 5, 3, -1, 1],) ,
('Computing match for mapping',) ,
([7, -1, 2, 4, 5, 3, -1, 1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([7, 1, 4, 2, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 4, 2, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([7, 1, 5, 4, 2, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 5, 4, 2, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([7, 1, 3, 4, 5, 2, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 3, 4, 5, 2, -1, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([7, 1, -1, 4, 5, 3, 2, -1],) ,
('Computing match for mapping',) ,
([7, 1, -1, 4, 5, 3, 2, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 2) ,
('Swap gain:', -1) ,
([7, 1, -1, 4, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([7, 1, -1, 4, 5, 3, -1, 2],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([7, 1, 2, 5, 4, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 5, 4, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 3) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([7, 1, 2, 3, 5, 4, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 5, 4, -1, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([7, 1, 2, -1, 5, 3, 4, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, -1, 5, 3, 4, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', -2) ,
([7, 1, 2, -1, 5, 3, -1, 4],) ,
('Computing match for mapping',) ,
([7, 1, 2, -1, 5, 3, -1, 4],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([7, 1, 2, 4, 3, 5, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 3, 5, -1, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([7, 1, 2, 4, -1, 3, 5, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, -1, 3, 5, -1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 5) ,
('Swap gain:', -2) ,
([7, 1, 2, 4, -1, 3, -1, 5],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, -1, 3, -1, 5],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([7, 1, 2, 4, 5, -1, 3, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, -1, 3, -1],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', 2) ,
([7, 1, 2, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, -1, -1, 3],) ,
('saved value', 8) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', -1) ,
('Swap gain:', 0) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Use move gain',) ,
('Original mapping', [7, 1, 2, 4, 5, 3, -1, -1]) ,
('Current mapping', [0, 1, 2, 4, 5, 3, -1, -1]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 2, 4, 5, 3, -1, -1]) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, -1, -1],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 3, -1, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([4, 1, 2, 0, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 2, 4, 0, 3, -1, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 2, 4, 5, 0, -1, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 0, -1, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 5, 3, 0, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 3, 0, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 5, 3, -1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 3, -1, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 1, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 3, -1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 1, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 2, 4, 1, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 2, 4, 5, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 1, -1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 4, 5, 3, 1, -1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 5, 3, 1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 4, 5, 3, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 5, 3, -1, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, 2, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 2, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 3, -1, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 3, 4, 5, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2, -1, -1],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 4, 5, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 3, 2, -1],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 4, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 3, -1, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 5, 4, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, -1, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 5, 4, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, -1, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, 5, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 5, 3, 4, -1],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, 5, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 5, 3, -1, 4],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 3, 5, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, -1, -1],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 3, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, 5, -1],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 3, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, -1, 5],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([0, 1, 2, 4, 5, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, 3, -1],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', 2) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('saved value', 11) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 9) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 5, 3, -1, -1]) ,
('Current mapping', [0, 1, 2, 4, 5, -1, -1, 3]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 11) ,
('Current mapping:', [0, 1, 2, 4, 5, -1, -1, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, -1, -1, 3],) ,
('saved value', 8) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, -1, -1, 3],) ,
('saved value', 8) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([4, 1, 2, 0, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 2, 4, 0, -1, -1, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, -1, -1, 3],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 5, 0, -1, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 0, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 5, -1, 0, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, -1, 0, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, 4, 5, -1, -1, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, -1, -1, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, -1, -1, 3],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 4, 2, 1, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, -1, -1, 3],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 2, 4, 1, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 4, 5, 1, -1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 5, 1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 4, 5, -1, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 5, -1, 1, 3],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 2, 4, 5, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, -1, -1, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 2, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 2, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, -1, -1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0) ,
([0, 1, -1, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 2, -1, 3],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 4, 5, -1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, -1, 2, 3],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 3, 4, 5, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, -1, -1, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 5, 4, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 5, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 5, 4, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 5, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 5, -1, 4, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 2, 3, 5, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, -1, -1, 4],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 5, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 5, -1, 3],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, -1, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, -1, 5, 3],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 2, 4, 3, -1, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1, -1, 5],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('saved value', 11) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', -1, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, 3, -1],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 4, 5, -1, -1, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, -1, -1, 3]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 12) ,
('Current mapping:', [0, 1, 7, 4, 5, -1, -1, 3]) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, -1, -1, 3],) ,
('saved value', 9) ,
('Remap node', 2, 'from ', 7, 'to', 2) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('saved value', 11) ,
('Remap node', 3, 'from ', 4, 'to', 2) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, -1, -1, 3],) ,
('saved value', 8) ,
('Remap node', 5, 'from ', -1, 'to', 2) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 7, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([7, 1, 0, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 7, 0, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 5, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 7, 4, 0, -1, -1, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 0, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 4, 5, 0, -1, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 4, 5, 0, -1, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 4, 5, -1, 0, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 4, 5, -1, 0, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 7, 4, 5, -1, -1, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 5, -1, -1, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 7, 1, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, -1, -1, 3],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 4, 7, 1, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 5, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 7, 4, 1, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 1, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 7, 4, 5, 1, -1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 7, 4, 5, 1, -1, 3],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 7, 4, 5, -1, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 7, 4, 5, -1, 1, 3],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 7, 4, 5, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, -1, -1, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 4, 7, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 5, 4, 7, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, -1, -1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, -1, 4, 5, 7, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 7, -1, 3],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, -1, 4, 5, -1, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, -1, 7, 3],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 3, 4, 5, -1, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, -1, -1, 7],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 7, 5, 4, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 7, -1, 5, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 5, 4, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 7, -1, 5, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 5, -1, 4, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -7) ,
([0, 1, 7, 3, 5, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, -1, -1, 4],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, -1, 5, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, -1, 5, -1, 3],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, -1, -1, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, -1, -1, 5, 3],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6) ,
([0, 1, 7, 4, 3, -1, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, -1, -1, 5],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', -1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 7, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, -1, -1],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -4) ,
([0, 1, 7, 4, 5, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, -1, 3, -1],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [0, 1, 7, 4, 5, -1, -1, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 13) ,
('Current mapping:', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 7, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([7, 1, 0, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 7, 0, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 5, 2, -1, 3],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 7, 4, 0, 2, -1, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 0, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 7, 4, 5, 0, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 5, 0, -1, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 4, 5, 2, 0, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 4, 5, 2, 0, 3],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 7, 4, 5, 2, -1, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 5, 2, -1, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 4, 7, 1, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 5, 2, -1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 7, 4, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 1, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 7, 4, 5, 1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 1, -1, 3],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 7, 4, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 7, 4, 5, 2, 1, 3],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 7, 4, 5, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, 2, -1, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 4, 7, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 5, 4, 7, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 2, -1, 3],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, 5, 7, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, -1, 3],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, -1, 4, 5, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 2, 7, 3],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 3, 4, 5, 2, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2, -1, 7],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 7, 5, 4, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 7, 2, 5, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 7, -1, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 5, 2, 4, 3],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -7) ,
([0, 1, 7, 3, 5, 2, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, -1, 4],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 7, 4, 2, 5, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 5, -1, 3],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, -1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, -1, 2, 5, 3],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6) ,
([0, 1, 7, 4, 3, 2, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 2, -1, 5],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 7, 4, 5, -1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, -1, 2, 3],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 7, 4, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, -1, 2],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -4) ,
([0, 1, 7, 4, 5, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 3, -1],) ,
('saved value', 9) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('node_pair', (0, 7)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 0)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 4)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 0) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 1) ,
('node_pair', (5, 2)) ,
('instance/attribute match', 1) ,
('node_pair', (7, 3)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 3) ,
('Node mapping at start', [7, 0, 4, 1, 5, 2, -1, 3]) ,
('Triple match number at start:', 3) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 0) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 7) ,
('Swap gain:', 4) ,
([0, 7, 4, 1, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 4, 1, 5, 2, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 4) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 7) ,
('Swap gain:', 1) ,
([4, 0, 7, 1, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([4, 0, 7, 1, 5, 2, -1, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 1) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 7) ,
('Swap gain:', 0) ,
([1, 0, 4, 7, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([1, 0, 4, 7, 5, 2, -1, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 5) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -1) ,
([5, 0, 4, 1, 7, 2, -1, 3],) ,
('Computing match for mapping',) ,
([5, 0, 4, 1, 7, 2, -1, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 2) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([2, 0, 4, 1, 5, 7, -1, 3],) ,
('Computing match for mapping',) ,
([2, 0, 4, 1, 5, 7, -1, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', -1) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 0) ,
([-1, 0, 4, 1, 5, 2, 7, 3],) ,
('Computing match for mapping',) ,
([-1, 0, 4, 1, 5, 2, 7, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 7, ',', 7, '-', 3) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -1) ,
([3, 0, 4, 1, 5, 2, -1, 7],) ,
('Computing match for mapping',) ,
([3, 0, 4, 1, 5, 2, -1, 7],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 4) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', 2) ,
([7, 4, 0, 1, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 4, 0, 1, 5, 2, -1, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 1) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', 2) ,
([7, 1, 4, 0, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 1, 4, 0, 5, 2, -1, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', 5) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([7, 5, 4, 1, 0, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 5, 4, 1, 0, 2, -1, 3],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 0, ',', 5, '-', 2) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -1) ,
([7, 2, 4, 1, 5, 0, -1, 3],) ,
('Computing match for mapping',) ,
([7, 2, 4, 1, 5, 0, -1, 3],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 0, ',', 6, '-', -1) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', 0) ,
([7, -1, 4, 1, 5, 2, 0, 3],) ,
('Computing match for mapping',) ,
([7, -1, 4, 1, 5, 2, 0, 3],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 0, ',', 7, '-', 3) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -1) ,
([7, 3, 4, 1, 5, 2, -1, 0],) ,
('Computing match for mapping',) ,
([7, 3, 4, 1, 5, 2, -1, 0],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 1) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', 5) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 5) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -1) ,
([7, 0, 5, 1, 4, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 5, 1, 4, 2, -1, 3],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 2) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([7, 0, 2, 1, 5, 4, -1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 2, 1, 5, 4, -1, 3],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', -1) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', 0) ,
([7, 0, -1, 1, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([7, 0, -1, 1, 5, 2, 4, 3],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 3) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -1) ,
([7, 0, 3, 1, 5, 2, -1, 4],) ,
('Computing match for mapping',) ,
([7, 0, 3, 1, 5, 2, -1, 4],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 5) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -1) ,
([7, 0, 4, 5, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 4, 5, 1, 2, -1, 3],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 2) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([7, 0, 4, 2, 5, 1, -1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 4, 2, 5, 1, -1, 3],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', -1) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', 0) ,
([7, 0, 4, -1, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 4, -1, 5, 2, 1, 3],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 3) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -1) ,
([7, 0, 4, 3, 5, 2, -1, 1],) ,
('Computing match for mapping',) ,
([7, 0, 4, 3, 5, 2, -1, 1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 2) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', -2) ,
([7, 0, 4, 1, 2, 5, -1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 4, 1, 2, 5, -1, 3],) ,
('saved value', 1) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -1) ,
([7, 0, 4, 1, -1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([7, 0, 4, 1, -1, 2, 5, 3],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -2) ,
([7, 0, 4, 1, 3, 2, -1, 5],) ,
('Computing match for mapping',) ,
([7, 0, 4, 1, 3, 2, -1, 5],) ,
('saved value', 1) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', -1) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([7, 0, 4, 1, 5, -1, 2, 3],) ,
('Computing match for mapping',) ,
([7, 0, 4, 1, 5, -1, 2, 3],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 3) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([7, 0, 4, 1, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([7, 0, 4, 1, 5, 3, -1, 2],) ,
('saved value', 1) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 3) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -1) ,
([7, 0, 4, 1, 5, 2, 3, -1],) ,
('Computing match for mapping',) ,
([7, 0, 4, 1, 5, 2, 3, -1],) ,
('saved value', 2) ,
('Use swap gain',) ,
('Original mapping', [7, 0, 4, 1, 5, 2, -1, 3]) ,
('Current mapping', [7, 0, 1, 4, 5, 2, -1, 3]) ,
('Gain after the hill-climbing', 5) ,
('Update triple match number to:', 8) ,
('Current mapping:', [7, 0, 1, 4, 5, 2, -1, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 0) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 7) ,
('Swap gain:', 2) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 1) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 7) ,
('Swap gain:', 0) ,
([1, 0, 7, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 4) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -3) ,
([4, 0, 1, 7, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([4, 0, 1, 7, 5, 2, -1, 3],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 5) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([5, 0, 1, 4, 7, 2, -1, 3],) ,
('Computing match for mapping',) ,
([5, 0, 1, 4, 7, 2, -1, 3],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 2) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([2, 0, 1, 4, 5, 7, -1, 3],) ,
('Computing match for mapping',) ,
([2, 0, 1, 4, 5, 7, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', -1) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 0) ,
([-1, 0, 1, 4, 5, 2, 7, 3],) ,
('Computing match for mapping',) ,
([-1, 0, 1, 4, 5, 2, 7, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 7, ',', 7, '-', 3) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -3) ,
([3, 0, 1, 4, 5, 2, -1, 7],) ,
('Computing match for mapping',) ,
([3, 0, 1, 4, 5, 2, -1, 7],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', 0) ,
([7, 1, 0, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 4) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -3) ,
([7, 4, 1, 0, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 4, 1, 0, 5, 2, -1, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', 5) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -3) ,
([7, 5, 1, 4, 0, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 5, 1, 4, 0, 2, -1, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 0, ',', 5, '-', 2) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -2) ,
([7, 2, 1, 4, 5, 0, -1, 3],) ,
('Computing match for mapping',) ,
([7, 2, 1, 4, 5, 0, -1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 0, ',', 6, '-', -1) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([7, -1, 1, 4, 5, 2, 0, 3],) ,
('Computing match for mapping',) ,
([7, -1, 1, 4, 5, 2, 0, 3],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 0, ',', 7, '-', 3) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -4) ,
([7, 3, 1, 4, 5, 2, -1, 0],) ,
('Computing match for mapping',) ,
([7, 3, 1, 4, 5, 2, -1, 0],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 4) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 4, 1, 5, 2, -1, 3],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 5) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([7, 0, 5, 4, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 5, 4, 1, 2, -1, 3],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 2) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([7, 0, 2, 4, 5, 1, -1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 2, 4, 5, 1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 1, ',', 6, '-', -1) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([7, 0, -1, 4, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([7, 0, -1, 4, 5, 2, 1, 3],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 1, ',', 7, '-', 3) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([7, 0, 3, 4, 5, 2, -1, 1],) ,
('Computing match for mapping',) ,
([7, 0, 3, 4, 5, 2, -1, 1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([7, 0, 1, 5, 4, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 1, 5, 4, 2, -1, 3],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([7, 0, 1, 2, 5, 4, -1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 1, 2, 5, 4, -1, 3],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([7, 0, 1, -1, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([7, 0, 1, -1, 5, 2, 4, 3],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([7, 0, 1, 3, 5, 2, -1, 4],) ,
('Computing match for mapping',) ,
([7, 0, 1, 3, 5, 2, -1, 4],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 2) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([7, 0, 1, 4, 2, 5, -1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 1, 4, 2, 5, -1, 3],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([7, 0, 1, 4, -1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([7, 0, 1, 4, -1, 2, 5, 3],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([7, 0, 1, 4, 3, 2, -1, 5],) ,
('Computing match for mapping',) ,
([7, 0, 1, 4, 3, 2, -1, 5],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', -1) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([7, 0, 1, 4, 5, -1, 2, 3],) ,
('Computing match for mapping',) ,
([7, 0, 1, 4, 5, -1, 2, 3],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 3) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4) ,
([7, 0, 1, 4, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([7, 0, 1, 4, 5, 3, -1, 2],) ,
('saved value', 4) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 3) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -3) ,
([7, 0, 1, 4, 5, 2, 3, -1],) ,
('Computing match for mapping',) ,
([7, 0, 1, 4, 5, 2, 3, -1],) ,
('saved value', 5) ,
('Use swap gain',) ,
('Original mapping', [7, 0, 1, 4, 5, 2, -1, 3]) ,
('Current mapping', [0, 7, 1, 4, 5, 2, -1, 3]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 10) ,
('Current mapping:', [0, 7, 1, 4, 5, 2, -1, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 7) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 1, 4, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([1, 7, 0, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([1, 7, 0, 4, 5, 2, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([4, 7, 1, 0, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([4, 7, 1, 0, 5, 2, -1, 3],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([5, 7, 1, 4, 0, 2, -1, 3],) ,
('Computing match for mapping',) ,
([5, 7, 1, 4, 0, 2, -1, 3],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([2, 7, 1, 4, 5, 0, -1, 3],) ,
('Computing match for mapping',) ,
([2, 7, 1, 4, 5, 0, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -2) ,
([-1, 7, 1, 4, 5, 2, 0, 3],) ,
('Computing match for mapping',) ,
([-1, 7, 1, 4, 5, 2, 0, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -6) ,
([3, 7, 1, 4, 5, 2, -1, 0],) ,
('Computing match for mapping',) ,
([3, 7, 1, 4, 5, 2, -1, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 1) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 7) ,
('Swap gain:', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('saved value', 13) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 4) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -4) ,
([0, 4, 1, 7, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 1, 7, 5, 2, -1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 5) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([0, 5, 1, 4, 7, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 7, 2, -1, 3],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 2) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 2, 1, 4, 5, 7, -1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 7, -1, 3],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', -1) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', -1) ,
([0, -1, 1, 4, 5, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, -1, 1, 4, 5, 2, 7, 3],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 3) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -4) ,
([0, 3, 1, 4, 5, 2, -1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 5, 2, -1, 7],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 4) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 7, 4, 1, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 4, 1, 5, 2, -1, 3],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 5) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 7, 5, 4, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 5, 4, 1, 2, -1, 3],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 2) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, 7, 2, 4, 5, 1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 1, -1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 1, ',', 6, '-', -1) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -1) ,
([0, 7, -1, 4, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, -1, 4, 5, 2, 1, 3],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 1, ',', 7, '-', 3) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 3, 4, 5, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 7, 3, 4, 5, 2, -1, 1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([0, 7, 1, 5, 4, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 5, 4, 2, -1, 3],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([0, 7, 1, 2, 5, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 5, 4, -1, 3],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 7, 1, -1, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, -1, 5, 2, 4, 3],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -6) ,
([0, 7, 1, 3, 5, 2, -1, 4],) ,
('Computing match for mapping',) ,
([0, 7, 1, 3, 5, 2, -1, 4],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 2) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 7, 1, 4, 2, 5, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 2, 5, -1, 3],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 7, 1, 4, -1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, -1, 2, 5, 3],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6) ,
([0, 7, 1, 4, 3, 2, -1, 5],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 3, 2, -1, 5],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', -1) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([0, 7, 1, 4, 5, -1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, -1, 2, 3],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 3) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4) ,
([0, 7, 1, 4, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 3, -1, 2],) ,
('saved value', 6) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 3) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -4) ,
([0, 7, 1, 4, 5, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 2, 3, -1],) ,
('saved value', 6) ,
('Use swap gain',) ,
('Original mapping', [0, 7, 1, 4, 5, 2, -1, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 13) ,
('Current mapping:', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 7, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([7, 1, 0, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 7, 0, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 5, 2, -1, 3],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 7, 4, 0, 2, -1, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 0, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 7, 4, 5, 0, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 5, 0, -1, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 4, 5, 2, 0, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 4, 5, 2, 0, 3],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 7, 4, 5, 2, -1, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 5, 2, -1, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 4, 7, 1, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 5, 2, -1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 7, 4, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 1, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 7, 4, 5, 1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 1, -1, 3],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 7, 4, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 7, 4, 5, 2, 1, 3],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 7, 4, 5, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, 2, -1, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 4, 7, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 5, 4, 7, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 2, -1, 3],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, 5, 7, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, -1, 3],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, -1, 4, 5, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 2, 7, 3],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 3, 4, 5, 2, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2, -1, 7],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 7, 5, 4, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 7, 2, 5, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 7, -1, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 5, 2, 4, 3],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -7) ,
([0, 1, 7, 3, 5, 2, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, -1, 4],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 7, 4, 2, 5, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 5, -1, 3],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, -1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, -1, 2, 5, 3],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6) ,
([0, 1, 7, 4, 3, 2, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 2, -1, 5],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 7, 4, 5, -1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, -1, 2, 3],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 7, 4, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, -1, 2],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -4) ,
([0, 1, 7, 4, 5, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 3, -1],) ,
('saved value', 9) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Node mapping at start', [7, 1, 2, 4, 5, 3, -1, -1]) ,
('Triple match number at start:', 6) ,
('Remap node', 0, 'from ', 7, 'to', 0) ,
('Move gain:', 3) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 9) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Remap node', 2, 'from ', 2, 'to', 0) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 3, -1, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 7) ,
('Swap gain:', -2) ,
([1, 7, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([1, 7, 2, 4, 5, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 2) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 7) ,
('Swap gain:', 0) ,
([2, 1, 7, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 4) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -2) ,
([4, 1, 2, 7, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 7, 5, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 5) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([5, 1, 2, 4, 7, 3, -1, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 7, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 3) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([3, 1, 2, 4, 5, 7, -1, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 7, -1, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 0) ,
([-1, 1, 2, 4, 5, 3, 7, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 3, 7, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 7, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 7) ,
('Swap gain:', 0) ,
([-1, 1, 2, 4, 5, 3, -1, 7],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 3, -1, 7],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([7, 2, 1, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 2, 1, 4, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([7, 5, 2, 4, 1, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 5, 2, 4, 1, 3, -1, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([7, 3, 2, 4, 5, 1, -1, -1],) ,
('Computing match for mapping',) ,
([7, 3, 2, 4, 5, 1, -1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([7, -1, 2, 4, 5, 3, 1, -1],) ,
('Computing match for mapping',) ,
([7, -1, 2, 4, 5, 3, 1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 1) ,
('Swap gain:', -3) ,
([7, -1, 2, 4, 5, 3, -1, 1],) ,
('Computing match for mapping',) ,
([7, -1, 2, 4, 5, 3, -1, 1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([7, 1, 4, 2, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 4, 2, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([7, 1, 5, 4, 2, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 5, 4, 2, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([7, 1, 3, 4, 5, 2, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 3, 4, 5, 2, -1, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([7, 1, -1, 4, 5, 3, 2, -1],) ,
('Computing match for mapping',) ,
([7, 1, -1, 4, 5, 3, 2, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 2) ,
('Swap gain:', -1) ,
([7, 1, -1, 4, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([7, 1, -1, 4, 5, 3, -1, 2],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([7, 1, 2, 5, 4, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 5, 4, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 3) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([7, 1, 2, 3, 5, 4, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 5, 4, -1, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([7, 1, 2, -1, 5, 3, 4, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, -1, 5, 3, 4, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', -2) ,
([7, 1, 2, -1, 5, 3, -1, 4],) ,
('Computing match for mapping',) ,
([7, 1, 2, -1, 5, 3, -1, 4],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([7, 1, 2, 4, 3, 5, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 3, 5, -1, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([7, 1, 2, 4, -1, 3, 5, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, -1, 3, 5, -1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 5) ,
('Swap gain:', -2) ,
([7, 1, 2, 4, -1, 3, -1, 5],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, -1, 3, -1, 5],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([7, 1, 2, 4, 5, -1, 3, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, -1, 3, -1],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', 2) ,
([7, 1, 2, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, -1, -1, 3],) ,
('saved value', 8) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', -1) ,
('Swap gain:', 0) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Use move gain',) ,
('Original mapping', [7, 1, 2, 4, 5, 3, -1, -1]) ,
('Current mapping', [0, 1, 2, 4, 5, 3, -1, -1]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 2, 4, 5, 3, -1, -1]) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, -1, -1],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 3, -1, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([4, 1, 2, 0, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 2, 4, 0, 3, -1, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 2, 4, 5, 0, -1, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 0, -1, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 5, 3, 0, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 3, 0, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 5, 3, -1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 3, -1, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 1, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 3, -1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 1, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 2, 4, 1, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 2, 4, 5, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 1, -1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 4, 5, 3, 1, -1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 5, 3, 1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 4, 5, 3, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 5, 3, -1, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, 2, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 2, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 3, -1, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 3, 4, 5, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2, -1, -1],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 4, 5, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 3, 2, -1],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 4, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 3, -1, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 5, 4, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, -1, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 5, 4, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, -1, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, 5, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 5, 3, 4, -1],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, 5, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 5, 3, -1, 4],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 3, 5, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, -1, -1],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 3, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, 5, -1],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 3, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, -1, 5],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([0, 1, 2, 4, 5, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, 3, -1],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', 2) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('saved value', 11) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 9) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 5, 3, -1, -1]) ,
('Current mapping', [0, 1, 2, 4, 5, -1, -1, 3]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 11) ,
('Current mapping:', [0, 1, 2, 4, 5, -1, -1, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, -1, -1, 3],) ,
('saved value', 8) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, -1, -1, 3],) ,
('saved value', 8) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([4, 1, 2, 0, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 2, 4, 0, -1, -1, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, -1, -1, 3],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 5, 0, -1, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 0, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 5, -1, 0, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, -1, 0, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, 4, 5, -1, -1, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, -1, -1, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, -1, -1, 3],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 4, 2, 1, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, -1, -1, 3],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 2, 4, 1, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 4, 5, 1, -1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 5, 1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 4, 5, -1, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 5, -1, 1, 3],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 2, 4, 5, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, -1, -1, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 2, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 2, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, -1, -1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0) ,
([0, 1, -1, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 2, -1, 3],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 4, 5, -1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, -1, 2, 3],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 3, 4, 5, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, -1, -1, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 5, 4, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 5, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 5, 4, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 5, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 5, -1, 4, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 2, 3, 5, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, -1, -1, 4],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 5, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 5, -1, 3],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, -1, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, -1, 5, 3],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 2, 4, 3, -1, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1, -1, 5],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('saved value', 11) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', -1, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, 3, -1],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 4, 5, -1, -1, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, -1, -1, 3]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 12) ,
('Current mapping:', [0, 1, 7, 4, 5, -1, -1, 3]) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, -1, -1, 3],) ,
('saved value', 9) ,
('Remap node', 2, 'from ', 7, 'to', 2) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('saved value', 11) ,
('Remap node', 3, 'from ', 4, 'to', 2) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, -1, -1, 3],) ,
('saved value', 8) ,
('Remap node', 5, 'from ', -1, 'to', 2) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 7, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([7, 1, 0, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 7, 0, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 5, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 7, 4, 0, -1, -1, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 0, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 4, 5, 0, -1, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 4, 5, 0, -1, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 4, 5, -1, 0, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 4, 5, -1, 0, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 7, 4, 5, -1, -1, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 5, -1, -1, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 7, 1, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, -1, -1, 3],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 4, 7, 1, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 5, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 7, 4, 1, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 1, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 7, 4, 5, 1, -1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 7, 4, 5, 1, -1, 3],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 7, 4, 5, -1, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 7, 4, 5, -1, 1, 3],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 7, 4, 5, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, -1, -1, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 4, 7, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 5, 4, 7, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, -1, -1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, -1, 4, 5, 7, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 7, -1, 3],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, -1, 4, 5, -1, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, -1, 7, 3],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 3, 4, 5, -1, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, -1, -1, 7],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 7, 5, 4, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 7, -1, 5, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 5, 4, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 7, -1, 5, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 5, -1, 4, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -7) ,
([0, 1, 7, 3, 5, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, -1, -1, 4],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, -1, 5, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, -1, 5, -1, 3],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, -1, -1, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, -1, -1, 5, 3],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6) ,
([0, 1, 7, 4, 3, -1, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, -1, -1, 5],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', -1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 7, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, -1, -1],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -4) ,
([0, 1, 7, 4, 5, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, -1, 3, -1],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [0, 1, 7, 4, 5, -1, -1, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 13) ,
('Current mapping:', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 7, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([7, 1, 0, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 7, 0, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 5, 2, -1, 3],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 7, 4, 0, 2, -1, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 0, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 7, 4, 5, 0, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 5, 0, -1, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 4, 5, 2, 0, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 4, 5, 2, 0, 3],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 7, 4, 5, 2, -1, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 5, 2, -1, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 4, 7, 1, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 5, 2, -1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 7, 4, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 1, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 7, 4, 5, 1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 1, -1, 3],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 7, 4, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 7, 4, 5, 2, 1, 3],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 7, 4, 5, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, 2, -1, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 4, 7, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 5, 4, 7, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 2, -1, 3],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, 5, 7, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, -1, 3],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, -1, 4, 5, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 2, 7, 3],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 3, 4, 5, 2, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2, -1, 7],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 7, 5, 4, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 7, 2, 5, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 7, -1, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 5, 2, 4, 3],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -7) ,
([0, 1, 7, 3, 5, 2, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, -1, 4],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 7, 4, 2, 5, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 5, -1, 3],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, -1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, -1, 2, 5, 3],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6) ,
([0, 1, 7, 4, 3, 2, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 2, -1, 5],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 7, 4, 5, -1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, -1, 2, 3],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 7, 4, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, -1, 2],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -4) ,
([0, 1, 7, 4, 5, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 3, -1],) ,
('saved value', 9) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Node mapping at start', [7, 0, 2, 4, 5, 3, -1, -1]) ,
('Triple match number at start:', 3) ,
('Remap node', 0, 'from ', 7, 'to', 1) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Remap node', 1, 'from ', 0, 'to', 1) ,
('Move gain:', 3) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Remap node', 2, 'from ', 2, 'to', 1) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([7, 0, 1, 4, 5, 3, -1, -1],) ,
('saved value', 4) ,
('Remap node', 3, 'from ', 4, 'to', 1) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([7, 0, 2, 1, 5, 3, -1, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 0) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 7) ,
('Swap gain:', 3) ,
([0, 7, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 2) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 7) ,
('Swap gain:', 1) ,
([2, 0, 7, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([2, 0, 7, 4, 5, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 4) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -2) ,
([4, 0, 2, 7, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([4, 0, 2, 7, 5, 3, -1, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 5) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([5, 0, 2, 4, 7, 3, -1, -1],) ,
('Computing match for mapping',) ,
([5, 0, 2, 4, 7, 3, -1, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 3) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', 0) ,
([3, 0, 2, 4, 5, 7, -1, -1],) ,
('Computing match for mapping',) ,
([3, 0, 2, 4, 5, 7, -1, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', -1) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 0) ,
([-1, 0, 2, 4, 5, 3, 7, -1],) ,
('Computing match for mapping',) ,
([-1, 0, 2, 4, 5, 3, 7, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 7, ',', 7, '-', -1) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 7) ,
('Swap gain:', 0) ,
([-1, 0, 2, 4, 5, 3, -1, 7],) ,
('Computing match for mapping',) ,
([-1, 0, 2, 4, 5, 3, -1, 7],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 2) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', 0) ,
([7, 2, 0, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 2, 0, 4, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 4) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([7, 4, 2, 0, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 4, 2, 0, 5, 3, -1, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', 5) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -2) ,
([7, 5, 2, 4, 0, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 5, 2, 4, 0, 3, -1, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 0, ',', 5, '-', 3) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', 0) ,
([7, 3, 2, 4, 5, 0, -1, -1],) ,
('Computing match for mapping',) ,
([7, 3, 2, 4, 5, 0, -1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 0, ',', 6, '-', -1) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', 0) ,
([7, -1, 2, 4, 5, 3, 0, -1],) ,
('Computing match for mapping',) ,
([7, -1, 2, 4, 5, 3, 0, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 0, ',', 7, '-', -1) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 0) ,
('Swap gain:', 0) ,
([7, -1, 2, 4, 5, 3, -1, 0],) ,
('Computing match for mapping',) ,
([7, -1, 2, 4, 5, 3, -1, 0],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -2) ,
([7, 0, 4, 2, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 0, 4, 2, 5, 3, -1, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([7, 0, 5, 4, 2, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 0, 5, 4, 2, 3, -1, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', 1) ,
([7, 0, 3, 4, 5, 2, -1, -1],) ,
('Computing match for mapping',) ,
([7, 0, 3, 4, 5, 2, -1, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', 0) ,
([7, 0, -1, 4, 5, 3, 2, -1],) ,
('Computing match for mapping',) ,
([7, 0, -1, 4, 5, 3, 2, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', -1) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 2) ,
('Swap gain:', 0) ,
([7, 0, -1, 4, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([7, 0, -1, 4, 5, 3, -1, 2],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([7, 0, 2, 5, 4, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 0, 2, 5, 4, 3, -1, -1],) ,
('saved value', 0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 3) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -2) ,
([7, 0, 2, 3, 5, 4, -1, -1],) ,
('Computing match for mapping',) ,
([7, 0, 2, 3, 5, 4, -1, -1],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([7, 0, 2, -1, 5, 3, 4, -1],) ,
('Computing match for mapping',) ,
([7, 0, 2, -1, 5, 3, 4, -1],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', -1) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', -2) ,
([7, 0, 2, -1, 5, 3, -1, 4],) ,
('Computing match for mapping',) ,
([7, 0, 2, -1, 5, 3, -1, 4],) ,
('saved value', 1) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -2) ,
([7, 0, 2, 4, 3, 5, -1, -1],) ,
('Computing match for mapping',) ,
([7, 0, 2, 4, 3, 5, -1, -1],) ,
('saved value', 1) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([7, 0, 2, 4, -1, 3, 5, -1],) ,
('Computing match for mapping',) ,
([7, 0, 2, 4, -1, 3, 5, -1],) ,
('saved value', 1) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', -1) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 5) ,
('Swap gain:', -2) ,
([7, 0, 2, 4, -1, 3, -1, 5],) ,
('Computing match for mapping',) ,
([7, 0, 2, 4, -1, 3, -1, 5],) ,
('saved value', 1) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', -1) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', 0) ,
([7, 0, 2, 4, 5, -1, 3, -1],) ,
('Computing match for mapping',) ,
([7, 0, 2, 4, 5, -1, 3, -1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', -1) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', 2) ,
([7, 0, 2, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 2, 4, 5, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', -1) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', -1) ,
('Swap gain:', 0) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Use move gain',) ,
('Original mapping', [7, 0, 2, 4, 5, 3, -1, -1]) ,
('Current mapping', [7, 1, 2, 4, 5, 3, -1, -1]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 6) ,
('Current mapping:', [7, 1, 2, 4, 5, 3, -1, -1]) ,
('Remap node', 0, 'from ', 7, 'to', 0) ,
('Move gain:', 3) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 9) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([7, 0, 2, 4, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Remap node', 2, 'from ', 2, 'to', 0) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 3, -1, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 7) ,
('Swap gain:', -2) ,
([1, 7, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([1, 7, 2, 4, 5, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 2) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 7) ,
('Swap gain:', 0) ,
([2, 1, 7, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 4) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -2) ,
([4, 1, 2, 7, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 7, 5, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 5) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([5, 1, 2, 4, 7, 3, -1, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 7, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 3) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([3, 1, 2, 4, 5, 7, -1, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 7, -1, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 0) ,
([-1, 1, 2, 4, 5, 3, 7, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 3, 7, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 7, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 7) ,
('Swap gain:', 0) ,
([-1, 1, 2, 4, 5, 3, -1, 7],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 3, -1, 7],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([7, 2, 1, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 2, 1, 4, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 4, 2, 1, 5, 3, -1, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([7, 5, 2, 4, 1, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 5, 2, 4, 1, 3, -1, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([7, 3, 2, 4, 5, 1, -1, -1],) ,
('Computing match for mapping',) ,
([7, 3, 2, 4, 5, 1, -1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([7, -1, 2, 4, 5, 3, 1, -1],) ,
('Computing match for mapping',) ,
([7, -1, 2, 4, 5, 3, 1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 1) ,
('Swap gain:', -3) ,
([7, -1, 2, 4, 5, 3, -1, 1],) ,
('Computing match for mapping',) ,
([7, -1, 2, 4, 5, 3, -1, 1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([7, 1, 4, 2, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 4, 2, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([7, 1, 5, 4, 2, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 5, 4, 2, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([7, 1, 3, 4, 5, 2, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 3, 4, 5, 2, -1, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([7, 1, -1, 4, 5, 3, 2, -1],) ,
('Computing match for mapping',) ,
([7, 1, -1, 4, 5, 3, 2, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 2) ,
('Swap gain:', -1) ,
([7, 1, -1, 4, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([7, 1, -1, 4, 5, 3, -1, 2],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([7, 1, 2, 5, 4, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 5, 4, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 3) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([7, 1, 2, 3, 5, 4, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 5, 4, -1, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([7, 1, 2, -1, 5, 3, 4, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, -1, 5, 3, 4, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', -2) ,
([7, 1, 2, -1, 5, 3, -1, 4],) ,
('Computing match for mapping',) ,
([7, 1, 2, -1, 5, 3, -1, 4],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([7, 1, 2, 4, 3, 5, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 3, 5, -1, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([7, 1, 2, 4, -1, 3, 5, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, -1, 3, 5, -1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 5) ,
('Swap gain:', -2) ,
([7, 1, 2, 4, -1, 3, -1, 5],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, -1, 3, -1, 5],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([7, 1, 2, 4, 5, -1, 3, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, -1, 3, -1],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', 2) ,
([7, 1, 2, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, -1, -1, 3],) ,
('saved value', 8) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', -1) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', -1) ,
('Swap gain:', 0) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Use move gain',) ,
('Original mapping', [7, 1, 2, 4, 5, 3, -1, -1]) ,
('Current mapping', [0, 1, 2, 4, 5, 3, -1, -1]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 2, 4, 5, 3, -1, -1]) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, -1, -1],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 3, -1, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([4, 1, 2, 0, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 2, 4, 0, 3, -1, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 3, -1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 2, 4, 5, 0, -1, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 0, -1, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 5, 3, 0, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 3, 0, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 7, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 5, 3, -1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 3, -1, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 1, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 3, -1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 1, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 2, 4, 1, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 3, -1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 2, 4, 5, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 1, -1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 4, 5, 3, 1, -1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 5, 3, 1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 4, 5, 3, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 5, 3, -1, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, 2, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 3, -1, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 2, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 3, -1, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 3, 4, 5, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2, -1, -1],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 4, 5, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 3, 2, -1],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 7, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 4, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 3, -1, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 5, 4, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, -1, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 5, 4, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, -1, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, 5, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 5, 3, 4, -1],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 7, '-', 4) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, 5, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 5, 3, -1, 4],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 3, 5, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, -1, -1],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 3, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, 5, -1],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 7, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 3, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, -1, 5],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([0, 1, 2, 4, 5, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, 3, -1],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 7, '-', 3) ,
('Swap gain:', 2) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('saved value', 11) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', -1) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('After swapping:', 6, '-', -1, ',', 7, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 9) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 5, 3, -1, -1]) ,
('Current mapping', [0, 1, 2, 4, 5, -1, -1, 3]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 11) ,
('Current mapping:', [0, 1, 2, 4, 5, -1, -1, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, -1, -1, 3],) ,
('saved value', 8) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, -1, -1, 3],) ,
('saved value', 8) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 2, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([4, 1, 2, 0, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 2, 4, 0, -1, -1, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, -1, -1, 3],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 5, 0, -1, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 0, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 5, -1, 0, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, -1, 0, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, 4, 5, -1, -1, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, -1, -1, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, -1, -1, 3],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 4, 2, 1, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, -1, -1, 3],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 2, 4, 1, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 4, 5, 1, -1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 5, 1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 4, 5, -1, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 5, -1, 1, 3],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 2, 4, 5, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, -1, -1, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 2, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 2, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, -1, -1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0) ,
([0, 1, -1, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 2, -1, 3],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 4, 5, -1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, -1, 2, 3],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 3, 4, 5, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, -1, -1, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 5, 4, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 5, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 5, 4, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 5, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 5, -1, 4, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 2, 3, 5, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, -1, -1, 4],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 5, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 5, -1, 3],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, -1, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, -1, 5, 3],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 2, 4, 3, -1, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1, -1, 5],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('saved value', 11) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', -1, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, -1, -1],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, 3, -1],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 4, 5, -1, -1, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, -1, -1, 3]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 12) ,
('Current mapping:', [0, 1, 7, 4, 5, -1, -1, 3]) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, -1, -1, 3],) ,
('saved value', 9) ,
('Remap node', 2, 'from ', 7, 'to', 2) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, -1, 3],) ,
('saved value', 11) ,
('Remap node', 3, 'from ', 4, 'to', 2) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, -1, -1, 3],) ,
('saved value', 8) ,
('Remap node', 5, 'from ', -1, 'to', 2) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 7, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([7, 1, 0, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 7, 0, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 5, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 7, 4, 0, -1, -1, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 0, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 4, 5, 0, -1, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 4, 5, 0, -1, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 4, 5, -1, 0, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 4, 5, -1, 0, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 7, 4, 5, -1, -1, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 5, -1, -1, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 7, 1, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, -1, -1, 3],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 4, 7, 1, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 5, -1, -1, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 7, 4, 1, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 1, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 7, 4, 5, 1, -1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 7, 4, 5, 1, -1, 3],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 7, 4, 5, -1, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 7, 4, 5, -1, 1, 3],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 7, 4, 5, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, -1, -1, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 4, 7, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 5, 4, 7, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, -1, -1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, -1, 4, 5, 7, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 7, -1, 3],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, -1, 4, 5, -1, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, -1, 7, 3],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 3, 4, 5, -1, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, -1, -1, 7],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 7, 5, 4, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, -1, -1, 3],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 7, -1, 5, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 5, 4, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 7, -1, 5, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 5, -1, 4, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -7) ,
([0, 1, 7, 3, 5, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, -1, -1, 4],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, -1, 5, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, -1, 5, -1, 3],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, -1, -1, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, -1, -1, 5, 3],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6) ,
([0, 1, 7, 4, 3, -1, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, -1, -1, 5],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', -1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 7, 4, 5, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, -1, -1],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, -1, -1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -4) ,
([0, 1, 7, 4, 5, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, -1, 3, -1],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [0, 1, 7, 4, 5, -1, -1, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 13) ,
('Current mapping:', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 7, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([7, 1, 0, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 7, 0, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 5, 2, -1, 3],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 7, 4, 0, 2, -1, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 0, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 7, 4, 5, 0, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 5, 0, -1, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 4, 5, 2, 0, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 4, 5, 2, 0, 3],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 7, 4, 5, 2, -1, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 5, 2, -1, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 2, -1, 3],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 4, 7, 1, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 5, 2, -1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 7, 4, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 1, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 7, 4, 5, 1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 1, -1, 3],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 7, 4, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 7, 4, 5, 2, 1, 3],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 7, 4, 5, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, 2, -1, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 4, 7, 5, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 5, 4, 7, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 2, -1, 3],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, 5, 7, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, -1, 3],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, -1, 4, 5, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 2, 7, 3],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 3, 4, 5, 2, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2, -1, 7],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 7, 5, 4, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, 2, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 7, 2, 5, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, -1, 3],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 7, -1, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 5, 2, 4, 3],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -7) ,
([0, 1, 7, 3, 5, 2, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, -1, 4],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 7, 4, 2, 5, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 5, -1, 3],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, -1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, -1, 2, 5, 3],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6) ,
([0, 1, 7, 4, 3, 2, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 2, -1, 5],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', -1) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 7, 4, 5, -1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, -1, 2, 3],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 7, 4, 5, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, -1, 2],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, -1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', -1) ,
('Swap gain:', -4) ,
([0, 1, 7, 4, 5, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 3, -1],) ,
('saved value', 9) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 13) ,
('best node mapping', [0, 1, 7, 4, 5, 2, -1, 3]) ,
('Best node mapping alignment:', 'a0(possible-01)-b0(possible-01) a1(do-02)-b1(do-02) a2(improve-01)-b7(raise-01) a3(score)-b4(score) a4(credit)-b5(credit) a5(amr-unknown)-b2(amr-unknown) a6(more)-Null a7(i)-b3(i)') ,
('F-score:', 0.7222222222222222) ,
0.722
('AMR pair', 5) ,
('============================================',) ,
('AMR 1 (one-line):', '(l0 / land-01:ARG1 (r0 / rover:mod (c0 / country):mod (m1 / moon):mod (n0 / name:op1 "China" )):location (m0 / moon))') ,
('AMR 2 (one-line):', '(l0 / land-01:ARG1 (r0 / rover):ARG0 (c0 / country:name (n0 / name:op1 "China" )):location (m0 / moon))') ,
('Instance triples of AMR 1:', 6) ,
([('instance', 'a0', 'land-01'), ('instance', 'a1', 'rover'), ('instance', 'a2', 'country'), ('instance', 'a3', 'moon'), ('instance', 'a4', 'name'), ('instance', 'a5', 'moon')],) ,
('Attribute triples of AMR 1:', 2) ,
([('TOP', 'a0', 'land-01'), ('op1', 'a4', 'China_')],) ,
('Relation triples of AMR 1:', 5) ,
([('ARG1', 'a0', 'a1'), ('location', 'a0', 'a5'), ('mod', 'a1', 'a2'), ('mod', 'a1', 'a3'), ('mod', 'a1', 'a4')],) ,
('Instance triples of AMR 2:', 5) ,
([('instance', 'b0', 'land-01'), ('instance', 'b1', 'rover'), ('instance', 'b2', 'country'), ('instance', 'b3', 'name'), ('instance', 'b4', 'moon')],) ,
('Attribute triples of AMR 2:', 2) ,
([('TOP', 'b0', 'land-01'), ('op1', 'b3', 'China_')],) ,
('Relation triples of AMR 2:', 4) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b2'), ('location', 'b0', 'b4'), ('name', 'b2', 'b3')],) ,
('Candidate mappings:',) ,
([{0}, {1}, {2}, {4}, {3}, {4}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2, (1, 1): 1, (5, 4): 1}, (1, 1): {-1: 1, (0, 0): 1}, (2, 2): {-1: 1}, (3, 4): {-1: 1}, (4, 3): {-1: 2}, (5, 4): {-1: 1, (0, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 3)) ,
('instance/attribute match', 2) ,
('match computing complete, result:', 8) ,
('Node mapping at start', [0, 1, 2, 4, 3, -1]) ,
('Triple match number at start:', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, 0, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 2, 4, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 3, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 3, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 4, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 2, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 2, 4, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 3, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 3, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 1) ,
([0, 1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, 4],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3],) ,
('saved value', 6) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 3, -1]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 2, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, 3, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 3, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, 3, 4],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, 0, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -5) ,
([4, 1, 2, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, 3, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, 3, 4],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 2, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1, 4],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, 3, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, 4],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, 2, 4],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 3, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 4],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3],) ,
('saved value', 5) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8) ,
('Node mapping at start', [0, 1, 2, 4, 3, -1]) ,
('Triple match number at start:', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, 0, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 2, 4, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 3, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 3, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 4, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 2, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 2, 4, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 3, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 3, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 1) ,
([0, 1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, 4],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3],) ,
('saved value', 6) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 3, -1]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 2, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, 3, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 3, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, 3, 4],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, 0, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -5) ,
([4, 1, 2, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, 3, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, 3, 4],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 2, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1, 4],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, 3, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, 4],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, 2, 4],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 3, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 4],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3],) ,
('saved value', 5) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8) ,
('Node mapping at start', [0, 1, 2, 4, 3, -1]) ,
('Triple match number at start:', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, 0, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 2, 4, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 3, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 3, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 4, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 2, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 2, 4, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 3, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 3, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 1) ,
([0, 1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, 4],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3],) ,
('saved value', 6) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 3, -1]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 2, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, 3, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 3, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, 3, 4],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, 0, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -5) ,
([4, 1, 2, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, 3, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, 3, 4],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 2, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1, 4],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, 3, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, 4],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, 2, 4],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 3, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 4],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3],) ,
('saved value', 5) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8) ,
('Node mapping at start', [0, 1, 2, 4, 3, -1]) ,
('Triple match number at start:', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, 0, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 2, 4, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 3, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 3, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 4, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 2, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 2, 4, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 3, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 3, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 1) ,
([0, 1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, 4],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3],) ,
('saved value', 6) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 3, -1]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 2, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, 3, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 3, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, 3, 4],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, 0, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -5) ,
([4, 1, 2, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, 3, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, 3, 4],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 2, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1, 4],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, 3, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, 4],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, 2, 4],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 3, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 4],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3],) ,
('saved value', 5) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8) ,
('Node mapping at start', [0, 1, 2, 4, 3, -1]) ,
('Triple match number at start:', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, 0, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 2, 4, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 4, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 3, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 3, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 4, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 2, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 2, 4, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 3, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 3, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 1) ,
([0, 1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, 4],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3],) ,
('saved value', 6) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 3, -1]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 2, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, 3, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 3, 4],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, 3, 4],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([3, 1, 2, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, 0, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -5) ,
([4, 1, 2, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, 3, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, 3, 4],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 2, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1, 4],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, 3, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, 4],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, 2, 4],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 3, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 4],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3],) ,
('saved value', 5) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 9) ,
('best node mapping', [0, 1, 2, -1, 3, 4]) ,
('Best node mapping alignment:', 'a0(land-01)-b0(land-01) a1(rover)-b1(rover) a2(country)-b2(country) a3(moon)-Null a4(name)-b3(name) a5(moon)-b4(moon)') ,
('F-score:', 0.7500000000000001) ,
0.750
('AMR pair', 6) ,
('============================================',) ,
('AMR 1 (one-line):', '(p0 / pump-01:manner (p1 / pressure:mod (w0 / water)):ARG0 (i0 / i):ARG2 (s0 / shower):manner (a0 / amr-unknown))') ,
('AMR 2 (one-line):', '(p0 / possible-01:ARG1 (b0 / boost-01:ARG1 (p1 / pressure:mod (w0 / water):location (s0 / shower:poss i0)):ARG0 (i0 / i):manner (a0 / amr-unknown)))') ,
('Instance triples of AMR 1:', 6) ,
([('instance', 'a0', 'pump-01'), ('instance', 'a1', 'pressure'), ('instance', 'a2', 'water'), ('instance', 'a3', 'i'), ('instance', 'a4', 'shower'), ('instance', 'a5', 'amr-unknown')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'pump-01')],) ,
('Relation triples of AMR 1:', 5) ,
([('manner', 'a0', 'a1'), ('ARG0', 'a0', 'a3'), ('ARG2', 'a0', 'a4'), ('manner', 'a0', 'a5'), ('mod', 'a1', 'a2')],) ,
('Instance triples of AMR 2:', 7) ,
([('instance', 'b0', 'possible-01'), ('instance', 'b1', 'boost-01'), ('instance', 'b2', 'pressure'), ('instance', 'b3', 'water'), ('instance', 'b4', 'shower'), ('instance', 'b5', 'i'), ('instance', 'b6', 'amr-unknown')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'possible-01')],) ,
('Relation triples of AMR 2:', 7) ,
([('ARG1', 'b0', 'b1'), ('ARG1', 'b1', 'b2'), ('ARG0', 'b1', 'b5'), ('manner', 'b1', 'b6'), ('mod', 'b2', 'b3'), ('location', 'b2', 'b4'), ('poss', 'b4', 'b5')],) ,
('Candidate mappings:',) ,
([{1}, {2, 6}, {3}, {5}, {4}, {6}],) ,
('Weight dictionary',) ,
({(1, 2): {-1: 1, (2, 3): 1}, (2, 3): {-1: 1, (1, 2): 1}, (3, 5): {-1: 1, (0, 1): 1}, (4, 4): {-1: 1}, (5, 6): {-1: 1, (0, 1): 1}, (0, 1): {-1: 0, (1, 6): 1, (3, 5): 1, (5, 6): 1}, (1, 6): {-1: 0, (0, 1): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, 6],) ,
('node_pair', (0, 1)) ,
('instance/attribute match', 0) ,
('relation match with', (3, 5), 1) ,
('relation match with', (5, 6), 1) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 1) ,
('relation match with', (2, 3), 1) ,
('node_pair', (2, 3)) ,
('instance/attribute match', 1) ,
('node_pair', (3, 5)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 1) ,
('node_pair', (5, 6)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 8) ,
('Node mapping at start', [1, 2, 3, 5, 4, 6]) ,
('Triple match number at start:', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -4) ,
([2, 1, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 5, 4, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([3, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 1, 5, 4, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([5, 2, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 2, 3, 1, 4, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([4, 2, 3, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([6, 2, 3, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 2, 3, 5, 4, 1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -3) ,
([1, 3, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([1, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 3, 2, 4, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([1, 4, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 4, 3, 5, 2, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([1, 6, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 6, 3, 5, 4, 2],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -4) ,
([1, 2, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 5, 3, 4, 6],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([1, 2, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 3, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([1, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, 6, 5, 4, 3],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3) ,
([1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 2, 3, 4, 5, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4) ,
([1, 2, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 2, 3, 6, 4, 5],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([1, 2, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 6, 4],) ,
('saved value', 5) ,
('no move/swap gain found',) ,
('Original mapping', [1, 2, 3, 5, 4, 6]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, 6],) ,
('saved value', 8) ,
('Node mapping at start', [1, 2, 3, 5, 4, 6]) ,
('Triple match number at start:', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -4) ,
([2, 1, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 5, 4, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([3, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 1, 5, 4, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([5, 2, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 2, 3, 1, 4, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([4, 2, 3, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([6, 2, 3, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 2, 3, 5, 4, 1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -3) ,
([1, 3, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([1, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 3, 2, 4, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([1, 4, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 4, 3, 5, 2, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([1, 6, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 6, 3, 5, 4, 2],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -4) ,
([1, 2, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 5, 3, 4, 6],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([1, 2, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 3, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([1, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, 6, 5, 4, 3],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3) ,
([1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 2, 3, 4, 5, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4) ,
([1, 2, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 2, 3, 6, 4, 5],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([1, 2, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 6, 4],) ,
('saved value', 5) ,
('no move/swap gain found',) ,
('Original mapping', [1, 2, 3, 5, 4, 6]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([1, 6, 3, 5, 4, -1],) ,
('node_pair', (0, 1)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 6), 1) ,
('relation match with', (3, 5), 1) ,
('node_pair', (1, 6)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 3)) ,
('instance/attribute match', 1) ,
('node_pair', (3, 5)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 5) ,
('Node mapping at start', [1, 6, 3, 5, 4, -1]) ,
('Triple match number at start:', 5) ,
('Remap node', 1, 'from ', 6, 'to', 2) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 6) ,
([1, 6, 3, 5, 4, -1],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 1) ,
('Swap gain:', -2) ,
([6, 1, 3, 5, 4, -1],) ,
('Computing match for mapping',) ,
([6, 1, 3, 5, 4, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 6, 3, 5, 4, -1],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([3, 6, 1, 5, 4, -1],) ,
('Computing match for mapping',) ,
([3, 6, 1, 5, 4, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 6, 3, 5, 4, -1],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([5, 6, 3, 1, 4, -1],) ,
('Computing match for mapping',) ,
([5, 6, 3, 1, 4, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 6, 3, 5, 4, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([4, 6, 3, 5, 1, -1],) ,
('Computing match for mapping',) ,
([4, 6, 3, 5, 1, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', -1) ,
([1, 6, 3, 5, 4, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([-1, 6, 3, 5, 4, 1],) ,
('Computing match for mapping',) ,
([-1, 6, 3, 5, 4, 1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 3) ,
([1, 6, 3, 5, 4, -1],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 6) ,
('Swap gain:', -2) ,
([1, 3, 6, 5, 4, -1],) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 4, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 5) ,
([1, 6, 3, 5, 4, -1],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 6) ,
('Swap gain:', -3) ,
([1, 5, 3, 6, 4, -1],) ,
('Computing match for mapping',) ,
([1, 5, 3, 6, 4, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 4) ,
([1, 6, 3, 5, 4, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -2) ,
([1, 4, 3, 5, 6, -1],) ,
('Computing match for mapping',) ,
([1, 4, 3, 5, 6, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', -1) ,
([1, 6, 3, 5, 4, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 6) ,
('Swap gain:', 1) ,
([1, -1, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, -1, 3, 5, 4, 6],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 5) ,
([1, 6, 3, 5, 4, -1],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -3) ,
([1, 6, 5, 3, 4, -1],) ,
('Computing match for mapping',) ,
([1, 6, 5, 3, 4, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([1, 6, 3, 5, 4, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([1, 6, 4, 5, 3, -1],) ,
('Computing match for mapping',) ,
([1, 6, 4, 5, 3, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', -1) ,
([1, 6, 3, 5, 4, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([1, 6, -1, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 6, -1, 5, 4, 3],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 6, 3, 5, 4, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3) ,
([1, 6, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([1, 6, 3, 4, 5, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', -1) ,
([1, 6, 3, 5, 4, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 5) ,
('Swap gain:', -2) ,
([1, 6, 3, -1, 4, 5],) ,
('Computing match for mapping',) ,
([1, 6, 3, -1, 4, 5],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', -1) ,
([1, 6, 3, 5, 4, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([1, 6, 3, 5, -1, 4],) ,
('Computing match for mapping',) ,
([1, 6, 3, 5, -1, 4],) ,
('saved value', 4) ,
('Use move gain',) ,
('Original mapping', [1, 6, 3, 5, 4, -1]) ,
('Current mapping', [1, 2, 3, 5, 4, -1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 6) ,
('Current mapping:', [1, 2, 3, 5, 4, -1]) ,
('Remap node', 1, 'from ', 2, 'to', 6) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([1, 6, 3, 5, 4, -1],) ,
('saved value', 5) ,
('Remap node', 5, 'from ', -1, 'to', 6) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 3, 5, 4, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -3) ,
([2, 1, 3, 5, 4, -1],) ,
('Computing match for mapping',) ,
([2, 1, 3, 5, 4, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, -1],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([3, 2, 1, 5, 4, -1],) ,
('Computing match for mapping',) ,
([3, 2, 1, 5, 4, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, -1],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([5, 2, 3, 1, 4, -1],) ,
('Computing match for mapping',) ,
([5, 2, 3, 1, 4, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([4, 2, 3, 5, 1, -1],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 1, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', -1) ,
([1, 2, 3, 5, 4, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([-1, 2, 3, 5, 4, 1],) ,
('Computing match for mapping',) ,
([-1, 2, 3, 5, 4, 1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, -1],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -3) ,
([1, 3, 2, 5, 4, -1],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, -1],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([1, 5, 3, 2, 4, -1],) ,
('Computing match for mapping',) ,
([1, 5, 3, 2, 4, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([1, 4, 3, 5, 2, -1],) ,
('Computing match for mapping',) ,
([1, 4, 3, 5, 2, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', -1) ,
([1, 2, 3, 5, 4, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -2) ,
([1, -1, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, -1, 3, 5, 4, 2],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, -1],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -4) ,
([1, 2, 5, 3, 4, -1],) ,
('Computing match for mapping',) ,
([1, 2, 5, 3, 4, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([1, 2, 4, 5, 3, -1],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 3, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', -1) ,
([1, 2, 3, 5, 4, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([1, 2, -1, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, -1, 5, 4, 3],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3) ,
([1, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([1, 2, 3, 4, 5, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', -1) ,
([1, 2, 3, 5, 4, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 5) ,
('Swap gain:', -2) ,
([1, 2, 3, -1, 4, 5],) ,
('Computing match for mapping',) ,
([1, 2, 3, -1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', -1) ,
([1, 2, 3, 5, 4, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([1, 2, 3, 5, -1, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, -1, 4],) ,
('saved value', 5) ,
('Use move gain',) ,
('Original mapping', [1, 2, 3, 5, 4, -1]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 8) ,
('Current mapping:', [1, 2, 3, 5, 4, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -4) ,
([2, 1, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 5, 4, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([3, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 1, 5, 4, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([5, 2, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 2, 3, 1, 4, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([4, 2, 3, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([6, 2, 3, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 2, 3, 5, 4, 1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -3) ,
([1, 3, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([1, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 3, 2, 4, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([1, 4, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 4, 3, 5, 2, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([1, 6, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 6, 3, 5, 4, 2],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -4) ,
([1, 2, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 5, 3, 4, 6],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([1, 2, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 3, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([1, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, 6, 5, 4, 3],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3) ,
([1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 2, 3, 4, 5, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4) ,
([1, 2, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 2, 3, 6, 4, 5],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([1, 2, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 6, 4],) ,
('saved value', 5) ,
('no move/swap gain found',) ,
('Original mapping', [1, 2, 3, 5, 4, 6]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, 6],) ,
('saved value', 8) ,
('Node mapping at start', [1, 2, 3, 5, 4, 6]) ,
('Triple match number at start:', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -4) ,
([2, 1, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 5, 4, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([3, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 1, 5, 4, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([5, 2, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 2, 3, 1, 4, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([4, 2, 3, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([6, 2, 3, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 2, 3, 5, 4, 1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -3) ,
([1, 3, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([1, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 3, 2, 4, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([1, 4, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 4, 3, 5, 2, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([1, 6, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 6, 3, 5, 4, 2],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -4) ,
([1, 2, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 5, 3, 4, 6],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([1, 2, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 3, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([1, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, 6, 5, 4, 3],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3) ,
([1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 2, 3, 4, 5, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4) ,
([1, 2, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 2, 3, 6, 4, 5],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([1, 2, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 6, 4],) ,
('saved value', 5) ,
('no move/swap gain found',) ,
('Original mapping', [1, 2, 3, 5, 4, 6]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, 6],) ,
('saved value', 8) ,
('Node mapping at start', [1, 2, 3, 5, 4, 6]) ,
('Triple match number at start:', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -4) ,
([2, 1, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 5, 4, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([3, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 1, 5, 4, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([5, 2, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 2, 3, 1, 4, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([4, 2, 3, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([6, 2, 3, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 2, 3, 5, 4, 1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -3) ,
([1, 3, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([1, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 3, 2, 4, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([1, 4, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 4, 3, 5, 2, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([1, 6, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 6, 3, 5, 4, 2],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -4) ,
([1, 2, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 5, 3, 4, 6],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([1, 2, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 3, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([1, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, 6, 5, 4, 3],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3) ,
([1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 2, 3, 4, 5, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4) ,
([1, 2, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 2, 3, 6, 4, 5],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([1, 2, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 6, 4],) ,
('saved value', 5) ,
('no move/swap gain found',) ,
('Original mapping', [1, 2, 3, 5, 4, 6]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 8) ,
('best node mapping', [1, 2, 3, 5, 4, 6]) ,
('Best node mapping alignment:', 'a0(pump-01)-b1(boost-01) a1(pressure)-b2(pressure) a2(water)-b3(water) a3(i)-b5(i) a4(shower)-b4(shower) a5(amr-unknown)-b6(amr-unknown)') ,
('F-score:', 0.5925925925925926) ,
0.593
('AMR pair', 7) ,
('============================================',) ,
('AMR 1 (one-line):', '(p0 / possible-01:ARG1 (a0 / and:op1 (a1 / amr-unknown):op1 (l0 / locate-01:ARG1 (i0 / i):ARG1 (l1 / leak)):op2 (r0 / repair-01:ARG0 i0:ARG1 l1)))') ,
('AMR 2 (one-line):', '(p0 / possible-01:ARG1 (a0 / and:op1 (l0 / locate-01:ARG1 (b0 / break-01:ARG1 (c0 / circuit)):ARG0 (i0 / i)):op2 (r0 / repair-01:ARG0 b0:ARG0 i0)):manner (a1 / amr-unknown))') ,
('Instance triples of AMR 1:', 7) ,
([('instance', 'a0', 'possible-01'), ('instance', 'a1', 'and'), ('instance', 'a2', 'amr-unknown'), ('instance', 'a3', 'locate-01'), ('instance', 'a4', 'i'), ('instance', 'a5', 'leak'), ('instance', 'a6', 'repair-01')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'possible-01')],) ,
('Relation triples of AMR 1:', 8) ,
([('ARG1', 'a0', 'a1'), ('op1', 'a1', 'a2'), ('op1', 'a1', 'a3'), ('op2', 'a1', 'a6'), ('ARG1', 'a3', 'a4'), ('ARG1', 'a3', 'a5'), ('ARG0', 'a6', 'a4'), ('ARG1', 'a6', 'a5')],) ,
('Instance triples of AMR 2:', 8) ,
([('instance', 'b0', 'possible-01'), ('instance', 'b1', 'and'), ('instance', 'b2', 'locate-01'), ('instance', 'b3', 'break-01'), ('instance', 'b4', 'circuit'), ('instance', 'b5', 'i'), ('instance', 'b6', 'repair-01'), ('instance', 'b7', 'amr-unknown')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'possible-01')],) ,
('Relation triples of AMR 2:', 9) ,
([('ARG1', 'b0', 'b1'), ('manner', 'b0', 'b7'), ('op1', 'b1', 'b2'), ('op2', 'b1', 'b6'), ('ARG1', 'b2', 'b3'), ('ARG0', 'b2', 'b5'), ('ARG1', 'b3', 'b4'), ('ARG0', 'b6', 'b3'), ('ARG0', 'b6', 'b5')],) ,
('Candidate mappings:',) ,
([{0, 2, 3}, {1, 3, 4}, {2, 7}, {0, 2, 3}, {1, 3, 4, 5}, {1, 3, 4}, {0, 2, 3, 6}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2, (1, 1): 1}, (1, 1): {-1: 1, (0, 0): 1, (2, 2): 1, (3, 2): 1, (6, 6): 1}, (2, 7): {-1: 1}, (3, 2): {-1: 1, (1, 1): 1, (4, 3): 1, (5, 3): 1}, (4, 5): {-1: 1, (6, 2): 1, (6, 6): 1}, (6, 6): {-1: 1, (1, 1): 1, (4, 3): 1, (4, 5): 1}, (0, 2): {-1: 0, (1, 3): 1}, (1, 3): {-1: 0, (0, 2): 1}, (0, 3): {-1: 0, (1, 4): 1}, (1, 4): {-1: 0, (0, 3): 1}, (2, 2): {-1: 0, (1, 1): 1}, (3, 0): {-1: 0, (4, 1): 1, (5, 1): 1}, (4, 1): {-1: 0, (3, 0): 1}, (4, 3): {-1: 0, (3, 2): 1, (6, 6): 1}, (3, 3): {-1: 0, (4, 4): 1, (5, 4): 1}, (4, 4): {-1: 0, (3, 3): 1}, (5, 1): {-1: 0, (3, 0): 1, (6, 0): 1}, (5, 3): {-1: 0, (3, 2): 1, (6, 2): 1}, (5, 4): {-1: 0, (3, 3): 1, (6, 3): 1}, (6, 2): {-1: 0, (4, 5): 1, (5, 3): 1}, (6, 0): {-1: 0, (5, 1): 1}, (6, 3): {-1: 0, (5, 4): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1) ,
('relation match with', (3, 2), 1) ,
('relation match with', (6, 6), 1) ,
('node_pair', (2, 7)) ,
('instance/attribute match', 1) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 1) ,
('relation match with', (6, 6), 1) ,
('node_pair', (5, 4)) ,
('instance/attribute match', 0) ,
('node_pair', (6, 6)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 11) ,
('Node mapping at start', [0, 1, 7, 2, 5, 4, 6]) ,
('Triple match number at start:', 11) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 5, 4, 6],) ,
('saved value', 8) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 4, 6],) ,
('saved value', 7) ,
('Remap node', 3, 'from ', 2, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 4, 6],) ,
('saved value', 10) ,
('Remap node', 4, 'from ', 5, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('saved value', 11) ,
('Remap node', 5, 'from ', 4, 'to', 3) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('saved value', 12) ,
('Remap node', 6, 'from ', 6, 'to', 3) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 7, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 5, 4, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([7, 1, 0, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 5, 4, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 7, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 5, 4, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 7, 2, 0, 4, 6],) ,
('Computing match for mapping',) ,
([5, 1, 7, 2, 0, 4, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([4, 1, 7, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 7, 2, 5, 0, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 7, 2, 5, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 5, 4, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 7, 1, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 5, 4, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 2, 7, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 5, 4, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 7, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 5, 7, 2, 1, 4, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 7, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 5, 1, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6) ,
([0, 6, 7, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 5, 4, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 2, 7, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 4, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 5, 2, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 7, 4, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 4) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([0, 1, 4, 2, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 7, 6],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 6, 2, 5, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 4, 7],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 7, 5, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 2, 4, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 4) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 6],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 5, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 4, 2],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 7, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 5, 6],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([0, 1, 7, 2, 6, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, 4, 5],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 4, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 7, 2, 5, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 6, 4],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [0, 1, 7, 2, 5, 4, 6]) ,
('Current mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 12) ,
('Current mapping:', [0, 1, 7, 2, 5, 3, 6]) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('saved value', 8) ,
('Remap node', 4, 'from ', 5, 'to', 4) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 3, 6],) ,
('saved value', 10) ,
('Remap node', 5, 'from ', 3, 'to', 4) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 7, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 5, 3, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([7, 1, 0, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 5, 3, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 7, 0, 5, 3, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 5, 3, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 7, 2, 0, 3, 6],) ,
('Computing match for mapping',) ,
([5, 1, 7, 2, 0, 3, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 7, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 5, 0, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 7, 2, 5, 3, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 5, 3, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 7, 1, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 5, 3, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 7, 1, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 5, 3, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 7, 2, 1, 3, 6],) ,
('Computing match for mapping',) ,
([0, 5, 7, 2, 1, 3, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6) ,
([0, 6, 7, 2, 5, 3, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 5, 3, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 2, 7, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 3, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 5, 2, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 7, 3, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 3, 2, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 7, 6],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 6, 2, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 3, 7],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 7, 5, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 2, 3, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 7, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, 6],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 5, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 3, 2],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -1) ,
([0, 1, 7, 2, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 5, 6],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([0, 1, 7, 2, 6, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, 3, 5],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 7, 2, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 6, 3],) ,
('saved value', 8) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Current mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('saved value', 7) ,
('Node mapping at start', [0, 3, 7, 2, 5, 1, 6]) ,
('Triple match number at start:', 7) ,
('Remap node', 1, 'from ', 3, 'to', 4) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 5, 1, 6],) ,
('saved value', 7) ,
('Remap node', 4, 'from ', 5, 'to', 4) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 4, 1, 6],) ,
('saved value', 5) ,
('Remap node', 5, 'from ', 1, 'to', 4) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 4, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([3, 0, 7, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([3, 0, 7, 2, 5, 1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([7, 3, 0, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([7, 3, 0, 2, 5, 1, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([2, 3, 7, 0, 5, 1, 6],) ,
('Computing match for mapping',) ,
([2, 3, 7, 0, 5, 1, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([5, 3, 7, 2, 0, 1, 6],) ,
('Computing match for mapping',) ,
([5, 3, 7, 2, 0, 1, 6],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 1) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 7, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([1, 3, 7, 2, 5, 0, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([6, 3, 7, 2, 5, 1, 0],) ,
('Computing match for mapping',) ,
([6, 3, 7, 2, 5, 1, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 7) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 3) ,
('Swap gain:', -1) ,
([0, 7, 3, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 3, 2, 5, 1, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -1) ,
([0, 2, 7, 3, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, 5, 1, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 5) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([0, 5, 7, 2, 3, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 7, 2, 3, 1, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 1) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 3) ,
('Swap gain:', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 6) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -2) ,
([0, 6, 7, 2, 5, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 5, 1, 3],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -2) ,
([0, 3, 2, 7, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 5, 1, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([0, 3, 5, 2, 7, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 7, 1, 6],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 1) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([0, 3, 1, 2, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 5, 7, 6],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -3) ,
([0, 3, 6, 2, 5, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 5, 1, 7],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 5) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 3, 7, 5, 2, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 5, 2, 1, 6],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 1) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 3, 7, 1, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 1, 5, 2, 6],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([0, 3, 7, 6, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 6, 5, 1, 2],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 1) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 5) ,
('Swap gain:', -2) ,
([0, 3, 7, 2, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 1, 5, 6],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -3) ,
([0, 3, 7, 2, 6, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 6, 1, 5],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 1, ',', 6, '-', 6) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 7, 2, 5, 6, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 6, 1],) ,
('saved value', 5) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 7, 2, 5, 1, 6]) ,
('Current mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Gain after the hill-climbing', 5) ,
('Update triple match number to:', 12) ,
('Current mapping:', [0, 1, 7, 2, 5, 3, 6]) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('saved value', 8) ,
('Remap node', 4, 'from ', 5, 'to', 4) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 3, 6],) ,
('saved value', 10) ,
('Remap node', 5, 'from ', 3, 'to', 4) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 7, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 5, 3, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([7, 1, 0, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 5, 3, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 7, 0, 5, 3, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 5, 3, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 7, 2, 0, 3, 6],) ,
('Computing match for mapping',) ,
([5, 1, 7, 2, 0, 3, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 7, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 5, 0, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 7, 2, 5, 3, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 5, 3, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 7, 1, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 5, 3, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 7, 1, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 5, 3, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 7, 2, 1, 3, 6],) ,
('Computing match for mapping',) ,
([0, 5, 7, 2, 1, 3, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6) ,
([0, 6, 7, 2, 5, 3, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 5, 3, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 2, 7, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 3, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 5, 2, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 7, 3, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 3, 2, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 7, 6],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 6, 2, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 3, 7],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 7, 5, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 2, 3, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 7, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, 6],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 5, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 3, 2],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -1) ,
([0, 1, 7, 2, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 5, 6],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([0, 1, 7, 2, 6, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, 3, 5],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 7, 2, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 6, 3],) ,
('saved value', 8) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Current mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 4)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 7)) ,
('instance/attribute match', 1) ,
('node_pair', (3, 0)) ,
('instance/attribute match', 0) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 1) ,
('relation match with', (6, 6), 1) ,
('node_pair', (5, 3)) ,
('instance/attribute match', 0) ,
('node_pair', (6, 6)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 4) ,
('Node mapping at start', [2, 4, 7, 0, 5, 3, 6]) ,
('Triple match number at start:', 4) ,
('Remap node', 1, 'from ', 4, 'to', 1) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 5, 3, 6],) ,
('saved value', 6) ,
('Remap node', 4, 'from ', 5, 'to', 1) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([2, 4, 7, 0, 1, 3, 6],) ,
('saved value', 3) ,
('Remap node', 5, 'from ', 3, 'to', 1) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([2, 4, 7, 0, 5, 1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 4) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 2) ,
('Swap gain:', 0) ,
([4, 2, 7, 0, 5, 3, 6],) ,
('Computing match for mapping',) ,
([4, 2, 7, 0, 5, 3, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 7) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 2) ,
('Swap gain:', -1) ,
([7, 4, 2, 0, 5, 3, 6],) ,
('Computing match for mapping',) ,
([7, 4, 2, 0, 5, 3, 6],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 0) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', 4) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 5) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([5, 4, 7, 0, 2, 3, 6],) ,
('Computing match for mapping',) ,
([5, 4, 7, 0, 2, 3, 6],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 3) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', 1) ,
([3, 4, 7, 0, 5, 2, 6],) ,
('Computing match for mapping',) ,
([3, 4, 7, 0, 5, 2, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 6) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', 0) ,
([6, 4, 7, 0, 5, 3, 2],) ,
('Computing match for mapping',) ,
([6, 4, 7, 0, 5, 3, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 7) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 4) ,
('Swap gain:', -1) ,
([2, 7, 4, 0, 5, 3, 6],) ,
('Computing match for mapping',) ,
([2, 7, 4, 0, 5, 3, 6],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 0) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 4) ,
('Swap gain:', 0) ,
([2, 0, 7, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([2, 0, 7, 4, 5, 3, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 5) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -2) ,
([2, 5, 7, 0, 4, 3, 6],) ,
('Computing match for mapping',) ,
([2, 5, 7, 0, 4, 3, 6],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 4, ',', 5, '-', 3) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', 1) ,
([2, 3, 7, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 3, 7, 0, 5, 4, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 4, ',', 6, '-', 6) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([2, 6, 7, 0, 5, 3, 4],) ,
('Computing match for mapping',) ,
([2, 6, 7, 0, 5, 3, 4],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 0) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 7) ,
('Swap gain:', -1) ,
([2, 4, 0, 7, 5, 3, 6],) ,
('Computing match for mapping',) ,
([2, 4, 0, 7, 5, 3, 6],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([2, 4, 5, 0, 7, 3, 6],) ,
('Computing match for mapping',) ,
([2, 4, 5, 0, 7, 3, 6],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 3) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([2, 4, 3, 0, 5, 7, 6],) ,
('Computing match for mapping',) ,
([2, 4, 3, 0, 5, 7, 6],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -3) ,
([2, 4, 6, 0, 5, 3, 7],) ,
('Computing match for mapping',) ,
([2, 4, 6, 0, 5, 3, 7],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', 5) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -2) ,
([2, 4, 7, 5, 0, 3, 6],) ,
('Computing match for mapping',) ,
([2, 4, 7, 5, 0, 3, 6],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 0, ',', 5, '-', 3) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', 0) ,
([2, 4, 7, 3, 5, 0, 6],) ,
('Computing match for mapping',) ,
([2, 4, 7, 3, 5, 0, 6],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 0, ',', 6, '-', 6) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -2) ,
([2, 4, 7, 6, 5, 3, 0],) ,
('Computing match for mapping',) ,
([2, 4, 7, 6, 5, 3, 0],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -1) ,
([2, 4, 7, 0, 3, 5, 6],) ,
('Computing match for mapping',) ,
([2, 4, 7, 0, 3, 5, 6],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -3) ,
([2, 4, 7, 0, 6, 3, 5],) ,
('Computing match for mapping',) ,
([2, 4, 7, 0, 6, 3, 5],) ,
('saved value', 1) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -2) ,
([2, 4, 7, 0, 5, 6, 3],) ,
('Computing match for mapping',) ,
([2, 4, 7, 0, 5, 6, 3],) ,
('saved value', 2) ,
('Use swap gain',) ,
('Original mapping', [2, 4, 7, 0, 5, 3, 6]) ,
('Current mapping', [0, 4, 7, 2, 5, 3, 6]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 8) ,
('Current mapping:', [0, 4, 7, 2, 5, 3, 6]) ,
('Remap node', 1, 'from ', 4, 'to', 1) ,
('Move gain:', 4) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('saved value', 12) ,
('Remap node', 4, 'from ', 5, 'to', 1) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 1, 3, 6],) ,
('saved value', 6) ,
('Remap node', 5, 'from ', 3, 'to', 1) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 5, 1, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 4) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([4, 0, 7, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([4, 0, 7, 2, 5, 3, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([7, 4, 0, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([7, 4, 0, 2, 5, 3, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('Computing match for mapping',) ,
([2, 4, 7, 0, 5, 3, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([5, 4, 7, 2, 0, 3, 6],) ,
('Computing match for mapping',) ,
([5, 4, 7, 2, 0, 3, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -2) ,
([3, 4, 7, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([3, 4, 7, 2, 5, 0, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -4) ,
([6, 4, 7, 2, 5, 3, 0],) ,
('Computing match for mapping',) ,
([6, 4, 7, 2, 5, 3, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 7) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 4) ,
('Swap gain:', -1) ,
([0, 7, 4, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 7, 4, 2, 5, 3, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 2) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -2) ,
([0, 2, 7, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 3, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 5) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -2) ,
([0, 5, 7, 2, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 5, 7, 2, 4, 3, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 4, ',', 5, '-', 3) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([0, 3, 7, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 4, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 4, ',', 6, '-', 6) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([0, 6, 7, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 5, 3, 4],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -3) ,
([0, 4, 2, 7, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 7, 5, 3, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([0, 4, 5, 2, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 4, 5, 2, 7, 3, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 3) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 4, 3, 2, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 4, 3, 2, 5, 7, 6],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -3) ,
([0, 4, 6, 2, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 4, 6, 2, 5, 3, 7],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 5) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 4, 7, 5, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 4, 7, 5, 2, 3, 6],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -2) ,
([0, 4, 7, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 4, 7, 3, 5, 2, 6],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([0, 4, 7, 6, 5, 3, 2],) ,
('Computing match for mapping',) ,
([0, 4, 7, 6, 5, 3, 2],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -1) ,
([0, 4, 7, 2, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 3, 5, 6],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -3) ,
([0, 4, 7, 2, 6, 3, 5],) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 6, 3, 5],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([0, 4, 7, 2, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 5, 6, 3],) ,
('saved value', 5) ,
('Use move gain',) ,
('Original mapping', [0, 4, 7, 2, 5, 3, 6]) ,
('Current mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 12) ,
('Current mapping:', [0, 1, 7, 2, 5, 3, 6]) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('saved value', 8) ,
('Remap node', 4, 'from ', 5, 'to', 4) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 3, 6],) ,
('saved value', 10) ,
('Remap node', 5, 'from ', 3, 'to', 4) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 7, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 5, 3, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([7, 1, 0, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 5, 3, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 7, 0, 5, 3, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 5, 3, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 7, 2, 0, 3, 6],) ,
('Computing match for mapping',) ,
([5, 1, 7, 2, 0, 3, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 7, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 5, 0, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 7, 2, 5, 3, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 5, 3, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 7, 1, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 5, 3, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 7, 1, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 5, 3, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 7, 2, 1, 3, 6],) ,
('Computing match for mapping',) ,
([0, 5, 7, 2, 1, 3, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6) ,
([0, 6, 7, 2, 5, 3, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 5, 3, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 2, 7, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 3, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 5, 2, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 7, 3, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 3, 2, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 7, 6],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 6, 2, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 3, 7],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 7, 5, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 2, 3, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 7, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, 6],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 5, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 3, 2],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -1) ,
([0, 1, 7, 2, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 5, 6],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([0, 1, 7, 2, 6, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, 3, 5],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 7, 2, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 6, 3],) ,
('saved value', 8) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Current mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1) ,
('relation match with', (6, 6), 1) ,
('node_pair', (2, 7)) ,
('instance/attribute match', 1) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0) ,
('relation match with', (4, 4), 1) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 0) ,
('node_pair', (6, 6)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 5) ,
('Node mapping at start', [2, 1, 7, 3, 4, -1, 6]) ,
('Triple match number at start:', 5) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 3) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('saved value', 8) ,
('Remap node', 3, 'from ', 3, 'to', 0) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 4, -1, 6],) ,
('saved value', 4) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 5, -1, 6],) ,
('saved value', 6) ,
('Remap node', 6, 'from ', 6, 'to', 0) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 4, -1, 0],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -2) ,
([1, 2, 7, 3, 4, -1, 6],) ,
('Computing match for mapping',) ,
([1, 2, 7, 3, 4, -1, 6],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 7) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 2) ,
('Swap gain:', 0) ,
([7, 1, 2, 3, 4, -1, 6],) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, -1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 3) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', 1) ,
([3, 1, 7, 2, 4, -1, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 4, -1, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 4) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([4, 1, 7, 3, 2, -1, 6],) ,
('Computing match for mapping',) ,
([4, 1, 7, 3, 2, -1, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', -1) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0) ,
([-1, 1, 7, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 3, 4, 2, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 6) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([6, 1, 7, 3, 4, -1, 2],) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 4, -1, 2],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([2, 7, 1, 3, 4, -1, 6],) ,
('Computing match for mapping',) ,
([2, 7, 1, 3, 4, -1, 6],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([2, 3, 7, 1, 4, -1, 6],) ,
('Computing match for mapping',) ,
([2, 3, 7, 1, 4, -1, 6],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([2, 4, 7, 3, 1, -1, 6],) ,
('Computing match for mapping',) ,
([2, 4, 7, 3, 1, -1, 6],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([2, -1, 7, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([2, -1, 7, 3, 4, 1, 6],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([2, 6, 7, 3, 4, -1, 1],) ,
('Computing match for mapping',) ,
([2, 6, 7, 3, 4, -1, 1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 3) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 7) ,
('Swap gain:', -2) ,
([2, 1, 3, 7, 4, -1, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 7, 4, -1, 6],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 4) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([2, 1, 4, 3, 7, -1, 6],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 7, -1, 6],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', -1) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([2, 1, -1, 3, 4, 7, 6],) ,
('Computing match for mapping',) ,
([2, 1, -1, 3, 4, 7, 6],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -3) ,
([2, 1, 6, 3, 4, -1, 7],) ,
('Computing match for mapping',) ,
([2, 1, 6, 3, 4, -1, 7],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([2, 1, 7, 4, 3, -1, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 3, -1, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', -1) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([2, 1, 7, -1, 4, 3, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, -1, 4, 3, 6],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([2, 1, 7, 6, 4, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 6, 4, -1, 3],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', -1) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 0) ,
([2, 1, 7, 3, -1, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, -1, 4, 6],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([2, 1, 7, 3, 6, -1, 4],) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 6, -1, 4],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', 6) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', -1) ,
('Swap gain:', -2) ,
([2, 1, 7, 3, 4, 6, -1],) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 4, 6, -1],) ,
('saved value', 3) ,
('Use move gain',) ,
('Original mapping', [2, 1, 7, 3, 4, -1, 6]) ,
('Current mapping', [0, 1, 7, 3, 4, -1, 6]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 8) ,
('Current mapping:', [0, 1, 7, 3, 4, -1, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('saved value', 5) ,
('Remap node', 2, 'from ', 7, 'to', 2) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1, 6],) ,
('saved value', 8) ,
('Remap node', 3, 'from ', 3, 'to', 2) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('saved value', 9) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, -1, 6],) ,
('saved value', 9) ,
('Remap node', 6, 'from ', 6, 'to', 2) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, -1, 2],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 7, 3, 4, -1, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 3, 4, -1, 6],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([7, 1, 0, 3, 4, -1, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 3, 4, -1, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 7, 0, 4, -1, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 0, 4, -1, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 7, 3, 0, -1, 6],) ,
('Computing match for mapping',) ,
([4, 1, 7, 3, 0, -1, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 3, 4, 0, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -5) ,
([6, 1, 7, 3, 4, -1, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 4, -1, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 1, 3, 4, -1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 3, 4, -1, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 7, 1, 4, -1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 1, 4, -1, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 7, 3, 1, -1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 7, 3, 1, -1, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 7, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, -1, 7, 3, 4, 1, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 7, 3, 4, -1, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 3, 4, -1, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 3) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 3, 7, 4, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 4, -1, 6],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 4) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 4, 3, 7, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 7, -1, 6],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', -1) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([0, 1, -1, 3, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 4, 7, 6],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 6, 3, 4, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, -1, 7],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([0, 1, 7, 4, 3, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, -1, 6],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', -1) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([0, 1, 7, -1, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 4, 3, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 7, 6, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, -1, 3],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', -1) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 0) ,
([0, 1, 7, 3, -1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, -1, 4, 6],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 7, 3, 6, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 6, -1, 4],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', 6) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 7, 3, 4, 6, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 6, -1],) ,
('saved value', 6) ,
('Use move gain',) ,
('Original mapping', [0, 1, 7, 3, 4, -1, 6]) ,
('Current mapping', [0, 1, 7, 2, 4, -1, 6]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 7, 2, 4, -1, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 4, -1, 6],) ,
('saved value', 6) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 4, -1, 6],) ,
('saved value', 5) ,
('Remap node', 3, 'from ', 2, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('saved value', 8) ,
('Remap node', 4, 'from ', 4, 'to', 3) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('saved value', 11) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, -1, 6],) ,
('saved value', 11) ,
('Remap node', 5, 'from ', -1, 'to', 3) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 3, 6],) ,
('saved value', 10) ,
('Remap node', 6, 'from ', 6, 'to', 3) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 7, 2, 4, -1, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 4, -1, 6],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([7, 1, 0, 2, 4, -1, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 4, -1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 7, 0, 4, -1, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 4, -1, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3) ,
([4, 1, 7, 2, 0, -1, 6],) ,
('Computing match for mapping',) ,
([4, 1, 7, 2, 0, -1, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 2, 4, 0, 6],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 2, 4, 0, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -5) ,
([6, 1, 7, 2, 4, -1, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 4, -1, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 7, 1, 2, 4, -1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 4, -1, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 2, 7, 1, 4, -1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 4, -1, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 7, 2, 1, -1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 1, -1, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 7, 2, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, -1, 7, 2, 4, 1, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -5) ,
([0, 6, 7, 2, 4, -1, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 4, -1, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 2, 7, 4, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, -1, 6],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 4) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -1) ,
([0, 1, 4, 2, 7, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 7, -1, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', -1) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([0, 1, -1, 2, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 4, 7, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 6, 2, 4, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 4, -1, 7],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 4) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, 2, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, -1, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', -1) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 7, -1, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 4, 2, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 4, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, -1, 2],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', -1) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 0) ,
([0, 1, 7, 2, -1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, -1, 4, 6],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([0, 1, 7, 2, 6, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, -1, 4],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 7, 2, 4, 6, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 6, -1],) ,
('saved value', 7) ,
('Use move gain',) ,
('Original mapping', [0, 1, 7, 2, 4, -1, 6]) ,
('Current mapping', [0, 1, 7, 2, 3, -1, 6]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 11) ,
('Current mapping:', [0, 1, 7, 2, 3, -1, 6]) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 3, -1, 6],) ,
('saved value', 7) ,
('Remap node', 4, 'from ', 3, 'to', 4) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('saved value', 9) ,
('Remap node', 4, 'from ', 3, 'to', 5) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, -1, 6],) ,
('saved value', 11) ,
('Remap node', 5, 'from ', -1, 'to', 4) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 7, 2, 3, -1, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 3, -1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([7, 1, 0, 2, 3, -1, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 3, -1, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 7, 0, 3, -1, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 3, -1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 7, 2, 0, -1, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 0, -1, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 2, 3, 0, 6],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 2, 3, 0, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 7, 2, 3, -1, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 3, -1, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 7, 1, 2, 3, -1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 3, -1, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 7, 1, 3, -1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 3, -1, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 7, 2, 1, -1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 1, -1, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 7, 2, 3, 1, 6],) ,
('Computing match for mapping',) ,
([0, -1, 7, 2, 3, 1, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6) ,
([0, 6, 7, 2, 3, -1, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 3, -1, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 2, 7, 3, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 3, -1, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, 7, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 7, -1, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', -1) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([0, 1, -1, 2, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, 7, 6],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 6, 2, 3, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 3, -1, 7],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 7, 3, 2, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, -1, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', -1) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 7, -1, 3, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 3, 2, 6],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 7, 6, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 3, -1, 2],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', -1) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([0, 1, 7, 2, -1, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, -1, 3, 6],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 7, 2, 6, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, -1, 3],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 7, 2, 3, 6, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 6, -1],) ,
('saved value', 8) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 2, 3, -1, 6]) ,
('Current mapping', [0, 1, 7, 2, 3, -1, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('saved value', 5) ,
('Node mapping at start', [2, 1, 7, 3, 4, -1, 6]) ,
('Triple match number at start:', 5) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 3) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('saved value', 8) ,
('Remap node', 3, 'from ', 3, 'to', 0) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 4, -1, 6],) ,
('saved value', 4) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 5, -1, 6],) ,
('saved value', 6) ,
('Remap node', 6, 'from ', 6, 'to', 0) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 4, -1, 0],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -2) ,
([1, 2, 7, 3, 4, -1, 6],) ,
('Computing match for mapping',) ,
([1, 2, 7, 3, 4, -1, 6],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 7) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 2) ,
('Swap gain:', 0) ,
([7, 1, 2, 3, 4, -1, 6],) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, -1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 3) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', 1) ,
([3, 1, 7, 2, 4, -1, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 4, -1, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 4) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([4, 1, 7, 3, 2, -1, 6],) ,
('Computing match for mapping',) ,
([4, 1, 7, 3, 2, -1, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', -1) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0) ,
([-1, 1, 7, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 3, 4, 2, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 6) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([6, 1, 7, 3, 4, -1, 2],) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 4, -1, 2],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([2, 7, 1, 3, 4, -1, 6],) ,
('Computing match for mapping',) ,
([2, 7, 1, 3, 4, -1, 6],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([2, 3, 7, 1, 4, -1, 6],) ,
('Computing match for mapping',) ,
([2, 3, 7, 1, 4, -1, 6],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([2, 4, 7, 3, 1, -1, 6],) ,
('Computing match for mapping',) ,
([2, 4, 7, 3, 1, -1, 6],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([2, -1, 7, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([2, -1, 7, 3, 4, 1, 6],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([2, 6, 7, 3, 4, -1, 1],) ,
('Computing match for mapping',) ,
([2, 6, 7, 3, 4, -1, 1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 3) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 7) ,
('Swap gain:', -2) ,
([2, 1, 3, 7, 4, -1, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 7, 4, -1, 6],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 4) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([2, 1, 4, 3, 7, -1, 6],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 7, -1, 6],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', -1) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([2, 1, -1, 3, 4, 7, 6],) ,
('Computing match for mapping',) ,
([2, 1, -1, 3, 4, 7, 6],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -3) ,
([2, 1, 6, 3, 4, -1, 7],) ,
('Computing match for mapping',) ,
([2, 1, 6, 3, 4, -1, 7],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([2, 1, 7, 4, 3, -1, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 3, -1, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', -1) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([2, 1, 7, -1, 4, 3, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, -1, 4, 3, 6],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([2, 1, 7, 6, 4, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 6, 4, -1, 3],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', -1) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 0) ,
([2, 1, 7, 3, -1, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, -1, 4, 6],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([2, 1, 7, 3, 6, -1, 4],) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 6, -1, 4],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', 6) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', -1) ,
('Swap gain:', -2) ,
([2, 1, 7, 3, 4, 6, -1],) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 4, 6, -1],) ,
('saved value', 3) ,
('Use move gain',) ,
('Original mapping', [2, 1, 7, 3, 4, -1, 6]) ,
('Current mapping', [0, 1, 7, 3, 4, -1, 6]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 8) ,
('Current mapping:', [0, 1, 7, 3, 4, -1, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 4, -1, 6],) ,
('saved value', 5) ,
('Remap node', 2, 'from ', 7, 'to', 2) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1, 6],) ,
('saved value', 8) ,
('Remap node', 3, 'from ', 3, 'to', 2) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('saved value', 9) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, -1, 6],) ,
('saved value', 9) ,
('Remap node', 6, 'from ', 6, 'to', 2) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, -1, 2],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 7, 3, 4, -1, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 3, 4, -1, 6],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([7, 1, 0, 3, 4, -1, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 3, 4, -1, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 7, 0, 4, -1, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 0, 4, -1, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 7, 3, 0, -1, 6],) ,
('Computing match for mapping',) ,
([4, 1, 7, 3, 0, -1, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 3, 4, 0, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -5) ,
([6, 1, 7, 3, 4, -1, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 4, -1, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 1, 3, 4, -1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 3, 4, -1, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 3, 7, 1, 4, -1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 1, 4, -1, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 7, 3, 1, -1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 7, 3, 1, -1, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 7, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, -1, 7, 3, 4, 1, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 7, 3, 4, -1, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 3, 4, -1, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 3) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 3, 7, 4, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 4, -1, 6],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 4) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 4, 3, 7, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 7, -1, 6],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', -1) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([0, 1, -1, 3, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 4, 7, 6],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 6, 3, 4, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, -1, 7],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([0, 1, 7, 4, 3, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, -1, 6],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', -1) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([0, 1, 7, -1, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 4, 3, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 7, 6, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, -1, 3],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', -1) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 0) ,
([0, 1, 7, 3, -1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, -1, 4, 6],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 7, 3, 6, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 6, -1, 4],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', 6) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 7, 3, 4, 6, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 6, -1],) ,
('saved value', 6) ,
('Use move gain',) ,
('Original mapping', [0, 1, 7, 3, 4, -1, 6]) ,
('Current mapping', [0, 1, 7, 2, 4, -1, 6]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 7, 2, 4, -1, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 4, -1, 6],) ,
('saved value', 6) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 4, -1, 6],) ,
('saved value', 5) ,
('Remap node', 3, 'from ', 2, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, -1, 6],) ,
('saved value', 8) ,
('Remap node', 4, 'from ', 4, 'to', 3) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('saved value', 11) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, -1, 6],) ,
('saved value', 11) ,
('Remap node', 5, 'from ', -1, 'to', 3) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 3, 6],) ,
('saved value', 10) ,
('Remap node', 6, 'from ', 6, 'to', 3) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, -1, 3],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 7, 2, 4, -1, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 4, -1, 6],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([7, 1, 0, 2, 4, -1, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 4, -1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 7, 0, 4, -1, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 4, -1, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3) ,
([4, 1, 7, 2, 0, -1, 6],) ,
('Computing match for mapping',) ,
([4, 1, 7, 2, 0, -1, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 2, 4, 0, 6],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 2, 4, 0, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -5) ,
([6, 1, 7, 2, 4, -1, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 4, -1, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 7, 1, 2, 4, -1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 4, -1, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 2, 7, 1, 4, -1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 4, -1, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 7, 2, 1, -1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 1, -1, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 7, 2, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, -1, 7, 2, 4, 1, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -5) ,
([0, 6, 7, 2, 4, -1, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 4, -1, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 2, 7, 4, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, -1, 6],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 4) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -1) ,
([0, 1, 4, 2, 7, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 7, -1, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', -1) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([0, 1, -1, 2, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 4, 7, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 6, 2, 4, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 4, -1, 7],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 4) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, 2, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, -1, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', -1) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 7, -1, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 4, 2, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 4, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, -1, 2],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', -1) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 0) ,
([0, 1, 7, 2, -1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, -1, 4, 6],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([0, 1, 7, 2, 6, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, -1, 4],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 7, 2, 4, 6, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 6, -1],) ,
('saved value', 7) ,
('Use move gain',) ,
('Original mapping', [0, 1, 7, 2, 4, -1, 6]) ,
('Current mapping', [0, 1, 7, 2, 3, -1, 6]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 11) ,
('Current mapping:', [0, 1, 7, 2, 3, -1, 6]) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 3, -1, 6],) ,
('saved value', 7) ,
('Remap node', 4, 'from ', 3, 'to', 4) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, -1, 6],) ,
('saved value', 9) ,
('Remap node', 4, 'from ', 3, 'to', 5) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, -1, 6],) ,
('saved value', 11) ,
('Remap node', 5, 'from ', -1, 'to', 4) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 7, 2, 3, -1, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 3, -1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([7, 1, 0, 2, 3, -1, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 3, -1, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 7, 0, 3, -1, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 3, -1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 7, 2, 0, -1, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 0, -1, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 2, 3, 0, 6],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 2, 3, 0, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 7, 2, 3, -1, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 3, -1, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 7, 1, 2, 3, -1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 3, -1, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 7, 1, 3, -1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 3, -1, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 7, 2, 1, -1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 1, -1, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 7, 2, 3, 1, 6],) ,
('Computing match for mapping',) ,
([0, -1, 7, 2, 3, 1, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6) ,
([0, 6, 7, 2, 3, -1, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 3, -1, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 2, 7, 3, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 3, -1, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, 7, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 7, -1, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', -1) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([0, 1, -1, 2, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, 7, 6],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 6, 2, 3, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 3, -1, 7],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 7, 3, 2, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, -1, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', -1) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 7, -1, 3, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 3, 2, 6],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 7, 6, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 3, -1, 2],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', -1) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([0, 1, 7, 2, -1, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, -1, 3, 6],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 7, 2, 6, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, -1, 3],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, -1, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 7, 2, 3, 6, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 6, -1],) ,
('saved value', 8) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 2, 3, -1, 6]) ,
('Current mapping', [0, 1, 7, 2, 3, -1, 6]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 12) ,
('best node mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Best node mapping alignment:', 'a0(possible-01)-b0(possible-01) a1(and)-b1(and) a2(amr-unknown)-b7(amr-unknown) a3(locate-01)-b2(locate-01) a4(i)-b5(i) a5(leak)-b3(break-01) a6(repair-01)-b6(repair-01)') ,
('F-score:', 0.7058823529411765) ,
0.706
('AMR pair', 8) ,
('============================================',) ,
('AMR 1 (one-line):', '(d0 / depend-01:ARG1 (w0 / way:manner-of (d1 / define-01:ARG1 (t0 / term))):ARG1 (a0 / application))') ,
('AMR 2 (one-line):', '(d0 / depend-01:ARG1 (a0 / apply-02):ARG0 (d1 / define-01:ARG1 (t0 / term)))') ,
('Instance triples of AMR 1:', 5) ,
([('instance', 'a0', 'depend-01'), ('instance', 'a1', 'way'), ('instance', 'a2', 'define-01'), ('instance', 'a3', 'term'), ('instance', 'a4', 'application')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'depend-01')],) ,
('Relation triples of AMR 1:', 4) ,
([('ARG1', 'a0', 'a1'), ('ARG1', 'a0', 'a4'), ('manner', 'a2', 'a1'), ('ARG1', 'a2', 'a3')],) ,
('Instance triples of AMR 2:', 4) ,
([('instance', 'b0', 'depend-01'), ('instance', 'b1', 'apply-02'), ('instance', 'b2', 'define-01'), ('instance', 'b3', 'term')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'depend-01')],) ,
('Relation triples of AMR 2:', 3) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b2'), ('ARG1', 'b2', 'b3')],) ,
('Candidate mappings:',) ,
([{0, 2}, {1, 3}, {0, 2}, {1, 3}, {1, 3}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2, (1, 1): 1, (4, 1): 1}, (2, 2): {-1: 1, (3, 3): 1}, (3, 3): {-1: 1, (2, 2): 1}, (1, 1): {-1: 0, (0, 0): 1}, (0, 2): {-1: 0, (1, 3): 1, (4, 3): 1}, (1, 3): {-1: 0, (0, 2): 1}, (4, 1): {-1: 0, (0, 0): 1}, (4, 3): {-1: 0, (0, 2): 1}, (2, 0): {-1: 0, (3, 1): 1}, (3, 1): {-1: 0, (2, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1) ,
('relation match with', (3, 3), 1) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 6) ,
('Node mapping at start', [0, 1, 2, 3, -1]) ,
('Triple match number at start:', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 2, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0) ,
([0, -1, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3],) ,
('saved value', 4) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, -1]) ,
('Current mapping', [0, 1, 2, 3, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, -1],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 3), 1) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 0)) ,
('instance/attribute match', 0) ,
('relation match with', (3, 1), 1) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 0) ,
('match computing complete, result:', 2) ,
('Node mapping at start', [2, 3, 0, 1, -1]) ,
('Triple match number at start:', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 3) ,
([2, 3, 0, 1, -1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 2) ,
('Swap gain:', -1) ,
([3, 2, 0, 1, -1],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 3, 0, 1, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 1) ,
([0, 3, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 1) ,
([2, 3, 0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -2) ,
([1, 3, 0, 2, -1],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', -1) ,
([2, 3, 0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([-1, 3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 3, 0, 1, 2],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 0) ,
([2, 3, 0, 1, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 3) ,
('Swap gain:', -2) ,
([2, 0, 3, 1, -1],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1, -1],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 1) ,
([2, 3, 0, 1, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', -1) ,
([2, 1, 0, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', -1) ,
([2, 3, 0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([2, -1, 0, 1, 3],) ,
('Computing match for mapping',) ,
([2, -1, 0, 1, 3],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 1) ,
([2, 3, 0, 1, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([2, 3, 1, 0, -1],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', -1) ,
([2, 3, 0, 1, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([2, 3, -1, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, -1, 1, 0],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', -1) ,
([2, 3, 0, 1, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -1) ,
([2, 3, 0, -1, 1],) ,
('Computing match for mapping',) ,
([2, 3, 0, -1, 1],) ,
('saved value', 1) ,
('Use swap gain',) ,
('Original mapping', [2, 3, 0, 1, -1]) ,
('Current mapping', [0, 3, 2, 1, -1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 3) ,
('Current mapping:', [0, 3, 2, 1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([3, 0, 2, 1, -1],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([2, 3, 0, 1, -1],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 2, 0, -1],) ,
('Computing match for mapping',) ,
([1, 3, 2, 0, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2) ,
([-1, 3, 2, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 3, 2, 1, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -1) ,
([0, 2, 3, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 3) ,
([0, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', -1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([0, -1, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([0, 3, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([0, 3, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, -1, 1, 2],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', -1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 1) ,
([0, 3, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1],) ,
('saved value', 4) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 2, 1, -1]) ,
('Current mapping', [0, 1, 2, 3, -1]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 6) ,
('Current mapping:', [0, 1, 2, 3, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 2, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0) ,
([0, -1, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3],) ,
('saved value', 4) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, -1]) ,
('Current mapping', [0, 1, 2, 3, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, -1],) ,
('saved value', 3) ,
('Node mapping at start', [0, 3, 2, 1, -1]) ,
('Triple match number at start:', 3) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([3, 0, 2, 1, -1],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([2, 3, 0, 1, -1],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 2, 0, -1],) ,
('Computing match for mapping',) ,
([1, 3, 2, 0, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2) ,
([-1, 3, 2, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 3, 2, 1, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -1) ,
([0, 2, 3, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 3) ,
([0, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', -1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([0, -1, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([0, 3, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([0, 3, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, -1, 1, 2],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', -1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 1) ,
([0, 3, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1],) ,
('saved value', 4) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 2, 1, -1]) ,
('Current mapping', [0, 1, 2, 3, -1]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 6) ,
('Current mapping:', [0, 1, 2, 3, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 2, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0) ,
([0, -1, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3],) ,
('saved value', 4) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, -1]) ,
('Current mapping', [0, 1, 2, 3, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1],) ,
('saved value', 6) ,
('Node mapping at start', [0, 1, 2, 3, -1]) ,
('Triple match number at start:', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 2, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0) ,
([0, -1, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3],) ,
('saved value', 4) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, -1]) ,
('Current mapping', [0, 1, 2, 3, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, -1],) ,
('saved value', 1) ,
('Node mapping at start', [2, 1, 0, 3, -1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 0, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', 0) ,
([1, 2, 0, 3, -1],) ,
('Computing match for mapping',) ,
([1, 2, 0, 3, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 1, 0, 3, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 5) ,
([0, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 3) ,
([2, 1, 0, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([3, 1, 0, 2, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 2, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', -1) ,
([2, 1, 0, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', 0) ,
([-1, 1, 0, 3, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 3, 2],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 0) ,
([2, 1, 0, 3, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', 0) ,
([2, 0, 1, 3, -1],) ,
('Computing match for mapping',) ,
([2, 0, 1, 3, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([2, 1, 0, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', 1) ,
([2, 3, 0, 1, -1],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([2, 1, 0, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0) ,
([2, -1, 0, 3, 1],) ,
('Computing match for mapping',) ,
([2, -1, 0, 3, 1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 3) ,
([2, 1, 0, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([2, 1, 3, 0, -1],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0, -1],) ,
('saved value', 0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', -1) ,
([2, 1, 0, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', 0) ,
([2, 1, -1, 3, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 3, 0],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', -1) ,
([2, 1, 0, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([2, 1, 0, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 3],) ,
('saved value', 1) ,
('Use swap gain',) ,
('Original mapping', [2, 1, 0, 3, -1]) ,
('Current mapping', [0, 1, 2, 3, -1]) ,
('Gain after the hill-climbing', 5) ,
('Update triple match number to:', 6) ,
('Current mapping:', [0, 1, 2, 3, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 2, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 0, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0) ,
([0, -1, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3],) ,
('saved value', 4) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, -1]) ,
('Current mapping', [0, 1, 2, 3, -1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 6) ,
('best node mapping', [0, 1, 2, 3, -1]) ,
('Best node mapping alignment:', 'a0(depend-01)-b0(depend-01) a1(way)-b1(apply-02) a2(define-01)-b2(define-01) a3(term)-b3(term) a4(application)-Null') ,
('F-score:', 0.6666666666666665) ,
0.667
('AMR pair', 9) ,
('============================================',) ,
('AMR 1 (one-line):', '(t0 / take-10:ARG1 (t1 / time:ARG1-of (i0 / instead-of-91:ARG2 (m1 / method:mod (n0 / naive))):ARG1-of (h0 / have-quant-91:ARG3 (l0 / less:quant (m2 / much)))):ARG0 (m0 / methodology))') ,
('AMR 2 (one-line):', '(h0 / have-degree-91:ARG1 (m0 / method:mod (t0 / this)):ARG2 (q0 / quick-02:ARG1 m0):ARG3 (m1 / more:quant (m3 / much)):ARG4 (m2 / method:mod (o0 / other):ARG1-of (h1 / have-degree-91:ARG2 (n0 / naive):ARG3 (m4 / more:quant (m5 / much)))))') ,
('Instance triples of AMR 1:', 9) ,
([('instance', 'a0', 'take-10'), ('instance', 'a1', 'time'), ('instance', 'a2', 'instead-of-91'), ('instance', 'a3', 'method'), ('instance', 'a4', 'naive'), ('instance', 'a5', 'have-quant-91'), ('instance', 'a6', 'less'), ('instance', 'a7', 'much'), ('instance', 'a8', 'methodology')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'take-10')],) ,
('Relation triples of AMR 1:', 8) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a8'), ('ARG1', 'a2', 'a1'), ('ARG2', 'a2', 'a3'), ('mod', 'a3', 'a4'), ('ARG1', 'a5', 'a1'), ('ARG3', 'a5', 'a6'), ('quant', 'a6', 'a7')],) ,
('Instance triples of AMR 2:', 12) ,
([('instance', 'b0', 'have-degree-91'), ('instance', 'b1', 'method'), ('instance', 'b2', 'this'), ('instance', 'b3', 'quick-02'), ('instance', 'b4', 'more'), ('instance', 'b5', 'much'), ('instance', 'b6', 'method'), ('instance', 'b7', 'other'), ('instance', 'b8', 'have-degree-91'), ('instance', 'b9', 'naive'), ('instance', 'b10', 'more'), ('instance', 'b11', 'much')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'have-degree-91')],) ,
('Relation triples of AMR 2:', 12) ,
([('ARG1', 'b0', 'b1'), ('ARG2', 'b0', 'b3'), ('ARG3', 'b0', 'b4'), ('ARG4', 'b0', 'b6'), ('mod', 'b1', 'b2'), ('ARG1', 'b3', 'b1'), ('quant', 'b4', 'b5'), ('mod', 'b6', 'b7'), ('ARG1', 'b8', 'b6'), ('ARG2', 'b8', 'b9'), ('ARG3', 'b8', 'b10'), ('quant', 'b10', 'b11')],) ,
('Candidate mappings:',) ,
([{0, 8, 3}, {1, 6}, {0, 8, 3}, {1, 3, 6, 9}, {9, 2, 7}, {0, 8, 3}, {10, 4}, {11, 5}, set()],) ,
('Weight dictionary',) ,
({(3, 1): {-1: 1, (4, 2): 1}, (3, 6): {-1: 1, (4, 7): 1}, (4, 9): {-1: 1}, (7, 5): {-1: 1, (6, 4): 1}, (7, 11): {-1: 1, (6, 10): 1}, (0, 0): {-1: 0, (1, 1): 1}, (1, 1): {-1: 0, (0, 0): 1, (0, 3): 1, (2, 0): 1, (2, 3): 1, (5, 0): 1, (5, 3): 1}, (0, 3): {-1: 0, (1, 1): 1}, (0, 8): {-1: 0, (1, 6): 1}, (1, 6): {-1: 0, (0, 8): 1, (2, 8): 1, (5, 8): 1}, (2, 0): {-1: 0, (1, 1): 1, (3, 3): 1}, (2, 3): {-1: 0, (1, 1): 1}, (2, 8): {-1: 0, (1, 6): 1, (3, 9): 1}, (3, 3): {-1: 0, (2, 0): 1}, (3, 9): {-1: 0, (2, 8): 1}, (4, 2): {-1: 0, (3, 1): 1}, (4, 7): {-1: 0, (3, 6): 1}, (5, 0): {-1: 0, (1, 1): 1, (6, 4): 1}, (5, 3): {-1: 0, (1, 1): 1}, (5, 8): {-1: 0, (1, 6): 1, (6, 10): 1}, (6, 4): {-1: 0, (5, 0): 1, (7, 5): 1}, (6, 10): {-1: 0, (5, 8): 1, (7, 11): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('node_pair', (0, 8)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 6), 1) ,
('node_pair', (1, 6)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 0)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 9)) ,
('instance/attribute match', 1) ,
('node_pair', (5, 3)) ,
('instance/attribute match', 0) ,
('node_pair', (6, 10)) ,
('instance/attribute match', 0) ,
('relation match with', (7, 11), 1) ,
('node_pair', (7, 11)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 5) ,
('Node mapping at start', [8, 6, 0, 1, 9, 3, 10, 11, -1]) ,
('Triple match number at start:', 5) ,
('Remap node', 4, 'from ', 9, 'to', 2) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 2, 3, 10, 11, -1],) ,
('saved value', 5) ,
('Remap node', 4, 'from ', 9, 'to', 7) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 7, 3, 10, 11, -1],) ,
('saved value', 4) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 9, 3, 4, 11, -1],) ,
('saved value', 4) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 9, 3, 10, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 8, ',', 1, '-', 6) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 8) ,
('Swap gain:', -1) ,
([6, 8, 0, 1, 9, 3, 10, 11, -1],) ,
('Computing match for mapping',) ,
([6, 8, 0, 1, 9, 3, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 8, ',', 2, '-', 0) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 8) ,
('Swap gain:', 0) ,
([0, 6, 8, 1, 9, 3, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 9, 3, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 8, ',', 3, '-', 1) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 8) ,
('Swap gain:', -2) ,
([1, 6, 0, 8, 9, 3, 10, 11, -1],) ,
('Computing match for mapping',) ,
([1, 6, 0, 8, 9, 3, 10, 11, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 8, ',', 4, '-', 9) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 8) ,
('Swap gain:', -2) ,
([9, 6, 0, 1, 8, 3, 10, 11, -1],) ,
('Computing match for mapping',) ,
([9, 6, 0, 1, 8, 3, 10, 11, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 8, ',', 5, '-', 3) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 8) ,
('Swap gain:', 1) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 8, ',', 6, '-', 10) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2) ,
([10, 6, 0, 1, 9, 3, 8, 11, -1],) ,
('Computing match for mapping',) ,
([10, 6, 0, 1, 9, 3, 8, 11, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 8, ',', 7, '-', 11) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -3) ,
([11, 6, 0, 1, 9, 3, 10, 8, -1],) ,
('Computing match for mapping',) ,
([11, 6, 0, 1, 9, 3, 10, 8, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 8, ',', 8, '-', -1) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -1) ,
([-1, 6, 0, 1, 9, 3, 10, 11, 8],) ,
('Computing match for mapping',) ,
([-1, 6, 0, 1, 9, 3, 10, 11, 8],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 0) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 6) ,
('Swap gain:', -1) ,
([8, 0, 6, 1, 9, 3, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 0, 6, 1, 9, 3, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 1) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 6) ,
('Swap gain:', 1) ,
([8, 1, 0, 6, 9, 3, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 1, 0, 6, 9, 3, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 9) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 6) ,
('Swap gain:', -2) ,
([8, 9, 0, 1, 6, 3, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 9, 0, 1, 6, 3, 10, 11, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', 3) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -1) ,
([8, 3, 0, 1, 9, 6, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 3, 0, 1, 9, 6, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 10) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -2) ,
([8, 10, 0, 1, 9, 3, 6, 11, -1],) ,
('Computing match for mapping',) ,
([8, 10, 0, 1, 9, 3, 6, 11, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 6, ',', 7, '-', 11) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([8, 11, 0, 1, 9, 3, 10, 6, -1],) ,
('Computing match for mapping',) ,
([8, 11, 0, 1, 9, 3, 10, 6, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 6, ',', 8, '-', -1) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 6) ,
('Swap gain:', -1) ,
([8, -1, 0, 1, 9, 3, 10, 11, 6],) ,
('Computing match for mapping',) ,
([8, -1, 0, 1, 9, 3, 10, 11, 6],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 1) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([8, 6, 1, 0, 9, 3, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 1, 0, 9, 3, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 9) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([8, 6, 9, 1, 0, 3, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 9, 1, 0, 3, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 3) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', 0) ,
([8, 6, 3, 1, 9, 0, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 3, 1, 9, 0, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 10) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([8, 6, 10, 1, 9, 3, 0, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 10, 1, 9, 3, 0, 11, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 0, ',', 7, '-', 11) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 0) ,
('Swap gain:', -2) ,
([8, 6, 11, 1, 9, 3, 10, 0, -1],) ,
('Computing match for mapping',) ,
([8, 6, 11, 1, 9, 3, 10, 0, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 0, ',', 8, '-', -1) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', 0) ,
([8, 6, -1, 1, 9, 3, 10, 11, 0],) ,
('Computing match for mapping',) ,
([8, 6, -1, 1, 9, 3, 10, 11, 0],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([8, 6, 0, 9, 1, 3, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 9, 1, 3, 10, 11, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 3) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', 0) ,
([8, 6, 0, 3, 9, 1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 3, 9, 1, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 10) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([8, 6, 0, 10, 9, 3, 1, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 10, 9, 3, 1, 11, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -3) ,
([8, 6, 0, 11, 9, 3, 10, 1, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 11, 9, 3, 10, 1, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', -1) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 1) ,
('Swap gain:', -1) ,
([8, 6, 0, -1, 9, 3, 10, 11, 1],) ,
('Computing match for mapping',) ,
([8, 6, 0, -1, 9, 3, 10, 11, 1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 3) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 9) ,
('Swap gain:', -1) ,
([8, 6, 0, 1, 3, 9, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 3, 9, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -2) ,
([8, 6, 0, 1, 10, 3, 9, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 10, 3, 9, 11, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3) ,
([8, 6, 0, 1, 11, 3, 10, 9, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 11, 3, 10, 9, -1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', -1) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 9) ,
('Swap gain:', -1) ,
([8, 6, 0, 1, -1, 3, 10, 11, 9],) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, -1, 3, 10, 11, 9],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 10) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([8, 6, 0, 1, 9, 10, 3, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 9, 10, 3, 11, -1],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', 11) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 3) ,
('Swap gain:', -2) ,
([8, 6, 0, 1, 9, 11, 10, 3, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 9, 11, 10, 3, -1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 3, ',', 8, '-', -1) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', 3) ,
('Swap gain:', 0) ,
([8, 6, 0, 1, 9, -1, 10, 11, 3],) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 9, -1, 10, 11, 3],) ,
('saved value', 5) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -2) ,
([8, 6, 0, 1, 9, 3, 11, 10, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 9, 3, 11, 10, -1],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', -1) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 10) ,
('Swap gain:', -1) ,
([8, 6, 0, 1, 9, 3, -1, 11, 10],) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 9, 3, -1, 11, 10],) ,
('saved value', 4) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', -1) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 11) ,
('Swap gain:', -2) ,
([8, 6, 0, 1, 9, 3, 10, -1, 11],) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 9, 3, 10, -1, 11],) ,
('saved value', 3) ,
('Use swap gain',) ,
('Original mapping', [8, 6, 0, 1, 9, 3, 10, 11, -1]) ,
('Current mapping', [3, 6, 0, 1, 9, 8, 10, 11, -1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 6) ,
('Current mapping:', [3, 6, 0, 1, 9, 8, 10, 11, -1]) ,
('Remap node', 4, 'from ', 9, 'to', 2) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Remap node', 4, 'from ', 9, 'to', 7) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 7, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 9, 8, 4, 11, -1],) ,
('saved value', 4) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 9, 8, 10, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 6) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 3) ,
('Swap gain:', -1) ,
([6, 3, 0, 1, 9, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([6, 3, 0, 1, 9, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 0) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 3) ,
('Swap gain:', 0) ,
([0, 6, 3, 1, 9, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 9, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 1) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 0) ,
([1, 6, 0, 3, 9, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([1, 6, 0, 3, 9, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 9) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 3) ,
('Swap gain:', -1) ,
([9, 6, 0, 1, 3, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([9, 6, 0, 1, 3, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 8) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 9, 3, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', 10) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 3) ,
('Swap gain:', -2) ,
([10, 6, 0, 1, 9, 8, 3, 11, -1],) ,
('Computing match for mapping',) ,
([10, 6, 0, 1, 9, 8, 3, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 3, ',', 7, '-', 11) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 3) ,
('Swap gain:', -2) ,
([11, 6, 0, 1, 9, 8, 10, 3, -1],) ,
('Computing match for mapping',) ,
([11, 6, 0, 1, 9, 8, 10, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 3, ',', 8, '-', -1) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 3) ,
('Swap gain:', 0) ,
([-1, 6, 0, 1, 9, 8, 10, 11, 3],) ,
('Computing match for mapping',) ,
([-1, 6, 0, 1, 9, 8, 10, 11, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 0) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 6) ,
('Swap gain:', -1) ,
([3, 0, 6, 1, 9, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 0, 6, 1, 9, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 1) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 6) ,
('Swap gain:', 1) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 9) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 6) ,
('Swap gain:', -2) ,
([3, 9, 0, 1, 6, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 9, 0, 1, 6, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', 8) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 6) ,
('Swap gain:', -2) ,
([3, 8, 0, 1, 9, 6, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 8, 0, 1, 9, 6, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 10) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -3) ,
([3, 10, 0, 1, 9, 8, 6, 11, -1],) ,
('Computing match for mapping',) ,
([3, 10, 0, 1, 9, 8, 6, 11, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 6, ',', 7, '-', 11) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([3, 11, 0, 1, 9, 8, 10, 6, -1],) ,
('Computing match for mapping',) ,
([3, 11, 0, 1, 9, 8, 10, 6, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 6, ',', 8, '-', -1) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 6) ,
('Swap gain:', -1) ,
([3, -1, 0, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([3, -1, 0, 1, 9, 8, 10, 11, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 1) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([3, 6, 1, 0, 9, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 1, 0, 9, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 9) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([3, 6, 9, 1, 0, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 9, 1, 0, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 8) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -1) ,
([3, 6, 8, 1, 9, 0, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 8, 1, 9, 0, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 10) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 0) ,
('Swap gain:', -2) ,
([3, 6, 10, 1, 9, 8, 0, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 10, 1, 9, 8, 0, 11, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 0, ',', 7, '-', 11) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 0) ,
('Swap gain:', -2) ,
([3, 6, 11, 1, 9, 8, 10, 0, -1],) ,
('Computing match for mapping',) ,
([3, 6, 11, 1, 9, 8, 10, 0, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 0, ',', 8, '-', -1) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', 0) ,
([3, 6, -1, 1, 9, 8, 10, 11, 0],) ,
('Computing match for mapping',) ,
([3, 6, -1, 1, 9, 8, 10, 11, 0],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([3, 6, 0, 9, 1, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 9, 1, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 8) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([3, 6, 0, 8, 9, 1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 8, 9, 1, 10, 11, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 10) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([3, 6, 0, 10, 9, 8, 1, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 10, 9, 8, 1, 11, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -3) ,
([3, 6, 0, 11, 9, 8, 10, 1, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 11, 9, 8, 10, 1, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', -1) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 1) ,
('Swap gain:', -1) ,
([3, 6, 0, -1, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([3, 6, 0, -1, 9, 8, 10, 11, 1],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -3) ,
([3, 6, 0, 1, 8, 9, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 8, 9, 10, 11, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -3) ,
([3, 6, 0, 1, 10, 8, 9, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 10, 8, 9, 11, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3) ,
([3, 6, 0, 1, 11, 8, 10, 9, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 11, 8, 10, 9, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', -1) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 9) ,
('Swap gain:', -1) ,
([3, 6, 0, 1, -1, 8, 10, 11, 9],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, -1, 8, 10, 11, 9],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -3) ,
([3, 6, 0, 1, 9, 10, 8, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 9, 10, 8, 11, -1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -4) ,
([3, 6, 0, 1, 9, 11, 10, 8, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 9, 11, 10, 8, -1],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', -1) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -2) ,
([3, 6, 0, 1, 9, -1, 10, 11, 8],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 9, -1, 10, 11, 8],) ,
('saved value', 4) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -3) ,
([3, 6, 0, 1, 9, 8, 11, 10, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 9, 8, 11, 10, -1],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', -1) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 10) ,
('Swap gain:', -2) ,
([3, 6, 0, 1, 9, 8, -1, 11, 10],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 9, 8, -1, 11, 10],) ,
('saved value', 4) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', -1) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 11) ,
('Swap gain:', -2) ,
([3, 6, 0, 1, 9, 8, 10, -1, 11],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 9, 8, 10, -1, 11],) ,
('saved value', 4) ,
('Use swap gain',) ,
('Original mapping', [3, 6, 0, 1, 9, 8, 10, 11, -1]) ,
('Current mapping', [3, 1, 0, 6, 9, 8, 10, 11, -1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 7) ,
('Current mapping:', [3, 1, 0, 6, 9, 8, 10, 11, -1]) ,
('Remap node', 4, 'from ', 9, 'to', 2) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 2, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Remap node', 4, 'from ', 9, 'to', 7) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 7, 8, 10, 11, -1],) ,
('saved value', 7) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 9, 8, 4, 11, -1],) ,
('saved value', 5) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 9, 8, 10, 5, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 1) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 3) ,
('Swap gain:', -2) ,
([1, 3, 0, 6, 9, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([1, 3, 0, 6, 9, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 0) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 3) ,
('Swap gain:', 0) ,
([0, 1, 3, 6, 9, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 6, 9, 8, 10, 11, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 6) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 6, ',', 3, '-', 3) ,
('Swap gain:', -1) ,
([6, 1, 0, 3, 9, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([6, 1, 0, 3, 9, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 9) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([9, 1, 0, 6, 3, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([9, 1, 0, 6, 3, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 8) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([8, 1, 0, 6, 9, 3, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 1, 0, 6, 9, 3, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', 10) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([10, 1, 0, 6, 9, 8, 3, 11, -1],) ,
('Computing match for mapping',) ,
([10, 1, 0, 6, 9, 8, 3, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 3, ',', 7, '-', 11) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 3) ,
('Swap gain:', -3) ,
([11, 1, 0, 6, 9, 8, 10, 3, -1],) ,
('Computing match for mapping',) ,
([11, 1, 0, 6, 9, 8, 10, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 3, ',', 8, '-', -1) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 3) ,
('Swap gain:', -1) ,
([-1, 1, 0, 6, 9, 8, 10, 11, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 6, 9, 8, 10, 11, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 0) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', -2) ,
([3, 0, 1, 6, 9, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 0, 1, 6, 9, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 6) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 6, ',', 3, '-', 1) ,
('Swap gain:', -1) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 9) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([3, 9, 0, 6, 1, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 9, 0, 6, 1, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 8) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([3, 8, 0, 6, 9, 1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 8, 0, 6, 9, 1, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 10) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([3, 10, 0, 6, 9, 8, 1, 11, -1],) ,
('Computing match for mapping',) ,
([3, 10, 0, 6, 9, 8, 1, 11, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 11) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([3, 11, 0, 6, 9, 8, 10, 1, -1],) ,
('Computing match for mapping',) ,
([3, 11, 0, 6, 9, 8, 10, 1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 1, ',', 8, '-', -1) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([3, -1, 0, 6, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([3, -1, 0, 6, 9, 8, 10, 11, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 6) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 6, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([3, 1, 6, 0, 9, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 1, 6, 0, 9, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 9) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 0) ,
('Swap gain:', -2) ,
([3, 1, 9, 6, 0, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 1, 9, 6, 0, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 8) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -1) ,
([3, 1, 8, 6, 9, 0, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 1, 8, 6, 9, 0, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 10) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([3, 1, 10, 6, 9, 8, 0, 11, -1],) ,
('Computing match for mapping',) ,
([3, 1, 10, 6, 9, 8, 0, 11, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 0, ',', 7, '-', 11) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 0) ,
('Swap gain:', -3) ,
([3, 1, 11, 6, 9, 8, 10, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 11, 6, 9, 8, 10, 0, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 0, ',', 8, '-', -1) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', -1) ,
([3, 1, -1, 6, 9, 8, 10, 11, 0],) ,
('Computing match for mapping',) ,
([3, 1, -1, 6, 9, 8, 10, 11, 0],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 6, ',', 4, '-', 9) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 6) ,
('Swap gain:', -2) ,
([3, 1, 0, 9, 6, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 9, 6, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 6, ',', 5, '-', 8) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 6) ,
('Swap gain:', -2) ,
([3, 1, 0, 8, 9, 6, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 8, 9, 6, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 6, ',', 6, '-', 10) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -3) ,
([3, 1, 0, 10, 9, 8, 6, 11, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 10, 9, 8, 6, 11, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 6, ',', 7, '-', 11) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([3, 1, 0, 11, 9, 8, 10, 6, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 11, 9, 8, 10, 6, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 6, ',', 8, '-', -1) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 6) ,
('Swap gain:', -1) ,
([3, 1, 0, -1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([3, 1, 0, -1, 9, 8, 10, 11, 6],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -2) ,
([3, 1, 0, 6, 8, 9, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 8, 9, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -3) ,
([3, 1, 0, 6, 10, 8, 9, 11, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 10, 8, 9, 11, -1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3) ,
([3, 1, 0, 6, 11, 8, 10, 9, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 11, 8, 10, 9, -1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', -1) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 9) ,
('Swap gain:', -1) ,
([3, 1, 0, 6, -1, 8, 10, 11, 9],) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, -1, 8, 10, 11, 9],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2) ,
([3, 1, 0, 6, 9, 10, 8, 11, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 9, 10, 8, 11, -1],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -3) ,
([3, 1, 0, 6, 9, 11, 10, 8, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 9, 11, 10, 8, -1],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', -1) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -1) ,
([3, 1, 0, 6, 9, -1, 10, 11, 8],) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 9, -1, 10, 11, 8],) ,
('saved value', 6) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -3) ,
([3, 1, 0, 6, 9, 8, 11, 10, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 9, 8, 11, 10, -1],) ,
('saved value', 4) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', -1) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 10) ,
('Swap gain:', -2) ,
([3, 1, 0, 6, 9, 8, -1, 11, 10],) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 9, 8, -1, 11, 10],) ,
('saved value', 5) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', -1) ,
([3, 1, 0, 6, 9, 8, 10, 11, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 11) ,
('Swap gain:', -2) ,
([3, 1, 0, 6, 9, 8, 10, -1, 11],) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 9, 8, 10, -1, 11],) ,
('saved value', 5) ,
('no move/swap gain found',) ,
('Original mapping', [3, 1, 0, 6, 9, 8, 10, 11, -1]) ,
('Current mapping', [3, 1, 0, 6, 9, 8, 10, 11, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 6)) ,
('instance/attribute match', 0) ,
('relation match with', (2, 8), 1) ,
('node_pair', (2, 8)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0) ,
('node_pair', (4, 7)) ,
('instance/attribute match', 0) ,
('node_pair', (6, 4)) ,
('instance/attribute match', 0) ,
('node_pair', (7, 11)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 2) ,
('Node mapping at start', [0, 6, 8, 3, 7, -1, 4, 11, -1]) ,
('Triple match number at start:', 2) ,
('Remap node', 1, 'from ', 6, 'to', 1) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 7, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Remap node', 3, 'from ', 3, 'to', 1) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 7, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Remap node', 4, 'from ', 7, 'to', 2) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 2, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Remap node', 4, 'from ', 7, 'to', 9) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 9, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Remap node', 6, 'from ', 4, 'to', 10) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 7, -1, 10, 11, -1],) ,
('saved value', 3) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 7, -1, 4, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 6) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([6, 0, 8, 3, 7, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([6, 0, 8, 3, 7, -1, 4, 11, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 8) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 8, ',', 2, '-', 0) ,
('Swap gain:', 1) ,
([8, 6, 0, 3, 7, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 3, 7, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', 0) ,
([3, 6, 8, 0, 7, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 8, 0, 7, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 7) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 7, ',', 4, '-', 0) ,
('Swap gain:', 0) ,
([7, 6, 8, 3, 0, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([7, 6, 8, 3, 0, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', 1) ,
([-1, 6, 8, 3, 7, 0, 4, 11, -1],) ,
('Computing match for mapping',) ,
([-1, 6, 8, 3, 7, 0, 4, 11, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', 0) ,
([4, 6, 8, 3, 7, -1, 0, 11, -1],) ,
('Computing match for mapping',) ,
([4, 6, 8, 3, 7, -1, 0, 11, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 11) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 0) ,
('Swap gain:', -1) ,
([11, 6, 8, 3, 7, -1, 4, 0, -1],) ,
('Computing match for mapping',) ,
([11, 6, 8, 3, 7, -1, 4, 0, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', -1) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', 0) ,
([-1, 6, 8, 3, 7, -1, 4, 11, 0],) ,
('Computing match for mapping',) ,
([-1, 6, 8, 3, 7, -1, 4, 11, 0],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 8) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', 8, ',', 2, '-', 6) ,
('Swap gain:', -1) ,
([0, 8, 6, 3, 7, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 8, 6, 3, 7, -1, 4, 11, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 3) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 6) ,
('Swap gain:', 1) ,
([0, 3, 8, 6, 7, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 3, 8, 6, 7, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 7) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', 7, ',', 4, '-', 6) ,
('Swap gain:', -1) ,
([0, 7, 8, 3, 6, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 7, 8, 3, 6, -1, 4, 11, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', -1) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 6) ,
('Swap gain:', -1) ,
([0, -1, 8, 3, 7, 6, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, -1, 8, 3, 7, 6, 4, 11, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 4) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', -1) ,
([0, 4, 8, 3, 7, -1, 6, 11, -1],) ,
('Computing match for mapping',) ,
([0, 4, 8, 3, 7, -1, 6, 11, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 6, ',', 7, '-', 11) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -2) ,
([0, 11, 8, 3, 7, -1, 4, 6, -1],) ,
('Computing match for mapping',) ,
([0, 11, 8, 3, 7, -1, 4, 6, -1],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 6, ',', 8, '-', -1) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 6) ,
('Swap gain:', -1) ,
([0, -1, 8, 3, 7, -1, 4, 11, 6],) ,
('Computing match for mapping',) ,
([0, -1, 8, 3, 7, -1, 4, 11, 6],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 8, ',', 3, '-', 3) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 8) ,
('Swap gain:', -1) ,
([0, 6, 3, 8, 7, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 8, 7, -1, 4, 11, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 8, ',', 4, '-', 7) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', 7, ',', 4, '-', 8) ,
('Swap gain:', -1) ,
([0, 6, 7, 3, 8, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 3, 8, -1, 4, 11, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 8, ',', 5, '-', -1) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 8) ,
('Swap gain:', 0) ,
([0, 6, -1, 3, 7, 8, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, -1, 3, 7, 8, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 8, ',', 6, '-', 4) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 8) ,
('Swap gain:', -1) ,
([0, 6, 4, 3, 7, -1, 8, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 4, 3, 7, -1, 8, 11, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 8, ',', 7, '-', 11) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 11, 3, 7, -1, 4, 8, -1],) ,
('Computing match for mapping',) ,
([0, 6, 11, 3, 7, -1, 4, 8, -1],) ,
('saved value', 0) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 8, ',', 8, '-', -1) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -1) ,
([0, 6, -1, 3, 7, -1, 4, 11, 8],) ,
('Computing match for mapping',) ,
([0, 6, -1, 3, 7, -1, 4, 11, 8],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 7) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 3, '-', 7, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([0, 6, 8, 7, 3, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 7, 3, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', -1) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', 0) ,
([0, 6, 8, -1, 7, 3, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, -1, 7, 3, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 4) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', 0) ,
([0, 6, 8, 4, 7, -1, 3, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 4, 7, -1, 3, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 3, ',', 7, '-', 11) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 3) ,
('Swap gain:', -1) ,
([0, 6, 8, 11, 7, -1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 11, 7, -1, 4, 3, -1],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 3, ',', 8, '-', -1) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 3) ,
('Swap gain:', 0) ,
([0, 6, 8, -1, 7, -1, 4, 11, 3],) ,
('Computing match for mapping',) ,
([0, 6, 8, -1, 7, -1, 4, 11, 3],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 7, ',', 5, '-', -1) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 7) ,
('Swap gain:', 0) ,
([0, 6, 8, 3, -1, 7, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, -1, 7, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 7, ',', 6, '-', 4) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', 0) ,
([0, 6, 8, 3, 4, -1, 7, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 4, -1, 7, 11, -1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 7, ',', 7, '-', 11) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 7) ,
('Swap gain:', -1) ,
([0, 6, 8, 3, 11, -1, 4, 7, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 11, -1, 4, 7, -1],) ,
('saved value', 1) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 7, ',', 8, '-', -1) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 7) ,
('Swap gain:', 0) ,
([0, 6, 8, 3, -1, -1, 4, 11, 7],) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, -1, -1, 4, 11, 7],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', 4) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', 0) ,
([0, 6, 8, 3, 7, 4, -1, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 7, 4, -1, 11, -1],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', -1, ',', 7, '-', 11) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', -1) ,
('Swap gain:', -1) ,
([0, 6, 8, 3, 7, 11, 4, -1, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 7, 11, 4, -1, -1],) ,
('saved value', 1) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', -1, ',', 8, '-', -1) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', -1) ,
('Swap gain:', 0) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 11) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 4) ,
('Swap gain:', -1) ,
([0, 6, 8, 3, 7, -1, 11, 4, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 7, -1, 11, 4, -1],) ,
('saved value', 1) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 4, ',', 8, '-', -1) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 4) ,
('Swap gain:', 0) ,
([0, 6, 8, 3, 7, -1, -1, 11, 4],) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 7, -1, -1, 11, 4],) ,
('saved value', 2) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', -1) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 11) ,
('Swap gain:', -1) ,
([0, 6, 8, 3, 7, -1, 4, -1, 11],) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 7, -1, 4, -1, 11],) ,
('saved value', 1) ,
('Use move gain',) ,
('Original mapping', [0, 6, 8, 3, 7, -1, 4, 11, -1]) ,
('Current mapping', [0, 6, 8, 1, 7, -1, 4, 11, -1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 3) ,
('Current mapping:', [0, 6, 8, 1, 7, -1, 4, 11, -1]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Remap node', 2, 'from ', 8, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 7, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 7, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Remap node', 3, 'from ', 1, 'to', 9) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 7, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Remap node', 4, 'from ', 7, 'to', 2) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('saved value', 4) ,
('Remap node', 4, 'from ', 7, 'to', 9) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 9, -1, 4, 11, -1],) ,
('saved value', 4) ,
('Remap node', 5, 'from ', -1, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 7, 3, 4, 11, -1],) ,
('saved value', 3) ,
('Remap node', 6, 'from ', 4, 'to', 10) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 7, -1, 10, 11, -1],) ,
('saved value', 4) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 7, -1, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 6) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([6, 0, 8, 1, 7, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([6, 0, 8, 1, 7, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 8) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 8, ',', 2, '-', 0) ,
('Swap gain:', 0) ,
([8, 6, 0, 1, 7, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 7, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([1, 6, 8, 0, 7, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([1, 6, 8, 0, 7, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 7) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 7, ',', 4, '-', 0) ,
('Swap gain:', 0) ,
([7, 6, 8, 1, 0, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([7, 6, 8, 1, 0, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', 1) ,
([-1, 6, 8, 1, 7, 0, 4, 11, -1],) ,
('Computing match for mapping',) ,
([-1, 6, 8, 1, 7, 0, 4, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', 0) ,
([4, 6, 8, 1, 7, -1, 0, 11, -1],) ,
('Computing match for mapping',) ,
([4, 6, 8, 1, 7, -1, 0, 11, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 11) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 0) ,
('Swap gain:', -1) ,
([11, 6, 8, 1, 7, -1, 4, 0, -1],) ,
('Computing match for mapping',) ,
([11, 6, 8, 1, 7, -1, 4, 0, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', -1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', 0) ,
([-1, 6, 8, 1, 7, -1, 4, 11, 0],) ,
('Computing match for mapping',) ,
([-1, 6, 8, 1, 7, -1, 4, 11, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 8) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', 8, ',', 2, '-', 6) ,
('Swap gain:', -1) ,
([0, 8, 6, 1, 7, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 8, 6, 1, 7, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 6) ,
('Swap gain:', 1) ,
([0, 1, 8, 6, 7, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 6, 7, -1, 4, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 7) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', 7, ',', 4, '-', 6) ,
('Swap gain:', -1) ,
([0, 7, 8, 1, 6, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 7, 8, 1, 6, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', -1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 6) ,
('Swap gain:', -1) ,
([0, -1, 8, 1, 7, 6, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, -1, 8, 1, 7, 6, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 4) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', -1) ,
([0, 4, 8, 1, 7, -1, 6, 11, -1],) ,
('Computing match for mapping',) ,
([0, 4, 8, 1, 7, -1, 6, 11, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 6, ',', 7, '-', 11) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -2) ,
([0, 11, 8, 1, 7, -1, 4, 6, -1],) ,
('Computing match for mapping',) ,
([0, 11, 8, 1, 7, -1, 4, 6, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 6, ',', 8, '-', -1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 6) ,
('Swap gain:', -1) ,
([0, -1, 8, 1, 7, -1, 4, 11, 6],) ,
('Computing match for mapping',) ,
([0, -1, 8, 1, 7, -1, 4, 11, 6],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 8, ',', 3, '-', 1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 1, 8, 7, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 1, 8, 7, -1, 4, 11, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 8, ',', 4, '-', 7) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', 7, ',', 4, '-', 8) ,
('Swap gain:', -1) ,
([0, 6, 7, 1, 8, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 1, 8, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 8, ',', 5, '-', -1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 8) ,
('Swap gain:', 0) ,
([0, 6, -1, 1, 7, 8, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 7, 8, 4, 11, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 8, ',', 6, '-', 4) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 8) ,
('Swap gain:', -1) ,
([0, 6, 4, 1, 7, -1, 8, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 7, -1, 8, 11, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 8, ',', 7, '-', 11) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 11, 1, 7, -1, 4, 8, -1],) ,
('Computing match for mapping',) ,
([0, 6, 11, 1, 7, -1, 4, 8, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 8, ',', 8, '-', -1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -1) ,
([0, 6, -1, 1, 7, -1, 4, 11, 8],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 7, -1, 4, 11, 8],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 7) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 3, '-', 7, ',', 4, '-', 1) ,
('Swap gain:', -1) ,
([0, 6, 8, 7, 1, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 7, 1, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', -1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([0, 6, 8, -1, 7, 1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, -1, 7, 1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 4) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -1) ,
([0, 6, 8, 4, 7, -1, 1, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 4, 7, -1, 1, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -2) ,
([0, 6, 8, 11, 7, -1, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 11, 7, -1, 4, 1, -1],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', -1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 1) ,
('Swap gain:', -1) ,
([0, 6, 8, -1, 7, -1, 4, 11, 1],) ,
('Computing match for mapping',) ,
([0, 6, 8, -1, 7, -1, 4, 11, 1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 7, ',', 5, '-', -1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 7) ,
('Swap gain:', 0) ,
([0, 6, 8, 1, -1, 7, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, -1, 7, 4, 11, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 7, ',', 6, '-', 4) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', 0) ,
([0, 6, 8, 1, 4, -1, 7, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 4, -1, 7, 11, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 7, ',', 7, '-', 11) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 7) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, 11, -1, 4, 7, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 11, -1, 4, 7, -1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 7, ',', 8, '-', -1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 7) ,
('Swap gain:', 0) ,
([0, 6, 8, 1, -1, -1, 4, 11, 7],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, -1, -1, 4, 11, 7],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', 4) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', 0) ,
([0, 6, 8, 1, 7, 4, -1, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 7, 4, -1, 11, -1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', -1, ',', 7, '-', 11) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', -1) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, 7, 11, 4, -1, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 7, 11, 4, -1, -1],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', -1, ',', 8, '-', -1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', -1) ,
('Swap gain:', 0) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 11) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 4) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, 7, -1, 11, 4, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 7, -1, 11, 4, -1],) ,
('saved value', 2) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 4, ',', 8, '-', -1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 4) ,
('Swap gain:', 0) ,
([0, 6, 8, 1, 7, -1, -1, 11, 4],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 7, -1, -1, 11, 4],) ,
('saved value', 3) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', -1) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 11) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, 7, -1, 4, -1, 11],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 7, -1, 4, -1, 11],) ,
('saved value', 2) ,
('Use move gain',) ,
('Original mapping', [0, 6, 8, 1, 7, -1, 4, 11, -1]) ,
('Current mapping', [0, 6, 8, 1, 2, -1, 4, 11, -1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 4) ,
('Current mapping:', [0, 6, 8, 1, 2, -1, 4, 11, -1]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('saved value', 4) ,
('Remap node', 2, 'from ', 8, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 2, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Remap node', 3, 'from ', 1, 'to', 9) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 2, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Remap node', 4, 'from ', 2, 'to', 7) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 7, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Remap node', 4, 'from ', 2, 'to', 9) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 9, -1, 4, 11, -1],) ,
('saved value', 4) ,
('Remap node', 5, 'from ', -1, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, 3, 4, 11, -1],) ,
('saved value', 4) ,
('Remap node', 6, 'from ', 4, 'to', 10) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('saved value', 5) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, -1, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 6) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([6, 0, 8, 1, 2, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([6, 0, 8, 1, 2, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 8) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 8, ',', 2, '-', 0) ,
('Swap gain:', 0) ,
([8, 6, 0, 1, 2, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 2, -1, 4, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([1, 6, 8, 0, 2, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([1, 6, 8, 0, 2, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([2, 6, 8, 1, 0, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([2, 6, 8, 1, 0, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', 1) ,
([-1, 6, 8, 1, 2, 0, 4, 11, -1],) ,
('Computing match for mapping',) ,
([-1, 6, 8, 1, 2, 0, 4, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', 0) ,
([4, 6, 8, 1, 2, -1, 0, 11, -1],) ,
('Computing match for mapping',) ,
([4, 6, 8, 1, 2, -1, 0, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 11) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 0) ,
('Swap gain:', -1) ,
([11, 6, 8, 1, 2, -1, 4, 0, -1],) ,
('Computing match for mapping',) ,
([11, 6, 8, 1, 2, -1, 4, 0, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', 0) ,
([-1, 6, 8, 1, 2, -1, 4, 11, 0],) ,
('Computing match for mapping',) ,
([-1, 6, 8, 1, 2, -1, 4, 11, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 8) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', 8, ',', 2, '-', 6) ,
('Swap gain:', -1) ,
([0, 8, 6, 1, 2, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 8, 6, 1, 2, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 6) ,
('Swap gain:', -1) ,
([0, 1, 8, 6, 2, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 6, 2, -1, 4, 11, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 2) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -2) ,
([0, 2, 8, 1, 6, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 2, 8, 1, 6, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', -1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 6) ,
('Swap gain:', -1) ,
([0, -1, 8, 1, 2, 6, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, -1, 8, 1, 2, 6, 4, 11, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 4) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', -1) ,
([0, 4, 8, 1, 2, -1, 6, 11, -1],) ,
('Computing match for mapping',) ,
([0, 4, 8, 1, 2, -1, 6, 11, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 6, ',', 7, '-', 11) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -2) ,
([0, 11, 8, 1, 2, -1, 4, 6, -1],) ,
('Computing match for mapping',) ,
([0, 11, 8, 1, 2, -1, 4, 6, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 6, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 6) ,
('Swap gain:', -1) ,
([0, -1, 8, 1, 2, -1, 4, 11, 6],) ,
('Computing match for mapping',) ,
([0, -1, 8, 1, 2, -1, 4, 11, 6],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 8, ',', 3, '-', 1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 8) ,
('Swap gain:', -3) ,
([0, 6, 1, 8, 2, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 1, 8, 2, -1, 4, 11, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 8, ',', 4, '-', 2) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 2, 1, 8, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 1, 8, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 8, ',', 5, '-', -1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 8) ,
('Swap gain:', 0) ,
([0, 6, -1, 1, 2, 8, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, 8, 4, 11, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 8, ',', 6, '-', 4) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 8) ,
('Swap gain:', -1) ,
([0, 6, 4, 1, 2, -1, 8, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 2, -1, 8, 11, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 8, ',', 7, '-', 11) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 11, 1, 2, -1, 4, 8, -1],) ,
('Computing match for mapping',) ,
([0, 6, 11, 1, 2, -1, 4, 8, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 8, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -1) ,
([0, 6, -1, 1, 2, -1, 4, 11, 8],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, -1, 4, 11, 8],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 2) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([0, 6, 8, 2, 1, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 2, 1, -1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', -1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, 6, 8, -1, 2, 1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, -1, 2, 1, 4, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 4) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([0, 6, 8, 4, 2, -1, 1, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 4, 2, -1, 1, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -3) ,
([0, 6, 8, 11, 2, -1, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 11, 2, -1, 4, 1, -1],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([0, 6, 8, -1, 2, -1, 4, 11, 1],) ,
('Computing match for mapping',) ,
([0, 6, 8, -1, 2, -1, 4, 11, 1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', -1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, -1, 2, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, -1, 2, 4, 11, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 4) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, 4, -1, 2, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 4, -1, 2, 11, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 11) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([0, 6, 8, 1, 11, -1, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 11, -1, 4, 2, -1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 2) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, -1, -1, 4, 11, 2],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, -1, -1, 4, 11, 2],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', 4) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', 0) ,
([0, 6, 8, 1, 2, 4, -1, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, 4, -1, 11, -1],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', -1, ',', 7, '-', 11) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', -1) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, 2, 11, 4, -1, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, 11, 4, -1, -1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', -1, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', -1) ,
('Swap gain:', 0) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('saved value', 4) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 11) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 4) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, 2, -1, 11, 4, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, -1, 11, 4, -1],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 4, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 4) ,
('Swap gain:', 0) ,
([0, 6, 8, 1, 2, -1, -1, 11, 4],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, -1, -1, 11, 4],) ,
('saved value', 4) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 11) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, 2, -1, 4, -1, 11],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, -1, 4, -1, 11],) ,
('saved value', 3) ,
('Use move gain',) ,
('Original mapping', [0, 6, 8, 1, 2, -1, 4, 11, -1]) ,
('Current mapping', [0, 6, 8, 1, 2, -1, 10, 11, -1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 5) ,
('Current mapping:', [0, 6, 8, 1, 2, -1, 10, 11, -1]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('saved value', 5) ,
('Remap node', 2, 'from ', 8, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, -1, 10, 11, -1],) ,
('saved value', 4) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 2, -1, 10, 11, -1],) ,
('saved value', 3) ,
('Remap node', 3, 'from ', 1, 'to', 9) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 2, -1, 10, 11, -1],) ,
('saved value', 4) ,
('Remap node', 4, 'from ', 2, 'to', 7) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 7, -1, 10, 11, -1],) ,
('saved value', 4) ,
('Remap node', 4, 'from ', 2, 'to', 9) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 9, -1, 10, 11, -1],) ,
('saved value', 5) ,
('Remap node', 5, 'from ', -1, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, 3, 10, 11, -1],) ,
('saved value', 5) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, -1, 4, 11, -1],) ,
('saved value', 4) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, -1, 10, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 6) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([6, 0, 8, 1, 2, -1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([6, 0, 8, 1, 2, -1, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 8) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 0, '-', 8, ',', 2, '-', 0) ,
('Swap gain:', 0) ,
([8, 6, 0, 1, 2, -1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 2, -1, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([1, 6, 8, 0, 2, -1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([1, 6, 8, 0, 2, -1, 10, 11, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([2, 6, 8, 1, 0, -1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([2, 6, 8, 1, 0, -1, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', 0) ,
([-1, 6, 8, 1, 2, 0, 10, 11, -1],) ,
('Computing match for mapping',) ,
([-1, 6, 8, 1, 2, 0, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 10) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([10, 6, 8, 1, 2, -1, 0, 11, -1],) ,
('Computing match for mapping',) ,
([10, 6, 8, 1, 2, -1, 0, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 11) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 0) ,
('Swap gain:', -2) ,
([11, 6, 8, 1, 2, -1, 10, 0, -1],) ,
('Computing match for mapping',) ,
([11, 6, 8, 1, 2, -1, 10, 0, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', 0) ,
([-1, 6, 8, 1, 2, -1, 10, 11, 0],) ,
('Computing match for mapping',) ,
([-1, 6, 8, 1, 2, -1, 10, 11, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 8) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 1, '-', 8, ',', 2, '-', 6) ,
('Swap gain:', -1) ,
([0, 8, 6, 1, 2, -1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 8, 6, 1, 2, -1, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 6) ,
('Swap gain:', -1) ,
([0, 1, 8, 6, 2, -1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 6, 2, -1, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 2) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -2) ,
([0, 2, 8, 1, 6, -1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 2, 8, 1, 6, -1, 10, 11, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', -1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 6) ,
('Swap gain:', -1) ,
([0, -1, 8, 1, 2, 6, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, -1, 8, 1, 2, 6, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 10) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -2) ,
([0, 10, 8, 1, 2, -1, 6, 11, -1],) ,
('Computing match for mapping',) ,
([0, 10, 8, 1, 2, -1, 6, 11, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 6, ',', 7, '-', 11) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([0, 11, 8, 1, 2, -1, 10, 6, -1],) ,
('Computing match for mapping',) ,
([0, 11, 8, 1, 2, -1, 10, 6, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 6, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 6) ,
('Swap gain:', -1) ,
([0, -1, 8, 1, 2, -1, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, -1, 8, 1, 2, -1, 10, 11, 6],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 8, ',', 3, '-', 1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 8) ,
('Swap gain:', -3) ,
([0, 6, 1, 8, 2, -1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 1, 8, 2, -1, 10, 11, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 8, ',', 4, '-', 2) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 2, 1, 8, -1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 1, 8, -1, 10, 11, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 8, ',', 5, '-', -1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 8) ,
('Swap gain:', 1) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 8, ',', 6, '-', 10) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 10, 1, 2, -1, 8, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 10, 1, 2, -1, 8, 11, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 8, ',', 7, '-', 11) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -3) ,
([0, 6, 11, 1, 2, -1, 10, 8, -1],) ,
('Computing match for mapping',) ,
([0, 6, 11, 1, 2, -1, 10, 8, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 8, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -1) ,
([0, 6, -1, 1, 2, -1, 10, 11, 8],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, -1, 10, 11, 8],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 2) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([0, 6, 8, 2, 1, -1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 2, 1, -1, 10, 11, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', -1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, 6, 8, -1, 2, 1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, -1, 2, 1, 10, 11, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 10) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([0, 6, 8, 10, 2, -1, 1, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 10, 2, -1, 1, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 8, 11, 2, -1, 10, 1, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 11, 2, -1, 10, 1, -1],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([0, 6, 8, -1, 2, -1, 10, 11, 1],) ,
('Computing match for mapping',) ,
([0, 6, 8, -1, 2, -1, 10, 11, 1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', -1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, -1, 2, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, -1, 2, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 10) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([0, 6, 8, 1, 10, -1, 2, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 10, -1, 2, 11, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 11) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -3) ,
([0, 6, 8, 1, 11, -1, 10, 2, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 11, -1, 10, 2, -1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 2) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, -1, -1, 10, 11, 2],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, -1, -1, 10, 11, 2],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', 10) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', -1) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, 2, 10, -1, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, 10, -1, 11, -1],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', -1, ',', 7, '-', 11) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', -1) ,
('Swap gain:', -2) ,
([0, 6, 8, 1, 2, 11, 10, -1, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, 11, 10, -1, -1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', -1, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', -1) ,
('Swap gain:', 0) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -2) ,
([0, 6, 8, 1, 2, -1, 11, 10, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, -1, 11, 10, -1],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 10) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, 2, -1, -1, 11, 10],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, -1, -1, 11, 10],) ,
('saved value', 4) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', -1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 11) ,
('Swap gain:', -2) ,
([0, 6, 8, 1, 2, -1, 10, -1, 11],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, -1, 10, -1, 11],) ,
('saved value', 3) ,
('Use swap gain',) ,
('Original mapping', [0, 6, 8, 1, 2, -1, 10, 11, -1]) ,
('Current mapping', [0, 6, -1, 1, 2, 8, 10, 11, -1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 6) ,
('Current mapping:', [0, 6, -1, 1, 2, 8, 10, 11, -1]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Remap node', 2, 'from ', -1, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 6, -1, 3, 2, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Remap node', 3, 'from ', 1, 'to', 9) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 6, -1, 9, 2, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Remap node', 4, 'from ', 2, 'to', 7) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 7, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Remap node', 4, 'from ', 2, 'to', 9) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 9, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Remap node', 5, 'from ', 8, 'to', 3) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, 3, 10, 11, -1],) ,
('saved value', 4) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, 8, 4, 11, -1],) ,
('saved value', 4) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, 8, 10, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 6) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([6, 0, -1, 1, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([6, 0, -1, 1, 2, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', 0) ,
([-1, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([-1, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([1, 6, -1, 0, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([1, 6, -1, 0, 2, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([2, 6, -1, 1, 0, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([2, 6, -1, 1, 0, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -1) ,
([8, 6, -1, 1, 2, 0, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, -1, 1, 2, 0, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 10) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 0) ,
('Swap gain:', -2) ,
([10, 6, -1, 1, 2, 8, 0, 11, -1],) ,
('Computing match for mapping',) ,
([10, 6, -1, 1, 2, 8, 0, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 11) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 0) ,
('Swap gain:', -2) ,
([11, 6, -1, 1, 2, 8, 10, 0, -1],) ,
('Computing match for mapping',) ,
([11, 6, -1, 1, 2, 8, 10, 0, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', -1) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', 0) ,
([-1, 6, -1, 1, 2, 8, 10, 11, 0],) ,
('Computing match for mapping',) ,
([-1, 6, -1, 1, 2, 8, 10, 11, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', -1) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 6) ,
('Swap gain:', -1) ,
([0, -1, 6, 1, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, -1, 6, 1, 2, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 1) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 6) ,
('Swap gain:', -1) ,
([0, 1, -1, 6, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 6, 2, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 2) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -2) ,
([0, 2, -1, 1, 6, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1, 6, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', 8) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 6) ,
('Swap gain:', -2) ,
([0, 8, -1, 1, 2, 6, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 8, -1, 1, 2, 6, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 10) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -3) ,
([0, 10, -1, 1, 2, 8, 6, 11, -1],) ,
('Computing match for mapping',) ,
([0, 10, -1, 1, 2, 8, 6, 11, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 6, ',', 7, '-', 11) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([0, 11, -1, 1, 2, 8, 10, 6, -1],) ,
('Computing match for mapping',) ,
([0, 11, -1, 1, 2, 8, 10, 6, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 6, ',', 8, '-', -1) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 6) ,
('Swap gain:', -1) ,
([0, -1, -1, 1, 2, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1, 2, 8, 10, 11, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 1) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', -1) ,
('Swap gain:', -2) ,
([0, 6, 1, -1, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 1, -1, 2, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 2) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -1) ,
([0, 6, 2, 1, -1, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 1, -1, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', -1, ',', 5, '-', 8) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', -1) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, -1, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', -1, ',', 6, '-', 10) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', -1) ,
('Swap gain:', -2) ,
([0, 6, 10, 1, 2, 8, -1, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 10, 1, 2, 8, -1, 11, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', -1, ',', 7, '-', 11) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', -1) ,
('Swap gain:', -2) ,
([0, 6, 11, 1, 2, 8, 10, -1, -1],) ,
('Computing match for mapping',) ,
([0, 6, 11, 1, 2, 8, 10, -1, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', -1, ',', 8, '-', -1) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', -1) ,
('Swap gain:', 0) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 2) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([0, 6, -1, 2, 1, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, -1, 2, 1, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 8) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, -1, 8, 2, 1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, -1, 8, 2, 1, 10, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 10) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, -1, 10, 2, 8, 1, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, -1, 10, 2, 8, 1, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, -1, 11, 2, 8, 10, 1, -1],) ,
('Computing match for mapping',) ,
([0, 6, -1, 11, 2, 8, 10, 1, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', -1) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([0, 6, -1, -1, 2, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([0, 6, -1, -1, 2, 8, 10, 11, 1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 8) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 6, -1, 1, 8, 2, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 8, 2, 10, 11, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 10) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([0, 6, -1, 1, 10, 8, 2, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 10, 8, 2, 11, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 11) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -3) ,
([0, 6, -1, 1, 11, 8, 10, 2, -1],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 11, 8, 10, 2, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', -1) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 2) ,
('Swap gain:', -1) ,
([0, 6, -1, 1, -1, 8, 10, 11, 2],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, -1, 8, 10, 11, 2],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -3) ,
([0, 6, -1, 1, 2, 10, 8, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, 10, 8, 11, -1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -4) ,
([0, 6, -1, 1, 2, 11, 10, 8, -1],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, 11, 10, 8, -1],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', -1) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, -1, 1, 2, -1, 10, 11, 8],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, -1, 10, 11, 8],) ,
('saved value', 4) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -3) ,
([0, 6, -1, 1, 2, 8, 11, 10, -1],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, 8, 11, 10, -1],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', -1) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 10) ,
('Swap gain:', -2) ,
([0, 6, -1, 1, 2, 8, -1, 11, 10],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, 8, -1, 11, 10],) ,
('saved value', 4) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', -1) ,
([0, 6, -1, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 11) ,
('Swap gain:', -2) ,
([0, 6, -1, 1, 2, 8, 10, -1, 11],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, 8, 10, -1, 11],) ,
('saved value', 4) ,
('no move/swap gain found',) ,
('Original mapping', [0, 6, -1, 1, 2, 8, 10, 11, -1]) ,
('Current mapping', [0, 6, -1, 1, 2, 8, 10, 11, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 6)) ,
('instance/attribute match', 0) ,
('relation match with', (5, 8), 1) ,
('node_pair', (2, 3)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 9)) ,
('instance/attribute match', 0) ,
('node_pair', (4, 2)) ,
('instance/attribute match', 0) ,
('node_pair', (5, 8)) ,
('instance/attribute match', 0) ,
('relation match with', (6, 10), 1) ,
('node_pair', (6, 10)) ,
('instance/attribute match', 0) ,
('node_pair', (7, 5)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 3) ,
('Node mapping at start', [0, 6, 3, 9, 2, 8, 10, 5, -1]) ,
('Triple match number at start:', 3) ,
('Remap node', 1, 'from ', 6, 'to', 1) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 3, 9, 2, 8, 10, 5, -1],) ,
('saved value', 4) ,
('Remap node', 3, 'from ', 9, 'to', 1) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('saved value', 5) ,
('Remap node', 4, 'from ', 2, 'to', 7) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 7, 8, 10, 5, -1],) ,
('saved value', 3) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 2, 8, 4, 5, -1],) ,
('saved value', 3) ,
('Remap node', 7, 'from ', 5, 'to', 11) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 2, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 6) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([6, 0, 3, 9, 2, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([6, 0, 3, 9, 2, 8, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', 0) ,
([3, 6, 0, 9, 2, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 9, 2, 8, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 9) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 0) ,
('Swap gain:', 0) ,
([9, 6, 3, 0, 2, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([9, 6, 3, 0, 2, 8, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', 0) ,
([2, 6, 3, 9, 0, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([2, 6, 3, 9, 0, 8, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -1) ,
([8, 6, 3, 9, 2, 0, 10, 5, -1],) ,
('Computing match for mapping',) ,
([8, 6, 3, 9, 2, 0, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 10) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([10, 6, 3, 9, 2, 8, 0, 5, -1],) ,
('Computing match for mapping',) ,
([10, 6, 3, 9, 2, 8, 0, 5, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 5) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 7, '-', 0) ,
('Swap gain:', -1) ,
([5, 6, 3, 9, 2, 8, 10, 0, -1],) ,
('Computing match for mapping',) ,
([5, 6, 3, 9, 2, 8, 10, 0, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', -1) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', 0) ,
([-1, 6, 3, 9, 2, 8, 10, 5, 0],) ,
('Computing match for mapping',) ,
([-1, 6, 3, 9, 2, 8, 10, 5, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 3) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 6) ,
('Swap gain:', -1) ,
([0, 3, 6, 9, 2, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 9, 2, 8, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 9) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 6) ,
('Swap gain:', 0) ,
([0, 9, 3, 6, 2, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 9, 3, 6, 2, 8, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 2) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -1) ,
([0, 2, 3, 9, 6, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 9, 6, 8, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', 8) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 6) ,
('Swap gain:', -2) ,
([0, 8, 3, 9, 2, 6, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 8, 3, 9, 2, 6, 10, 5, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 10) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -2) ,
([0, 10, 3, 9, 2, 8, 6, 5, -1],) ,
('Computing match for mapping',) ,
([0, 10, 3, 9, 2, 8, 6, 5, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 6, ',', 7, '-', 5) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 7, '-', 6) ,
('Swap gain:', -2) ,
([0, 5, 3, 9, 2, 8, 10, 6, -1],) ,
('Computing match for mapping',) ,
([0, 5, 3, 9, 2, 8, 10, 6, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 6, ',', 8, '-', -1) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 6) ,
('Swap gain:', -1) ,
([0, -1, 3, 9, 2, 8, 10, 5, 6],) ,
('Computing match for mapping',) ,
([0, -1, 3, 9, 2, 8, 10, 5, 6],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 9) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 3) ,
('Swap gain:', 0) ,
([0, 6, 9, 3, 2, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 9, 3, 2, 8, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 2) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([0, 6, 2, 9, 3, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 9, 3, 8, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 8) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 3) ,
('Swap gain:', 0) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 3, ',', 6, '-', 10) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([0, 6, 10, 9, 2, 8, 3, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 10, 9, 2, 8, 3, 5, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 3, ',', 7, '-', 5) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 7, '-', 3) ,
('Swap gain:', -1) ,
([0, 6, 5, 9, 2, 8, 10, 3, -1],) ,
('Computing match for mapping',) ,
([0, 6, 5, 9, 2, 8, 10, 3, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 3, ',', 8, '-', -1) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', 3) ,
('Swap gain:', 0) ,
([0, 6, -1, 9, 2, 8, 10, 5, 3],) ,
('Computing match for mapping',) ,
([0, 6, -1, 9, 2, 8, 10, 5, 3],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 2) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 9) ,
('Swap gain:', 1) ,
([0, 6, 3, 2, 9, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 2, 9, 8, 10, 5, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 8) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -2) ,
([0, 6, 3, 8, 2, 9, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 8, 2, 9, 10, 5, -1],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 10) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -1) ,
([0, 6, 3, 10, 2, 8, 9, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 10, 2, 8, 9, 5, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 9, ',', 7, '-', 5) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 7, '-', 9) ,
('Swap gain:', -1) ,
([0, 6, 3, 5, 2, 8, 10, 9, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 5, 2, 8, 10, 9, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 9, ',', 8, '-', -1) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 9) ,
('Swap gain:', 0) ,
([0, 6, 3, -1, 2, 8, 10, 5, 9],) ,
('Computing match for mapping',) ,
([0, 6, 3, -1, 2, 8, 10, 5, 9],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 8) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -2) ,
([0, 6, 3, 9, 8, 2, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 8, 2, 10, 5, -1],) ,
('saved value', 1) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 10) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([0, 6, 3, 9, 10, 8, 2, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 10, 8, 2, 5, -1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 5) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 7, '-', 2) ,
('Swap gain:', -1) ,
([0, 6, 3, 9, 5, 8, 10, 2, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 5, 8, 10, 2, -1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', -1) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 2) ,
('Swap gain:', 0) ,
([0, 6, 3, 9, -1, 8, 10, 5, 2],) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, -1, 8, 10, 5, 2],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 3, 9, 2, 10, 8, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 2, 10, 8, 5, -1],) ,
('saved value', 1) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 5) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 5, '-', 5, ',', 7, '-', 8) ,
('Swap gain:', -3) ,
([0, 6, 3, 9, 2, 5, 10, 8, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 2, 5, 10, 8, -1],) ,
('saved value', 0) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', -1) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 3, 9, 2, -1, 10, 5, 8],) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 2, -1, 10, 5, 8],) ,
('saved value', 1) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 5) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 6, '-', 5, ',', 7, '-', 10) ,
('Swap gain:', -2) ,
([0, 6, 3, 9, 2, 8, 5, 10, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 2, 8, 5, 10, -1],) ,
('saved value', 1) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', -1) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 10) ,
('Swap gain:', -1) ,
([0, 6, 3, 9, 2, 8, -1, 5, 10],) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 2, 8, -1, 5, 10],) ,
('saved value', 2) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 5, ',', 8, '-', -1) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 5) ,
('Swap gain:', -1) ,
([0, 6, 3, 9, 2, 8, 10, -1, 5],) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 2, 8, 10, -1, 5],) ,
('saved value', 2) ,
('Use move gain',) ,
('Original mapping', [0, 6, 3, 9, 2, 8, 10, 5, -1]) ,
('Current mapping', [0, 6, 3, 1, 2, 8, 10, 5, -1]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 5) ,
('Current mapping:', [0, 6, 3, 1, 2, 8, 10, 5, -1]) ,
('Remap node', 3, 'from ', 1, 'to', 9) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('saved value', 3) ,
('Remap node', 4, 'from ', 2, 'to', 7) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 7, 8, 10, 5, -1],) ,
('saved value', 4) ,
('Remap node', 4, 'from ', 2, 'to', 9) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 9, 8, 10, 5, -1],) ,
('saved value', 5) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 8, 4, 5, -1],) ,
('saved value', 5) ,
('Remap node', 7, 'from ', 5, 'to', 11) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 6) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([6, 0, 3, 1, 2, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([6, 0, 3, 1, 2, 8, 10, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', 0) ,
([3, 6, 0, 1, 2, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 2, 8, 10, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([1, 6, 3, 0, 2, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([1, 6, 3, 0, 2, 8, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([2, 6, 3, 1, 0, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([2, 6, 3, 1, 0, 8, 10, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -1) ,
([8, 6, 3, 1, 2, 0, 10, 5, -1],) ,
('Computing match for mapping',) ,
([8, 6, 3, 1, 2, 0, 10, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 10) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([10, 6, 3, 1, 2, 8, 0, 5, -1],) ,
('Computing match for mapping',) ,
([10, 6, 3, 1, 2, 8, 0, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 5) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 7, '-', 0) ,
('Swap gain:', -1) ,
([5, 6, 3, 1, 2, 8, 10, 0, -1],) ,
('Computing match for mapping',) ,
([5, 6, 3, 1, 2, 8, 10, 0, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', 0) ,
([-1, 6, 3, 1, 2, 8, 10, 5, 0],) ,
('Computing match for mapping',) ,
([-1, 6, 3, 1, 2, 8, 10, 5, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 3) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 6) ,
('Swap gain:', -1) ,
([0, 3, 6, 1, 2, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 1, 2, 8, 10, 5, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 1) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 6) ,
('Swap gain:', 0) ,
([0, 1, 3, 6, 2, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 6, 2, 8, 10, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 2) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -2) ,
([0, 2, 3, 1, 6, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 6, 8, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', 8) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 6) ,
('Swap gain:', -2) ,
([0, 8, 3, 1, 2, 6, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 8, 3, 1, 2, 6, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 10) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -2) ,
([0, 10, 3, 1, 2, 8, 6, 5, -1],) ,
('Computing match for mapping',) ,
([0, 10, 3, 1, 2, 8, 6, 5, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 6, ',', 7, '-', 5) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 7, '-', 6) ,
('Swap gain:', -2) ,
([0, 5, 3, 1, 2, 8, 10, 6, -1],) ,
('Computing match for mapping',) ,
([0, 5, 3, 1, 2, 8, 10, 6, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 6, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 6) ,
('Swap gain:', -1) ,
([0, -1, 3, 1, 2, 8, 10, 5, 6],) ,
('Computing match for mapping',) ,
([0, -1, 3, 1, 2, 8, 10, 5, 6],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 1) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', -2) ,
([0, 6, 1, 3, 2, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 1, 3, 2, 8, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 2) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', -1) ,
([0, 6, 2, 1, 3, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 1, 3, 8, 10, 5, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 8) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, 2, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, 3, 10, 5, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 3, ',', 6, '-', 10) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([0, 6, 10, 1, 2, 8, 3, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 10, 1, 2, 8, 3, 5, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 3, ',', 7, '-', 5) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 7, '-', 3) ,
('Swap gain:', -1) ,
([0, 6, 5, 1, 2, 8, 10, 3, -1],) ,
('Computing match for mapping',) ,
([0, 6, 5, 1, 2, 8, 10, 3, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 3, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', 3) ,
('Swap gain:', 0) ,
([0, 6, -1, 1, 2, 8, 10, 5, 3],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, 8, 10, 5, 3],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 2) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([0, 6, 3, 2, 1, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 2, 1, 8, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 8) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 3, 8, 2, 1, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 8, 2, 1, 10, 5, -1],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 10) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([0, 6, 3, 10, 2, 8, 1, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 10, 2, 8, 1, 5, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 5) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 7, '-', 1) ,
('Swap gain:', -3) ,
([0, 6, 3, 5, 2, 8, 10, 1, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 5, 2, 8, 10, 1, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([0, 6, 3, -1, 2, 8, 10, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 3, -1, 2, 8, 10, 5, 1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 8) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 6, 3, 1, 8, 2, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 8, 2, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 10) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([0, 6, 3, 1, 10, 8, 2, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 10, 8, 2, 5, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 5) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([0, 6, 3, 1, 5, 8, 10, 2, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 5, 8, 10, 2, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 2) ,
('Swap gain:', -1) ,
([0, 6, 3, 1, -1, 8, 10, 5, 2],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, -1, 8, 10, 5, 2],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 3, 1, 2, 10, 8, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 10, 8, 5, -1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 5) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 5, '-', 5, ',', 7, '-', 8) ,
('Swap gain:', -3) ,
([0, 6, 3, 1, 2, 5, 10, 8, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 5, 10, 8, -1],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 3, 1, 2, -1, 10, 5, 8],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, -1, 10, 5, 8],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 5) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 6, '-', 5, ',', 7, '-', 10) ,
('Swap gain:', -2) ,
([0, 6, 3, 1, 2, 8, 5, 10, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 8, 5, 10, -1],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 10) ,
('Swap gain:', -1) ,
([0, 6, 3, 1, 2, 8, -1, 5, 10],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 8, -1, 5, 10],) ,
('saved value', 4) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 5, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 5) ,
('Swap gain:', -1) ,
([0, 6, 3, 1, 2, 8, 10, -1, 5],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 8, 10, -1, 5],) ,
('saved value', 4) ,
('Use move gain',) ,
('Original mapping', [0, 6, 3, 1, 2, 8, 10, 5, -1]) ,
('Current mapping', [0, 6, 3, 1, 2, 8, 10, 11, -1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 6) ,
('Current mapping:', [0, 6, 3, 1, 2, 8, 10, 11, -1]) ,
('Remap node', 3, 'from ', 1, 'to', 9) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 2, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Remap node', 4, 'from ', 2, 'to', 7) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 7, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Remap node', 4, 'from ', 2, 'to', 9) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 9, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 8, 4, 11, -1],) ,
('saved value', 4) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 8, 10, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 6) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([6, 0, 3, 1, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([6, 0, 3, 1, 2, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', 0) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([1, 6, 3, 0, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([1, 6, 3, 0, 2, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([2, 6, 3, 1, 0, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([2, 6, 3, 1, 0, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -1) ,
([8, 6, 3, 1, 2, 0, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 3, 1, 2, 0, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 10) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 0) ,
('Swap gain:', -2) ,
([10, 6, 3, 1, 2, 8, 0, 11, -1],) ,
('Computing match for mapping',) ,
([10, 6, 3, 1, 2, 8, 0, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 11) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 0) ,
('Swap gain:', -2) ,
([11, 6, 3, 1, 2, 8, 10, 0, -1],) ,
('Computing match for mapping',) ,
([11, 6, 3, 1, 2, 8, 10, 0, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', 0) ,
([-1, 6, 3, 1, 2, 8, 10, 11, 0],) ,
('Computing match for mapping',) ,
([-1, 6, 3, 1, 2, 8, 10, 11, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 3) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 6) ,
('Swap gain:', -1) ,
([0, 3, 6, 1, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 1, 2, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 1) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 6) ,
('Swap gain:', 0) ,
([0, 1, 3, 6, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 6, 2, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 2) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -2) ,
([0, 2, 3, 1, 6, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 6, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', 8) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 6) ,
('Swap gain:', -2) ,
([0, 8, 3, 1, 2, 6, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 8, 3, 1, 2, 6, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 10) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -3) ,
([0, 10, 3, 1, 2, 8, 6, 11, -1],) ,
('Computing match for mapping',) ,
([0, 10, 3, 1, 2, 8, 6, 11, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 6, ',', 7, '-', 11) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([0, 11, 3, 1, 2, 8, 10, 6, -1],) ,
('Computing match for mapping',) ,
([0, 11, 3, 1, 2, 8, 10, 6, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 6, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 6) ,
('Swap gain:', -1) ,
([0, -1, 3, 1, 2, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, -1, 3, 1, 2, 8, 10, 11, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 1) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', -2) ,
([0, 6, 1, 3, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 1, 3, 2, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 2) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', -1) ,
([0, 6, 2, 1, 3, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 1, 3, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 8) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([0, 6, 8, 1, 2, 3, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, 3, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 3, ',', 6, '-', 10) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 3) ,
('Swap gain:', -2) ,
([0, 6, 10, 1, 2, 8, 3, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 10, 1, 2, 8, 3, 11, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 3, ',', 7, '-', 11) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 3) ,
('Swap gain:', -2) ,
([0, 6, 11, 1, 2, 8, 10, 3, -1],) ,
('Computing match for mapping',) ,
([0, 6, 11, 1, 2, 8, 10, 3, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 3, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', 3) ,
('Swap gain:', 0) ,
([0, 6, -1, 1, 2, 8, 10, 11, 3],) ,
('Computing match for mapping',) ,
([0, 6, -1, 1, 2, 8, 10, 11, 3],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 2) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([0, 6, 3, 2, 1, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 2, 1, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 8) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 3, 8, 2, 1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 8, 2, 1, 10, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 10) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 3, 10, 2, 8, 1, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 10, 2, 8, 1, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 3, 11, 2, 8, 10, 1, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 11, 2, 8, 10, 1, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([0, 6, 3, -1, 2, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([0, 6, 3, -1, 2, 8, 10, 11, 1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 8) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 6, 3, 1, 8, 2, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 8, 2, 10, 11, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 10) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([0, 6, 3, 1, 10, 8, 2, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 10, 8, 2, 11, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 11) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -3) ,
([0, 6, 3, 1, 11, 8, 10, 2, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 11, 8, 10, 2, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 2) ,
('Swap gain:', -1) ,
([0, 6, 3, 1, -1, 8, 10, 11, 2],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, -1, 8, 10, 11, 2],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -3) ,
([0, 6, 3, 1, 2, 10, 8, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 10, 8, 11, -1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -4) ,
([0, 6, 3, 1, 2, 11, 10, 8, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 11, 10, 8, -1],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 3, 1, 2, -1, 10, 11, 8],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, -1, 10, 11, 8],) ,
('saved value', 4) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -3) ,
([0, 6, 3, 1, 2, 8, 11, 10, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 8, 11, 10, -1],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 10) ,
('Swap gain:', -2) ,
([0, 6, 3, 1, 2, 8, -1, 11, 10],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 8, -1, 11, 10],) ,
('saved value', 4) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', -1) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 11) ,
('Swap gain:', -2) ,
([0, 6, 3, 1, 2, 8, 10, -1, 11],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 8, 10, -1, 11],) ,
('saved value', 4) ,
('no move/swap gain found',) ,
('Original mapping', [0, 6, 3, 1, 2, 8, 10, 11, -1]) ,
('Current mapping', [0, 6, 3, 1, 2, 8, 10, 11, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('saved value', 3) ,
('Node mapping at start', [0, 6, 8, 9, 2, 3, 10, 5, -1]) ,
('Triple match number at start:', 3) ,
('Remap node', 1, 'from ', 6, 'to', 1) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('saved value', 4) ,
('Remap node', 3, 'from ', 9, 'to', 1) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, 3, 10, 5, -1],) ,
('saved value', 4) ,
('Remap node', 4, 'from ', 2, 'to', 7) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 7, 3, 10, 5, -1],) ,
('saved value', 3) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 2, 3, 4, 5, -1],) ,
('saved value', 4) ,
('Remap node', 7, 'from ', 5, 'to', 11) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 2, 3, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 6) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([6, 0, 8, 9, 2, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([6, 0, 8, 9, 2, 3, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 8) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', 8, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([8, 6, 0, 9, 2, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 9, 2, 3, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 9) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([9, 6, 8, 0, 2, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([9, 6, 8, 0, 2, 3, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', 0) ,
([2, 6, 8, 9, 0, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([2, 6, 8, 9, 0, 3, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', 0) ,
([3, 6, 8, 9, 2, 0, 10, 5, -1],) ,
('Computing match for mapping',) ,
([3, 6, 8, 9, 2, 0, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 10) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 0) ,
('Swap gain:', 0) ,
([10, 6, 8, 9, 2, 3, 0, 5, -1],) ,
('Computing match for mapping',) ,
([10, 6, 8, 9, 2, 3, 0, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 5) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 7, '-', 0) ,
('Swap gain:', -1) ,
([5, 6, 8, 9, 2, 3, 10, 0, -1],) ,
('Computing match for mapping',) ,
([5, 6, 8, 9, 2, 3, 10, 0, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', -1) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', 0) ,
([-1, 6, 8, 9, 2, 3, 10, 5, 0],) ,
('Computing match for mapping',) ,
([-1, 6, 8, 9, 2, 3, 10, 5, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 8) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 1, '-', 8, ',', 2, '-', 6) ,
('Swap gain:', -2) ,
([0, 8, 6, 9, 2, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 8, 6, 9, 2, 3, 10, 5, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 9) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 6) ,
('Swap gain:', -1) ,
([0, 9, 8, 6, 2, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 9, 8, 6, 2, 3, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 2) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -1) ,
([0, 2, 8, 9, 6, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 2, 8, 9, 6, 3, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', 3) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -1) ,
([0, 3, 8, 9, 2, 6, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 3, 8, 9, 2, 6, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 10) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -1) ,
([0, 10, 8, 9, 2, 3, 6, 5, -1],) ,
('Computing match for mapping',) ,
([0, 10, 8, 9, 2, 3, 6, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 6, ',', 7, '-', 5) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 7, '-', 6) ,
('Swap gain:', -2) ,
([0, 5, 8, 9, 2, 3, 10, 6, -1],) ,
('Computing match for mapping',) ,
([0, 5, 8, 9, 2, 3, 10, 6, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 6, ',', 8, '-', -1) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 6) ,
('Swap gain:', -1) ,
([0, -1, 8, 9, 2, 3, 10, 5, 6],) ,
('Computing match for mapping',) ,
([0, -1, 8, 9, 2, 3, 10, 5, 6],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 8, ',', 3, '-', 9) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 9, 8, 2, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 9, 8, 2, 3, 10, 5, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 8, ',', 4, '-', 2) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 2, 9, 8, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 9, 8, 3, 10, 5, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 8, ',', 5, '-', 3) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 8) ,
('Swap gain:', 0) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 9, 2, 8, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 8, ',', 6, '-', 10) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, 10, 9, 2, 3, 8, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 10, 9, 2, 3, 8, 5, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 8, ',', 7, '-', 5) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 7, '-', 8) ,
('Swap gain:', -3) ,
([0, 6, 5, 9, 2, 3, 10, 8, -1],) ,
('Computing match for mapping',) ,
([0, 6, 5, 9, 2, 3, 10, 8, -1],) ,
('saved value', 0) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 8, ',', 8, '-', -1) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -2) ,
([0, 6, -1, 9, 2, 3, 10, 5, 8],) ,
('Computing match for mapping',) ,
([0, 6, -1, 9, 2, 3, 10, 5, 8],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 2) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 9) ,
('Swap gain:', 0) ,
([0, 6, 8, 2, 9, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 2, 9, 3, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 3) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 9) ,
('Swap gain:', -1) ,
([0, 6, 8, 3, 2, 9, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 3, 2, 9, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 10) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -1) ,
([0, 6, 8, 10, 2, 3, 9, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 10, 2, 3, 9, 5, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 9, ',', 7, '-', 5) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 7, '-', 9) ,
('Swap gain:', -2) ,
([0, 6, 8, 5, 2, 3, 10, 9, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 5, 2, 3, 10, 9, -1],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 9, ',', 8, '-', -1) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 9) ,
('Swap gain:', -1) ,
([0, 6, 8, -1, 2, 3, 10, 5, 9],) ,
('Computing match for mapping',) ,
([0, 6, 8, -1, 2, 3, 10, 5, 9],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 3) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', 0) ,
([0, 6, 8, 9, 3, 2, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 3, 2, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 10) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', 0) ,
([0, 6, 8, 9, 10, 3, 2, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 10, 3, 2, 5, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 5) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 7, '-', 2) ,
('Swap gain:', -1) ,
([0, 6, 8, 9, 5, 3, 10, 2, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 5, 3, 10, 2, -1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', -1) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 2) ,
('Swap gain:', 0) ,
([0, 6, 8, 9, -1, 3, 10, 5, 2],) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, -1, 3, 10, 5, 2],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 10) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 3) ,
('Swap gain:', 0) ,
([0, 6, 8, 9, 2, 10, 3, 5, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 2, 10, 3, 5, -1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', 5) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 5, '-', 5, ',', 7, '-', 3) ,
('Swap gain:', -1) ,
([0, 6, 8, 9, 2, 5, 10, 3, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 2, 5, 10, 3, -1],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 3, ',', 8, '-', -1) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', 3) ,
('Swap gain:', 0) ,
([0, 6, 8, 9, 2, -1, 10, 5, 3],) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 2, -1, 10, 5, 3],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 5) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 6, '-', 5, ',', 7, '-', 10) ,
('Swap gain:', -1) ,
([0, 6, 8, 9, 2, 3, 5, 10, -1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 2, 3, 5, 10, -1],) ,
('saved value', 2) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', -1) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 10) ,
('Swap gain:', 0) ,
([0, 6, 8, 9, 2, 3, -1, 5, 10],) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 2, 3, -1, 5, 10],) ,
('saved value', 3) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 5, ',', 8, '-', -1) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 5) ,
('Swap gain:', -1) ,
([0, 6, 8, 9, 2, 3, 10, -1, 5],) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 2, 3, 10, -1, 5],) ,
('saved value', 2) ,
('Use move gain',) ,
('Original mapping', [0, 6, 8, 9, 2, 3, 10, 5, -1]) ,
('Current mapping', [0, 1, 8, 9, 2, 3, 10, 5, -1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 4) ,
('Current mapping:', [0, 1, 8, 9, 2, 3, 10, 5, -1]) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 2, 3, 10, 5, -1],) ,
('saved value', 3) ,
('Remap node', 3, 'from ', 9, 'to', 6) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 8, 6, 2, 3, 10, 5, -1],) ,
('saved value', 4) ,
('Remap node', 4, 'from ', 2, 'to', 7) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 7, 3, 10, 5, -1],) ,
('saved value', 4) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('saved value', 5) ,
('Remap node', 7, 'from ', 5, 'to', 11) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 3, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([1, 0, 8, 9, 2, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([1, 0, 8, 9, 2, 3, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 8) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', 8, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([8, 1, 0, 9, 2, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([8, 1, 0, 9, 2, 3, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 9) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([9, 1, 8, 0, 2, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([9, 1, 8, 0, 2, 3, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([2, 1, 8, 9, 0, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([2, 1, 8, 9, 0, 3, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', 0) ,
([3, 1, 8, 9, 2, 0, 10, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 2, 0, 10, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 10) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([10, 1, 8, 9, 2, 3, 0, 5, -1],) ,
('Computing match for mapping',) ,
([10, 1, 8, 9, 2, 3, 0, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 5) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 7, '-', 0) ,
('Swap gain:', -2) ,
([5, 1, 8, 9, 2, 3, 10, 0, -1],) ,
('Computing match for mapping',) ,
([5, 1, 8, 9, 2, 3, 10, 0, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 8, 9, 2, 3, 10, 5, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 8, 9, 2, 3, 10, 5, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 8) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 1, '-', 8, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 8, 1, 9, 2, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 8, 1, 9, 2, 3, 10, 5, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 9) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 1) ,
('Swap gain:', -1) ,
([0, 9, 8, 1, 2, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 9, 8, 1, 2, 3, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([0, 2, 8, 9, 1, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 2, 8, 9, 1, 3, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 8, 9, 2, 1, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 3, 8, 9, 2, 1, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 10) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([0, 10, 8, 9, 2, 3, 1, 5, -1],) ,
('Computing match for mapping',) ,
([0, 10, 8, 9, 2, 3, 1, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 5) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 7, '-', 1) ,
('Swap gain:', -3) ,
([0, 5, 8, 9, 2, 3, 10, 1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 8, 9, 2, 3, 10, 1, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 1, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 8, 9, 2, 3, 10, 5, 1],) ,
('Computing match for mapping',) ,
([0, -1, 8, 9, 2, 3, 10, 5, 1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 8, ',', 3, '-', 9) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 8) ,
('Swap gain:', -1) ,
([0, 1, 9, 8, 2, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 9, 8, 2, 3, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 8, ',', 4, '-', 2) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 8) ,
('Swap gain:', -1) ,
([0, 1, 2, 9, 8, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 8, 3, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 8, ',', 5, '-', 3) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 8) ,
('Swap gain:', 0) ,
([0, 1, 3, 9, 2, 8, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 9, 2, 8, 10, 5, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 8, ',', 6, '-', 10) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -1) ,
([0, 1, 10, 9, 2, 3, 8, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 10, 9, 2, 3, 8, 5, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 8, ',', 7, '-', 5) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 7, '-', 8) ,
('Swap gain:', -2) ,
([0, 1, 5, 9, 2, 3, 10, 8, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 9, 2, 3, 10, 8, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 8, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -1) ,
([0, 1, -1, 9, 2, 3, 10, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, -1, 9, 2, 3, 10, 5, 8],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 2) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 9) ,
('Swap gain:', 0) ,
([0, 1, 8, 2, 9, 3, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 2, 9, 3, 10, 5, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 3) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 9) ,
('Swap gain:', -2) ,
([0, 1, 8, 3, 2, 9, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 2, 9, 10, 5, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 10) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -1) ,
([0, 1, 8, 10, 2, 3, 9, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 10, 2, 3, 9, 5, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 9, ',', 7, '-', 5) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 7, '-', 9) ,
('Swap gain:', -2) ,
([0, 1, 8, 5, 2, 3, 10, 9, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 5, 2, 3, 10, 9, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 9, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 9) ,
('Swap gain:', -1) ,
([0, 1, 8, -1, 2, 3, 10, 5, 9],) ,
('Computing match for mapping',) ,
([0, 1, 8, -1, 2, 3, 10, 5, 9],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 3) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 8, 9, 3, 2, 10, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 3, 2, 10, 5, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 10) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', 0) ,
([0, 1, 8, 9, 10, 3, 2, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 10, 3, 2, 5, -1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 5) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 7, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 8, 9, 5, 3, 10, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 5, 3, 10, 2, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 2) ,
('Swap gain:', 0) ,
([0, 1, 8, 9, -1, 3, 10, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, -1, 3, 10, 5, 2],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 10) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([0, 1, 8, 9, 2, 10, 3, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 10, 3, 5, -1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', 5) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 5, '-', 5, ',', 7, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 8, 9, 2, 5, 10, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 5, 10, 3, -1],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 3, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', 3) ,
('Swap gain:', -1) ,
([0, 1, 8, 9, 2, -1, 10, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, -1, 10, 5, 3],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 5) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 6, '-', 5, ',', 7, '-', 10) ,
('Swap gain:', -1) ,
([0, 1, 8, 9, 2, 3, 5, 10, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 3, 5, 10, -1],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 10) ,
('Swap gain:', 0) ,
([0, 1, 8, 9, 2, 3, -1, 5, 10],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 3, -1, 5, 10],) ,
('saved value', 4) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 5, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 5) ,
('Swap gain:', -1) ,
([0, 1, 8, 9, 2, 3, 10, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 3, 10, -1, 5],) ,
('saved value', 3) ,
('Use move gain',) ,
('Original mapping', [0, 1, 8, 9, 2, 3, 10, 5, -1]) ,
('Current mapping', [0, 1, 8, 9, 2, 3, 4, 5, -1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 5) ,
('Current mapping:', [0, 1, 8, 9, 2, 3, 4, 5, -1]) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 2, 3, 4, 5, -1],) ,
('saved value', 4) ,
('Remap node', 3, 'from ', 9, 'to', 6) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 8, 6, 2, 3, 4, 5, -1],) ,
('saved value', 5) ,
('Remap node', 4, 'from ', 2, 'to', 7) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 7, 3, 4, 5, -1],) ,
('saved value', 5) ,
('Remap node', 6, 'from ', 4, 'to', 10) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 3, 10, 5, -1],) ,
('saved value', 4) ,
('Remap node', 7, 'from ', 5, 'to', 11) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 3, 4, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([1, 0, 8, 9, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([1, 0, 8, 9, 2, 3, 4, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 8) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 8, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([8, 1, 0, 9, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([8, 1, 0, 9, 2, 3, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 9) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([9, 1, 8, 0, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([9, 1, 8, 0, 2, 3, 4, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([2, 1, 8, 9, 0, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([2, 1, 8, 9, 0, 3, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', 1) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -2) ,
([4, 1, 8, 9, 2, 3, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 8, 9, 2, 3, 0, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 5) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 7, '-', 0) ,
('Swap gain:', -3) ,
([5, 1, 8, 9, 2, 3, 4, 0, -1],) ,
('Computing match for mapping',) ,
([5, 1, 8, 9, 2, 3, 4, 0, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 8, 9, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 8, 9, 2, 3, 4, 5, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 8) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 8, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 8, 1, 9, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 8, 1, 9, 2, 3, 4, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 9) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 1) ,
('Swap gain:', -1) ,
([0, 9, 8, 1, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 9, 8, 1, 2, 3, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([0, 2, 8, 9, 1, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 2, 8, 9, 1, 3, 4, 5, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 8, 9, 2, 1, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 3, 8, 9, 2, 1, 4, 5, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([0, 4, 8, 9, 2, 3, 1, 5, -1],) ,
('Computing match for mapping',) ,
([0, 4, 8, 9, 2, 3, 1, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 5) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([0, 5, 8, 9, 2, 3, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 8, 9, 2, 3, 4, 1, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 1, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 8, 9, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, -1, 8, 9, 2, 3, 4, 5, 1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 8, ',', 3, '-', 9) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 8) ,
('Swap gain:', -1) ,
([0, 1, 9, 8, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 9, 8, 2, 3, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 8, ',', 4, '-', 2) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 8) ,
('Swap gain:', -1) ,
([0, 1, 2, 9, 8, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 8, 3, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 8, ',', 5, '-', 3) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 8) ,
('Swap gain:', -1) ,
([0, 1, 3, 9, 2, 8, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 9, 2, 8, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 8, ',', 6, '-', 4) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 8) ,
('Swap gain:', -2) ,
([0, 1, 4, 9, 2, 3, 8, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 9, 2, 3, 8, 5, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 8, ',', 7, '-', 5) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 7, '-', 8) ,
('Swap gain:', -3) ,
([0, 1, 5, 9, 2, 3, 4, 8, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 9, 2, 3, 4, 8, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 8, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -1) ,
([0, 1, -1, 9, 2, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, -1, 9, 2, 3, 4, 5, 8],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 2) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 9) ,
('Swap gain:', 0) ,
([0, 1, 8, 2, 9, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 2, 9, 3, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 3) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 9) ,
('Swap gain:', -2) ,
([0, 1, 8, 3, 2, 9, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 2, 9, 4, 5, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 4) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 9) ,
('Swap gain:', -2) ,
([0, 1, 8, 4, 2, 3, 9, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 2, 3, 9, 5, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 9, ',', 7, '-', 5) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 7, '-', 9) ,
('Swap gain:', -3) ,
([0, 1, 8, 5, 2, 3, 4, 9, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 5, 2, 3, 4, 9, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 9, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 9) ,
('Swap gain:', -1) ,
([0, 1, 8, -1, 2, 3, 4, 5, 9],) ,
('Computing match for mapping',) ,
([0, 1, 8, -1, 2, 3, 4, 5, 9],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 3) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 8, 9, 3, 2, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 3, 2, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 4) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 8, 9, 4, 3, 2, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 4, 3, 2, 5, -1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 5) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 8, 9, 5, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 5, 3, 4, 2, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 2) ,
('Swap gain:', 0) ,
([0, 1, 8, 9, -1, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, -1, 3, 4, 5, 2],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 8, 9, 2, 4, 3, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 4, 3, 5, -1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', 5) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 5, '-', 5, ',', 7, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 8, 9, 2, 5, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 5, 4, 3, -1],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 3, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', 3) ,
('Swap gain:', -1) ,
([0, 1, 8, 9, 2, -1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, -1, 4, 5, 3],) ,
('saved value', 4) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 5) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 6, '-', 5, ',', 7, '-', 4) ,
('Swap gain:', -2) ,
([0, 1, 8, 9, 2, 3, 5, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 3, 5, 4, -1],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 4, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 4) ,
('Swap gain:', -1) ,
([0, 1, 8, 9, 2, 3, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 3, -1, 5, 4],) ,
('saved value', 4) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 5, ',', 8, '-', -1) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 8, 9, 2, 3, 4, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 3, 4, -1, 5],) ,
('saved value', 3) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 8, 9, 2, 3, 4, 5, -1]) ,
('Current mapping', [3, 1, 8, 9, 2, 0, 4, 5, -1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 6) ,
('Current mapping:', [3, 1, 8, 9, 2, 0, 4, 5, -1]) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 6, 8, 9, 2, 0, 4, 5, -1],) ,
('saved value', 5) ,
('Remap node', 3, 'from ', 9, 'to', 6) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 1, 8, 6, 2, 0, 4, 5, -1],) ,
('saved value', 6) ,
('Remap node', 4, 'from ', 2, 'to', 7) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 7, 0, 4, 5, -1],) ,
('saved value', 6) ,
('Remap node', 6, 'from ', 4, 'to', 10) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 2, 0, 10, 5, -1],) ,
('saved value', 4) ,
('Remap node', 7, 'from ', 5, 'to', 11) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 2, 0, 4, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 1) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 3) ,
('Swap gain:', -2) ,
([1, 3, 8, 9, 2, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([1, 3, 8, 9, 2, 0, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 8) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 0, '-', 8, ',', 2, '-', 3) ,
('Swap gain:', -1) ,
([8, 1, 3, 9, 2, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([8, 1, 3, 9, 2, 0, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 9) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 3) ,
('Swap gain:', -2) ,
([9, 1, 8, 3, 2, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([9, 1, 8, 3, 2, 0, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 2) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', -1) ,
([2, 1, 8, 9, 3, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([2, 1, 8, 9, 3, 0, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 0) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 3, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', 4) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([4, 1, 8, 9, 2, 0, 3, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 8, 9, 2, 0, 3, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 3, ',', 7, '-', 5) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 7, '-', 3) ,
('Swap gain:', -3) ,
([5, 1, 8, 9, 2, 0, 4, 3, -1],) ,
('Computing match for mapping',) ,
([5, 1, 8, 9, 2, 0, 4, 3, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 3, ',', 8, '-', -1) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 3) ,
('Swap gain:', -1) ,
([-1, 1, 8, 9, 2, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 8, 9, 2, 0, 4, 5, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 8) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 1, '-', 8, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([3, 8, 1, 9, 2, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 8, 1, 9, 2, 0, 4, 5, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 9) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 1) ,
('Swap gain:', -1) ,
([3, 9, 8, 1, 2, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 9, 8, 1, 2, 0, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([3, 2, 8, 9, 1, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 2, 8, 9, 1, 0, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 0) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([3, 0, 8, 9, 2, 1, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 0, 8, 9, 2, 1, 4, 5, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([3, 4, 8, 9, 2, 0, 1, 5, -1],) ,
('Computing match for mapping',) ,
([3, 4, 8, 9, 2, 0, 1, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 5) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([3, 5, 8, 9, 2, 0, 4, 1, -1],) ,
('Computing match for mapping',) ,
([3, 5, 8, 9, 2, 0, 4, 1, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 1, ',', 8, '-', -1) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([3, -1, 8, 9, 2, 0, 4, 5, 1],) ,
('Computing match for mapping',) ,
([3, -1, 8, 9, 2, 0, 4, 5, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 8, ',', 3, '-', 9) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 8) ,
('Swap gain:', -1) ,
([3, 1, 9, 8, 2, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 9, 8, 2, 0, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 8, ',', 4, '-', 2) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 8) ,
('Swap gain:', -1) ,
([3, 1, 2, 9, 8, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 9, 8, 0, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 8, ',', 5, '-', 0) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 8) ,
('Swap gain:', -2) ,
([3, 1, 0, 9, 2, 8, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 9, 2, 8, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 8, ',', 6, '-', 4) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 8) ,
('Swap gain:', -3) ,
([3, 1, 4, 9, 2, 0, 8, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 4, 9, 2, 0, 8, 5, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 8, ',', 7, '-', 5) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 7, '-', 8) ,
('Swap gain:', -3) ,
([3, 1, 5, 9, 2, 0, 4, 8, -1],) ,
('Computing match for mapping',) ,
([3, 1, 5, 9, 2, 0, 4, 8, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 8, ',', 8, '-', -1) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -1) ,
([3, 1, -1, 9, 2, 0, 4, 5, 8],) ,
('Computing match for mapping',) ,
([3, 1, -1, 9, 2, 0, 4, 5, 8],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 2) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 9) ,
('Swap gain:', 0) ,
([3, 1, 8, 2, 9, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 8, 2, 9, 0, 4, 5, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 0) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 9) ,
('Swap gain:', -3) ,
([3, 1, 8, 0, 2, 9, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 8, 0, 2, 9, 4, 5, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 4) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 9) ,
('Swap gain:', -3) ,
([3, 1, 8, 4, 2, 0, 9, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 8, 4, 2, 0, 9, 5, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 9, ',', 7, '-', 5) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 7, '-', 9) ,
('Swap gain:', -3) ,
([3, 1, 8, 5, 2, 0, 4, 9, -1],) ,
('Computing match for mapping',) ,
([3, 1, 8, 5, 2, 0, 4, 9, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 9, ',', 8, '-', -1) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 9) ,
('Swap gain:', -1) ,
([3, 1, 8, -1, 2, 0, 4, 5, 9],) ,
('Computing match for mapping',) ,
([3, 1, 8, -1, 2, 0, 4, 5, 9],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 0) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -2) ,
([3, 1, 8, 9, 0, 2, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 0, 2, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 4) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([3, 1, 8, 9, 4, 0, 2, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 4, 0, 2, 5, -1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 5) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([3, 1, 8, 9, 5, 0, 4, 2, -1],) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 5, 0, 4, 2, -1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', -1) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 2) ,
('Swap gain:', 0) ,
([3, 1, 8, 9, -1, 0, 4, 5, 2],) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, -1, 0, 4, 5, 2],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 4) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([3, 1, 8, 9, 2, 4, 0, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 2, 4, 0, 5, -1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 5) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 5, '-', 5, ',', 7, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 8, 9, 2, 5, 4, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 2, 5, 4, 0, -1],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', -1) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', -2) ,
([3, 1, 8, 9, 2, -1, 4, 5, 0],) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 2, -1, 4, 5, 0],) ,
('saved value', 4) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 5) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 6, '-', 5, ',', 7, '-', 4) ,
('Swap gain:', -3) ,
([3, 1, 8, 9, 2, 0, 5, 4, -1],) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 2, 0, 5, 4, -1],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 4, ',', 8, '-', -1) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 4) ,
('Swap gain:', -2) ,
([3, 1, 8, 9, 2, 0, -1, 5, 4],) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 2, 0, -1, 5, 4],) ,
('saved value', 4) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 5, ',', 8, '-', -1) ,
([3, 1, 8, 9, 2, 0, 4, 5, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 5) ,
('Swap gain:', -2) ,
([3, 1, 8, 9, 2, 0, 4, -1, 5],) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 2, 0, 4, -1, 5],) ,
('saved value', 4) ,
('no move/swap gain found',) ,
('Original mapping', [3, 1, 8, 9, 2, 0, 4, 5, -1]) ,
('Current mapping', [3, 1, 8, 9, 2, 0, 4, 5, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Node mapping at start', [3, 6, 0, 1, 2, 8, 10, 11, -1]) ,
('Triple match number at start:', 6) ,
('Remap node', 3, 'from ', 1, 'to', 9) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([3, 6, 0, 9, 2, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Remap node', 4, 'from ', 2, 'to', 7) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 7, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Remap node', 4, 'from ', 2, 'to', 9) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 9, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 2, 8, 4, 11, -1],) ,
('saved value', 4) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 2, 8, 10, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 6) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 3) ,
('Swap gain:', -1) ,
([6, 3, 0, 1, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([6, 3, 0, 1, 2, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 0) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 3) ,
('Swap gain:', 0) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 1) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', -1) ,
([1, 6, 0, 3, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([1, 6, 0, 3, 2, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 2) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', -1) ,
([2, 6, 0, 1, 3, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([2, 6, 0, 1, 3, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 8) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([8, 6, 0, 1, 2, 3, 10, 11, -1],) ,
('Computing match for mapping',) ,
([8, 6, 0, 1, 2, 3, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', 10) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 3) ,
('Swap gain:', -2) ,
([10, 6, 0, 1, 2, 8, 3, 11, -1],) ,
('Computing match for mapping',) ,
([10, 6, 0, 1, 2, 8, 3, 11, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 3, ',', 7, '-', 11) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 3) ,
('Swap gain:', -2) ,
([11, 6, 0, 1, 2, 8, 10, 3, -1],) ,
('Computing match for mapping',) ,
([11, 6, 0, 1, 2, 8, 10, 3, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 3, ',', 8, '-', -1) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 0, '-', -1, ',', 8, '-', 3) ,
('Swap gain:', 0) ,
([-1, 6, 0, 1, 2, 8, 10, 11, 3],) ,
('Computing match for mapping',) ,
([-1, 6, 0, 1, 2, 8, 10, 11, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 0) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 6) ,
('Swap gain:', -1) ,
([3, 0, 6, 1, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 0, 6, 1, 2, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 1) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 6) ,
('Swap gain:', 0) ,
([3, 1, 0, 6, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 2, 8, 10, 11, -1],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 2) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -2) ,
([3, 2, 0, 1, 6, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 6, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', 8) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 6) ,
('Swap gain:', -2) ,
([3, 8, 0, 1, 2, 6, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 8, 0, 1, 2, 6, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 10) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -3) ,
([3, 10, 0, 1, 2, 8, 6, 11, -1],) ,
('Computing match for mapping',) ,
([3, 10, 0, 1, 2, 8, 6, 11, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 6, ',', 7, '-', 11) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([3, 11, 0, 1, 2, 8, 10, 6, -1],) ,
('Computing match for mapping',) ,
([3, 11, 0, 1, 2, 8, 10, 6, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 6, ',', 8, '-', -1) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 1, '-', -1, ',', 8, '-', 6) ,
('Swap gain:', -1) ,
([3, -1, 0, 1, 2, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([3, -1, 0, 1, 2, 8, 10, 11, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 1) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([3, 6, 1, 0, 2, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 1, 0, 2, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 2) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([3, 6, 2, 1, 0, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 2, 1, 0, 8, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 8) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -1) ,
([3, 6, 8, 1, 2, 0, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 8, 1, 2, 0, 10, 11, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 10) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 0) ,
('Swap gain:', -2) ,
([3, 6, 10, 1, 2, 8, 0, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 10, 1, 2, 8, 0, 11, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 0, ',', 7, '-', 11) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 0) ,
('Swap gain:', -2) ,
([3, 6, 11, 1, 2, 8, 10, 0, -1],) ,
('Computing match for mapping',) ,
([3, 6, 11, 1, 2, 8, 10, 0, -1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 0, ',', 8, '-', -1) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 2, '-', -1, ',', 8, '-', 0) ,
('Swap gain:', 0) ,
([3, 6, -1, 1, 2, 8, 10, 11, 0],) ,
('Computing match for mapping',) ,
([3, 6, -1, 1, 2, 8, 10, 11, 0],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 2) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([3, 6, 0, 2, 1, 8, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 2, 1, 8, 10, 11, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 8) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([3, 6, 0, 8, 2, 1, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 8, 2, 1, 10, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 10) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([3, 6, 0, 10, 2, 8, 1, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 10, 2, 8, 1, 11, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([3, 6, 0, 11, 2, 8, 10, 1, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 11, 2, 8, 10, 1, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', -1) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 3, '-', -1, ',', 8, '-', 1) ,
('Swap gain:', -2) ,
([3, 6, 0, -1, 2, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([3, 6, 0, -1, 2, 8, 10, 11, 1],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 8) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([3, 6, 0, 1, 8, 2, 10, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 8, 2, 10, 11, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 10) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([3, 6, 0, 1, 10, 8, 2, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 10, 8, 2, 11, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 11) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -3) ,
([3, 6, 0, 1, 11, 8, 10, 2, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 11, 8, 10, 2, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', -1) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 4, '-', -1, ',', 8, '-', 2) ,
('Swap gain:', -1) ,
([3, 6, 0, 1, -1, 8, 10, 11, 2],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, -1, 8, 10, 11, 2],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -3) ,
([3, 6, 0, 1, 2, 10, 8, 11, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 2, 10, 8, 11, -1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -4) ,
([3, 6, 0, 1, 2, 11, 10, 8, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 2, 11, 10, 8, -1],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', -1) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 5, '-', -1, ',', 8, '-', 8) ,
('Swap gain:', -2) ,
([3, 6, 0, 1, 2, -1, 10, 11, 8],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 2, -1, 10, 11, 8],) ,
('saved value', 4) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -3) ,
([3, 6, 0, 1, 2, 8, 11, 10, -1],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 2, 8, 11, 10, -1],) ,
('saved value', 3) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', -1) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 6, '-', -1, ',', 8, '-', 10) ,
('Swap gain:', -2) ,
([3, 6, 0, 1, 2, 8, -1, 11, 10],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 2, 8, -1, 11, 10],) ,
('saved value', 4) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', -1) ,
([3, 6, 0, 1, 2, 8, 10, 11, -1],) ,
('After swapping:', 7, '-', -1, ',', 8, '-', 11) ,
('Swap gain:', -2) ,
([3, 6, 0, 1, 2, 8, 10, -1, 11],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 2, 8, 10, -1, 11],) ,
('saved value', 4) ,
('no move/swap gain found',) ,
('Original mapping', [3, 6, 0, 1, 2, 8, 10, 11, -1]) ,
('Current mapping', [3, 6, 0, 1, 2, 8, 10, 11, -1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 7) ,
('best node mapping', [3, 1, 0, 6, 9, 8, 10, 11, -1]) ,
('Best node mapping alignment:', 'a0(take-10)-b3(quick-02) a1(time)-b1(method) a2(instead-of-91)-b0(have-degree-91) a3(method)-b6(method) a4(naive)-b9(naive) a5(have-quant-91)-b8(have-degree-91) a6(less)-b10(more) a7(much)-b11(much) a8(methodology)-Null') ,
('F-score:', 0.32558139534883723) ,
0.326
('AMR pair', 10) ,
('============================================',) ,
('AMR 1 (one-line):', '(c0 / count-04:ARG1 (h0 / hyperlink:destination (p0 / page)):ARG2 (v0 / vote-01:ARG1 (s0 / support-01)))') ,
('AMR 2 (one-line):', '(s0 / see-01:ARG1 (t0 / thing:ARG3-of (l0 / link-01:ARG1 (p0 / page))):ARG2 (v0 / vote-01:ARG1 (s1 / support-01)))') ,
('Instance triples of AMR 1:', 5) ,
([('instance', 'a0', 'count-04'), ('instance', 'a1', 'hyperlink'), ('instance', 'a2', 'page'), ('instance', 'a3', 'vote-01'), ('instance', 'a4', 'support-01')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'count-04')],) ,
('Relation triples of AMR 1:', 4) ,
([('ARG1', 'a0', 'a1'), ('ARG2', 'a0', 'a3'), ('destination', 'a1', 'a2'), ('ARG1', 'a3', 'a4')],) ,
('Instance triples of AMR 2:', 6) ,
([('instance', 'b0', 'see-01'), ('instance', 'b1', 'thing'), ('instance', 'b2', 'link-01'), ('instance', 'b3', 'page'), ('instance', 'b4', 'vote-01'), ('instance', 'b5', 'support-01')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'see-01')],) ,
('Relation triples of AMR 2:', 5) ,
([('ARG1', 'b0', 'b1'), ('ARG2', 'b0', 'b4'), ('ARG3', 'b2', 'b1'), ('ARG1', 'b2', 'b3'), ('ARG1', 'b4', 'b5')],) ,
('Candidate mappings:',) ,
([{0, 2, 4}, {1, 3, 5}, {3}, {0, 2, 4}, {1, 3, 5}],) ,
('Weight dictionary',) ,
({(2, 3): {-1: 1}, (3, 4): {-1: 1, (0, 0): 1, (4, 5): 1}, (4, 5): {-1: 1, (3, 4): 1}, (0, 0): {-1: 0, (1, 1): 1, (3, 4): 1}, (1, 1): {-1: 0, (0, 0): 1}, (0, 2): {-1: 0, (1, 3): 1}, (1, 3): {-1: 0, (0, 2): 1}, (0, 4): {-1: 0, (1, 5): 1}, (1, 5): {-1: 0, (0, 4): 1}, (3, 0): {-1: 0, (4, 1): 1}, (4, 1): {-1: 0, (3, 0): 1}, (3, 2): {-1: 0, (4, 3): 1}, (4, 3): {-1: 0, (3, 2): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 1), 1) ,
('relation match with', (3, 4), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 3)) ,
('instance/attribute match', 1) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 1) ,
('relation match with', (4, 5), 1) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 6) ,
('Node mapping at start', [0, 1, 3, 4, 5]) ,
('Triple match number at start:', 6) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([2, 1, 3, 4, 5],) ,
('saved value', 4) ,
('Remap node', 3, 'from ', 4, 'to', 2) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 3, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([3, 1, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 5],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 3, 0, 5],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 3, 4, 0],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 5],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 5, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 3],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 4],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 3, 4, 5]) ,
('Current mapping', [0, 1, 3, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([2, 3, -1, 4, 1],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 3), 1) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 1)) ,
('instance/attribute match', 0) ,
('match computing complete, result:', 2) ,
('Node mapping at start', [2, 3, -1, 4, 1]) ,
('Triple match number at start:', 2) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 3, -1, 4, 1],) ,
('saved value', 2) ,
('Remap node', 1, 'from ', 3, 'to', 5) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([2, 5, -1, 4, 1],) ,
('saved value', 1) ,
('Remap node', 3, 'from ', 4, 'to', 0) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([2, 3, -1, 0, 1],) ,
('saved value', 2) ,
('Remap node', 4, 'from ', 1, 'to', 5) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([2, 3, -1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 3) ,
([2, 3, -1, 4, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 2) ,
('Swap gain:', -1) ,
([3, 2, -1, 4, 1],) ,
('Computing match for mapping',) ,
([3, 2, -1, 4, 1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', -1) ,
([2, 3, -1, 4, 1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 2) ,
('Swap gain:', -1) ,
([-1, 3, 2, 4, 1],) ,
('Computing match for mapping',) ,
([-1, 3, 2, 4, 1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 4) ,
([2, 3, -1, 4, 1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -2) ,
([4, 3, -1, 2, 1],) ,
('Computing match for mapping',) ,
([4, 3, -1, 2, 1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 1) ,
([2, 3, -1, 4, 1],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([1, 3, -1, 4, 2],) ,
('Computing match for mapping',) ,
([1, 3, -1, 4, 2],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', -1) ,
([2, 3, -1, 4, 1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 3) ,
('Swap gain:', 0) ,
([2, -1, 3, 4, 1],) ,
('Computing match for mapping',) ,
([2, -1, 3, 4, 1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 4) ,
([2, 3, -1, 4, 1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -2) ,
([2, 4, -1, 3, 1],) ,
('Computing match for mapping',) ,
([2, 4, -1, 3, 1],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 1) ,
([2, 3, -1, 4, 1],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', -1) ,
([2, 1, -1, 4, 3],) ,
('Computing match for mapping',) ,
([2, 1, -1, 4, 3],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 4) ,
([2, 3, -1, 4, 1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', -1) ,
('Swap gain:', -1) ,
([2, 3, 4, -1, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, -1, 1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 1) ,
([2, 3, -1, 4, 1],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', -1) ,
('Swap gain:', 0) ,
([2, 3, 1, 4, -1],) ,
('Computing match for mapping',) ,
([2, 3, 1, 4, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 1) ,
([2, 3, -1, 4, 1],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 4) ,
('Swap gain:', -1) ,
([2, 3, -1, 1, 4],) ,
('Computing match for mapping',) ,
([2, 3, -1, 1, 4],) ,
('saved value', 1) ,
('Use move gain',) ,
('Original mapping', [2, 3, -1, 4, 1]) ,
('Current mapping', [2, 3, -1, 4, 5]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 4) ,
('Current mapping:', [2, 3, -1, 4, 5]) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 3, -1, 4, 5],) ,
('saved value', 4) ,
('Remap node', 1, 'from ', 3, 'to', 1) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([2, 1, -1, 4, 5],) ,
('saved value', 3) ,
('Remap node', 3, 'from ', 4, 'to', 0) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([2, 3, -1, 0, 5],) ,
('saved value', 2) ,
('Remap node', 4, 'from ', 5, 'to', 1) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([2, 3, -1, 4, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 3) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 2) ,
('Swap gain:', -1) ,
([3, 2, -1, 4, 5],) ,
('Computing match for mapping',) ,
([3, 2, -1, 4, 5],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', -1) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 2) ,
('Swap gain:', -1) ,
([-1, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([-1, 3, 2, 4, 5],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 4) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([4, 3, -1, 2, 5],) ,
('Computing match for mapping',) ,
([4, 3, -1, 2, 5],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 5) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([5, 3, -1, 4, 2],) ,
('Computing match for mapping',) ,
([5, 3, -1, 4, 2],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', -1) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 3) ,
('Swap gain:', 0) ,
([2, -1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, -1, 3, 4, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 4) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -3) ,
([2, 4, -1, 3, 5],) ,
('Computing match for mapping',) ,
([2, 4, -1, 3, 5],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 5) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([2, 5, -1, 4, 3],) ,
('Computing match for mapping',) ,
([2, 5, -1, 4, 3],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 4) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', -1) ,
('Swap gain:', -2) ,
([2, 3, 4, -1, 5],) ,
('Computing match for mapping',) ,
([2, 3, 4, -1, 5],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 5) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([2, 3, 5, 4, -1],) ,
('Computing match for mapping',) ,
([2, 3, 5, 4, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([2, 3, -1, 5, 4],) ,
('Computing match for mapping',) ,
([2, 3, -1, 5, 4],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [2, 3, -1, 4, 5]) ,
('Current mapping', [2, 3, -1, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([4, 3, -1, 0, 5],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 0)) ,
('instance/attribute match', 0) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 1) ,
('Node mapping at start', [4, 3, -1, 0, 5]) ,
('Triple match number at start:', 1) ,
('Remap node', 0, 'from ', 4, 'to', 2) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([2, 3, -1, 0, 5],) ,
('saved value', 2) ,
('Remap node', 1, 'from ', 3, 'to', 1) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([4, 1, -1, 0, 5],) ,
('saved value', 1) ,
('Remap node', 3, 'from ', 0, 'to', 2) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([4, 3, -1, 2, 5],) ,
('saved value', 1) ,
('Remap node', 4, 'from ', 5, 'to', 1) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([4, 3, -1, 0, 1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 3) ,
([4, 3, -1, 0, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 4) ,
('Swap gain:', 0) ,
([3, 4, -1, 0, 5],) ,
('Computing match for mapping',) ,
([3, 4, -1, 0, 5],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', -1) ,
([4, 3, -1, 0, 5],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 4) ,
('Swap gain:', 0) ,
([-1, 3, 4, 0, 5],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 0, 5],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 0) ,
([4, 3, -1, 0, 5],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 4) ,
('Swap gain:', 3) ,
([0, 3, -1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, -1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 5) ,
([4, 3, -1, 0, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -1) ,
([5, 3, -1, 0, 4],) ,
('Computing match for mapping',) ,
([5, 3, -1, 0, 4],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', -1) ,
([4, 3, -1, 0, 5],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 3) ,
('Swap gain:', 1) ,
([4, -1, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, -1, 3, 0, 5],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 0) ,
([4, 3, -1, 0, 5],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', 0) ,
([4, 0, -1, 3, 5],) ,
('Computing match for mapping',) ,
([4, 0, -1, 3, 5],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 5) ,
([4, 3, -1, 0, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([4, 5, -1, 0, 3],) ,
('Computing match for mapping',) ,
([4, 5, -1, 0, 3],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 0) ,
([4, 3, -1, 0, 5],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', -1) ,
('Swap gain:', 0) ,
([4, 3, 0, -1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 0, -1, 5],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 5) ,
([4, 3, -1, 0, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', -1) ,
('Swap gain:', -1) ,
([4, 3, 5, 0, -1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, -1],) ,
('saved value', 0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', 5) ,
([4, 3, -1, 0, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([4, 3, -1, 5, 0],) ,
('Computing match for mapping',) ,
([4, 3, -1, 5, 0],) ,
('saved value', 0) ,
('Use swap gain',) ,
('Original mapping', [4, 3, -1, 0, 5]) ,
('Current mapping', [0, 3, -1, 4, 5]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 4) ,
('Current mapping:', [0, 3, -1, 4, 5]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([2, 3, -1, 4, 5],) ,
('saved value', 4) ,
('Remap node', 1, 'from ', 3, 'to', 1) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5],) ,
('saved value', 5) ,
('Remap node', 3, 'from ', 4, 'to', 2) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 3, -1, 2, 5],) ,
('saved value', 1) ,
('Remap node', 4, 'from ', 5, 'to', 1) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 3, -1, 4, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, -1, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([3, 0, -1, 4, 5],) ,
('Computing match for mapping',) ,
([3, 0, -1, 4, 5],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 3, -1, 4, 5],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 3, 0, 4, 5],) ,
('Computing match for mapping',) ,
([-1, 3, 0, 4, 5],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 3, -1, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -3) ,
([4, 3, -1, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, -1, 0, 5],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 3, -1, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -3) ,
([5, 3, -1, 4, 0],) ,
('Computing match for mapping',) ,
([5, 3, -1, 4, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', -1) ,
([0, 3, -1, 4, 5],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 3) ,
('Swap gain:', 1) ,
([0, -1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, -1, 3, 4, 5],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 4) ,
([0, 3, -1, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -3) ,
([0, 4, -1, 3, 5],) ,
('Computing match for mapping',) ,
([0, 4, -1, 3, 5],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 5) ,
([0, 3, -1, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([0, 5, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 5, -1, 4, 3],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 4) ,
([0, 3, -1, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', -1) ,
('Swap gain:', -3) ,
([0, 3, 4, -1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, -1, 5],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 5) ,
([0, 3, -1, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 3, 5, 4, -1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 3, -1, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([0, 3, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, -1, 5, 4],) ,
('saved value', 0) ,
('Use move gain',) ,
('Original mapping', [0, 3, -1, 4, 5]) ,
('Current mapping', [0, 1, -1, 4, 5]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 5) ,
('Current mapping:', [0, 1, -1, 4, 5]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([2, 1, -1, 4, 5],) ,
('saved value', 3) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 3, -1, 4, 5],) ,
('saved value', 4) ,
('Remap node', 2, 'from ', -1, 'to', 3) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5],) ,
('saved value', 6) ,
('Remap node', 3, 'from ', 4, 'to', 2) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 5],) ,
('saved value', 2) ,
('Remap node', 4, 'from ', 5, 'to', 3) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([1, 0, -1, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, -1, 4, 5],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 4, 5],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([-1, 1, 0, 4, 5],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 4, 5],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, -1, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, -1, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, -1, 0, 5],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, -1, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, -1, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, -1, 4, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 4, 5],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, -1, 1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, -1, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, -1, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, -1, 1, 5],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, -1, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 5, -1, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, -1, 4, 1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 4) ,
([0, 1, -1, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 4, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 5],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 5) ,
([0, 1, -1, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 5, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, -1, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 5, 4],) ,
('saved value', 1) ,
('Use move gain',) ,
('Original mapping', [0, 1, -1, 4, 5]) ,
('Current mapping', [0, 1, 3, 4, 5]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 6) ,
('Current mapping:', [0, 1, 3, 4, 5]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([2, 1, 3, 4, 5],) ,
('saved value', 4) ,
('Remap node', 3, 'from ', 4, 'to', 2) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 3, 4, 5],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([3, 1, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 5],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 3, 0, 5],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 3, 4, 0],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 5],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 5, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 3],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 4],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 3, 4, 5]) ,
('Current mapping', [0, 1, 3, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([2, 5, 3, 0, 1],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 5)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 3)) ,
('instance/attribute match', 1) ,
('node_pair', (3, 0)) ,
('instance/attribute match', 0) ,
('relation match with', (4, 1), 1) ,
('node_pair', (4, 1)) ,
('instance/attribute match', 0) ,
('match computing complete, result:', 2) ,
('Node mapping at start', [2, 5, 3, 0, 1]) ,
('Triple match number at start:', 2) ,
('Remap node', 0, 'from ', 2, 'to', 4) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([4, 5, 3, 0, 1],) ,
('saved value', 3) ,
('Remap node', 3, 'from ', 0, 'to', 4) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([2, 5, 3, 4, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 5) ,
([2, 5, 3, 0, 1],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 2) ,
('Swap gain:', 0) ,
([5, 2, 3, 0, 1],) ,
('Computing match for mapping',) ,
([5, 2, 3, 0, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 3) ,
([2, 5, 3, 0, 1],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -1) ,
([3, 5, 2, 0, 1],) ,
('Computing match for mapping',) ,
([3, 5, 2, 0, 1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 0) ,
([2, 5, 3, 0, 1],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([0, 5, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 5, 3, 2, 1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 1) ,
([2, 5, 3, 0, 1],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([1, 5, 3, 0, 2],) ,
('Computing match for mapping',) ,
([1, 5, 3, 0, 2],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 3) ,
([2, 5, 3, 0, 1],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 5) ,
('Swap gain:', 0) ,
([2, 3, 5, 0, 1],) ,
('Computing match for mapping',) ,
([2, 3, 5, 0, 1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 0) ,
([2, 5, 3, 0, 1],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 5) ,
('Swap gain:', -1) ,
([2, 0, 3, 5, 1],) ,
('Computing match for mapping',) ,
([2, 0, 3, 5, 1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 1) ,
([2, 5, 3, 0, 1],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 5) ,
('Swap gain:', 0) ,
([2, 1, 3, 0, 5],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0, 5],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 0) ,
([2, 5, 3, 0, 1],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', -2) ,
([2, 5, 0, 3, 1],) ,
('Computing match for mapping',) ,
([2, 5, 0, 3, 1],) ,
('saved value', 0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 1) ,
([2, 5, 3, 0, 1],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([2, 5, 1, 0, 3],) ,
('Computing match for mapping',) ,
([2, 5, 1, 0, 3],) ,
('saved value', 0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', 1) ,
([2, 5, 3, 0, 1],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([2, 5, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 5, 3, 1, 0],) ,
('saved value', 1) ,
('Use move gain',) ,
('Original mapping', [2, 5, 3, 0, 1]) ,
('Current mapping', [4, 5, 3, 0, 1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 3) ,
('Current mapping:', [4, 5, 3, 0, 1]) ,
('Remap node', 0, 'from ', 4, 'to', 2) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([2, 5, 3, 0, 1],) ,
('saved value', 2) ,
('Remap node', 3, 'from ', 0, 'to', 2) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([4, 5, 3, 2, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 5) ,
([4, 5, 3, 0, 1],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 4) ,
('Swap gain:', -1) ,
([5, 4, 3, 0, 1],) ,
('Computing match for mapping',) ,
([5, 4, 3, 0, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 3) ,
([4, 5, 3, 0, 1],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 4) ,
('Swap gain:', -2) ,
([3, 5, 4, 0, 1],) ,
('Computing match for mapping',) ,
([3, 5, 4, 0, 1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 0) ,
([4, 5, 3, 0, 1],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 4) ,
('Swap gain:', 0) ,
([0, 5, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 1) ,
([4, 5, 3, 0, 1],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 4) ,
('Swap gain:', -2) ,
([1, 5, 3, 0, 4],) ,
('Computing match for mapping',) ,
([1, 5, 3, 0, 4],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 3) ,
([4, 5, 3, 0, 1],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 5) ,
('Swap gain:', -2) ,
([4, 3, 5, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 0) ,
([4, 5, 3, 0, 1],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 5) ,
('Swap gain:', -2) ,
([4, 0, 3, 5, 1],) ,
('Computing match for mapping',) ,
([4, 0, 3, 5, 1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 1) ,
([4, 5, 3, 0, 1],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 5) ,
('Swap gain:', -1) ,
([4, 1, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 3, 0, 5],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 0) ,
([4, 5, 3, 0, 1],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', -2) ,
([4, 5, 0, 3, 1],) ,
('Computing match for mapping',) ,
([4, 5, 0, 3, 1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 1) ,
([4, 5, 3, 0, 1],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([4, 5, 1, 0, 3],) ,
('Computing match for mapping',) ,
([4, 5, 1, 0, 3],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', 1) ,
([4, 5, 3, 0, 1],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -1) ,
([4, 5, 3, 1, 0],) ,
('Computing match for mapping',) ,
([4, 5, 3, 1, 0],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [4, 5, 3, 0, 1]) ,
('Current mapping', [4, 5, 3, 0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([2, 3, -1, 4, 5],) ,
('saved value', 4) ,
('Node mapping at start', [2, 3, -1, 4, 5]) ,
('Triple match number at start:', 4) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 3, -1, 4, 5],) ,
('saved value', 4) ,
('Remap node', 1, 'from ', 3, 'to', 1) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([2, 1, -1, 4, 5],) ,
('saved value', 3) ,
('Remap node', 3, 'from ', 4, 'to', 0) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([2, 3, -1, 0, 5],) ,
('saved value', 2) ,
('Remap node', 4, 'from ', 5, 'to', 1) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([2, 3, -1, 4, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 3) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 2) ,
('Swap gain:', -1) ,
([3, 2, -1, 4, 5],) ,
('Computing match for mapping',) ,
([3, 2, -1, 4, 5],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', -1) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 2) ,
('Swap gain:', -1) ,
([-1, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([-1, 3, 2, 4, 5],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 4) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([4, 3, -1, 2, 5],) ,
('Computing match for mapping',) ,
([4, 3, -1, 2, 5],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 5) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([5, 3, -1, 4, 2],) ,
('Computing match for mapping',) ,
([5, 3, -1, 4, 2],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', -1) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 3) ,
('Swap gain:', 0) ,
([2, -1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, -1, 3, 4, 5],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 4) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -3) ,
([2, 4, -1, 3, 5],) ,
('Computing match for mapping',) ,
([2, 4, -1, 3, 5],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 5) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([2, 5, -1, 4, 3],) ,
('Computing match for mapping',) ,
([2, 5, -1, 4, 3],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 4) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', -1) ,
('Swap gain:', -2) ,
([2, 3, 4, -1, 5],) ,
('Computing match for mapping',) ,
([2, 3, 4, -1, 5],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 5) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([2, 3, 5, 4, -1],) ,
('Computing match for mapping',) ,
([2, 3, 5, 4, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([2, 3, -1, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([2, 3, -1, 5, 4],) ,
('Computing match for mapping',) ,
([2, 3, -1, 5, 4],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [2, 3, -1, 4, 5]) ,
('Current mapping', [2, 3, -1, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 6) ,
('best node mapping', [0, 1, 3, 4, 5]) ,
('Best node mapping alignment:', 'a0(count-04)-b0(see-01) a1(hyperlink)-b1(thing) a2(page)-b3(page) a3(vote-01)-b4(vote-01) a4(support-01)-b5(support-01)') ,
('F-score:', 0.5454545454545454) ,
0.545
('AMR pair', 11) ,
('============================================',) ,
('AMR 1 (one-line):', '(a0 / arrest-01:ARG1 (p0 / person:ARG0-of (c0 / country:name (n0 / name:op1 "Russia" )):ARG0-of (l0 / lead-02:ARG1 (o0 / oppose-01))):location (h0 / house))') ,
('AMR 2 (one-line):', '(p0 / place-01:ARG1 (p1 / person:ARG0-of (c0 / country:name (n0 / name:op1 "Russia" )):ARG0-of (l0 / lead-02:ARG1 (o0 / oppose-01))):ARG2 (u0 / under:op1 (s0 / strike-01:ARG0 (g0 / government-organization:name (n1 / name:op1 "House":op2 "House" )))))') ,
('Instance triples of AMR 1:', 7) ,
([('instance', 'a0', 'arrest-01'), ('instance', 'a1', 'person'), ('instance', 'a2', 'country'), ('instance', 'a3', 'name'), ('instance', 'a4', 'lead-02'), ('instance', 'a5', 'oppose-01'), ('instance', 'a6', 'house')],) ,
('Attribute triples of AMR 1:', 2) ,
([('TOP', 'a0', 'arrest-01'), ('op1', 'a3', 'Russia_')],) ,
('Relation triples of AMR 1:', 6) ,
([('ARG1', 'a0', 'a1'), ('location', 'a0', 'a6'), ('ARG0', 'a2', 'a1'), ('name', 'a2', 'a3'), ('ARG0', 'a4', 'a1'), ('ARG1', 'a4', 'a5')],) ,
('Instance triples of AMR 2:', 10) ,
([('instance', 'b0', 'place-01'), ('instance', 'b1', 'person'), ('instance', 'b2', 'country'), ('instance', 'b3', 'name'), ('instance', 'b4', 'lead-02'), ('instance', 'b5', 'oppose-01'), ('instance', 'b6', 'under'), ('instance', 'b7', 'strike-01'), ('instance', 'b8', 'government-organization'), ('instance', 'b9', 'name')],) ,
('Attribute triples of AMR 2:', 4) ,
([('TOP', 'b0', 'place-01'), ('op1', 'b3', 'Russia_'), ('op1', 'b9', 'House_'), ('op2', 'b9', 'House_')],) ,
('Relation triples of AMR 2:', 9) ,
([('ARG1', 'b0', 'b1'), ('ARG2', 'b0', 'b6'), ('ARG0', 'b2', 'b1'), ('name', 'b2', 'b3'), ('ARG0', 'b4', 'b1'), ('ARG1', 'b4', 'b5'), ('op1', 'b6', 'b7'), ('ARG0', 'b7', 'b8'), ('name', 'b8', 'b9')],) ,
('Candidate mappings:',) ,
([{0, 4}, {8, 1, 5}, {8, 2, 4, 7}, {9, 3}, {0, 2, 4, 7}, {1, 5}, set()],) ,
('Weight dictionary',) ,
({(1, 1): {-1: 1, (0, 0): 1, (2, 2): 1, (2, 4): 1, (4, 2): 1, (4, 4): 1}, (2, 2): {-1: 1, (1, 1): 1, (3, 3): 1}, (3, 3): {-1: 2, (2, 2): 1}, (3, 9): {-1: 1, (2, 8): 1}, (4, 4): {-1: 1, (1, 1): 1, (5, 5): 1}, (5, 5): {-1: 1, (4, 4): 1}, (0, 0): {-1: 0, (1, 1): 1}, (0, 4): {-1: 0, (1, 5): 1}, (1, 5): {-1: 0, (0, 4): 1}, (2, 4): {-1: 0, (1, 1): 1}, (1, 8): {-1: 0, (2, 7): 1, (4, 7): 1}, (2, 7): {-1: 0, (1, 8): 1}, (2, 8): {-1: 0, (3, 9): 1}, (4, 2): {-1: 0, (1, 1): 1}, (4, 7): {-1: 0, (1, 8): 1}, (4, 0): {-1: 0, (5, 1): 1}, (5, 1): {-1: 0, (4, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1) ,
('relation match with', (2, 2), 1) ,
('relation match with', (4, 4), 1) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1) ,
('node_pair', (3, 9)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 1) ,
('relation match with', (5, 5), 1) ,
('node_pair', (5, 5)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 9) ,
('Node mapping at start', [0, 1, 2, 9, 4, 5, -1]) ,
('Triple match number at start:', 9) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 8, 2, 9, 4, 5, -1],) ,
('saved value', 5) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('saved value', 7) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 4, 5, -1],) ,
('saved value', 8) ,
('Remap node', 3, 'from ', 9, 'to', 3) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('saved value', 11) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 7, 5, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, 9, 4, 5, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 9, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0, 9, 4, 5, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 9, 4, 5, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 9) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([9, 1, 2, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([9, 1, 2, 0, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, 9, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 9, 0, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([5, 1, 2, 9, 4, 0, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 9, 4, 0, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 2, 9, 4, 5, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 9, 4, 5, 0],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 2, 1, 9, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 9, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 9) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 9, 2, 1, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 9, 1, 5, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 9, 1, 5, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 2, 9, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 9, 4, 1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 9, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 9, 4, 5, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 9) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 9, 2, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 9, 2, 4, 5, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, 9, 2, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 9, 2, 5, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 5, 9, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 9, 4, 2, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, -1, 9, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 9, 4, 5, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 4) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 9) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 9, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 9, 5, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 5) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 9) ,
('Swap gain:', -3) ,
([0, 1, 2, 5, 4, 9, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 9, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', -1) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 9) ,
('Swap gain:', -1) ,
([0, 1, 2, -1, 4, 5, 9],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 5, 9],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 9, 5, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 5, 4, -1],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 9, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, -1, 5, 4],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 9, 4, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, -1, 5],) ,
('saved value', 7) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 9, 4, 5, -1]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 11) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, -1]) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, -1],) ,
('saved value', 8) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, -1],) ,
('saved value', 8) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('saved value', 9) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, -1],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 2, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([5, 1, 2, 3, 4, 0, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, -1],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 1, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 3, 2, 1, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 3, 1, 5, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 2, 3, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 4, 5, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 3, 2, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, -1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 5, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, -1, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 4, 5, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6) ,
([0, 1, 2, 4, 3, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 2, 5, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 5, 3],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 3, 5, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, -1],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 5, 4],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 3, 4, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1, 5],) ,
('saved value', 9) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1) ,
('relation match with', (2, 2), 1) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1) ,
('relation match with', (3, 3), 1) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 2) ,
('node_pair', (4, 7)) ,
('instance/attribute match', 0) ,
('node_pair', (5, 5)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 7) ,
('Node mapping at start', [4, 1, 2, 3, 7, 5, -1]) ,
('Triple match number at start:', 7) ,
('Remap node', 0, 'from ', 4, 'to', 0) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, -1],) ,
('saved value', 8) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([4, 8, 2, 3, 7, 5, -1],) ,
('saved value', 6) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([4, 1, 8, 3, 7, 5, -1],) ,
('saved value', 4) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([4, 1, 2, 9, 7, 5, -1],) ,
('saved value', 5) ,
('Remap node', 4, 'from ', 7, 'to', 0) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 1) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 4) ,
('Swap gain:', -2) ,
([1, 4, 2, 3, 7, 5, -1],) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 7, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 2) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', -2) ,
([2, 1, 4, 3, 7, 5, -1],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 7, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 3) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', -3) ,
([3, 1, 2, 4, 7, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 7, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 7) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 0, '-', 7, ',', 4, '-', 4) ,
('Swap gain:', 3) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 5) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([5, 1, 2, 3, 7, 4, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 7, 4, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', -1) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', 0) ,
([-1, 1, 2, 3, 7, 5, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 7, 5, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([4, 2, 1, 3, 7, 5, -1],) ,
('Computing match for mapping',) ,
([4, 2, 1, 3, 7, 5, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([4, 3, 2, 1, 7, 5, -1],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 7, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 7) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 1, '-', 7, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([4, 7, 2, 3, 1, 5, -1],) ,
('Computing match for mapping',) ,
([4, 7, 2, 3, 1, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([4, 5, 2, 3, 7, 1, -1],) ,
('Computing match for mapping',) ,
([4, 5, 2, 3, 7, 1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([4, -1, 2, 3, 7, 5, 1],) ,
('Computing match for mapping',) ,
([4, -1, 2, 3, 7, 5, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([4, 1, 3, 2, 7, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 3, 2, 7, 5, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 7) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 2, '-', 7, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([4, 1, 7, 3, 2, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 7, 3, 2, 5, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -4) ,
([4, 1, 5, 3, 7, 2, -1],) ,
('Computing match for mapping',) ,
([4, 1, 5, 3, 7, 2, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([4, 1, -1, 3, 7, 5, 2],) ,
('Computing match for mapping',) ,
([4, 1, -1, 3, 7, 5, 2],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 7) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 3, '-', 7, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([4, 1, 2, 7, 3, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 7, 3, 5, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([4, 1, 2, 5, 7, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 5, 7, 3, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', -1) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([4, 1, 2, -1, 7, 5, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, 7, 5, 3],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 7, ',', 5, '-', 5) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([4, 1, 2, 3, 5, 7, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 7, -1],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 7, ',', 6, '-', -1) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 0) ,
([4, 1, 2, 3, -1, 5, 7],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, -1, 5, 7],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', -1) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -1) ,
([4, 1, 2, 3, 7, -1, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 7, -1, 5],) ,
('saved value', 6) ,
('Use swap gain',) ,
('Original mapping', [4, 1, 2, 3, 7, 5, -1]) ,
('Current mapping', [7, 1, 2, 3, 4, 5, -1]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 10) ,
('Current mapping:', [7, 1, 2, 3, 4, 5, -1]) ,
('Remap node', 0, 'from ', 7, 'to', 0) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('saved value', 11) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([7, 8, 2, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([7, 1, 8, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([7, 1, 2, 9, 4, 5, -1],) ,
('saved value', 8) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 0, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 1) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 7) ,
('Swap gain:', -3) ,
([1, 7, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([1, 7, 2, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 2) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 7) ,
('Swap gain:', -3) ,
([2, 1, 7, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 3) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 7) ,
('Swap gain:', -3) ,
([3, 1, 2, 7, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 7, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 4) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 5) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([5, 1, 2, 3, 4, 7, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 7, -1],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', -1) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 0) ,
([-1, 1, 2, 3, 4, 5, 7],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 4, 5, 7],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([7, 2, 1, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([7, 2, 1, 3, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([7, 3, 2, 1, 4, 5, -1],) ,
('Computing match for mapping',) ,
([7, 3, 2, 1, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([7, 4, 2, 3, 1, 5, -1],) ,
('Computing match for mapping',) ,
([7, 4, 2, 3, 1, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([7, 5, 2, 3, 4, 1, -1],) ,
('Computing match for mapping',) ,
([7, 5, 2, 3, 4, 1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([7, -1, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([7, -1, 2, 3, 4, 5, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([7, 1, 3, 2, 4, 5, -1],) ,
('Computing match for mapping',) ,
([7, 1, 3, 2, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([7, 1, 4, 3, 2, 5, -1],) ,
('Computing match for mapping',) ,
([7, 1, 4, 3, 2, 5, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5) ,
([7, 1, 5, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([7, 1, 5, 3, 4, 2, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([7, 1, -1, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([7, 1, -1, 3, 4, 5, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6) ,
([7, 1, 2, 4, 3, 5, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 3, 5, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([7, 1, 2, 5, 4, 3, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 5, 4, 3, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', -1) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([7, 1, 2, -1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([7, 1, 2, -1, 4, 5, 3],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([7, 1, 2, 3, 5, 4, -1],) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 5, 4, -1],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', -1) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([7, 1, 2, 3, -1, 5, 4],) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, -1, 5, 4],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', -1) ,
([7, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([7, 1, 2, 3, 4, -1, 5],) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, -1, 5],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [7, 1, 2, 3, 4, 5, -1]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 11) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, -1]) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, -1],) ,
('saved value', 8) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, -1],) ,
('saved value', 8) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('saved value', 9) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, -1],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 2, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([5, 1, 2, 3, 4, 0, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, -1],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 1, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 3, 2, 1, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 3, 1, 5, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 2, 3, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 4, 5, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 3, 2, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, -1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 5, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, -1, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 4, 5, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6) ,
([0, 1, 2, 4, 3, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 2, 5, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 5, 3],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 3, 5, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, -1],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 5, 4],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 3, 4, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1, 5],) ,
('saved value', 9) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 5), 1) ,
('node_pair', (1, 5)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1) ,
('relation match with', (3, 3), 1) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 2) ,
('node_pair', (4, 0)) ,
('instance/attribute match', 0) ,
('relation match with', (5, 1), 1) ,
('node_pair', (5, 1)) ,
('instance/attribute match', 0) ,
('match computing complete, result:', 6) ,
('Node mapping at start', [4, 5, 2, 3, 0, 1, -1]) ,
('Triple match number at start:', 6) ,
('Remap node', 1, 'from ', 5, 'to', 8) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([4, 8, 2, 3, 0, 1, -1],) ,
('saved value', 5) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([4, 5, 7, 3, 0, 1, -1],) ,
('saved value', 4) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([4, 5, 8, 3, 0, 1, -1],) ,
('saved value', 4) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([4, 5, 2, 9, 0, 1, -1],) ,
('saved value', 4) ,
('Remap node', 4, 'from ', 0, 'to', 7) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([4, 5, 2, 3, 7, 1, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 5) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 4) ,
('Swap gain:', -1) ,
([5, 4, 2, 3, 0, 1, -1],) ,
('Computing match for mapping',) ,
([5, 4, 2, 3, 0, 1, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 2) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', -3) ,
([2, 5, 4, 3, 0, 1, -1],) ,
('Computing match for mapping',) ,
([2, 5, 4, 3, 0, 1, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 3) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', -4) ,
([3, 5, 2, 4, 0, 1, -1],) ,
('Computing match for mapping',) ,
([3, 5, 2, 4, 0, 1, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 0) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 0, '-', 0, ',', 4, '-', 4) ,
('Swap gain:', -1) ,
([0, 5, 2, 3, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 1) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', -2) ,
([1, 5, 2, 3, 0, 4, -1],) ,
('Computing match for mapping',) ,
([1, 5, 2, 3, 0, 4, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', -1) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -1) ,
([-1, 5, 2, 3, 0, 1, 4],) ,
('Computing match for mapping',) ,
([-1, 5, 2, 3, 0, 1, 4],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 2) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 5) ,
('Swap gain:', -3) ,
([4, 2, 5, 3, 0, 1, -1],) ,
('Computing match for mapping',) ,
([4, 2, 5, 3, 0, 1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 3) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 5) ,
('Swap gain:', -4) ,
([4, 3, 2, 5, 0, 1, -1],) ,
('Computing match for mapping',) ,
([4, 3, 2, 5, 0, 1, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 0) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 1, '-', 0, ',', 4, '-', 5) ,
('Swap gain:', -2) ,
([4, 0, 2, 3, 5, 1, -1],) ,
('Computing match for mapping',) ,
([4, 0, 2, 3, 5, 1, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 5, ',', 5, '-', 1) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 5) ,
('Swap gain:', 1) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 5, ',', 6, '-', -1) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -1) ,
([4, -1, 2, 3, 0, 1, 5],) ,
('Computing match for mapping',) ,
([4, -1, 2, 3, 0, 1, 5],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([4, 5, 3, 2, 0, 1, -1],) ,
('Computing match for mapping',) ,
([4, 5, 3, 2, 0, 1, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 0) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 2, '-', 0, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([4, 5, 0, 3, 2, 1, -1],) ,
('Computing match for mapping',) ,
([4, 5, 0, 3, 2, 1, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 1) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([4, 5, 1, 3, 0, 2, -1],) ,
('Computing match for mapping',) ,
([4, 5, 1, 3, 0, 2, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([4, 5, -1, 3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([4, 5, -1, 3, 0, 1, 2],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 0) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 3, '-', 0, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([4, 5, 2, 0, 3, 1, -1],) ,
('Computing match for mapping',) ,
([4, 5, 2, 0, 3, 1, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 1) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([4, 5, 2, 1, 0, 3, -1],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 0, 3, -1],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', -1) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([4, 5, 2, -1, 0, 1, 3],) ,
('Computing match for mapping',) ,
([4, 5, 2, -1, 0, 1, 3],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 0, ',', 5, '-', 1) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', -1) ,
([4, 5, 2, 3, 1, 0, -1],) ,
('Computing match for mapping',) ,
([4, 5, 2, 3, 1, 0, -1],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 0, ',', 6, '-', -1) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([4, 5, 2, 3, -1, 1, 0],) ,
('Computing match for mapping',) ,
([4, 5, 2, 3, -1, 1, 0],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 1, ',', 6, '-', -1) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -1) ,
([4, 5, 2, 3, 0, -1, 1],) ,
('Computing match for mapping',) ,
([4, 5, 2, 3, 0, -1, 1],) ,
('saved value', 5) ,
('Use swap gain',) ,
('Original mapping', [4, 5, 2, 3, 0, 1, -1]) ,
('Current mapping', [4, 1, 2, 3, 0, 5, -1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 7) ,
('Current mapping:', [4, 1, 2, 3, 0, 5, -1]) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([4, 8, 2, 3, 0, 5, -1],) ,
('saved value', 5) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([4, 1, 7, 3, 0, 5, -1],) ,
('saved value', 4) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([4, 1, 8, 3, 0, 5, -1],) ,
('saved value', 4) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([4, 1, 2, 9, 0, 5, -1],) ,
('saved value', 5) ,
('Remap node', 4, 'from ', 0, 'to', 7) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 1) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 4) ,
('Swap gain:', -2) ,
([1, 4, 2, 3, 0, 5, -1],) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 0, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 2) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', -2) ,
([2, 1, 4, 3, 0, 5, -1],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 0, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 3) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', -3) ,
([3, 1, 2, 4, 0, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 0) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 0, '-', 0, ',', 4, '-', 4) ,
('Swap gain:', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 5) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([5, 1, 2, 3, 0, 4, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 4, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', -1) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', 0) ,
([-1, 1, 2, 3, 0, 5, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 0, 5, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([4, 2, 1, 3, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 2, 1, 3, 0, 5, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([4, 3, 2, 1, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 0, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 0) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 1, '-', 0, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([4, 0, 2, 3, 1, 5, -1],) ,
('Computing match for mapping',) ,
([4, 0, 2, 3, 1, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('Computing match for mapping',) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([4, -1, 2, 3, 0, 5, 1],) ,
('Computing match for mapping',) ,
([4, -1, 2, 3, 0, 5, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([4, 1, 3, 2, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 3, 2, 0, 5, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 0) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 2, '-', 0, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([4, 1, 0, 3, 2, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, 2, 5, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -4) ,
([4, 1, 5, 3, 0, 2, -1],) ,
('Computing match for mapping',) ,
([4, 1, 5, 3, 0, 2, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([4, 1, -1, 3, 0, 5, 2],) ,
('Computing match for mapping',) ,
([4, 1, -1, 3, 0, 5, 2],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 0) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 3, '-', 0, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([4, 1, 2, 0, 3, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3, 5, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([4, 1, 2, 5, 0, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 5, 0, 3, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', -1) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([4, 1, 2, -1, 0, 5, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, 0, 5, 3],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 0, ',', 5, '-', 5) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -1) ,
([4, 1, 2, 3, 5, 0, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0, -1],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 0, ',', 6, '-', -1) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', 0) ,
([4, 1, 2, 3, -1, 5, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, -1, 5, 0],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', -1) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -1) ,
([4, 1, 2, 3, 0, -1, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, -1, 5],) ,
('saved value', 6) ,
('Use swap gain',) ,
('Original mapping', [4, 1, 2, 3, 0, 5, -1]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 11) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, -1]) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, -1],) ,
('saved value', 8) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, -1],) ,
('saved value', 8) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('saved value', 9) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, -1],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 2, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([5, 1, 2, 3, 4, 0, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, -1],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 1, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 3, 2, 1, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 3, 1, 5, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 2, 3, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 4, 5, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 3, 2, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, -1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 5, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, -1, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 4, 5, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6) ,
([0, 1, 2, 4, 3, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 2, 5, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 5, 3],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 3, 5, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, -1],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 5, 4],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 3, 4, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1, 5],) ,
('saved value', 9) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 5)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 7)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 9)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 1) ,
('node_pair', (5, 1)) ,
('instance/attribute match', 0) ,
('match computing complete, result:', 2) ,
('Node mapping at start', [0, 5, 7, 9, 4, 1, -1]) ,
('Triple match number at start:', 2) ,
('Remap node', 1, 'from ', 5, 'to', 8) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 8, 7, 9, 4, 1, -1],) ,
('saved value', 3) ,
('Remap node', 2, 'from ', 7, 'to', 2) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 5, 2, 9, 4, 1, -1],) ,
('saved value', 3) ,
('Remap node', 2, 'from ', 7, 'to', 8) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 5, 8, 9, 4, 1, -1],) ,
('saved value', 3) ,
('Remap node', 3, 'from ', 9, 'to', 3) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 5, 7, 3, 4, 1, -1],) ,
('saved value', 3) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 5, 7, 9, 2, 1, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 5) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 0) ,
('Swap gain:', 0) ,
([5, 0, 7, 9, 4, 1, -1],) ,
('Computing match for mapping',) ,
([5, 0, 7, 9, 4, 1, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', 0) ,
([7, 5, 0, 9, 4, 1, -1],) ,
('Computing match for mapping',) ,
([7, 5, 0, 9, 4, 1, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 9) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([9, 5, 7, 0, 4, 1, -1],) ,
('Computing match for mapping',) ,
([9, 5, 7, 0, 4, 1, -1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', 1) ,
([4, 5, 7, 9, 0, 1, -1],) ,
('Computing match for mapping',) ,
([4, 5, 7, 9, 0, 1, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 1) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', 0) ,
([1, 5, 7, 9, 4, 0, -1],) ,
('Computing match for mapping',) ,
([1, 5, 7, 9, 4, 0, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', 0) ,
([-1, 5, 7, 9, 4, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 5, 7, 9, 4, 1, 0],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 7) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 5) ,
('Swap gain:', 0) ,
([0, 7, 5, 9, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 7, 5, 9, 4, 1, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 9) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 5) ,
('Swap gain:', -1) ,
([0, 9, 7, 5, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 9, 7, 5, 4, 1, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 4) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -1) ,
([0, 4, 7, 9, 5, 1, -1],) ,
('Computing match for mapping',) ,
([0, 4, 7, 9, 5, 1, -1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 5, ',', 5, '-', 1) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 5) ,
('Swap gain:', 5) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 5, ',', 6, '-', -1) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', 0) ,
([0, -1, 7, 9, 4, 1, 5],) ,
('Computing match for mapping',) ,
([0, -1, 7, 9, 4, 1, 5],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 9) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 7) ,
('Swap gain:', -1) ,
([0, 5, 9, 7, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 9, 7, 4, 1, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 4) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -1) ,
([0, 5, 4, 9, 7, 1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 4, 9, 7, 1, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 1) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 7) ,
('Swap gain:', 0) ,
([0, 5, 1, 9, 4, 7, -1],) ,
('Computing match for mapping',) ,
([0, 5, 1, 9, 4, 7, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', -1) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 0) ,
([0, 5, -1, 9, 4, 1, 7],) ,
('Computing match for mapping',) ,
([0, 5, -1, 9, 4, 1, 7],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 4) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 9) ,
('Swap gain:', -2) ,
([0, 5, 7, 4, 9, 1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 9, 1, -1],) ,
('saved value', 0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 1) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 9) ,
('Swap gain:', -1) ,
([0, 5, 7, 1, 4, 9, -1],) ,
('Computing match for mapping',) ,
([0, 5, 7, 1, 4, 9, -1],) ,
('saved value', 1) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', -1) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 9) ,
('Swap gain:', -1) ,
([0, 5, 7, -1, 4, 1, 9],) ,
('Computing match for mapping',) ,
([0, 5, 7, -1, 4, 1, 9],) ,
('saved value', 1) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 1) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([0, 5, 7, 9, 1, 4, -1],) ,
('Computing match for mapping',) ,
([0, 5, 7, 9, 1, 4, -1],) ,
('saved value', 1) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', -1) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -1) ,
([0, 5, 7, 9, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 5, 7, 9, -1, 1, 4],) ,
('saved value', 1) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 1, ',', 6, '-', -1) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', 0) ,
([0, 5, 7, 9, 4, -1, 1],) ,
('Computing match for mapping',) ,
([0, 5, 7, 9, 4, -1, 1],) ,
('saved value', 2) ,
('Use swap gain',) ,
('Original mapping', [0, 5, 7, 9, 4, 1, -1]) ,
('Current mapping', [0, 1, 7, 9, 4, 5, -1]) ,
('Gain after the hill-climbing', 5) ,
('Update triple match number to:', 7) ,
('Current mapping:', [0, 1, 7, 9, 4, 5, -1]) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 8, 7, 9, 4, 5, -1],) ,
('saved value', 5) ,
('Remap node', 2, 'from ', 7, 'to', 2) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('saved value', 9) ,
('Remap node', 2, 'from ', 7, 'to', 8) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 4, 5, -1],) ,
('saved value', 8) ,
('Remap node', 3, 'from ', 9, 'to', 3) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, -1],) ,
('saved value', 8) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 7, 9, 2, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 7, 9, 4, 5, -1],) ,
('Computing match for mapping',) ,
([1, 0, 7, 9, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([7, 1, 0, 9, 4, 5, -1],) ,
('Computing match for mapping',) ,
([7, 1, 0, 9, 4, 5, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 9) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([9, 1, 7, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([9, 1, 7, 0, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 7, 9, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 7, 9, 0, 5, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([5, 1, 7, 9, 4, 0, -1],) ,
('Computing match for mapping',) ,
([5, 1, 7, 9, 4, 0, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 7, 9, 4, 5, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 9, 4, 5, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 7, 1, 9, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 7, 1, 9, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 9) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 9, 7, 1, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 4, 5, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -5) ,
([0, 4, 7, 9, 1, 5, -1],) ,
('Computing match for mapping',) ,
([0, 4, 7, 9, 1, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 7, 9, 4, 1, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 7, 9, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, -1, 7, 9, 4, 5, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 9) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 7) ,
('Swap gain:', -1) ,
([0, 1, 9, 7, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 9, 7, 4, 5, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 4) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 4, 9, 7, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 9, 7, 5, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 5) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 5, 9, 4, 7, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 9, 4, 7, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', -1) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 0) ,
([0, 1, -1, 9, 4, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, -1, 9, 4, 5, 7],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 4) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 9) ,
('Swap gain:', -4) ,
([0, 1, 7, 4, 9, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 9, 5, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 5) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 9) ,
('Swap gain:', -3) ,
([0, 1, 7, 5, 4, 9, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, 9, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', -1) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 9) ,
('Swap gain:', -1) ,
([0, 1, 7, -1, 4, 5, 9],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 4, 5, 9],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 7, 9, 5, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 9, 5, 4, -1],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', -1) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 7, 9, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 9, -1, 5, 4],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', -1) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 7, 9, 4, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 9, 4, -1, 5],) ,
('saved value', 5) ,
('Use move gain',) ,
('Original mapping', [0, 1, 7, 9, 4, 5, -1]) ,
('Current mapping', [0, 1, 2, 9, 4, 5, -1]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 2, 9, 4, 5, -1]) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 8, 2, 9, 4, 5, -1],) ,
('saved value', 5) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 7, 9, 4, 5, -1],) ,
('saved value', 7) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 4, 5, -1],) ,
('saved value', 8) ,
('Remap node', 3, 'from ', 9, 'to', 3) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('saved value', 11) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 7, 5, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, 9, 4, 5, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 9, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0, 9, 4, 5, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 9, 4, 5, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 9) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([9, 1, 2, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([9, 1, 2, 0, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, 9, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 9, 0, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([5, 1, 2, 9, 4, 0, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 9, 4, 0, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 2, 9, 4, 5, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 9, 4, 5, 0],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 2, 1, 9, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 9, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 9) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 9, 2, 1, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 9, 1, 5, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 9, 1, 5, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 2, 9, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 9, 4, 1, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 9, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 9, 4, 5, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 9) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 9, 2, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 9, 2, 4, 5, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 4, 9, 2, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 9, 2, 5, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 5, 9, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 9, 4, 2, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, -1, 9, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 9, 4, 5, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 4) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 9) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 9, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 9, 5, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 5) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 9) ,
('Swap gain:', -3) ,
([0, 1, 2, 5, 4, 9, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 9, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', -1) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 9) ,
('Swap gain:', -1) ,
([0, 1, 2, -1, 4, 5, 9],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 5, 9],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 9, 5, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 5, 4, -1],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 9, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, -1, 5, 4],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 9, 4, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, -1, 5],) ,
('saved value', 7) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 9, 4, 5, -1]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 11) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, -1]) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, -1],) ,
('saved value', 8) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, -1],) ,
('saved value', 8) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('saved value', 9) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, -1],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 2, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([5, 1, 2, 3, 4, 0, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, -1],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 1, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 3, 2, 1, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 3, 1, 5, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 2, 3, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 4, 5, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 3, 2, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, -1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 5, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, -1, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 4, 5, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6) ,
([0, 1, 2, 4, 3, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 2, 5, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 5, 3],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 3, 5, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, -1],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 5, 4],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 3, 4, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1, 5],) ,
('saved value', 9) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('saved value', 7) ,
('Node mapping at start', [4, 1, 2, 3, 0, 5, -1]) ,
('Triple match number at start:', 7) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([4, 8, 2, 3, 0, 5, -1],) ,
('saved value', 5) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([4, 1, 7, 3, 0, 5, -1],) ,
('saved value', 4) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([4, 1, 8, 3, 0, 5, -1],) ,
('saved value', 4) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([4, 1, 2, 9, 0, 5, -1],) ,
('saved value', 5) ,
('Remap node', 4, 'from ', 0, 'to', 7) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 7, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 1) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 4) ,
('Swap gain:', -2) ,
([1, 4, 2, 3, 0, 5, -1],) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 0, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 2) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', -2) ,
([2, 1, 4, 3, 0, 5, -1],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 0, 5, -1],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 3) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', -3) ,
([3, 1, 2, 4, 0, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0, 5, -1],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 0) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 0, '-', 0, ',', 4, '-', 4) ,
('Swap gain:', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 5) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([5, 1, 2, 3, 0, 4, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 4, -1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', -1) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', 0) ,
([-1, 1, 2, 3, 0, 5, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 0, 5, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([4, 2, 1, 3, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 2, 1, 3, 0, 5, -1],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([4, 3, 2, 1, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 0, 5, -1],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 0) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 1, '-', 0, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([4, 0, 2, 3, 1, 5, -1],) ,
('Computing match for mapping',) ,
([4, 0, 2, 3, 1, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('Computing match for mapping',) ,
([4, 5, 2, 3, 0, 1, -1],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([4, -1, 2, 3, 0, 5, 1],) ,
('Computing match for mapping',) ,
([4, -1, 2, 3, 0, 5, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([4, 1, 3, 2, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 3, 2, 0, 5, -1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 0) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 2, '-', 0, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([4, 1, 0, 3, 2, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, 2, 5, -1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -4) ,
([4, 1, 5, 3, 0, 2, -1],) ,
('Computing match for mapping',) ,
([4, 1, 5, 3, 0, 2, -1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([4, 1, -1, 3, 0, 5, 2],) ,
('Computing match for mapping',) ,
([4, 1, -1, 3, 0, 5, 2],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 0) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 3, '-', 0, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([4, 1, 2, 0, 3, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3, 5, -1],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([4, 1, 2, 5, 0, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 5, 0, 3, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', -1) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([4, 1, 2, -1, 0, 5, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, 0, 5, 3],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 0, ',', 5, '-', 5) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -1) ,
([4, 1, 2, 3, 5, 0, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0, -1],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 0, ',', 6, '-', -1) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', 0) ,
([4, 1, 2, 3, -1, 5, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, -1, 5, 0],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', -1) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -1) ,
([4, 1, 2, 3, 0, -1, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, -1, 5],) ,
('saved value', 6) ,
('Use swap gain',) ,
('Original mapping', [4, 1, 2, 3, 0, 5, -1]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 11) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, -1]) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, -1],) ,
('saved value', 8) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, -1],) ,
('saved value', 8) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, -1],) ,
('saved value', 9) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, -1],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 0, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 2, 0, 4, 5, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, -1],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([5, 1, 2, 3, 4, 0, -1],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, -1],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 1, 3, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 3, 2, 1, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, -1],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 3, 1, 5, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6) ,
([0, 5, 2, 3, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, -1],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, -1, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 4, 5, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 3, 2, 4, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, -1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 5, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, -1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, -1, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 4, 5, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6) ,
([0, 1, 2, 4, 3, 5, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, -1],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 2, 5, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, -1],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 5, 3],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 3, 5, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, -1],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, -1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 5, 4],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 3, 4, 5, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 3, 4, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1, 5],) ,
('saved value', 9) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 11) ,
('best node mapping', [0, 1, 2, 3, 4, 5, -1]) ,
('Best node mapping alignment:', 'a0(arrest-01)-b0(place-01) a1(person)-b1(person) a2(country)-b2(country) a3(name)-b3(name) a4(lead-02)-b4(lead-02) a5(oppose-01)-b5(oppose-01) a6(house)-Null') ,
('F-score:', 0.5789473684210527) ,
0.579
('AMR pair', 12) ,
('============================================',) ,
('AMR 1 (one-line):', '(n0 / need-01:ARG1 (w0 / worry-01:ARG1 y0):ARG0 (y0 / you):polarity - )') ,
('AMR 2 (one-line):', '(o0 / obligate-01:ARG1 (y0 / you):ARG2 (w0 / worry-02:ARG0 y0):polarity - )') ,
('Instance triples of AMR 1:', 3) ,
([('instance', 'a0', 'need-01'), ('instance', 'a1', 'worry-01'), ('instance', 'a2', 'you')],) ,
('Attribute triples of AMR 1:', 2) ,
([('polarity', 'a0', '-'), ('TOP', 'a0', 'need-01')],) ,
('Relation triples of AMR 1:', 3) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a2'), ('ARG1', 'a1', 'a2')],) ,
('Instance triples of AMR 2:', 3) ,
([('instance', 'b0', 'obligate-01'), ('instance', 'b1', 'you'), ('instance', 'b2', 'worry-02')],) ,
('Attribute triples of AMR 2:', 2) ,
([('polarity', 'b0', '-'), ('TOP', 'b0', 'obligate-01')],) ,
('Relation triples of AMR 2:', 3) ,
([('ARG1', 'b0', 'b1'), ('ARG2', 'b0', 'b2'), ('ARG0', 'b2', 'b1')],) ,
('Candidate mappings:',) ,
([{0, 2}, {0, 1}, {1}],) ,
('Weight dictionary',) ,
({(2, 1): {-1: 1, (0, 2): 1, (1, 0): 1}, (0, 0): {-1: 1, (1, 1): 1}, (1, 1): {-1: 0, (0, 0): 1}, (0, 2): {-1: 0, (2, 1): 1}, (1, 0): {-1: 0, (2, 1): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 1) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 2) ,
('Node mapping at start', [0, -1, 1]) ,
('Triple match number at start:', 2) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([2, -1, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', -1) ,
([0, -1, 1],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', 0) ,
('Swap gain:', 0) ,
([-1, 0, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, -1, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', 1) ,
([0, -1, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, -1, 1]) ,
('Current mapping', [0, -1, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 2) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 2) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([2, 1, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0) ,
('relation match with', (2, 1), 1) ,
('node_pair', (1, 0)) ,
('instance/attribute match', 0) ,
('relation match with', (2, 1), 1) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 3) ,
('Node mapping at start', [2, 0, 1]) ,
('Triple match number at start:', 3) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', -1) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', -3) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [2, 0, 1]) ,
('Current mapping', [2, 0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([2, 1, -1],) ,
('saved value', 0) ,
('Node mapping at start', [2, 1, -1]) ,
('Triple match number at start:', 0) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 2) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([2, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', 0) ,
([1, 2, -1],) ,
('Computing match for mapping',) ,
([1, 2, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', -1) ,
([2, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 2) ,
('Swap gain:', 0) ,
([-1, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 2],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([2, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 2) ,
([2, -1, 1],) ,
('Computing match for mapping',) ,
([2, -1, 1],) ,
('saved value', 2) ,
('Use move gain',) ,
('Original mapping', [2, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 2) ,
('Current mapping:', [0, 1, -1]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([2, 1, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 2) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 2) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([2, 1, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 3) ,
('best node mapping', [2, 0, 1]) ,
('Best node mapping alignment:', 'a0(need-01)-b2(worry-02) a1(worry-01)-b0(obligate-01) a2(you)-b1(you)') ,
('F-score:', 0.375) ,
0.375
('AMR pair', 13) ,
('============================================',) ,
('AMR 1 (one-line):', '(b0 / be-located-at-91:ARG1 (i0 / i):ARG2 (s0 / situation:ARG1-of (r0 / resemble-01)))') ,
('AMR 2 (one-line):', '(h0 / have-03:ARG1 (s0 / situation:ARG1-of (r0 / resemble-01)):ARG0 (i0 / i))') ,
('Instance triples of AMR 1:', 4) ,
([('instance', 'a0', 'be-located-at-91'), ('instance', 'a1', 'i'), ('instance', 'a2', 'situation'), ('instance', 'a3', 'resemble-01')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'be-located-at-91')],) ,
('Relation triples of AMR 1:', 3) ,
([('ARG1', 'a0', 'a1'), ('ARG2', 'a0', 'a2'), ('ARG1', 'a3', 'a2')],) ,
('Instance triples of AMR 2:', 4) ,
([('instance', 'b0', 'have-03'), ('instance', 'b1', 'situation'), ('instance', 'b2', 'resemble-01'), ('instance', 'b3', 'i')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'have-03')],) ,
('Relation triples of AMR 2:', 3) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b3'), ('ARG1', 'b2', 'b1')],) ,
('Candidate mappings:',) ,
([{0, 2}, {1, 3}, {1}, {0, 2}],) ,
('Weight dictionary',) ,
({(1, 3): {-1: 1}, (2, 1): {-1: 1, (3, 0): 1, (3, 2): 1}, (3, 2): {-1: 1, (2, 1): 1}, (0, 0): {-1: 0, (1, 1): 1}, (1, 1): {-1: 0, (0, 0): 1, (0, 2): 1}, (0, 2): {-1: 0, (1, 1): 1}, (3, 0): {-1: 0, (2, 1): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 3, 1, 2],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 1) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 1) ,
('relation match with', (3, 2), 1) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 4) ,
('Node mapping at start', [0, 3, 1, 2]) ,
('Triple match number at start:', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -3) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 3, 1, 2],) ,
('saved value', 4) ,
('Node mapping at start', [0, 3, 1, 2]) ,
('Triple match number at start:', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -3) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 1, -1, 2],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 2) ,
('Node mapping at start', [0, 1, -1, 2]) ,
('Triple match number at start:', 2) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 3, -1, 2],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([2, 1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 1) ,
([0, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1],) ,
('saved value', 0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -1) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 1) ,
('Use swap gain',) ,
('Original mapping', [0, 1, -1, 2]) ,
('Current mapping', [0, -1, 1, 2]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 3) ,
('Current mapping:', [0, -1, 1, 2]) ,
('Remap node', 1, 'from ', -1, 'to', 3) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 3, 1, 2],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', -1) ,
([0, -1, 1, 2],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', 0) ,
('Swap gain:', 0) ,
([-1, 0, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 0, 1, 2],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, -1, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([1, -1, 0, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, -1, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([2, -1, 1, 0],) ,
('Computing match for mapping',) ,
([2, -1, 1, 0],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', 1) ,
([0, -1, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', -1) ,
('Swap gain:', -1) ,
([0, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', -1, ',', 3, '-', 2) ,
([0, -1, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -2) ,
([0, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, -1, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 2, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1],) ,
('saved value', 0) ,
('Use move gain',) ,
('Original mapping', [0, -1, 1, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 4) ,
('Current mapping:', [0, 3, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -3) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 3, 1, 2],) ,
('saved value', 4) ,
('Node mapping at start', [0, 3, 1, 2]) ,
('Triple match number at start:', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -3) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([2, 1, -1, 0],) ,
('saved value', 1) ,
('Node mapping at start', [2, 1, -1, 0]) ,
('Triple match number at start:', 1) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([2, 3, -1, 0],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, -1, 0],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -1) ,
([1, 2, -1, 0],) ,
('Computing match for mapping',) ,
([1, 2, -1, 0],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', -1) ,
([2, 1, -1, 0],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 2) ,
('Swap gain:', -1) ,
([-1, 1, 2, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 0) ,
([2, 1, -1, 0],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', 1) ,
([0, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([2, 1, -1, 0],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 1) ,
([2, -1, 1, 0],) ,
('Computing match for mapping',) ,
([2, -1, 1, 0],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 0) ,
([2, 1, -1, 0],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', -1) ,
([2, 0, -1, 1],) ,
('Computing match for mapping',) ,
([2, 0, -1, 1],) ,
('saved value', 0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 0) ,
([2, 1, -1, 0],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', -1) ,
('Swap gain:', 0) ,
([2, 1, 0, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1],) ,
('saved value', 1) ,
('Use swap gain',) ,
('Original mapping', [2, 1, -1, 0]) ,
('Current mapping', [0, 1, -1, 2]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 2) ,
('Current mapping:', [0, 1, -1, 2]) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 3, -1, 2],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([2, 1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 1) ,
([0, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1],) ,
('saved value', 0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -1) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 1) ,
('Use swap gain',) ,
('Original mapping', [0, 1, -1, 2]) ,
('Current mapping', [0, -1, 1, 2]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 3) ,
('Current mapping:', [0, -1, 1, 2]) ,
('Remap node', 1, 'from ', -1, 'to', 3) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 3, 1, 2],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', -1) ,
([0, -1, 1, 2],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', 0) ,
('Swap gain:', 0) ,
([-1, 0, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 0, 1, 2],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, -1, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([1, -1, 0, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, -1, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([2, -1, 1, 0],) ,
('Computing match for mapping',) ,
([2, -1, 1, 0],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', 1) ,
([0, -1, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', -1) ,
('Swap gain:', -1) ,
([0, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', -1, ',', 3, '-', 2) ,
([0, -1, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -2) ,
([0, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, -1, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 2, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1],) ,
('saved value', 0) ,
('Use move gain',) ,
('Original mapping', [0, -1, 1, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 4) ,
('Current mapping:', [0, 3, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -3) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 4) ,
('best node mapping', [0, 3, 1, 2]) ,
('Best node mapping alignment:', 'a0(be-located-at-91)-b0(have-03) a1(i)-b3(i) a2(situation)-b1(situation) a3(resemble-01)-b2(resemble-01)') ,
('F-score:', 0.5) ,
0.500
('AMR pair', 14) ,
('============================================',) ,
('AMR 1 (one-line):', '(d0 / decide-01:ARG1 (a0 / and:op1 (p0 / protect-01:ARG0 t0:ARG1 (t1 / thing:ARG1-of (r0 / remain-01))):op2 (p1 / polish:ARG0 t0:topic t1)):ARG0 (t0 / they))') ,
('AMR 2 (one-line):', '(d0 / decide-01:ARG1 (a0 / and:op1 (p0 / protect-01:ARG0 t0:ARG1 (t1 / thing:ARG1-of (r0 / remain-01))):op2 (m0 / meddle-01:ARG0 t0:ARG1 t1)):ARG0 (t0 / they))') ,
('Instance triples of AMR 1:', 7) ,
([('instance', 'a0', 'decide-01'), ('instance', 'a1', 'and'), ('instance', 'a2', 'protect-01'), ('instance', 'a3', 'thing'), ('instance', 'a4', 'remain-01'), ('instance', 'a5', 'polish'), ('instance', 'a6', 'they')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'decide-01')],) ,
('Relation triples of AMR 1:', 9) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a6'), ('op1', 'a1', 'a2'), ('op2', 'a1', 'a5'), ('ARG1', 'a2', 'a3'), ('ARG0', 'a2', 'a6'), ('ARG1', 'a4', 'a3'), ('topic', 'a5', 'a3'), ('ARG0', 'a5', 'a6')],) ,
('Instance triples of AMR 2:', 7) ,
([('instance', 'b0', 'decide-01'), ('instance', 'b1', 'and'), ('instance', 'b2', 'protect-01'), ('instance', 'b3', 'thing'), ('instance', 'b4', 'remain-01'), ('instance', 'b5', 'meddle-01'), ('instance', 'b6', 'they')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'decide-01')],) ,
('Relation triples of AMR 2:', 9) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b6'), ('op1', 'b1', 'b2'), ('op2', 'b1', 'b5'), ('ARG1', 'b2', 'b3'), ('ARG0', 'b2', 'b6'), ('ARG1', 'b4', 'b3'), ('ARG1', 'b5', 'b3'), ('ARG0', 'b5', 'b6')],) ,
('Candidate mappings:',) ,
([{0, 2, 4, 5}, {1, 3}, {0, 2, 4, 5}, {1, 3}, {0, 2, 4, 5}, {0, 2, 5}, {6}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2, (1, 1): 1, (6, 6): 1}, (1, 1): {-1: 1, (0, 0): 1, (2, 2): 1, (5, 5): 1}, (2, 2): {-1: 1, (1, 1): 1, (3, 3): 1, (6, 6): 1}, (3, 3): {-1: 1, (2, 2): 1, (2, 4): 1, (2, 5): 1, (4, 2): 1, (4, 4): 1, (4, 5): 1}, (4, 4): {-1: 1, (3, 3): 1}, (6, 6): {-1: 1, (0, 0): 1, (0, 2): 1, (0, 5): 1, (2, 0): 1, (2, 2): 1, (2, 5): 1, (5, 0): 1, (5, 2): 1, (5, 5): 1}, (0, 2): {-1: 0, (1, 3): 1, (6, 6): 1}, (1, 3): {-1: 0, (0, 2): 1, (0, 4): 1, (0, 5): 1}, (0, 4): {-1: 0, (1, 3): 1}, (0, 5): {-1: 0, (1, 3): 1, (6, 6): 1}, (5, 5): {-1: 0, (1, 1): 1, (6, 6): 1}, (2, 0): {-1: 0, (3, 1): 1, (6, 6): 1}, (3, 1): {-1: 0, (2, 0): 1, (4, 0): 1}, (2, 4): {-1: 0, (3, 3): 1}, (2, 5): {-1: 0, (3, 3): 1, (6, 6): 1}, (4, 0): {-1: 0, (3, 1): 1}, (4, 2): {-1: 0, (3, 3): 1}, (4, 5): {-1: 0, (3, 3): 1}, (5, 0): {-1: 0, (6, 6): 1}, (5, 2): {-1: 0, (6, 6): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2) ,
('relation match with', (1, 1), 1) ,
('relation match with', (6, 6), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1) ,
('relation match with', (2, 2), 1) ,
('relation match with', (5, 5), 1) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1) ,
('relation match with', (3, 3), 1) ,
('relation match with', (6, 6), 1) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 1) ,
('relation match with', (4, 4), 1) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 1) ,
('node_pair', (5, 5)) ,
('instance/attribute match', 0) ,
('relation match with', (6, 6), 1) ,
('node_pair', (6, 6)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 15) ,
('Node mapping at start', [0, 1, 2, 3, 4, 5, 6]) ,
('Triple match number at start:', 15) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -7) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -7) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -7) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -8) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -7) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -7) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -6) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('saved value', 10) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2) ,
('relation match with', (6, 6), 1) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 4)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 0) ,
('node_pair', (4, 2)) ,
('instance/attribute match', 0) ,
('node_pair', (5, 5)) ,
('instance/attribute match', 0) ,
('relation match with', (6, 6), 1) ,
('node_pair', (6, 6)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 5) ,
('Node mapping at start', [0, 3, 4, 1, 2, 5, 6]) ,
('Triple match number at start:', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([3, 0, 4, 1, 2, 5, 6],) ,
('Computing match for mapping',) ,
([3, 0, 4, 1, 2, 5, 6],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', 0) ,
([4, 3, 0, 1, 2, 5, 6],) ,
('Computing match for mapping',) ,
([4, 3, 0, 1, 2, 5, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -3) ,
([1, 3, 4, 0, 2, 5, 6],) ,
('Computing match for mapping',) ,
([1, 3, 4, 0, 2, 5, 6],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', 0) ,
([2, 3, 4, 1, 0, 5, 6],) ,
('Computing match for mapping',) ,
([2, 3, 4, 1, 0, 5, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -1) ,
([5, 3, 4, 1, 2, 0, 6],) ,
('Computing match for mapping',) ,
([5, 3, 4, 1, 2, 0, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -5) ,
([6, 3, 4, 1, 2, 5, 0],) ,
('Computing match for mapping',) ,
([6, 3, 4, 1, 2, 5, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', 0) ,
([0, 4, 3, 1, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 2, 5, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 1) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 6) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 2) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([0, 2, 4, 1, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 3, 5, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 5) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([0, 5, 4, 1, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 5, 4, 1, 2, 3, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 6) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([0, 6, 4, 1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 2, 5, 3],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 1) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', 0) ,
([0, 3, 1, 4, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 2, 5, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 2) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 3) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 5) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', 0) ,
([0, 3, 5, 1, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 2, 4, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 6) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([0, 3, 6, 1, 2, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, 6, 1, 2, 5, 4],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 2) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', 0) ,
([0, 3, 4, 2, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 1, 5, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 5) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([0, 3, 4, 5, 2, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 2, 1, 6],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 6) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 4, 6, 2, 5, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 2, 5, 1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 5) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', 0) ,
([0, 3, 4, 1, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 5, 2, 6],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 6) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([0, 3, 4, 1, 6, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 5, 2],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -3) ,
([0, 3, 4, 1, 2, 6, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 2, 6, 5],) ,
('saved value', 2) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 4, 1, 2, 5, 6]) ,
('Current mapping', [0, 1, 4, 3, 2, 5, 6]) ,
('Gain after the hill-climbing', 6) ,
('Update triple match number to:', 11) ,
('Current mapping:', [0, 1, 4, 3, 2, 5, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([1, 0, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 4, 3, 2, 5, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 0, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, 2, 5, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 4, 0, 2, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 4, 0, 2, 5, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 4, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 0, 5, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 4, 3, 2, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 4, 3, 2, 0, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 4, 3, 2, 5, 0],) ,
('Computing match for mapping',) ,
([6, 1, 4, 3, 2, 5, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 1, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 2, 5, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 4, 3, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 1, 5, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 5, 4, 3, 2, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 4, 3, 2, 1, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6) ,
([0, 6, 4, 3, 2, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 4, 3, 2, 5, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 3) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 3, 4, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, 5, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 15) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 5) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 6) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 6, 3, 2, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 5, 4],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 4, 2, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, 5, 6],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 4, 5, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 3, 6],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -6) ,
([0, 1, 4, 6, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 2, 5, 3],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 5) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 4, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, 2, 6],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 6) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 6, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 6, 5, 2],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 6, 5],) ,
('saved value', 7) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 4, 3, 2, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 15) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -7) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -7) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -7) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -8) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -7) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -7) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -6) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('saved value', 10) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('saved value', 11) ,
('Node mapping at start', [5, 1, 2, 3, 4, 0, 6]) ,
('Triple match number at start:', 11) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 5, ',', 1, '-', 1) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 5) ,
('Swap gain:', -3) ,
([1, 5, 2, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([1, 5, 2, 3, 4, 0, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 5, ',', 2, '-', 2) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 5) ,
('Swap gain:', -2) ,
([2, 1, 5, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([2, 1, 5, 3, 4, 0, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 5, ',', 3, '-', 3) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 5) ,
('Swap gain:', -4) ,
([3, 1, 2, 5, 4, 0, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 4, 0, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 5, ',', 4, '-', 4) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -2) ,
([4, 1, 2, 3, 5, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 5, ',', 5, '-', 0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 15) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 5, ',', 6, '-', 6) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([6, 1, 2, 3, 4, 0, 5],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 0, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([5, 2, 1, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 2, 1, 3, 4, 0, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([5, 3, 2, 1, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 3, 2, 1, 4, 0, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([5, 4, 2, 3, 1, 0, 6],) ,
('Computing match for mapping',) ,
([5, 4, 2, 3, 1, 0, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([5, 0, 2, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([5, 0, 2, 3, 4, 1, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6) ,
([5, 6, 2, 3, 4, 0, 1],) ,
('Computing match for mapping',) ,
([5, 6, 2, 3, 4, 0, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -6) ,
([5, 1, 3, 2, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 3, 2, 4, 0, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([5, 1, 4, 3, 2, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 4, 3, 2, 0, 6],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([5, 1, 0, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([5, 1, 0, 3, 4, 2, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -7) ,
([5, 1, 6, 3, 4, 0, 2],) ,
('Computing match for mapping',) ,
([5, 1, 6, 3, 4, 0, 2],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([5, 1, 2, 4, 3, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 3, 0, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([5, 1, 2, 0, 4, 3, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 0, 4, 3, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -7) ,
([5, 1, 2, 6, 4, 0, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 6, 4, 0, 3],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([5, 1, 2, 3, 0, 4, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 4, 6],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -6) ,
([5, 1, 2, 3, 6, 0, 4],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 6, 0, 4],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 6) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 2, 3, 4, 6, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 6, 0],) ,
('saved value', 7) ,
('Use swap gain',) ,
('Original mapping', [5, 1, 2, 3, 4, 0, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 15) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -7) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -7) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -7) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -8) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -7) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -7) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -6) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('saved value', 10) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('saved value', 11) ,
('Node mapping at start', [5, 1, 2, 3, 4, 0, 6]) ,
('Triple match number at start:', 11) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 5, ',', 1, '-', 1) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 5) ,
('Swap gain:', -3) ,
([1, 5, 2, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([1, 5, 2, 3, 4, 0, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 5, ',', 2, '-', 2) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 5) ,
('Swap gain:', -2) ,
([2, 1, 5, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([2, 1, 5, 3, 4, 0, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 5, ',', 3, '-', 3) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 5) ,
('Swap gain:', -4) ,
([3, 1, 2, 5, 4, 0, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 4, 0, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 5, ',', 4, '-', 4) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -2) ,
([4, 1, 2, 3, 5, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 5, ',', 5, '-', 0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 15) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 5, ',', 6, '-', 6) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([6, 1, 2, 3, 4, 0, 5],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 0, 5],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([5, 2, 1, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 2, 1, 3, 4, 0, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([5, 3, 2, 1, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 3, 2, 1, 4, 0, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([5, 4, 2, 3, 1, 0, 6],) ,
('Computing match for mapping',) ,
([5, 4, 2, 3, 1, 0, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([5, 0, 2, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([5, 0, 2, 3, 4, 1, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6) ,
([5, 6, 2, 3, 4, 0, 1],) ,
('Computing match for mapping',) ,
([5, 6, 2, 3, 4, 0, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -6) ,
([5, 1, 3, 2, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 3, 2, 4, 0, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([5, 1, 4, 3, 2, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 4, 3, 2, 0, 6],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([5, 1, 0, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([5, 1, 0, 3, 4, 2, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -7) ,
([5, 1, 6, 3, 4, 0, 2],) ,
('Computing match for mapping',) ,
([5, 1, 6, 3, 4, 0, 2],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([5, 1, 2, 4, 3, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 3, 0, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([5, 1, 2, 0, 4, 3, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 0, 4, 3, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -7) ,
([5, 1, 2, 6, 4, 0, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 6, 4, 0, 3],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([5, 1, 2, 3, 0, 4, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 4, 6],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -6) ,
([5, 1, 2, 3, 6, 0, 4],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 6, 0, 4],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 6) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 2, 3, 4, 6, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 6, 0],) ,
('saved value', 7) ,
('Use swap gain',) ,
('Original mapping', [5, 1, 2, 3, 4, 0, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 15) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -7) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -7) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -7) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -8) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -7) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -7) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -6) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('saved value', 10) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 3), 1) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1) ,
('relation match with', (6, 6), 1) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 0) ,
('relation match with', (4, 0), 1) ,
('node_pair', (4, 0)) ,
('instance/attribute match', 0) ,
('node_pair', (5, 5)) ,
('instance/attribute match', 0) ,
('relation match with', (6, 6), 1) ,
('node_pair', (6, 6)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 6) ,
('Node mapping at start', [4, 3, 2, 1, 0, 5, 6]) ,
('Triple match number at start:', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 3) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 4) ,
('Swap gain:', -1) ,
([3, 4, 2, 1, 0, 5, 6],) ,
('Computing match for mapping',) ,
([3, 4, 2, 1, 0, 5, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 2) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', -1) ,
([2, 3, 4, 1, 0, 5, 6],) ,
('Computing match for mapping',) ,
([2, 3, 4, 1, 0, 5, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 1) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', -2) ,
([1, 3, 2, 4, 0, 5, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 4, 0, 5, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 0) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 0, '-', 0, ',', 4, '-', 4) ,
('Swap gain:', 2) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 5) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', 0) ,
([5, 3, 2, 1, 0, 4, 6],) ,
('Computing match for mapping',) ,
([5, 3, 2, 1, 0, 4, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 6) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([6, 3, 2, 1, 0, 5, 4],) ,
('Computing match for mapping',) ,
([6, 3, 2, 1, 0, 5, 4],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -3) ,
([4, 2, 3, 1, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 2, 3, 1, 0, 5, 6],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 1) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 3) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 0) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 1, '-', 0, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([4, 0, 2, 1, 3, 5, 6],) ,
('Computing match for mapping',) ,
([4, 0, 2, 1, 3, 5, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 5) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([4, 5, 2, 1, 0, 3, 6],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 0, 3, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 6) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -4) ,
([4, 6, 2, 1, 0, 5, 3],) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 0, 5, 3],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([4, 3, 1, 2, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 0, 5, 6],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 0) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 2, '-', 0, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([4, 3, 0, 1, 2, 5, 6],) ,
('Computing match for mapping',) ,
([4, 3, 0, 1, 2, 5, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([4, 3, 5, 1, 0, 2, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 0, 2, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([4, 3, 6, 1, 0, 5, 2],) ,
('Computing match for mapping',) ,
([4, 3, 6, 1, 0, 5, 2],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 0) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 3, '-', 0, ',', 4, '-', 1) ,
('Swap gain:', -1) ,
([4, 3, 2, 0, 1, 5, 6],) ,
('Computing match for mapping',) ,
([4, 3, 2, 0, 1, 5, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 5) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([4, 3, 2, 5, 0, 1, 6],) ,
('Computing match for mapping',) ,
([4, 3, 2, 5, 0, 1, 6],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 6) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([4, 3, 2, 6, 0, 5, 1],) ,
('Computing match for mapping',) ,
([4, 3, 2, 6, 0, 5, 1],) ,
('saved value', 2) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 0, ',', 5, '-', 5) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -1) ,
([4, 3, 2, 1, 5, 0, 6],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 5, 0, 6],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 0, ',', 6, '-', 6) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -4) ,
([4, 3, 2, 1, 6, 5, 0],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 6, 5, 0],) ,
('saved value', 2) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -3) ,
([4, 3, 2, 1, 0, 6, 5],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 0, 6, 5],) ,
('saved value', 3) ,
('Use swap gain',) ,
('Original mapping', [4, 3, 2, 1, 0, 5, 6]) ,
('Current mapping', [4, 1, 2, 3, 0, 5, 6]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 9) ,
('Current mapping:', [4, 1, 2, 3, 0, 5, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 1) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 4) ,
('Swap gain:', -3) ,
([1, 4, 2, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 0, 5, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 2) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', -2) ,
([2, 1, 4, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 0, 5, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 3) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', -2) ,
([3, 1, 2, 4, 0, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0, 5, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 0) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 0, '-', 0, ',', 4, '-', 4) ,
('Swap gain:', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 15) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 5) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([5, 1, 2, 3, 0, 4, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 4, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 6) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3) ,
([6, 1, 2, 3, 0, 5, 4],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 0, 5, 4],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6) ,
([4, 2, 1, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 2, 1, 3, 0, 5, 6],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 0) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 1, '-', 0, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([4, 0, 2, 3, 1, 5, 6],) ,
('Computing match for mapping',) ,
([4, 0, 2, 3, 1, 5, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([4, 5, 2, 3, 0, 1, 6],) ,
('Computing match for mapping',) ,
([4, 5, 2, 3, 0, 1, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6) ,
([4, 6, 2, 3, 0, 5, 1],) ,
('Computing match for mapping',) ,
([4, 6, 2, 3, 0, 5, 1],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([4, 1, 3, 2, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 3, 2, 0, 5, 6],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 0) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 2, '-', 0, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([4, 1, 0, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, 2, 5, 6],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([4, 1, 5, 3, 0, 2, 6],) ,
('Computing match for mapping',) ,
([4, 1, 5, 3, 0, 2, 6],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -6) ,
([4, 1, 6, 3, 0, 5, 2],) ,
('Computing match for mapping',) ,
([4, 1, 6, 3, 0, 5, 2],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 0) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 3, '-', 0, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([4, 1, 2, 0, 3, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3, 5, 6],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -4) ,
([4, 1, 2, 5, 0, 3, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 5, 0, 3, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -5) ,
([4, 1, 2, 6, 0, 5, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 6, 0, 5, 3],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 0, ',', 5, '-', 5) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', 0) ,
([4, 1, 2, 3, 5, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0, 6],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 0, ',', 6, '-', 6) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([4, 1, 2, 3, 6, 5, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 6, 5, 0],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([4, 1, 2, 3, 0, 6, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 6, 5],) ,
('saved value', 5) ,
('Use swap gain',) ,
('Original mapping', [4, 1, 2, 3, 0, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 6) ,
('Update triple match number to:', 15) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -7) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -7) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -7) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -7) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -8) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -7) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -7) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -6) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('saved value', 10) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 15) ,
('best node mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Best node mapping alignment:', 'a0(decide-01)-b0(decide-01) a1(and)-b1(and) a2(protect-01)-b2(protect-01) a3(thing)-b3(thing) a4(remain-01)-b4(remain-01) a5(polish)-b5(meddle-01) a6(they)-b6(they)') ,
('F-score:', 0.8823529411764706) ,
0.882
('AMR pair', 15) ,
('============================================',) ,
('AMR 1 (one-line):', '(o0 / out-05:ARG1 (e0 / event:mod (c0 / chapter:part-of (f0 / final):part-of (t0 / trilogy)):name (n0 / name:op1 "The":op2 "Matrix":op3 "Revolutions" )):time (d0 / date-entity:month 11 ))') ,
('AMR 2 (one-line):', '(r0 / release-01:ARG1 (f0 / film:mod (o0 / ordinal-entity:value 3 ):name (n0 / name:op1 "The":op2 "Matrix":op3 "Revolutions" )):time (d0 / date-entity:month 11 ))') ,
('Instance triples of AMR 1:', 7) ,
([('instance', 'a0', 'out-05'), ('instance', 'a1', 'event'), ('instance', 'a2', 'chapter'), ('instance', 'a3', 'final'), ('instance', 'a4', 'trilogy'), ('instance', 'a5', 'name'), ('instance', 'a6', 'date-entity')],) ,
('Attribute triples of AMR 1:', 5) ,
([('TOP', 'a0', 'out-05'), ('op1', 'a5', 'The_'), ('op2', 'a5', 'Matrix_'), ('op3', 'a5', 'Revolutions_'), ('month', 'a6', '11')],) ,
('Relation triples of AMR 1:', 6) ,
([('ARG1', 'a0', 'a1'), ('time', 'a0', 'a6'), ('mod', 'a1', 'a2'), ('name', 'a1', 'a5'), ('part', 'a3', 'a2'), ('part', 'a4', 'a2')],) ,
('Instance triples of AMR 2:', 5) ,
([('instance', 'b0', 'release-01'), ('instance', 'b1', 'film'), ('instance', 'b2', 'ordinal-entity'), ('instance', 'b3', 'name'), ('instance', 'b4', 'date-entity')],) ,
('Attribute triples of AMR 2:', 6) ,
([('TOP', 'b0', 'release-01'), ('value', 'b2', '3'), ('op1', 'b3', 'The_'), ('op2', 'b3', 'Matrix_'), ('op3', 'b3', 'Revolutions_'), ('month', 'b4', '11')],) ,
('Relation triples of AMR 2:', 4) ,
([('ARG1', 'b0', 'b1'), ('time', 'b0', 'b4'), ('mod', 'b1', 'b2'), ('name', 'b1', 'b3')],) ,
('Candidate mappings:',) ,
([{0}, {1}, {2}, set(), set(), {3}, {4}],) ,
('Weight dictionary',) ,
({(5, 3): {-1: 4, (1, 1): 1}, (6, 4): {-1: 2, (0, 0): 1}, (0, 0): {-1: 0, (1, 1): 1, (6, 4): 1}, (1, 1): {-1: 0, (0, 0): 1, (2, 2): 1, (5, 3): 1}, (2, 2): {-1: 0, (1, 1): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 1), 1) ,
('relation match with', (6, 4), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0) ,
('relation match with', (2, 2), 1) ,
('relation match with', (5, 3), 1) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 0) ,
('node_pair', (5, 3)) ,
('instance/attribute match', 4) ,
('node_pair', (6, 4)) ,
('instance/attribute match', 2) ,
('match computing complete, result:', 10) ,
('Node mapping at start', [0, 1, 2, -1, -1, 3, 4]) ,
('Triple match number at start:', 10) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -7) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -8) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10) ,
('Node mapping at start', [0, 1, 2, -1, -1, 3, 4]) ,
('Triple match number at start:', 10) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -7) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -8) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10) ,
('Node mapping at start', [0, 1, 2, -1, -1, 3, 4]) ,
('Triple match number at start:', 10) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -7) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -8) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10) ,
('Node mapping at start', [0, 1, 2, -1, -1, 3, 4]) ,
('Triple match number at start:', 10) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -7) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -8) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10) ,
('Node mapping at start', [0, 1, 2, -1, -1, 3, 4]) ,
('Triple match number at start:', 10) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -7) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -7) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -6) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -8) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 10) ,
('best node mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Best node mapping alignment:', 'a0(out-05)-b0(release-01) a1(event)-b1(film) a2(chapter)-b2(ordinal-entity) a3(final)-Null a4(trilogy)-Null a5(name)-b3(name) a6(date-entity)-b4(date-entity)') ,
('F-score:', 0.606060606060606) ,
0.606
('AMR pair', 16) ,
('============================================',) ,
('AMR 1 (one-line):', '(r0 / rise-01:ARG1 (s0 / stock):ARG2 (m0 / monetary-quantity:quant 44:unit (c0 / cent)):time (d0 / day:mod (r1 / recent)))') ,
('AMR 2 (one-line):', '(r0 / rise-01:ARG1 (s0 / stock):ARG2 (s1 / session:mod (t0 / trade-01):time (b0 / before:op1 (n0 / now))):ARG2 (m0 / monetary-quantity:quant 4:unit (c0 / cent)))') ,
('Instance triples of AMR 1:', 6) ,
([('instance', 'a0', 'rise-01'), ('instance', 'a1', 'stock'), ('instance', 'a2', 'monetary-quantity'), ('instance', 'a3', 'cent'), ('instance', 'a4', 'day'), ('instance', 'a5', 'recent')],) ,
('Attribute triples of AMR 1:', 2) ,
([('TOP', 'a0', 'rise-01'), ('quant', 'a2', '44')],) ,
('Relation triples of AMR 1:', 5) ,
([('ARG1', 'a0', 'a1'), ('ARG2', 'a0', 'a2'), ('time', 'a0', 'a4'), ('unit', 'a2', 'a3'), ('mod', 'a4', 'a5')],) ,
('Instance triples of AMR 2:', 8) ,
([('instance', 'b0', 'rise-01'), ('instance', 'b1', 'stock'), ('instance', 'b2', 'session'), ('instance', 'b3', 'trade-01'), ('instance', 'b4', 'before'), ('instance', 'b5', 'now'), ('instance', 'b6', 'monetary-quantity'), ('instance', 'b7', 'cent')],) ,
('Attribute triples of AMR 2:', 2) ,
([('TOP', 'b0', 'rise-01'), ('quant', 'b6', '4')],) ,
('Relation triples of AMR 2:', 7) ,
([('ARG1', 'b0', 'b1'), ('ARG2', 'b0', 'b2'), ('ARG2', 'b0', 'b6'), ('mod', 'b2', 'b3'), ('time', 'b2', 'b4'), ('op1', 'b4', 'b5'), ('unit', 'b6', 'b7')],) ,
('Candidate mappings:',) ,
([{0, 2}, {1}, {2, 6}, {7}, {2, 4}, {3}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2, (1, 1): 1, (2, 2): 1, (2, 6): 1}, (1, 1): {-1: 1, (0, 0): 1}, (2, 6): {-1: 1, (0, 0): 1, (3, 7): 1}, (3, 7): {-1: 1, (2, 6): 1}, (2, 2): {-1: 0, (0, 0): 1}, (0, 2): {-1: 0, (4, 4): 1}, (4, 4): {-1: 0, (0, 2): 1}, (4, 2): {-1: 0, (5, 3): 1}, (5, 3): {-1: 0, (4, 2): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2) ,
('relation match with', (1, 1), 1) ,
('relation match with', (2, 6), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1) ,
('node_pair', (2, 6)) ,
('instance/attribute match', 1) ,
('relation match with', (3, 7), 1) ,
('node_pair', (3, 7)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 0) ,
('node_pair', (5, 3)) ,
('instance/attribute match', 0) ,
('match computing complete, result:', 8) ,
('Node mapping at start', [0, 1, 6, 7, 4, 3]) ,
('Triple match number at start:', 8) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 4, 3],) ,
('saved value', 5) ,
('Remap node', 2, 'from ', 6, 'to', 2) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 3],) ,
('saved value', 6) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 6, 7, 4, 3],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 4, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 0, 7, 4, 3],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([7, 1, 6, 0, 4, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 6, 7, 0, 3],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 0, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 6, 7, 4, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 4, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 6, 1, 7, 4, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 4, 3],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 6, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 4, 3],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([0, 4, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 6, 7, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 4, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, 3],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 6, 3],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 3, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 4, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 7, 3],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 6, 3, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 7],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', 0) ,
([0, 1, 6, 7, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 4],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [0, 1, 6, 7, 4, 3]) ,
('Current mapping', [0, 1, 6, 7, 2, 3]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 6, 7, 2, 3]) ,
('Remap node', 4, 'from ', 2, 'to', 4) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 6, 7, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 2, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 0, 7, 2, 3],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 2, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([7, 1, 6, 0, 2, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 2, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 6, 7, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 0, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 6, 7, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 2, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 6, 1, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 2, 3],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 6, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 2, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 6, 7, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 2, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 2, 3],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 6, 3],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 3, 7, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 2, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 6, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 7, 3],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 6, 3, 2, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 7],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 6, 7, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 2],) ,
('saved value', 8) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 6, 7, 2, 3]) ,
('Current mapping', [0, 1, 6, 7, 2, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 4, 3],) ,
('saved value', 5) ,
('Node mapping at start', [2, 1, 6, 7, 4, 3]) ,
('Triple match number at start:', 5) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 3) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -2) ,
([1, 2, 6, 7, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, 6, 7, 4, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 6) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 2) ,
('Swap gain:', -3) ,
([6, 1, 2, 7, 4, 3],) ,
('Computing match for mapping',) ,
([6, 1, 2, 7, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 7) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([7, 1, 6, 2, 4, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 2, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', 0) ,
([4, 1, 6, 7, 2, 3],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 2, 3],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([3, 1, 6, 7, 4, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 4, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([2, 6, 1, 7, 4, 3],) ,
('Computing match for mapping',) ,
([2, 6, 1, 7, 4, 3],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([2, 7, 6, 1, 4, 3],) ,
('Computing match for mapping',) ,
([2, 7, 6, 1, 4, 3],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([2, 4, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([2, 4, 6, 7, 1, 3],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([2, 3, 6, 7, 4, 1],) ,
('Computing match for mapping',) ,
([2, 3, 6, 7, 4, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -3) ,
([2, 1, 7, 6, 4, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 6, 4, 3],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -3) ,
([2, 1, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([2, 1, 4, 7, 6, 3],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -2) ,
([2, 1, 3, 7, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 7, 4, 6],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([2, 1, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([2, 1, 6, 4, 7, 3],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([2, 1, 6, 3, 4, 7],) ,
('Computing match for mapping',) ,
([2, 1, 6, 3, 4, 7],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([2, 1, 6, 7, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 3, 4],) ,
('saved value', 4) ,
('Use move gain',) ,
('Original mapping', [2, 1, 6, 7, 4, 3]) ,
('Current mapping', [0, 1, 6, 7, 4, 3]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 8) ,
('Current mapping:', [0, 1, 6, 7, 4, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 4, 3],) ,
('saved value', 5) ,
('Remap node', 2, 'from ', 6, 'to', 2) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 3],) ,
('saved value', 6) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 6, 7, 4, 3],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 4, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 0, 7, 4, 3],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([7, 1, 6, 0, 4, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 6, 7, 0, 3],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 0, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 6, 7, 4, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 4, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 6, 1, 7, 4, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 4, 3],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 6, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 4, 3],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([0, 4, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 6, 7, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 4, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, 3],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 6, 3],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 3, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 4, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 7, 3],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 6, 3, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 7],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', 0) ,
([0, 1, 6, 7, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 4],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [0, 1, 6, 7, 4, 3]) ,
('Current mapping', [0, 1, 6, 7, 2, 3]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 6, 7, 2, 3]) ,
('Remap node', 4, 'from ', 2, 'to', 4) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 6, 7, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 2, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 0, 7, 2, 3],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 2, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([7, 1, 6, 0, 2, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 2, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 6, 7, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 0, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 6, 7, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 2, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 6, 1, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 2, 3],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 6, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 2, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 6, 7, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 2, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 2, 3],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 6, 3],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 3, 7, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 2, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 6, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 7, 3],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 6, 3, 2, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 7],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 6, 7, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 2],) ,
('saved value', 8) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 6, 7, 2, 3]) ,
('Current mapping', [0, 1, 6, 7, 2, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 4, 3],) ,
('saved value', 5) ,
('Node mapping at start', [2, 1, 6, 7, 4, 3]) ,
('Triple match number at start:', 5) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 3) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -2) ,
([1, 2, 6, 7, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, 6, 7, 4, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 6) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 2) ,
('Swap gain:', -3) ,
([6, 1, 2, 7, 4, 3],) ,
('Computing match for mapping',) ,
([6, 1, 2, 7, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 7) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([7, 1, 6, 2, 4, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 2, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', 0) ,
([4, 1, 6, 7, 2, 3],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 2, 3],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([3, 1, 6, 7, 4, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 4, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([2, 6, 1, 7, 4, 3],) ,
('Computing match for mapping',) ,
([2, 6, 1, 7, 4, 3],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([2, 7, 6, 1, 4, 3],) ,
('Computing match for mapping',) ,
([2, 7, 6, 1, 4, 3],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([2, 4, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([2, 4, 6, 7, 1, 3],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([2, 3, 6, 7, 4, 1],) ,
('Computing match for mapping',) ,
([2, 3, 6, 7, 4, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -3) ,
([2, 1, 7, 6, 4, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 6, 4, 3],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -3) ,
([2, 1, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([2, 1, 4, 7, 6, 3],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -2) ,
([2, 1, 3, 7, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 7, 4, 6],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([2, 1, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([2, 1, 6, 4, 7, 3],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([2, 1, 6, 3, 4, 7],) ,
('Computing match for mapping',) ,
([2, 1, 6, 3, 4, 7],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([2, 1, 6, 7, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 3, 4],) ,
('saved value', 4) ,
('Use move gain',) ,
('Original mapping', [2, 1, 6, 7, 4, 3]) ,
('Current mapping', [0, 1, 6, 7, 4, 3]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 8) ,
('Current mapping:', [0, 1, 6, 7, 4, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 4, 3],) ,
('saved value', 5) ,
('Remap node', 2, 'from ', 6, 'to', 2) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 3],) ,
('saved value', 6) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 6, 7, 4, 3],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 4, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 0, 7, 4, 3],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([7, 1, 6, 0, 4, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 6, 7, 0, 3],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 0, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 6, 7, 4, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 4, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 6, 1, 7, 4, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 4, 3],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 6, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 4, 3],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([0, 4, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 6, 7, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 4, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, 3],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 6, 3],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 3, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 4, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 7, 3],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 6, 3, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 7],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', 0) ,
([0, 1, 6, 7, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 4],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [0, 1, 6, 7, 4, 3]) ,
('Current mapping', [0, 1, 6, 7, 2, 3]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 6, 7, 2, 3]) ,
('Remap node', 4, 'from ', 2, 'to', 4) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 6, 7, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 2, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 0, 7, 2, 3],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 2, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([7, 1, 6, 0, 2, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 2, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 6, 7, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 0, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 6, 7, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 2, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 6, 1, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 2, 3],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 6, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 2, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 6, 7, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 2, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 2, 3],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 6, 3],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 3, 7, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 2, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 6, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 7, 3],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 6, 3, 2, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 7],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 6, 7, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 2],) ,
('saved value', 8) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 6, 7, 2, 3]) ,
('Current mapping', [0, 1, 6, 7, 2, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 4, 3],) ,
('saved value', 5) ,
('Node mapping at start', [2, 1, 6, 7, 4, 3]) ,
('Triple match number at start:', 5) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 3) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -2) ,
([1, 2, 6, 7, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, 6, 7, 4, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 6) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 2) ,
('Swap gain:', -3) ,
([6, 1, 2, 7, 4, 3],) ,
('Computing match for mapping',) ,
([6, 1, 2, 7, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 7) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([7, 1, 6, 2, 4, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 2, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', 0) ,
([4, 1, 6, 7, 2, 3],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 2, 3],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([3, 1, 6, 7, 4, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 4, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([2, 6, 1, 7, 4, 3],) ,
('Computing match for mapping',) ,
([2, 6, 1, 7, 4, 3],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([2, 7, 6, 1, 4, 3],) ,
('Computing match for mapping',) ,
([2, 7, 6, 1, 4, 3],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([2, 4, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([2, 4, 6, 7, 1, 3],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([2, 3, 6, 7, 4, 1],) ,
('Computing match for mapping',) ,
([2, 3, 6, 7, 4, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -3) ,
([2, 1, 7, 6, 4, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 6, 4, 3],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -3) ,
([2, 1, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([2, 1, 4, 7, 6, 3],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -2) ,
([2, 1, 3, 7, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 7, 4, 6],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([2, 1, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([2, 1, 6, 4, 7, 3],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([2, 1, 6, 3, 4, 7],) ,
('Computing match for mapping',) ,
([2, 1, 6, 3, 4, 7],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([2, 1, 6, 7, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 3, 4],) ,
('saved value', 4) ,
('Use move gain',) ,
('Original mapping', [2, 1, 6, 7, 4, 3]) ,
('Current mapping', [0, 1, 6, 7, 4, 3]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 8) ,
('Current mapping:', [0, 1, 6, 7, 4, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 4, 3],) ,
('saved value', 5) ,
('Remap node', 2, 'from ', 6, 'to', 2) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 3],) ,
('saved value', 6) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 6, 7, 4, 3],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 4, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 0, 7, 4, 3],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([7, 1, 6, 0, 4, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 6, 7, 0, 3],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 0, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 6, 7, 4, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 4, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 6, 1, 7, 4, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 4, 3],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 6, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 4, 3],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([0, 4, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 6, 7, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 4, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, 3],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 6, 3],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 3, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 4, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 7, 3],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 6, 3, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 7],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', 0) ,
([0, 1, 6, 7, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 4],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [0, 1, 6, 7, 4, 3]) ,
('Current mapping', [0, 1, 6, 7, 2, 3]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 6, 7, 2, 3]) ,
('Remap node', 4, 'from ', 2, 'to', 4) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 6, 7, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 2, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 0, 7, 2, 3],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 2, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([7, 1, 6, 0, 2, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 2, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 6, 7, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 0, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 6, 7, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 2, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 6, 1, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 2, 3],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 6, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 2, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 6, 7, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 2, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 2, 3],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 6, 3],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 3, 7, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 2, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 6, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 7, 3],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 6, 3, 2, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 7],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 6, 7, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 2],) ,
('saved value', 8) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 6, 7, 2, 3]) ,
('Current mapping', [0, 1, 6, 7, 2, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 4, 3],) ,
('saved value', 5) ,
('Node mapping at start', [2, 1, 6, 7, 4, 3]) ,
('Triple match number at start:', 5) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 3) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -2) ,
([1, 2, 6, 7, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, 6, 7, 4, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 6) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 2) ,
('Swap gain:', -3) ,
([6, 1, 2, 7, 4, 3],) ,
('Computing match for mapping',) ,
([6, 1, 2, 7, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 7) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([7, 1, 6, 2, 4, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 2, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', 0) ,
([4, 1, 6, 7, 2, 3],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 2, 3],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([3, 1, 6, 7, 4, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 4, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([2, 6, 1, 7, 4, 3],) ,
('Computing match for mapping',) ,
([2, 6, 1, 7, 4, 3],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([2, 7, 6, 1, 4, 3],) ,
('Computing match for mapping',) ,
([2, 7, 6, 1, 4, 3],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([2, 4, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([2, 4, 6, 7, 1, 3],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([2, 3, 6, 7, 4, 1],) ,
('Computing match for mapping',) ,
([2, 3, 6, 7, 4, 1],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -3) ,
([2, 1, 7, 6, 4, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 6, 4, 3],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -3) ,
([2, 1, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([2, 1, 4, 7, 6, 3],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -2) ,
([2, 1, 3, 7, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 7, 4, 6],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 4) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([2, 1, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([2, 1, 6, 4, 7, 3],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([2, 1, 6, 3, 4, 7],) ,
('Computing match for mapping',) ,
([2, 1, 6, 3, 4, 7],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([2, 1, 6, 7, 4, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([2, 1, 6, 7, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 3, 4],) ,
('saved value', 4) ,
('Use move gain',) ,
('Original mapping', [2, 1, 6, 7, 4, 3]) ,
('Current mapping', [0, 1, 6, 7, 4, 3]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 8) ,
('Current mapping:', [0, 1, 6, 7, 4, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 4, 3],) ,
('saved value', 5) ,
('Remap node', 2, 'from ', 6, 'to', 2) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 3],) ,
('saved value', 6) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 3],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 6, 7, 4, 3],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 4, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 0, 7, 4, 3],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([7, 1, 6, 0, 4, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 4, 3],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([4, 1, 6, 7, 0, 3],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 0, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 6, 7, 4, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 4, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 6, 1, 7, 4, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 4, 3],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 6, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 4, 3],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2) ,
([0, 4, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 6, 7, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 4, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, 3],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 6, 3],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 3, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 4, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 7, 3],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 6, 3, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 7],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', 0) ,
([0, 1, 6, 7, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 4],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [0, 1, 6, 7, 4, 3]) ,
('Current mapping', [0, 1, 6, 7, 2, 3]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 6, 7, 2, 3]) ,
('Remap node', 4, 'from ', 2, 'to', 4) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 6, 7, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 2, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 0, 7, 2, 3],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 2, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([7, 1, 6, 0, 2, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 2, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 6, 7, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 0, 3],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -5) ,
([3, 1, 6, 7, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 2, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 6, 1, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 2, 3],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 6, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 2, 3],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 1, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 6, 7, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 2, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 7, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 2, 3],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 6, 3],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 3, 7, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 2, 6],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 6, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 7, 3],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 6, 3, 2, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 7],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 1, 6, 7, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 2],) ,
('saved value', 8) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 6, 7, 2, 3]) ,
('Current mapping', [0, 1, 6, 7, 2, 3]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 9) ,
('best node mapping', [0, 1, 6, 7, 2, 3]) ,
('Best node mapping alignment:', 'a0(rise-01)-b0(rise-01) a1(stock)-b1(stock) a2(monetary-quantity)-b6(monetary-quantity) a3(cent)-b7(cent) a4(day)-b2(session) a5(recent)-b3(trade-01)') ,
('F-score:', 0.5999999999999999) ,
0.600
('AMR pair', 17) ,
('============================================',) ,
('AMR 1 (one-line):', '(m0 / marry-01:ARG1 (h0 / he):ARG2 (p0 / person:ARG0-of (h1 / have-rel-role-91:ARG1 (p1 / person:name (n1 / name:op1 "Pablo":op2 "Casals" )):ARG2 (w0 / widow)):name (n0 / name:op1 "Marta":op2 "Casals" )))') ,
('AMR 2 (one-line):', '(m0 / marry-01:ARG1 (h0 / he):ARG2 (p0 / person:ARG1-of (d0 / die-01):ARG0-of (h1 / have-rel-role-91:ARG0 (p1 / person:name (n1 / name:op1 "Casals" )):ARG2 (w0 / widow)):name (n0 / name:op1 "Marta" )):time (a0 / after))') ,
('Instance triples of AMR 1:', 8) ,
([('instance', 'a0', 'marry-01'), ('instance', 'a1', 'he'), ('instance', 'a2', 'person'), ('instance', 'a3', 'have-rel-role-91'), ('instance', 'a4', 'person'), ('instance', 'a5', 'name'), ('instance', 'a6', 'widow'), ('instance', 'a7', 'name')],) ,
('Attribute triples of AMR 1:', 5) ,
([('TOP', 'a0', 'marry-01'), ('op1', 'a5', 'Pablo_'), ('op2', 'a5', 'Casals_'), ('op1', 'a7', 'Marta_'), ('op2', 'a7', 'Casals_')],) ,
('Relation triples of AMR 1:', 7) ,
([('ARG1', 'a0', 'a1'), ('ARG2', 'a0', 'a2'), ('name', 'a2', 'a7'), ('ARG0', 'a3', 'a2'), ('ARG1', 'a3', 'a4'), ('ARG2', 'a3', 'a6'), ('name', 'a4', 'a5')],) ,
('Instance triples of AMR 2:', 10) ,
([('instance', 'b0', 'marry-01'), ('instance', 'b1', 'he'), ('instance', 'b2', 'person'), ('instance', 'b3', 'die-01'), ('instance', 'b4', 'have-rel-role-91'), ('instance', 'b5', 'person'), ('instance', 'b6', 'name'), ('instance', 'b7', 'widow'), ('instance', 'b8', 'name'), ('instance', 'b9', 'after')],) ,
('Attribute triples of AMR 2:', 3) ,
([('TOP', 'b0', 'marry-01'), ('op1', 'b6', 'Casals_'), ('op1', 'b8', 'Marta_')],) ,
('Relation triples of AMR 2:', 9) ,
([('ARG1', 'b0', 'b1'), ('ARG2', 'b0', 'b2'), ('time', 'b0', 'b9'), ('name', 'b2', 'b8'), ('ARG1', 'b3', 'b2'), ('ARG0', 'b4', 'b2'), ('ARG0', 'b4', 'b5'), ('ARG2', 'b4', 'b7'), ('name', 'b5', 'b6')],) ,
('Candidate mappings:',) ,
([{0, 3, 4}, {1, 2}, {2, 5, 7}, {0, 3, 4}, {1, 2, 5}, {8, 6}, {2, 7}, {8, 6}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2, (1, 1): 1, (2, 2): 1}, (1, 1): {-1: 1, (0, 0): 1}, (2, 2): {-1: 1, (0, 0): 1, (7, 8): 1, (3, 4): 1}, (2, 5): {-1: 1, (7, 6): 1, (3, 4): 1}, (3, 4): {-1: 1, (2, 2): 1, (2, 5): 1, (6, 7): 1}, (4, 2): {-1: 1, (3, 3): 1, (5, 8): 1}, (4, 5): {-1: 1, (5, 6): 1}, (5, 6): {-1: 1, (4, 5): 1}, (5, 8): {-1: 1, (4, 2): 1}, (6, 7): {-1: 1, (3, 4): 1}, (7, 6): {-1: 1, (2, 5): 1}, (7, 8): {-1: 2, (2, 2): 1}, (0, 3): {-1: 0, (1, 2): 1}, (1, 2): {-1: 0, (0, 3): 1}, (0, 4): {-1: 0, (2, 7): 1}, (2, 7): {-1: 0, (0, 4): 1}, (3, 0): {-1: 0, (4, 1): 1, (6, 2): 1}, (4, 1): {-1: 0, (3, 0): 1}, (3, 3): {-1: 0, (4, 2): 1}, (6, 2): {-1: 0, (3, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2) ,
('relation match with', (1, 1), 1) ,
('relation match with', (2, 2), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1) ,
('relation match with', (3, 4), 1) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 1) ,
('relation match with', (6, 7), 1) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 1) ,
('node_pair', (5, 8)) ,
('instance/attribute match', 1) ,
('node_pair', (6, 7)) ,
('instance/attribute match', 1) ,
('node_pair', (7, 6)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 13) ,
('Node mapping at start', [0, 1, 2, 4, 5, 8, 7, 6]) ,
('Triple match number at start:', 13) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 8, 7, 6],) ,
('saved value', 9) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 8, 7, 6],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 2, 4, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 8, 7, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 0, 4, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 8, 7, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 2, 0, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 8, 7, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 2, 4, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 8, 7, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -5) ,
([8, 1, 2, 4, 5, 0, 7, 6],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 5, 0, 7, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -6) ,
([7, 1, 2, 4, 5, 8, 0, 6],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 8, 0, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 6) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', -5) ,
([6, 1, 2, 4, 5, 8, 7, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 5, 8, 7, 0],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 2, 1, 4, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 8, 7, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 4, 2, 1, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 8, 7, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 5, 2, 4, 1, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 8, 7, 6],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 8) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, 8, 2, 4, 5, 1, 7, 6],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 5, 1, 7, 6],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 2, 4, 5, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 8, 1, 6],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 6) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 1) ,
('Swap gain:', -3) ,
([0, 6, 2, 4, 5, 8, 7, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 8, 7, 1],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 4, 2, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 8, 7, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', 1) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('saved value', 14) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 8) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 8, 4, 5, 2, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 5, 2, 7, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 7, 4, 5, 8, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 8, 2, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 6) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 6, 4, 5, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 8, 7, 2],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 5, 4, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 8, 7, 6],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 8) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 8, 5, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 5, 4, 7, 6],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 7, 5, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 8, 4, 6],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 6) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 6, 5, 8, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 8, 7, 4],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 8) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, 8, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 8, 5, 7, 6],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 7, 8, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 8, 5, 6],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 6) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, 6, 8, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 8, 7, 5],) ,
('saved value', 11) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 8) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, 7, 8, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 8, 6],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 6) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 8) ,
('Swap gain:', 3) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 16) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 6) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', 7) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, 8, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, 6, 7],) ,
('saved value', 10) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 5, 8, 7, 6]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 16) ,
('Current mapping:', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 12) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, 7, 8],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -7) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -6) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -7) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -5) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('saved value', 13) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -6) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('saved value', 13) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('saved value', 11) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('saved value', 13) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('saved value', 11) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 5)) ,
('instance/attribute match', 1) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0) ,
('node_pair', (4, 1)) ,
('instance/attribute match', 0) ,
('node_pair', (5, 6)) ,
('instance/attribute match', 1) ,
('node_pair', (6, 7)) ,
('instance/attribute match', 1) ,
('node_pair', (7, 8)) ,
('instance/attribute match', 2) ,
('match computing complete, result:', 5) ,
('Node mapping at start', [4, 2, 5, 3, 1, 6, 7, 8]) ,
('Triple match number at start:', 5) ,
('Remap node', 0, 'from ', 4, 'to', 0) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 2, 5, 3, 1, 6, 7, 8],) ,
('saved value', 7) ,
('Remap node', 3, 'from ', 3, 'to', 0) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([4, 2, 5, 0, 1, 6, 7, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 2) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 4) ,
('Swap gain:', 0) ,
([2, 4, 5, 3, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 4, 5, 3, 1, 6, 7, 8],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 5) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 4) ,
('Swap gain:', -1) ,
([5, 2, 4, 3, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([5, 2, 4, 3, 1, 6, 7, 8],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 3) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', 4) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 1) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 4) ,
('Swap gain:', 0) ,
([1, 2, 5, 3, 4, 6, 7, 8],) ,
('Computing match for mapping',) ,
([1, 2, 5, 3, 4, 6, 7, 8],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 6) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -1) ,
([6, 2, 5, 3, 1, 4, 7, 8],) ,
('Computing match for mapping',) ,
([6, 2, 5, 3, 1, 4, 7, 8],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 7) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -1) ,
([7, 2, 5, 3, 1, 6, 4, 8],) ,
('Computing match for mapping',) ,
([7, 2, 5, 3, 1, 6, 4, 8],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 8) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -2) ,
([8, 2, 5, 3, 1, 6, 7, 4],) ,
('Computing match for mapping',) ,
([8, 2, 5, 3, 1, 6, 7, 4],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 5) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 2) ,
('Swap gain:', 1) ,
([4, 5, 2, 3, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 5, 2, 3, 1, 6, 7, 8],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 3) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', 0) ,
([4, 3, 5, 2, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 1, 6, 7, 8],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 1) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', 3) ,
([4, 1, 5, 3, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 1, 5, 3, 2, 6, 7, 8],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([4, 6, 5, 3, 1, 2, 7, 8],) ,
('Computing match for mapping',) ,
([4, 6, 5, 3, 1, 2, 7, 8],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 7) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -1) ,
([4, 7, 5, 3, 1, 6, 2, 8],) ,
('Computing match for mapping',) ,
([4, 7, 5, 3, 1, 6, 2, 8],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 8) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([4, 8, 5, 3, 1, 6, 7, 2],) ,
('Computing match for mapping',) ,
([4, 8, 5, 3, 1, 6, 7, 2],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 3) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 5) ,
('Swap gain:', -1) ,
([4, 2, 3, 5, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 1, 6, 7, 8],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 1) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 5) ,
('Swap gain:', 1) ,
([4, 2, 1, 3, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 2, 1, 3, 5, 6, 7, 8],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 6) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -2) ,
([4, 2, 6, 3, 1, 5, 7, 8],) ,
('Computing match for mapping',) ,
([4, 2, 6, 3, 1, 5, 7, 8],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 7) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -1) ,
([4, 2, 7, 3, 1, 6, 5, 8],) ,
('Computing match for mapping',) ,
([4, 2, 7, 3, 1, 6, 5, 8],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 8) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -3) ,
([4, 2, 8, 3, 1, 6, 7, 5],) ,
('Computing match for mapping',) ,
([4, 2, 8, 3, 1, 6, 7, 5],) ,
('saved value', 2) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 1) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([4, 2, 5, 1, 3, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 3, 6, 7, 8],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 6) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([4, 2, 5, 6, 1, 3, 7, 8],) ,
('Computing match for mapping',) ,
([4, 2, 5, 6, 1, 3, 7, 8],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 7) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([4, 2, 5, 7, 1, 6, 3, 8],) ,
('Computing match for mapping',) ,
([4, 2, 5, 7, 1, 6, 3, 8],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 3, ',', 7, '-', 8) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -2) ,
([4, 2, 5, 8, 1, 6, 7, 3],) ,
('Computing match for mapping',) ,
([4, 2, 5, 8, 1, 6, 7, 3],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 6) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([4, 2, 5, 3, 6, 1, 7, 8],) ,
('Computing match for mapping',) ,
([4, 2, 5, 3, 6, 1, 7, 8],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 7) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -1) ,
([4, 2, 5, 3, 7, 6, 1, 8],) ,
('Computing match for mapping',) ,
([4, 2, 5, 3, 7, 6, 1, 8],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 1, ',', 7, '-', 8) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -2) ,
([4, 2, 5, 3, 8, 6, 7, 1],) ,
('Computing match for mapping',) ,
([4, 2, 5, 3, 8, 6, 7, 1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -2) ,
([4, 2, 5, 3, 1, 7, 6, 8],) ,
('Computing match for mapping',) ,
([4, 2, 5, 3, 1, 7, 6, 8],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', 0) ,
([4, 2, 5, 3, 1, 8, 7, 6],) ,
('Computing match for mapping',) ,
([4, 2, 5, 3, 1, 8, 7, 6],) ,
('saved value', 5) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -3) ,
([4, 2, 5, 3, 1, 6, 8, 7],) ,
('Computing match for mapping',) ,
([4, 2, 5, 3, 1, 6, 8, 7],) ,
('saved value', 2) ,
('Use swap gain',) ,
('Original mapping', [4, 2, 5, 3, 1, 6, 7, 8]) ,
('Current mapping', [3, 2, 5, 4, 1, 6, 7, 8]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 9) ,
('Current mapping:', [3, 2, 5, 4, 1, 6, 7, 8]) ,
('Remap node', 0, 'from ', 3, 'to', 0) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('saved value', 10) ,
('Remap node', 3, 'from ', 4, 'to', 0) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([3, 2, 5, 0, 1, 6, 7, 8],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 2) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 3) ,
('Swap gain:', -1) ,
([2, 3, 5, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 3, 5, 4, 1, 6, 7, 8],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 5) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -3) ,
([5, 2, 3, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([5, 2, 3, 4, 1, 6, 7, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 4) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -4) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 2, 5, 3, 1, 6, 7, 8],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 1) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', -1) ,
([1, 2, 5, 4, 3, 6, 7, 8],) ,
('Computing match for mapping',) ,
([1, 2, 5, 4, 3, 6, 7, 8],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 6) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([6, 2, 5, 4, 1, 3, 7, 8],) ,
('Computing match for mapping',) ,
([6, 2, 5, 4, 1, 3, 7, 8],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', 7) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', -3) ,
([7, 2, 5, 4, 1, 6, 3, 8],) ,
('Computing match for mapping',) ,
([7, 2, 5, 4, 1, 6, 3, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 3, ',', 7, '-', 8) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -3) ,
([8, 2, 5, 4, 1, 6, 7, 3],) ,
('Computing match for mapping',) ,
([8, 2, 5, 4, 1, 6, 7, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 5) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 2) ,
('Swap gain:', 0) ,
([3, 5, 2, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([3, 5, 2, 4, 1, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 4) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([3, 4, 5, 2, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([3, 4, 5, 2, 1, 6, 7, 8],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 1) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', 1) ,
([3, 1, 5, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([3, 1, 5, 4, 2, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -2) ,
([3, 6, 5, 4, 1, 2, 7, 8],) ,
('Computing match for mapping',) ,
([3, 6, 5, 4, 1, 2, 7, 8],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 7) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([3, 7, 5, 4, 1, 6, 2, 8],) ,
('Computing match for mapping',) ,
([3, 7, 5, 4, 1, 6, 2, 8],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 8) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -3) ,
([3, 8, 5, 4, 1, 6, 7, 2],) ,
('Computing match for mapping',) ,
([3, 8, 5, 4, 1, 6, 7, 2],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 4) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', -4) ,
([3, 2, 4, 5, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 1, 6, 7, 8],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 1) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 5) ,
('Swap gain:', 0) ,
([3, 2, 1, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([3, 2, 1, 4, 5, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 6) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([3, 2, 6, 4, 1, 5, 7, 8],) ,
('Computing match for mapping',) ,
([3, 2, 6, 4, 1, 5, 7, 8],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 7) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([3, 2, 7, 4, 1, 6, 5, 8],) ,
('Computing match for mapping',) ,
([3, 2, 7, 4, 1, 6, 5, 8],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 8) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -4) ,
([3, 2, 8, 4, 1, 6, 7, 5],) ,
('Computing match for mapping',) ,
([3, 2, 8, 4, 1, 6, 7, 5],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 1) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([3, 2, 5, 1, 4, 6, 7, 8],) ,
('Computing match for mapping',) ,
([3, 2, 5, 1, 4, 6, 7, 8],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([3, 2, 5, 6, 1, 4, 7, 8],) ,
('Computing match for mapping',) ,
([3, 2, 5, 6, 1, 4, 7, 8],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([3, 2, 5, 7, 1, 6, 4, 8],) ,
('Computing match for mapping',) ,
([3, 2, 5, 7, 1, 6, 4, 8],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([3, 2, 5, 8, 1, 6, 7, 4],) ,
('Computing match for mapping',) ,
([3, 2, 5, 8, 1, 6, 7, 4],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 6) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([3, 2, 5, 4, 6, 1, 7, 8],) ,
('Computing match for mapping',) ,
([3, 2, 5, 4, 6, 1, 7, 8],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 7) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([3, 2, 5, 4, 7, 6, 1, 8],) ,
('Computing match for mapping',) ,
([3, 2, 5, 4, 7, 6, 1, 8],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 1, ',', 7, '-', 8) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -2) ,
([3, 2, 5, 4, 8, 6, 7, 1],) ,
('Computing match for mapping',) ,
([3, 2, 5, 4, 8, 6, 7, 1],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -3) ,
([3, 2, 5, 4, 1, 7, 6, 8],) ,
('Computing match for mapping',) ,
([3, 2, 5, 4, 1, 7, 6, 8],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', 0) ,
([3, 2, 5, 4, 1, 8, 7, 6],) ,
('Computing match for mapping',) ,
([3, 2, 5, 4, 1, 8, 7, 6],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -4) ,
([3, 2, 5, 4, 1, 6, 8, 7],) ,
('Computing match for mapping',) ,
([3, 2, 5, 4, 1, 6, 8, 7],) ,
('saved value', 5) ,
('Use move gain',) ,
('Original mapping', [3, 2, 5, 4, 1, 6, 7, 8]) ,
('Current mapping', [0, 2, 5, 4, 1, 6, 7, 8]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 10) ,
('Current mapping:', [0, 2, 5, 4, 1, 6, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 2, 5, 4, 1, 6, 7, 8],) ,
('saved value', 9) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 2, 5, 3, 1, 6, 7, 8],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([2, 0, 5, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 0, 5, 4, 1, 6, 7, 8],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([5, 2, 0, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([5, 2, 0, 4, 1, 6, 7, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([4, 2, 5, 0, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 2, 5, 0, 1, 6, 7, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -2) ,
([1, 2, 5, 4, 0, 6, 7, 8],) ,
('Computing match for mapping',) ,
([1, 2, 5, 4, 0, 6, 7, 8],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([6, 2, 5, 4, 1, 0, 7, 8],) ,
('Computing match for mapping',) ,
([6, 2, 5, 4, 1, 0, 7, 8],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -4) ,
([7, 2, 5, 4, 1, 6, 0, 8],) ,
('Computing match for mapping',) ,
([7, 2, 5, 4, 1, 6, 0, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -4) ,
([8, 2, 5, 4, 1, 6, 7, 0],) ,
('Computing match for mapping',) ,
([8, 2, 5, 4, 1, 6, 7, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 5) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 2) ,
('Swap gain:', 2) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 4) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 4, 5, 2, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 5, 2, 1, 6, 7, 8],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 1) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', 3) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('saved value', 13) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 6, 5, 4, 1, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 6, 5, 4, 1, 2, 7, 8],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 7) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([0, 7, 5, 4, 1, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 7, 5, 4, 1, 6, 2, 8],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 8) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([0, 8, 5, 4, 1, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 8, 5, 4, 1, 6, 7, 2],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 4) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', -4) ,
([0, 2, 4, 5, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 1, 6, 7, 8],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 1) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 5) ,
('Swap gain:', 0) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 6) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 2, 6, 4, 1, 5, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 6, 4, 1, 5, 7, 8],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 7) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([0, 2, 7, 4, 1, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 1, 6, 5, 8],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 8) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -4) ,
([0, 2, 8, 4, 1, 6, 7, 5],) ,
('Computing match for mapping',) ,
([0, 2, 8, 4, 1, 6, 7, 5],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 1) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([0, 2, 5, 1, 4, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 5, 1, 4, 6, 7, 8],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 2, 5, 6, 1, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 5, 6, 1, 4, 7, 8],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 2, 5, 7, 1, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 2, 5, 7, 1, 6, 4, 8],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([0, 2, 5, 8, 1, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 2, 5, 8, 1, 6, 7, 4],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 6) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([0, 2, 5, 4, 6, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 6, 1, 7, 8],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 7) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([0, 2, 5, 4, 7, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 7, 6, 1, 8],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 1, ',', 7, '-', 8) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -2) ,
([0, 2, 5, 4, 8, 6, 7, 1],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 8, 6, 7, 1],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -3) ,
([0, 2, 5, 4, 1, 7, 6, 8],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 1, 7, 6, 8],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', 0) ,
([0, 2, 5, 4, 1, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 1, 8, 7, 6],) ,
('saved value', 10) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -4) ,
([0, 2, 5, 4, 1, 6, 8, 7],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 1, 6, 8, 7],) ,
('saved value', 6) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 5, 4, 1, 6, 7, 8]) ,
('Current mapping', [0, 1, 5, 4, 2, 6, 7, 8]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 13) ,
('Current mapping:', [0, 1, 5, 4, 2, 6, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([3, 1, 5, 4, 2, 6, 7, 8],) ,
('saved value', 10) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 6, 7, 8],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 5, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([1, 0, 5, 4, 2, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([5, 1, 0, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([5, 1, 0, 4, 2, 6, 7, 8],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([4, 1, 5, 0, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 1, 5, 0, 2, 6, 7, 8],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([2, 1, 5, 4, 0, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 1, 5, 4, 0, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([6, 1, 5, 4, 2, 0, 7, 8],) ,
('Computing match for mapping',) ,
([6, 1, 5, 4, 2, 0, 7, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -5) ,
([7, 1, 5, 4, 2, 6, 0, 8],) ,
('Computing match for mapping',) ,
([7, 1, 5, 4, 2, 6, 0, 8],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -5) ,
([8, 1, 5, 4, 2, 6, 7, 0],) ,
('Computing match for mapping',) ,
([8, 1, 5, 4, 2, 6, 7, 0],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 5) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 5, 1, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 2, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 4, 5, 1, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 5, 1, 2, 6, 7, 8],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 1, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, 6, 5, 4, 2, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 6, 5, 4, 2, 1, 7, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 5, 4, 2, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 5, 4, 2, 6, 1, 8],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([0, 8, 5, 4, 2, 6, 7, 1],) ,
('Computing match for mapping',) ,
([0, 8, 5, 4, 2, 6, 7, 1],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', -4) ,
([0, 1, 4, 5, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 3) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 16) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 6) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 6, 4, 2, 5, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 2, 5, 7, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([0, 1, 7, 4, 2, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 6, 5, 8],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 8) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -4) ,
([0, 1, 8, 4, 2, 6, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 2, 6, 7, 5],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 5, 2, 4, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 4, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 5, 6, 2, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 6, 2, 4, 7, 8],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 5, 7, 2, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 2, 6, 4, 8],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 5, 8, 2, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 8, 2, 6, 7, 4],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 6) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 5, 4, 6, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 6, 2, 7, 8],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 7, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 6, 2, 8],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 8) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 8, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 8, 6, 7, 2],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 2, 7, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 7, 6, 8],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', 1) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('saved value', 14) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 5, 4, 2, 6, 8, 7],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, 8, 7],) ,
('saved value', 9) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 5, 4, 2, 6, 7, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 16) ,
('Current mapping:', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 12) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, 7, 8],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -7) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -6) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -7) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -5) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('saved value', 13) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -6) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('saved value', 13) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('saved value', 11) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('saved value', 13) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('saved value', 11) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 7)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 1)) ,
('instance/attribute match', 0) ,
('node_pair', (5, 8)) ,
('instance/attribute match', 1) ,
('node_pair', (7, 6)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 5) ,
('Node mapping at start', [0, 2, 7, 4, 1, 8, -1, 6]) ,
('Triple match number at start:', 5) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 2, 7, 4, 1, 8, -1, 6],) ,
('saved value', 4) ,
('Remap node', 2, 'from ', 7, 'to', 5) ,
('Move gain:', 3) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 1, 8, -1, 6],) ,
('saved value', 8) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, 1, 8, -1, 6],) ,
('saved value', 4) ,
('Remap node', 4, 'from ', 1, 'to', 5) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 8, -1, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([2, 0, 7, 4, 1, 8, -1, 6],) ,
('Computing match for mapping',) ,
([2, 0, 7, 4, 1, 8, -1, 6],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([7, 2, 0, 4, 1, 8, -1, 6],) ,
('Computing match for mapping',) ,
([7, 2, 0, 4, 1, 8, -1, 6],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -1) ,
([4, 2, 7, 0, 1, 8, -1, 6],) ,
('Computing match for mapping',) ,
([4, 2, 7, 0, 1, 8, -1, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -2) ,
([1, 2, 7, 4, 0, 8, -1, 6],) ,
('Computing match for mapping',) ,
([1, 2, 7, 4, 0, 8, -1, 6],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([8, 2, 7, 4, 1, 0, -1, 6],) ,
('Computing match for mapping',) ,
([8, 2, 7, 4, 1, 0, -1, 6],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -2) ,
([-1, 2, 7, 4, 1, 8, 0, 6],) ,
('Computing match for mapping',) ,
([-1, 2, 7, 4, 1, 8, 0, 6],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 6) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', -3) ,
([6, 2, 7, 4, 1, 8, -1, 0],) ,
('Computing match for mapping',) ,
([6, 2, 7, 4, 1, 8, -1, 0],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 7) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 2) ,
('Swap gain:', 3) ,
([0, 7, 2, 4, 1, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 1, 8, -1, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 4) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([0, 4, 7, 2, 1, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 1, 8, -1, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 1) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', 4) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 8) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 8, 7, 4, 1, 2, -1, 6],) ,
('Computing match for mapping',) ,
([0, 8, 7, 4, 1, 2, -1, 6],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', -1) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', 0) ,
([0, -1, 7, 4, 1, 8, 2, 6],) ,
('Computing match for mapping',) ,
([0, -1, 7, 4, 1, 8, 2, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 6) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 2) ,
('Swap gain:', -1) ,
([0, 6, 7, 4, 1, 8, -1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 7, 4, 1, 8, -1, 2],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -1) ,
([0, 2, 4, 7, 1, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 4, 7, 1, 8, -1, 6],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 1) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 7) ,
('Swap gain:', 0) ,
([0, 2, 1, 4, 7, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 7, 8, -1, 6],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 8) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([0, 2, 8, 4, 1, 7, -1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 8, 4, 1, 7, -1, 6],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', -1) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 2) ,
([0, 2, -1, 4, 1, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 2, -1, 4, 1, 8, 7, 6],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 6) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 7) ,
('Swap gain:', -1) ,
([0, 2, 6, 4, 1, 8, -1, 7],) ,
('Computing match for mapping',) ,
([0, 2, 6, 4, 1, 8, -1, 7],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 1) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 4) ,
('Swap gain:', -1) ,
([0, 2, 7, 1, 4, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 4, 8, -1, 6],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 8) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 4) ,
('Swap gain:', -2) ,
([0, 2, 7, 8, 1, 4, -1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 8, 1, 4, -1, 6],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -1) ,
([0, 2, 7, -1, 1, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, -1, 1, 8, 4, 6],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 6) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', -2) ,
([0, 2, 7, 6, 1, 8, -1, 4],) ,
('Computing match for mapping',) ,
([0, 2, 7, 6, 1, 8, -1, 4],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 8) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([0, 2, 7, 4, 8, 1, -1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 8, 1, -1, 6],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', -1) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', 0) ,
([0, 2, 7, 4, -1, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, -1, 8, 1, 6],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 1, ',', 7, '-', 6) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 1) ,
('Swap gain:', -1) ,
([0, 2, 7, 4, 6, 8, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 6, 8, -1, 1],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', -1) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 8) ,
('Swap gain:', -1) ,
([0, 2, 7, 4, 1, -1, 8, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 1, -1, 8, 6],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 6) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 8) ,
('Swap gain:', 1) ,
([0, 2, 7, 4, 1, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 1, 6, -1, 8],) ,
('saved value', 6) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 6) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', -1) ,
('Swap gain:', -1) ,
([0, 2, 7, 4, 1, 8, 6, -1],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 1, 8, 6, -1],) ,
('saved value', 4) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 7, 4, 1, 8, -1, 6]) ,
('Current mapping', [0, 1, 7, 4, 2, 8, -1, 6]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 7, 4, 2, 8, -1, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 2, 8, -1, 6],) ,
('saved value', 6) ,
('Remap node', 2, 'from ', 7, 'to', 5) ,
('Move gain:', 3) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('saved value', 12) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 8, -1, 6],) ,
('saved value', 9) ,
('Remap node', 4, 'from ', 2, 'to', 5) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 8, -1, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 7, 4, 2, 8, -1, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 2, 8, -1, 6],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([7, 1, 0, 4, 2, 8, -1, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 2, 8, -1, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -3) ,
([4, 1, 7, 0, 2, 8, -1, 6],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 2, 8, -1, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 7, 4, 0, 8, -1, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 0, 8, -1, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -5) ,
([8, 1, 7, 4, 2, 0, -1, 6],) ,
('Computing match for mapping',) ,
([8, 1, 7, 4, 2, 0, -1, 6],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 4, 2, 8, 0, 6],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 4, 2, 8, 0, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 6) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', -4) ,
([6, 1, 7, 4, 2, 8, -1, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 4, 2, 8, -1, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -2) ,
([0, 7, 1, 4, 2, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 2, 8, -1, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 4, 7, 1, 2, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 2, 8, -1, 6],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 1, 8, -1, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 8) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 8, 7, 4, 2, 1, -1, 6],) ,
('Computing match for mapping',) ,
([0, 8, 7, 4, 2, 1, -1, 6],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 7, 4, 2, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, -1, 7, 4, 2, 8, 1, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 6) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 1) ,
('Swap gain:', -3) ,
([0, 6, 7, 4, 2, 8, -1, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 4, 2, 8, -1, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -1) ,
([0, 1, 4, 7, 2, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 2, 8, -1, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 2) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 7) ,
('Swap gain:', 1) ,
([0, 1, 2, 4, 7, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 8, -1, 6],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 8) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 8, 4, 2, 7, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 2, 7, -1, 6],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', -1) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 2) ,
([0, 1, -1, 4, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 2, 8, 7, 6],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 6) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 7) ,
('Swap gain:', -1) ,
([0, 1, 6, 4, 2, 8, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 2, 8, -1, 7],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 2) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 7, 2, 4, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 8, -1, 6],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 8) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([0, 1, 7, 8, 2, 4, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 8, 2, 4, -1, 6],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -1) ,
([0, 1, 7, -1, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 2, 8, 4, 6],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 6) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', -2) ,
([0, 1, 7, 6, 2, 8, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 2, 8, -1, 4],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 8) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 7, 4, 8, 2, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 8, 2, -1, 6],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', -1) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, -1, 8, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, -1, 8, 2, 6],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 6) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 7, 4, 6, 8, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 6, 8, -1, 2],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', -1) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 8) ,
('Swap gain:', -2) ,
([0, 1, 7, 4, 2, -1, 8, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, -1, 8, 6],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 6) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 8) ,
('Swap gain:', 0) ,
([0, 1, 7, 4, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 6, -1, 8],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 6) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', -1) ,
('Swap gain:', -1) ,
([0, 1, 7, 4, 2, 8, 6, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 8, 6, -1],) ,
('saved value', 8) ,
('Use move gain',) ,
('Original mapping', [0, 1, 7, 4, 2, 8, -1, 6]) ,
('Current mapping', [0, 1, 5, 4, 2, 8, -1, 6]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 12) ,
('Current mapping:', [0, 1, 5, 4, 2, 8, -1, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([3, 1, 5, 4, 2, 8, -1, 6],) ,
('saved value', 9) ,
('Remap node', 2, 'from ', 5, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 8, -1, 6],) ,
('saved value', 9) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 8, -1, 6],) ,
('saved value', 11) ,
('Remap node', 6, 'from ', -1, 'to', 7) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('saved value', 14) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 5, 4, 2, 8, -1, 6],) ,
('Computing match for mapping',) ,
([1, 0, 5, 4, 2, 8, -1, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([5, 1, 0, 4, 2, 8, -1, 6],) ,
('Computing match for mapping',) ,
([5, 1, 0, 4, 2, 8, -1, 6],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([4, 1, 5, 0, 2, 8, -1, 6],) ,
('Computing match for mapping',) ,
([4, 1, 5, 0, 2, 8, -1, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 5, 4, 0, 8, -1, 6],) ,
('Computing match for mapping',) ,
([2, 1, 5, 4, 0, 8, -1, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -5) ,
([8, 1, 5, 4, 2, 0, -1, 6],) ,
('Computing match for mapping',) ,
([8, 1, 5, 4, 2, 0, -1, 6],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 5, 4, 2, 8, 0, 6],) ,
('Computing match for mapping',) ,
([-1, 1, 5, 4, 2, 8, 0, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', -5) ,
([6, 1, 5, 4, 2, 8, -1, 0],) ,
('Computing match for mapping',) ,
([6, 1, 5, 4, 2, 8, -1, 0],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 5) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 1, 4, 2, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 2, 8, -1, 6],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 5, 1, 2, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 5, 1, 2, 8, -1, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 5, 4, 1, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 1, 8, -1, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 8, 5, 4, 2, 1, -1, 6],) ,
('Computing match for mapping',) ,
([0, 8, 5, 4, 2, 1, -1, 6],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 5, 4, 2, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, -1, 5, 4, 2, 8, 1, 6],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 5, 4, 2, 8, -1, 1],) ,
('Computing match for mapping',) ,
([0, 6, 5, 4, 2, 8, -1, 1],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', -4) ,
([0, 1, 4, 5, 2, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 8, -1, 6],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', -1) ,
([0, 1, 2, 4, 5, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, -1, 6],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 8, 4, 2, 5, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 2, 5, -1, 6],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', -1) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, -1, 4, 2, 8, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 2, 8, 5, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 5) ,
('Swap gain:', -4) ,
([0, 1, 6, 4, 2, 8, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 2, 8, -1, 5],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 5, 2, 4, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 4, 8, -1, 6],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 5, 8, 2, 4, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 8, 2, 4, -1, 6],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([0, 1, 5, -1, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, -1, 2, 8, 4, 6],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 5, 6, 2, 8, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 6, 2, 8, -1, 4],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 8, 2, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 8, 2, -1, 6],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', -1) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 5, 4, -1, 8, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, -1, 8, 2, 6],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 5, 4, 6, 8, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 6, 8, -1, 2],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', -1) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 8) ,
('Swap gain:', -2) ,
([0, 1, 5, 4, 2, -1, 8, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, -1, 8, 6],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 8) ,
('Swap gain:', -1) ,
([0, 1, 5, 4, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, -1, 8],) ,
('saved value', 11) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, -1, 6],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 5, 4, 2, 8, 6, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 6, -1],) ,
('saved value', 10) ,
('Use move gain',) ,
('Original mapping', [0, 1, 5, 4, 2, 8, -1, 6]) ,
('Current mapping', [0, 1, 5, 4, 2, 8, 7, 6]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 14) ,
('Current mapping:', [0, 1, 5, 4, 2, 8, 7, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([3, 1, 5, 4, 2, 8, 7, 6],) ,
('saved value', 11) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 8, 7, 6],) ,
('saved value', 12) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 5, 4, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([1, 0, 5, 4, 2, 8, 7, 6],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([5, 1, 0, 4, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([5, 1, 0, 4, 2, 8, 7, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([4, 1, 5, 0, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([4, 1, 5, 0, 2, 8, 7, 6],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 5, 4, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([2, 1, 5, 4, 0, 8, 7, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -5) ,
([8, 1, 5, 4, 2, 0, 7, 6],) ,
('Computing match for mapping',) ,
([8, 1, 5, 4, 2, 0, 7, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -5) ,
([7, 1, 5, 4, 2, 8, 0, 6],) ,
('Computing match for mapping',) ,
([7, 1, 5, 4, 2, 8, 0, 6],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', -5) ,
([6, 1, 5, 4, 2, 8, 7, 0],) ,
('Computing match for mapping',) ,
([6, 1, 5, 4, 2, 8, 7, 0],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 5) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 5, 1, 4, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 2, 8, 7, 6],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 4, 5, 1, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 4, 5, 1, 2, 8, 7, 6],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 5, 4, 1, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 1, 8, 7, 6],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 8, 5, 4, 2, 1, 7, 6],) ,
('Computing match for mapping',) ,
([0, 8, 5, 4, 2, 1, 7, 6],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 5, 4, 2, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 5, 4, 2, 8, 1, 6],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 5, 4, 2, 8, 7, 1],) ,
('Computing match for mapping',) ,
([0, 6, 5, 4, 2, 8, 7, 1],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 4, 5, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 8, 7, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', -1) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('saved value', 13) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 8, 4, 2, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 2, 5, 7, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 7, 4, 2, 8, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 8, 5, 6],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 5) ,
('Swap gain:', -4) ,
([0, 1, 6, 4, 2, 8, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 2, 8, 7, 5],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 5, 2, 4, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 4, 8, 7, 6],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 5, 8, 2, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 8, 2, 4, 7, 6],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 5, 7, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 2, 8, 4, 6],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 5, 6, 2, 8, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 6, 2, 8, 7, 4],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 8, 2, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 8, 2, 7, 6],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 5, 4, 7, 8, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 8, 2, 6],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 5, 4, 6, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 6, 8, 7, 2],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 8) ,
('Swap gain:', -4) ,
([0, 1, 5, 4, 2, 7, 8, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 7, 8, 6],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 8) ,
('Swap gain:', -1) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('saved value', 13) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', 7) ,
('Swap gain:', -4) ,
([0, 1, 5, 4, 2, 8, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 6, 7],) ,
('saved value', 10) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 5, 4, 2, 8, 7, 6]) ,
('Current mapping', [0, 1, 5, 4, 2, 8, 7, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 7)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0) ,
('node_pair', (4, 1)) ,
('instance/attribute match', 0) ,
('node_pair', (5, 6)) ,
('instance/attribute match', 1) ,
('node_pair', (7, 8)) ,
('instance/attribute match', 2) ,
('match computing complete, result:', 5) ,
('Node mapping at start', [0, 2, 7, 3, 1, 6, -1, 8]) ,
('Triple match number at start:', 5) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([4, 2, 7, 3, 1, 6, -1, 8],) ,
('saved value', 4) ,
('Remap node', 2, 'from ', 7, 'to', 5) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 2, 5, 3, 1, 6, -1, 8],) ,
('saved value', 6) ,
('Remap node', 3, 'from ', 3, 'to', 4) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 1, 6, -1, 8],) ,
('saved value', 6) ,
('Remap node', 4, 'from ', 1, 'to', 5) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, 5, 6, -1, 8],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([2, 0, 7, 3, 1, 6, -1, 8],) ,
('Computing match for mapping',) ,
([2, 0, 7, 3, 1, 6, -1, 8],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([7, 2, 0, 3, 1, 6, -1, 8],) ,
('Computing match for mapping',) ,
([7, 2, 0, 3, 1, 6, -1, 8],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', 0) ,
([3, 2, 7, 0, 1, 6, -1, 8],) ,
('Computing match for mapping',) ,
([3, 2, 7, 0, 1, 6, -1, 8],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -2) ,
([1, 2, 7, 3, 0, 6, -1, 8],) ,
('Computing match for mapping',) ,
([1, 2, 7, 3, 0, 6, -1, 8],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -3) ,
([6, 2, 7, 3, 1, 0, -1, 8],) ,
('Computing match for mapping',) ,
([6, 2, 7, 3, 1, 0, -1, 8],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -2) ,
([-1, 2, 7, 3, 1, 6, 0, 8],) ,
('Computing match for mapping',) ,
([-1, 2, 7, 3, 1, 6, 0, 8],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -4) ,
([8, 2, 7, 3, 1, 6, -1, 0],) ,
('Computing match for mapping',) ,
([8, 2, 7, 3, 1, 6, -1, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 7) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 2) ,
('Swap gain:', 3) ,
([0, 7, 2, 3, 1, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 1, 6, -1, 8],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 3) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', 0) ,
([0, 3, 7, 2, 1, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 1, 6, -1, 8],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 1) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', 4) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -1) ,
([0, 6, 7, 3, 1, 2, -1, 8],) ,
('Computing match for mapping',) ,
([0, 6, 7, 3, 1, 2, -1, 8],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', -1) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', 0) ,
([0, -1, 7, 3, 1, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, -1, 7, 3, 1, 6, 2, 8],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 8) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([0, 8, 7, 3, 1, 6, -1, 2],) ,
('Computing match for mapping',) ,
([0, 8, 7, 3, 1, 6, -1, 2],) ,
('saved value', 3) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 3) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 7) ,
('Swap gain:', 0) ,
([0, 2, 3, 7, 1, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 3, 7, 1, 6, -1, 8],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 1) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 7) ,
('Swap gain:', 0) ,
([0, 2, 1, 3, 7, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 7, 6, -1, 8],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 6) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([0, 2, 6, 3, 1, 7, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 6, 3, 1, 7, -1, 8],) ,
('saved value', 4) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', -1) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 1) ,
([0, 2, -1, 3, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, -1, 3, 1, 6, 7, 8],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 8) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -2) ,
([0, 2, 8, 3, 1, 6, -1, 7],) ,
('Computing match for mapping',) ,
([0, 2, 8, 3, 1, 6, -1, 7],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 1) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', 0) ,
([0, 2, 7, 1, 3, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 3, 6, -1, 8],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 6) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -1) ,
([0, 2, 7, 6, 1, 3, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, 6, 1, 3, -1, 8],) ,
('saved value', 4) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', -1) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', 0) ,
([0, 2, 7, -1, 1, 6, 3, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, -1, 1, 6, 3, 8],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 3, ',', 7, '-', 8) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -2) ,
([0, 2, 7, 8, 1, 6, -1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 8, 1, 6, -1, 3],) ,
('saved value', 3) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 6) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -1) ,
([0, 2, 7, 3, 6, 1, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, 6, 1, -1, 8],) ,
('saved value', 4) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', -1) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', 0) ,
([0, 2, 7, 3, -1, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, -1, 6, 1, 8],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 1, ',', 7, '-', 8) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -2) ,
([0, 2, 7, 3, 8, 6, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, 8, 6, -1, 1],) ,
('saved value', 3) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', -1) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 6) ,
('Swap gain:', -1) ,
([0, 2, 7, 3, 1, -1, 6, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, 1, -1, 6, 8],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -1) ,
([0, 2, 7, 3, 1, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, 1, 8, -1, 6],) ,
('saved value', 4) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 8) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', -1) ,
('Swap gain:', -2) ,
([0, 2, 7, 3, 1, 6, 8, -1],) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, 1, 6, 8, -1],) ,
('saved value', 3) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 7, 3, 1, 6, -1, 8]) ,
('Current mapping', [0, 1, 7, 3, 2, 6, -1, 8]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 9) ,
('Current mapping:', [0, 1, 7, 3, 2, 6, -1, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([4, 1, 7, 3, 2, 6, -1, 8],) ,
('saved value', 7) ,
('Remap node', 2, 'from ', 7, 'to', 5) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('saved value', 10) ,
('Remap node', 3, 'from ', 3, 'to', 4) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 6, -1, 8],) ,
('saved value', 9) ,
('Remap node', 4, 'from ', 2, 'to', 5) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 6, -1, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 7, 3, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([1, 0, 7, 3, 2, 6, -1, 8],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([7, 1, 0, 3, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([7, 1, 0, 3, 2, 6, -1, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 7, 0, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([3, 1, 7, 0, 2, 6, -1, 8],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 7, 3, 0, 6, -1, 8],) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 0, 6, -1, 8],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([6, 1, 7, 3, 2, 0, -1, 8],) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 2, 0, -1, 8],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 7, 3, 2, 6, 0, 8],) ,
('Computing match for mapping',) ,
([-1, 1, 7, 3, 2, 6, 0, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -5) ,
([8, 1, 7, 3, 2, 6, -1, 0],) ,
('Computing match for mapping',) ,
([8, 1, 7, 3, 2, 6, -1, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -2) ,
([0, 7, 1, 3, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 1, 3, 2, 6, -1, 8],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 7, 1, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 7, 1, 2, 6, -1, 8],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, 1, 6, -1, 8],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, 6, 7, 3, 2, 1, -1, 8],) ,
('Computing match for mapping',) ,
([0, 6, 7, 3, 2, 1, -1, 8],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 7, 3, 2, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, -1, 7, 3, 2, 6, 1, 8],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([0, 8, 7, 3, 2, 6, -1, 1],) ,
('Computing match for mapping',) ,
([0, 8, 7, 3, 2, 6, -1, 1],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 3) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 7) ,
('Swap gain:', -1) ,
([0, 1, 3, 7, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 2, 6, -1, 8],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 2) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 7) ,
('Swap gain:', 1) ,
([0, 1, 2, 3, 7, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 6, -1, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 6) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 7) ,
('Swap gain:', -1) ,
([0, 1, 6, 3, 2, 7, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 7, -1, 8],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', -1) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 1) ,
([0, 1, -1, 3, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 8) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -2) ,
([0, 1, 8, 3, 2, 6, -1, 7],) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 2, 6, -1, 7],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 2) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 7, 2, 3, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 6, -1, 8],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 6) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 7, 6, 2, 3, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 2, 3, -1, 8],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', -1) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([0, 1, 7, -1, 2, 6, 3, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, -1, 2, 6, 3, 8],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 3, ',', 7, '-', 8) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 7, 8, 2, 6, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 8, 2, 6, -1, 3],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 6) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 7, 3, 6, 2, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 6, 2, -1, 8],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', -1) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 7, 3, -1, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, -1, 6, 2, 8],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 8) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 7, 3, 8, 6, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 8, 6, -1, 2],) ,
('saved value', 5) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', -1) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 6) ,
('Swap gain:', -1) ,
([0, 1, 7, 3, 2, -1, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, -1, 6, 8],) ,
('saved value', 8) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', 0) ,
([0, 1, 7, 3, 2, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 8, -1, 6],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 8) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 7, 3, 2, 6, 8, -1],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 6, 8, -1],) ,
('saved value', 7) ,
('Use move gain',) ,
('Original mapping', [0, 1, 7, 3, 2, 6, -1, 8]) ,
('Current mapping', [0, 1, 5, 3, 2, 6, -1, 8]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 10) ,
('Current mapping:', [0, 1, 5, 3, 2, 6, -1, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([4, 1, 5, 3, 2, 6, -1, 8],) ,
('saved value', 7) ,
('Remap node', 2, 'from ', 5, 'to', 7) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 6, -1, 8],) ,
('saved value', 9) ,
('Remap node', 3, 'from ', 3, 'to', 4) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, -1, 8],) ,
('saved value', 11) ,
('Remap node', 6, 'from ', -1, 'to', 7) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 6, 7, 8],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, 5, 3, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([1, 0, 5, 3, 2, 6, -1, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([5, 1, 0, 3, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([5, 1, 0, 3, 2, 6, -1, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 5, 0, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([3, 1, 5, 0, 2, 6, -1, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, 5, 3, 0, 6, -1, 8],) ,
('Computing match for mapping',) ,
([2, 1, 5, 3, 0, 6, -1, 8],) ,
('saved value', 5) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([6, 1, 5, 3, 2, 0, -1, 8],) ,
('Computing match for mapping',) ,
([6, 1, 5, 3, 2, 0, -1, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 5, 3, 2, 6, 0, 8],) ,
('Computing match for mapping',) ,
([-1, 1, 5, 3, 2, 6, 0, 8],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -5) ,
([8, 1, 5, 3, 2, 6, -1, 0],) ,
('Computing match for mapping',) ,
([8, 1, 5, 3, 2, 6, -1, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 5) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', -3) ,
([0, 5, 1, 3, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 5, 1, 3, 2, 6, -1, 8],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 3, 5, 1, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 2, 6, -1, 8],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 5, 3, 1, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 5, 3, 1, 6, -1, 8],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3) ,
([0, 6, 5, 3, 2, 1, -1, 8],) ,
('Computing match for mapping',) ,
([0, 6, 5, 3, 2, 1, -1, 8],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 5, 3, 2, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, -1, 5, 3, 2, 6, 1, 8],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -4) ,
([0, 8, 5, 3, 2, 6, -1, 1],) ,
('Computing match for mapping',) ,
([0, 8, 5, 3, 2, 6, -1, 1],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 3) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 3, 5, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 2, 6, -1, 8],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 2) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('saved value', 12) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 6) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 6, 3, 2, 5, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 5, -1, 8],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', -1) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -1) ,
([0, 1, -1, 3, 2, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2, 6, 5, 8],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 8) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 8, 3, 2, 6, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 2, 6, -1, 5],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 5, 2, 3, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 3, 6, -1, 8],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 6) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 5, 6, 2, 3, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 6, 2, 3, -1, 8],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', -1) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -1) ,
([0, 1, 5, -1, 2, 6, 3, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, -1, 2, 6, 3, 8],) ,
('saved value', 9) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 3, ',', 7, '-', 8) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 5, 8, 2, 6, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 8, 2, 6, -1, 3],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 6) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 3, 6, 2, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 6, 2, -1, 8],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', -1) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 5, 3, -1, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, -1, 6, 2, 8],) ,
('saved value', 8) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 8) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 5, 3, 8, 6, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 8, 6, -1, 2],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', -1) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 6) ,
('Swap gain:', -1) ,
([0, 1, 5, 3, 2, -1, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, -1, 6, 8],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', 1) ,
([0, 1, 5, 3, 2, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 8, -1, 6],) ,
('saved value', 11) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 8) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 5, 3, 2, 6, 8, -1],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 6, 8, -1],) ,
('saved value', 8) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 5, 3, 2, 6, -1, 8]) ,
('Current mapping', [0, 1, 2, 3, 5, 6, -1, 8]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 12) ,
('Current mapping:', [0, 1, 2, 3, 5, 6, -1, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 6, -1, 8],) ,
('saved value', 8) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 6, -1, 8],) ,
('saved value', 9) ,
('Remap node', 3, 'from ', 3, 'to', 4) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('saved value', 14) ,
('Remap node', 6, 'from ', -1, 'to', 7) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, 7, 8],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 2, 3, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 5, 6, -1, 8],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([2, 1, 0, 3, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 5, 6, -1, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([3, 1, 2, 0, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 5, 6, -1, 8],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([5, 1, 2, 3, 0, 6, -1, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 6, -1, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 2, 3, 5, 0, -1, 8],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 5, 0, -1, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, 2, 3, 5, 6, 0, 8],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 5, 6, 0, 8],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -7) ,
([8, 1, 2, 3, 5, 6, -1, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 5, 6, -1, 0],) ,
('saved value', 5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5) ,
([0, 2, 1, 3, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 5, 6, -1, 8],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([0, 3, 2, 1, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 5, 6, -1, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 5, 2, 3, 1, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 1, 6, -1, 8],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 2, 3, 5, 1, -1, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 5, 1, -1, 8],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 2, 3, 5, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 5, 6, 1, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -5) ,
([0, 8, 2, 3, 5, 6, -1, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 5, 6, -1, 1],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 3, 2, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 6, -1, 8],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 6, -1, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 6, 3, 5, 2, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 5, 2, -1, 8],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, -1, 3, 5, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 5, 6, 2, 8],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 8, 3, 5, 6, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 5, 6, -1, 2],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 2, 5, 3, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 6, -1, 8],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 6) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -2) ,
([0, 1, 2, 6, 5, 3, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 3, -1, 8],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', -1) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', 0) ,
([0, 1, 2, -1, 5, 6, 3, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 5, 6, 3, 8],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 3, ',', 7, '-', 8) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 2, 8, 5, 6, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 5, 6, -1, 3],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 6, 5, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, -1, 8],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 3, -1, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 6, 5, 8],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 8) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 2, 3, 8, 6, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 8, 6, -1, 5],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', -1) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 6) ,
('Swap gain:', -2) ,
([0, 1, 2, 3, 5, -1, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, -1, 6, 8],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 5, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 8, -1, 6],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 8) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, 3, 5, 6, 8, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, 8, -1],) ,
('saved value', 9) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 3, 5, 6, -1, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, -1, 8]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 14) ,
('Current mapping:', [0, 1, 2, 4, 5, 6, -1, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 6, -1, 8],) ,
('saved value', 10) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, -1, 8],) ,
('saved value', 10) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('saved value', 12) ,
('Remap node', 6, 'from ', -1, 'to', 7) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 16) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 2, 4, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 6, -1, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -7) ,
([2, 1, 0, 4, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 6, -1, 8],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([4, 1, 2, 0, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 6, -1, 8],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([5, 1, 2, 4, 0, 6, -1, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 6, -1, 8],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 2, 4, 5, 0, -1, 8],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 5, 0, -1, 8],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, 2, 4, 5, 6, 0, 8],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 6, 0, 8],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -7) ,
([8, 1, 2, 4, 5, 6, -1, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 5, 6, -1, 0],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 1, 4, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 6, -1, 8],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 2, 1, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 6, -1, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 5, 2, 4, 1, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 6, -1, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 2, 4, 5, 1, -1, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 1, -1, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 2, 4, 5, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 5, 6, 1, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -5) ,
([0, 8, 2, 4, 5, 6, -1, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 5, 6, -1, 1],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 4, 2, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 6, -1, 8],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, -1, 8],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 6, 4, 5, 2, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, -1, 8],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, -1, 4, 5, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 6, 2, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 8, 4, 5, 6, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 5, 6, -1, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 5, 4, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6, -1, 8],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 6, 5, 4, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, -1, 8],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, 5, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 5, 6, 4, 8],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 2, 8, 5, 6, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 5, 6, -1, 4],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 6, 5, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 5, -1, 8],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 6, 5, 8],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 2, 4, 8, 6, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 8, 6, -1, 5],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 6) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, 5, -1, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, 6, 8],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, -1, 6],) ,
('saved value', 11) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, 6, 8, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 8, -1],) ,
('saved value', 11) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 4, 5, 6, -1, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 16) ,
('Current mapping:', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 12) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, 7, 8],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -7) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -6) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -7) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -5) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('saved value', 13) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -6) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('saved value', 13) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('saved value', 11) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('saved value', 13) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('saved value', 11) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 7)) ,
('instance/attribute match', 0) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 1) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 1) ,
('relation match with', (5, 6), 1) ,
('node_pair', (5, 6)) ,
('instance/attribute match', 1) ,
('node_pair', (7, 8)) ,
('instance/attribute match', 2) ,
('match computing complete, result:', 8) ,
('Node mapping at start', [0, 2, 7, 4, 5, 6, -1, 8]) ,
('Triple match number at start:', 8) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 2, 7, 4, 5, 6, -1, 8],) ,
('saved value', 7) ,
('Remap node', 1, 'from ', 2, 'to', 1) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, -1, 8],) ,
('saved value', 10) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, 5, 6, -1, 8],) ,
('saved value', 7) ,
('Remap node', 4, 'from ', 5, 'to', 1) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 1, 6, -1, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -2) ,
([2, 0, 7, 4, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([2, 0, 7, 4, 5, 6, -1, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -2) ,
([7, 2, 0, 4, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([7, 2, 0, 4, 5, 6, -1, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([4, 2, 7, 0, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([4, 2, 7, 0, 5, 6, -1, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4) ,
([5, 2, 7, 4, 0, 6, -1, 8],) ,
('Computing match for mapping',) ,
([5, 2, 7, 4, 0, 6, -1, 8],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -4) ,
([6, 2, 7, 4, 5, 0, -1, 8],) ,
('Computing match for mapping',) ,
([6, 2, 7, 4, 5, 0, -1, 8],) ,
('saved value', 4) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -2) ,
([-1, 2, 7, 4, 5, 6, 0, 8],) ,
('Computing match for mapping',) ,
([-1, 2, 7, 4, 5, 6, 0, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -4) ,
([8, 2, 7, 4, 5, 6, -1, 0],) ,
('Computing match for mapping',) ,
([8, 2, 7, 4, 5, 6, -1, 0],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 7) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 2) ,
('Swap gain:', 4) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 4) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -1) ,
([0, 4, 7, 2, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 5, 6, -1, 8],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 5) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -1) ,
([0, 5, 7, 4, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 2, 6, -1, 8],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -2) ,
([0, 6, 7, 4, 5, 2, -1, 8],) ,
('Computing match for mapping',) ,
([0, 6, 7, 4, 5, 2, -1, 8],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', -1) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', 0) ,
([0, -1, 7, 4, 5, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, -1, 7, 4, 5, 6, 2, 8],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 8) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -2) ,
([0, 8, 7, 4, 5, 6, -1, 2],) ,
('Computing match for mapping',) ,
([0, 8, 7, 4, 5, 6, -1, 2],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -1) ,
([0, 2, 4, 7, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 4, 7, 5, 6, -1, 8],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', 0) ,
([0, 2, 5, 4, 7, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 7, 6, -1, 8],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 6) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 2, 6, 4, 5, 7, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 6, 4, 5, 7, -1, 8],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', -1) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 2) ,
([0, 2, -1, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, -1, 4, 5, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 8) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -2) ,
([0, 2, 8, 4, 5, 6, -1, 7],) ,
('Computing match for mapping',) ,
([0, 2, 8, 4, 5, 6, -1, 7],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -3) ,
([0, 2, 7, 5, 4, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, 5, 4, 6, -1, 8],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3) ,
([0, 2, 7, 6, 5, 4, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, 6, 5, 4, -1, 8],) ,
('saved value', 5) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -1) ,
([0, 2, 7, -1, 5, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, -1, 5, 6, 4, 8],) ,
('saved value', 7) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -3) ,
([0, 2, 7, 8, 5, 6, -1, 4],) ,
('Computing match for mapping',) ,
([0, 2, 7, 8, 5, 6, -1, 4],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 2, 7, 4, 6, 5, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 6, 5, -1, 8],) ,
('saved value', 5) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 2, 7, 4, -1, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, -1, 6, 5, 8],) ,
('saved value', 6) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 8) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -4) ,
([0, 2, 7, 4, 8, 6, -1, 5],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 8, 6, -1, 5],) ,
('saved value', 4) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', -1) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 6) ,
('Swap gain:', -2) ,
([0, 2, 7, 4, 5, -1, 6, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, -1, 6, 8],) ,
('saved value', 6) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -2) ,
([0, 2, 7, 4, 5, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 8, -1, 6],) ,
('saved value', 6) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 8) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', -1) ,
('Swap gain:', -2) ,
([0, 2, 7, 4, 5, 6, 8, -1],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 6, 8, -1],) ,
('saved value', 6) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 7, 4, 5, 6, -1, 8]) ,
('Current mapping', [0, 7, 2, 4, 5, 6, -1, 8]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 12) ,
('Current mapping:', [0, 7, 2, 4, 5, 6, -1, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([3, 7, 2, 4, 5, 6, -1, 8],) ,
('saved value', 9) ,
('Remap node', 1, 'from ', 7, 'to', 1) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('saved value', 14) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 5, 6, -1, 8],) ,
('saved value', 10) ,
('Remap node', 4, 'from ', 5, 'to', 1) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 1, 6, -1, 8],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 7) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([7, 0, 2, 4, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([7, 0, 2, 4, 5, 6, -1, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6) ,
([2, 7, 0, 4, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([2, 7, 0, 4, 5, 6, -1, 8],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([4, 7, 2, 0, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([4, 7, 2, 0, 5, 6, -1, 8],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([5, 7, 2, 4, 0, 6, -1, 8],) ,
('Computing match for mapping',) ,
([5, 7, 2, 4, 0, 6, -1, 8],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -5) ,
([6, 7, 2, 4, 5, 0, -1, 8],) ,
('Computing match for mapping',) ,
([6, 7, 2, 4, 5, 0, -1, 8],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -3) ,
([-1, 7, 2, 4, 5, 6, 0, 8],) ,
('Computing match for mapping',) ,
([-1, 7, 2, 4, 5, 6, 0, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -6) ,
([8, 7, 2, 4, 5, 6, -1, 0],) ,
('Computing match for mapping',) ,
([8, 7, 2, 4, 5, 6, -1, 0],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 2) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 7) ,
('Swap gain:', -4) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 6, -1, 8],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 4) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -2) ,
([0, 4, 2, 7, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 7, 5, 6, -1, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 5) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -2) ,
([0, 5, 2, 4, 7, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 7, 6, -1, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 6) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 7) ,
('Swap gain:', -2) ,
([0, 6, 2, 4, 5, 7, -1, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 7, -1, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', -1) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 7) ,
('Swap gain:', 2) ,
([0, -1, 2, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 14) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 8) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -3) ,
([0, 8, 2, 4, 5, 6, -1, 7],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 5, 6, -1, 7],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 7, 4, 2, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 4, 2, 5, 6, -1, 8],) ,
('saved value', 7) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 7, 5, 4, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 5, 4, 2, 6, -1, 8],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -6) ,
([0, 7, 6, 4, 5, 2, -1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 6, 4, 5, 2, -1, 8],) ,
('saved value', 6) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 7, -1, 4, 5, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 7, -1, 4, 5, 6, 2, 8],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -6) ,
([0, 7, 8, 4, 5, 6, -1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 8, 4, 5, 6, -1, 2],) ,
('saved value', 6) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([0, 7, 2, 5, 4, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 5, 4, 6, -1, 8],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 7, 2, 6, 5, 4, -1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 6, 5, 4, -1, 8],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([0, 7, 2, -1, 5, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, -1, 5, 6, 4, 8],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([0, 7, 2, 8, 5, 6, -1, 4],) ,
('Computing match for mapping',) ,
([0, 7, 2, 8, 5, 6, -1, 4],) ,
('saved value', 7) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 7, 2, 4, 6, 5, -1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 6, 5, -1, 8],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 7, 2, 4, -1, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, -1, 6, 5, 8],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 8) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 7, 2, 4, 8, 6, -1, 5],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 8, 6, -1, 5],) ,
('saved value', 7) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', -1) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 6) ,
('Swap gain:', -2) ,
([0, 7, 2, 4, 5, -1, 6, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, -1, 6, 8],) ,
('saved value', 10) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([0, 7, 2, 4, 5, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 8, -1, 6],) ,
('saved value', 9) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 8) ,
([0, 7, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', -1) ,
('Swap gain:', -3) ,
([0, 7, 2, 4, 5, 6, 8, -1],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 6, 8, -1],) ,
('saved value', 9) ,
('Use move gain',) ,
('Original mapping', [0, 7, 2, 4, 5, 6, -1, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, -1, 8]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 14) ,
('Current mapping:', [0, 1, 2, 4, 5, 6, -1, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 6, -1, 8],) ,
('saved value', 10) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, -1, 8],) ,
('saved value', 10) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, -1, 8],) ,
('saved value', 12) ,
('Remap node', 6, 'from ', -1, 'to', 7) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 16) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 2, 4, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 6, -1, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -7) ,
([2, 1, 0, 4, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 6, -1, 8],) ,
('saved value', 7) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -6) ,
([4, 1, 2, 0, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 6, -1, 8],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([5, 1, 2, 4, 0, 6, -1, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 6, -1, 8],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 2, 4, 5, 0, -1, 8],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 5, 0, -1, 8],) ,
('saved value', 8) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, 2, 4, 5, 6, 0, 8],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 5, 6, 0, 8],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -7) ,
([8, 1, 2, 4, 5, 6, -1, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 5, 6, -1, 0],) ,
('saved value', 7) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 1, 4, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 6, -1, 8],) ,
('saved value', 8) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -4) ,
([0, 4, 2, 1, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 6, -1, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 5, 2, 4, 1, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 6, -1, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 2, 4, 5, 1, -1, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 1, -1, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -2) ,
([0, -1, 2, 4, 5, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 5, 6, 1, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -5) ,
([0, 8, 2, 4, 5, 6, -1, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 5, 6, -1, 1],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -5) ,
([0, 1, 4, 2, 5, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 6, -1, 8],) ,
('saved value', 9) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 2, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, -1, 8],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 6, 4, 5, 2, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, -1, 8],) ,
('saved value', 8) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, -1, 4, 5, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 5, 6, 2, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 8, 4, 5, 6, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 5, 6, -1, 2],) ,
('saved value', 8) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 5, 4, 6, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6, -1, 8],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 6, 5, 4, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, -1, 8],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, 5, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 5, 6, 4, 8],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 2, 8, 5, 6, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 5, 6, -1, 4],) ,
('saved value', 9) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 6, 5, -1, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 5, -1, 8],) ,
('saved value', 11) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 5) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, -1, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 6, 5, 8],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 2, 4, 8, 6, -1, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 8, 6, -1, 5],) ,
('saved value', 9) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', -1) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 6) ,
('Swap gain:', -2) ,
([0, 1, 2, 4, 5, -1, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, -1, 6, 8],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, 8, -1, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, -1, 6],) ,
('saved value', 11) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', -1, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, -1, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', -1) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, 6, 8, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 8, -1],) ,
('saved value', 11) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 4, 5, 6, -1, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 16) ,
('Current mapping:', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 12) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -3) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, 7, 8],) ,
('saved value', 13) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('saved value', 11) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -7) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('saved value', 9) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -6) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -6) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -6) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('saved value', 10) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -7) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('saved value', 9) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('saved value', 11) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -4) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -4) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('saved value', 12) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -5) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('saved value', 11) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('saved value', 13) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('saved value', 10) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -6) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('saved value', 10) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -5) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('saved value', 11) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('saved value', 12) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -6) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('saved value', 10) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('saved value', 13) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('saved value', 12) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -5) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('saved value', 11) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -4) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('saved value', 12) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -3) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('saved value', 13) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -5) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('saved value', 11) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 16) ,
('best node mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Best node mapping alignment:', 'a0(marry-01)-b0(marry-01) a1(he)-b1(he) a2(person)-b2(person) a3(have-rel-role-91)-b4(have-rel-role-91) a4(person)-b5(person) a5(name)-b6(name) a6(widow)-b7(widow) a7(name)-b8(name)') ,
('F-score:', 0.761904761904762) ,
0.762
('AMR pair', 18) ,
('============================================',) ,
('AMR 1 (one-line):', '(c0 / cruise-01:ARG0 (c1 / cat:mod (y0 / young)))') ,
('AMR 2 (one-line):', '(r0 / run-02:ARG0 (k0 / kitten):ARG1-of (f0 / fast-02))') ,
('Instance triples of AMR 1:', 3) ,
([('instance', 'a0', 'cruise-01'), ('instance', 'a1', 'cat'), ('instance', 'a2', 'young')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'cruise-01')],) ,
('Relation triples of AMR 1:', 2) ,
([('ARG0', 'a0', 'a1'), ('mod', 'a1', 'a2')],) ,
('Instance triples of AMR 2:', 3) ,
([('instance', 'b0', 'run-02'), ('instance', 'b1', 'kitten'), ('instance', 'b2', 'fast-02')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'run-02')],) ,
('Relation triples of AMR 2:', 2) ,
([('ARG0', 'b0', 'b1'), ('ARG1', 'b2', 'b0')],) ,
('Candidate mappings:',) ,
([{0}, {1}, set()],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0, (1, 1): 1}, (1, 1): {-1: 0, (0, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0) ,
('match computing complete, result:', 1) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 1) ,
('best node mapping', [0, 1, -1]) ,
('Best node mapping alignment:', 'a0(cruise-01)-b0(run-02) a1(cat)-b1(kitten) a2(young)-Null') ,
('F-score:', 0.16666666666666666) ,
0.167
('AMR pair', 19) ,
('============================================',) ,
('AMR 1 (one-line):', '(c0 / cruise-01:ARG0 (c1 / cat:mod (y0 / young)))') ,
('AMR 2 (one-line):', '(r0 / run-02:ARG0 (k0 / kitten))') ,
('Instance triples of AMR 1:', 3) ,
([('instance', 'a0', 'cruise-01'), ('instance', 'a1', 'cat'), ('instance', 'a2', 'young')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'cruise-01')],) ,
('Relation triples of AMR 1:', 2) ,
([('ARG0', 'a0', 'a1'), ('mod', 'a1', 'a2')],) ,
('Instance triples of AMR 2:', 2) ,
([('instance', 'b0', 'run-02'), ('instance', 'b1', 'kitten')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'run-02')],) ,
('Relation triples of AMR 2:', 1) ,
([('ARG0', 'b0', 'b1')],) ,
('Candidate mappings:',) ,
([{0}, {1}, set()],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0, (1, 1): 1}, (1, 1): {-1: 0, (0, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0) ,
('match computing complete, result:', 1) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 1) ,
('best node mapping', [0, 1, -1]) ,
('Best node mapping alignment:', 'a0(cruise-01)-b0(run-02) a1(cat)-b1(kitten) a2(young)-Null') ,
('F-score:', 0.2) ,
0.200
('AMR pair', 20) ,
('============================================',) ,
('AMR 1 (one-line):', '(c0 / consider-01:ARG1 (s0 / skip-01:ARG0 h0:ARG1 (w0 / work-01:ARG0 h0)):ARG0 (h0 / he))') ,
('AMR 2 (one-line):', '(c0 / consider-02:ARG1 (s0 / skip-01:ARG1 (w0 / work-01)):ARG0 (h0 / he))') ,
('Instance triples of AMR 1:', 4) ,
([('instance', 'a0', 'consider-01'), ('instance', 'a1', 'skip-01'), ('instance', 'a2', 'work-01'), ('instance', 'a3', 'he')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'consider-01')],) ,
('Relation triples of AMR 1:', 5) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a3'), ('ARG1', 'a1', 'a2'), ('ARG0', 'a1', 'a3'), ('ARG0', 'a2', 'a3')],) ,
('Instance triples of AMR 2:', 4) ,
([('instance', 'b0', 'consider-02'), ('instance', 'b1', 'skip-01'), ('instance', 'b2', 'work-01'), ('instance', 'b3', 'he')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'consider-02')],) ,
('Relation triples of AMR 2:', 3) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b3'), ('ARG1', 'b1', 'b2')],) ,
('Candidate mappings:',) ,
([{0, 1}, {0, 1, 2}, {0, 1, 2}, {3}],) ,
('Weight dictionary',) ,
({(1, 1): {-1: 1, (0, 0): 1, (2, 2): 1}, (2, 2): {-1: 1, (1, 1): 1}, (3, 3): {-1: 1, (0, 0): 1, (1, 0): 1, (2, 0): 1}, (0, 0): {-1: 0, (1, 1): 1, (3, 3): 1}, (0, 1): {-1: 0, (1, 2): 1}, (1, 2): {-1: 0, (0, 1): 1}, (1, 0): {-1: 0, (2, 1): 1, (3, 3): 1}, (2, 1): {-1: 0, (1, 0): 1}, (2, 0): {-1: 0, (3, 3): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 1), 1) ,
('relation match with', (3, 3), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1) ,
('relation match with', (2, 2), 1) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 6) ,
('Node mapping at start', [0, 1, 2, 3]) ,
('Triple match number at start:', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3) ,
([3, 1, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3]) ,
('Current mapping', [0, 1, 2, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1, 2, 3],) ,
('saved value', 6) ,
('Node mapping at start', [0, 1, 2, 3]) ,
('Triple match number at start:', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3) ,
([3, 1, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3]) ,
('Current mapping', [0, 1, 2, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 2) ,
('Node mapping at start', [0, 2, 1, 3]) ,
('Triple match number at start:', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 1, 3],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', 1) ,
([2, 0, 1, 3],) ,
('Computing match for mapping',) ,
([2, 0, 1, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 2, 1, 3],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', 1) ,
([1, 2, 0, 3],) ,
('Computing match for mapping',) ,
([1, 2, 0, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 2, 1, 3],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([3, 2, 1, 0],) ,
('Computing match for mapping',) ,
([3, 2, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([0, 2, 1, 3],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 4) ,
([0, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3],) ,
('saved value', 6) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 3) ,
([0, 2, 1, 3],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -2) ,
([0, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2],) ,
('saved value', 0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 3) ,
([0, 2, 1, 3],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([0, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1],) ,
('saved value', 0) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 1, 3]) ,
('Current mapping', [0, 1, 2, 3]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 6) ,
('Current mapping:', [0, 1, 2, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3) ,
([3, 1, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3]) ,
('Current mapping', [0, 1, 2, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([1, 0, 2, 3],) ,
('saved value', 3) ,
('Node mapping at start', [1, 0, 2, 3]) ,
('Triple match number at start:', 3) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, 2, 3],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 3) ,
([0, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 2) ,
([1, 0, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', 0) ,
([2, 0, 1, 3],) ,
('Computing match for mapping',) ,
([2, 0, 1, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 3) ,
([1, 0, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2) ,
([3, 0, 2, 1],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 2) ,
([1, 0, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', 0) ,
([1, 2, 0, 3],) ,
('Computing match for mapping',) ,
([1, 2, 0, 3],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 3) ,
([1, 0, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -2) ,
([1, 3, 2, 0],) ,
('Computing match for mapping',) ,
([1, 3, 2, 0],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([1, 0, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3) ,
([1, 0, 3, 2],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2],) ,
('saved value', 0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, 2, 3]) ,
('Current mapping', [0, 1, 2, 3]) ,
('Gain after the hill-climbing', 3) ,
('Update triple match number to:', 6) ,
('Current mapping:', [0, 1, 2, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3) ,
([3, 1, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3]) ,
('Current mapping', [0, 1, 2, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1, 2, 3],) ,
('saved value', 6) ,
('Node mapping at start', [0, 1, 2, 3]) ,
('Triple match number at start:', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3) ,
([3, 1, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0],) ,
('saved value', 3) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 2) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -4) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 2) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3]) ,
('Current mapping', [0, 1, 2, 3]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 6) ,
('best node mapping', [0, 1, 2, 3]) ,
('Best node mapping alignment:', 'a0(consider-01)-b0(consider-02) a1(skip-01)-b1(skip-01) a2(work-01)-b2(work-01) a3(he)-b3(he)') ,
('F-score:', 0.6666666666666665) ,
0.667
('AMR pair', 21) ,
('============================================',) ,
('AMR 1 (one-line):', '(i0 / impact-01:ARG1 (o0 / outcome):ARG0 (i1 / it))') ,
('AMR 2 (one-line):', '(a0 / affect-01:ARG1 (o0 / outcome):ARG0 (i0 / it))') ,
('Instance triples of AMR 1:', 3) ,
([('instance', 'a0', 'impact-01'), ('instance', 'a1', 'outcome'), ('instance', 'a2', 'it')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'impact-01')],) ,
('Relation triples of AMR 1:', 2) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a2')],) ,
('Instance triples of AMR 2:', 3) ,
([('instance', 'b0', 'affect-01'), ('instance', 'b1', 'outcome'), ('instance', 'b2', 'it')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'affect-01')],) ,
('Relation triples of AMR 2:', 2) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b2')],) ,
('Candidate mappings:',) ,
([{0}, {1}, {2}],) ,
('Weight dictionary',) ,
({(1, 1): {-1: 1, (0, 0): 1}, (2, 2): {-1: 1, (0, 0): 1}, (0, 0): {-1: 0, (1, 1): 1, (2, 2): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 1), 1) ,
('relation match with', (2, 2), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 4) ,
('Node mapping at start', [0, 1, 2]) ,
('Triple match number at start:', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 4) ,
('Node mapping at start', [0, 1, 2]) ,
('Triple match number at start:', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 4) ,
('Node mapping at start', [0, 1, 2]) ,
('Triple match number at start:', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 4) ,
('Node mapping at start', [0, 1, 2]) ,
('Triple match number at start:', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 4) ,
('Node mapping at start', [0, 1, 2]) ,
('Triple match number at start:', 4) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 4) ,
('best node mapping', [0, 1, 2]) ,
('Best node mapping alignment:', 'a0(impact-01)-b0(affect-01) a1(outcome)-b1(outcome) a2(it)-b2(it)') ,
('F-score:', 0.6666666666666666) ,
0.667
('AMR pair', 22) ,
('============================================',) ,
('AMR 1 (one-line):', '(h0 / hinder-01:ARG1 (i0 / it))') ,
('AMR 2 (one-line):', '(g0 / get-03:ARG1 (i0 / it:ARG1-of (c0 / control-01)):ARG2 (o0 / out-06:ARG1 i0:ARG2 c0))') ,
('Instance triples of AMR 1:', 2) ,
([('instance', 'a0', 'hinder-01'), ('instance', 'a1', 'it')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'hinder-01')],) ,
('Relation triples of AMR 1:', 1) ,
([('ARG1', 'a0', 'a1')],) ,
('Instance triples of AMR 2:', 4) ,
([('instance', 'b0', 'get-03'), ('instance', 'b1', 'it'), ('instance', 'b2', 'control-01'), ('instance', 'b3', 'out-06')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'get-03')],) ,
('Relation triples of AMR 2:', 5) ,
([('ARG1', 'b0', 'b1'), ('ARG2', 'b0', 'b3'), ('ARG1', 'b2', 'b1'), ('ARG1', 'b3', 'b1'), ('ARG2', 'b3', 'b2')],) ,
('Candidate mappings:',) ,
([{0, 2, 3}, {1}],) ,
('Weight dictionary',) ,
({(1, 1): {-1: 1, (0, 0): 1, (0, 2): 1, (0, 3): 1}, (0, 0): {-1: 0, (1, 1): 1}, (0, 2): {-1: 0, (1, 1): 1}, (0, 3): {-1: 0, (1, 1): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([2, 1],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 2) ,
('Node mapping at start', [2, 1]) ,
('Triple match number at start:', 2) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 2) ,
('Remap node', 0, 'from ', 2, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -2) ,
([1, 2],) ,
('Computing match for mapping',) ,
([1, 2],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [2, 1]) ,
('Current mapping', [2, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 2) ,
('Node mapping at start', [2, 1]) ,
('Triple match number at start:', 2) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 2) ,
('Remap node', 0, 'from ', 2, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -2) ,
([1, 2],) ,
('Computing match for mapping',) ,
([1, 2],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [2, 1]) ,
('Current mapping', [2, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 2) ,
('Node mapping at start', [2, 1]) ,
('Triple match number at start:', 2) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 2) ,
('Remap node', 0, 'from ', 2, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -2) ,
([1, 2],) ,
('Computing match for mapping',) ,
([1, 2],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [2, 1]) ,
('Current mapping', [2, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 2) ,
('Node mapping at start', [2, 1]) ,
('Triple match number at start:', 2) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 2) ,
('Remap node', 0, 'from ', 2, 'to', 3) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([3, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -2) ,
([1, 2],) ,
('Computing match for mapping',) ,
([1, 2],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [2, 1]) ,
('Current mapping', [2, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([3, 1],) ,
('saved value', 2) ,
('Node mapping at start', [3, 1]) ,
('Triple match number at start:', 2) ,
('Remap node', 0, 'from ', 3, 'to', 0) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 2) ,
('Remap node', 0, 'from ', 3, 'to', 2) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 1) ,
([3, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 3) ,
('Swap gain:', -2) ,
([1, 3],) ,
('Computing match for mapping',) ,
([1, 3],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [3, 1]) ,
('Current mapping', [3, 1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 2) ,
('best node mapping', [2, 1]) ,
('Best node mapping alignment:', 'a0(hinder-01)-b2(control-01) a1(it)-b1(it)') ,
('F-score:', 0.28571428571428575) ,
0.286
('AMR pair', 23) ,
('============================================',) ,
('AMR 1 (one-line):', '(e0 / eat-01:ARG1 (f0 / fry:mod (c0 / country:name (n0 / name:op1 "France" ))):ARG0 (w0 / we))') ,
('AMR 2 (one-line):', '(e0 / eat-01:ARG1 (c0 / chip):ARG0 (w0 / we))') ,
('Instance triples of AMR 1:', 5) ,
([('instance', 'a0', 'eat-01'), ('instance', 'a1', 'fry'), ('instance', 'a2', 'country'), ('instance', 'a3', 'name'), ('instance', 'a4', 'we')],) ,
('Attribute triples of AMR 1:', 2) ,
([('TOP', 'a0', 'eat-01'), ('op1', 'a3', 'France_')],) ,
('Relation triples of AMR 1:', 4) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a4'), ('mod', 'a1', 'a2'), ('name', 'a2', 'a3')],) ,
('Instance triples of AMR 2:', 3) ,
([('instance', 'b0', 'eat-01'), ('instance', 'b1', 'chip'), ('instance', 'b2', 'we')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'eat-01')],) ,
('Relation triples of AMR 2:', 2) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b2')],) ,
('Candidate mappings:',) ,
([{0}, {1}, set(), set(), {2}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2, (1, 1): 1, (4, 2): 1}, (4, 2): {-1: 1, (0, 0): 1}, (1, 1): {-1: 0, (0, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2) ,
('relation match with', (1, 1), 1) ,
('relation match with', (4, 2), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0) ,
('node_pair', (4, 2)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 5) ,
('Node mapping at start', [0, 1, -1, -1, 2]) ,
('Triple match number at start:', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, -1, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, -1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, -1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, -1, 1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, -1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1],) ,
('saved value', 3) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, -1, 2]) ,
('Current mapping', [0, 1, -1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5) ,
('Node mapping at start', [0, 1, -1, -1, 2]) ,
('Triple match number at start:', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, -1, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, -1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, -1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, -1, 1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, -1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1],) ,
('saved value', 3) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, -1, 2]) ,
('Current mapping', [0, 1, -1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5) ,
('Node mapping at start', [0, 1, -1, -1, 2]) ,
('Triple match number at start:', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, -1, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, -1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, -1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, -1, 1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, -1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1],) ,
('saved value', 3) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, -1, 2]) ,
('Current mapping', [0, 1, -1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5) ,
('Node mapping at start', [0, 1, -1, -1, 2]) ,
('Triple match number at start:', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, -1, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, -1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, -1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, -1, 1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, -1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1],) ,
('saved value', 3) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, -1, 2]) ,
('Current mapping', [0, 1, -1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5) ,
('Node mapping at start', [0, 1, -1, -1, 2]) ,
('Triple match number at start:', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, -1, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4) ,
([-1, 1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, -1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, -1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, -1, 1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, -1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1],) ,
('saved value', 3) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, -1, 2]) ,
('Current mapping', [0, 1, -1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 5) ,
('best node mapping', [0, 1, -1, -1, 2]) ,
('Best node mapping alignment:', 'a0(eat-01)-b0(eat-01) a1(fry)-b1(chip) a2(country)-Null a3(name)-Null a4(we)-b2(we)') ,
('F-score:', 0.5882352941176471) ,
0.588
('AMR pair', 24) ,
('============================================',) ,
('AMR 1 (one-line):', '(b0 / break-up-08:ARG1 (t0 / they))') ,
('AMR 2 (one-line):', '(s0 / split-01:ARG0 (t0 / they))') ,
('Instance triples of AMR 1:', 2) ,
([('instance', 'a0', 'break-up-08'), ('instance', 'a1', 'they')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'break-up-08')],) ,
('Relation triples of AMR 1:', 1) ,
([('ARG1', 'a0', 'a1')],) ,
('Instance triples of AMR 2:', 2) ,
([('instance', 'b0', 'split-01'), ('instance', 'b1', 'they')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'split-01')],) ,
('Relation triples of AMR 2:', 1) ,
([('ARG0', 'b0', 'b1')],) ,
('Candidate mappings:',) ,
([set(), {1}],) ,
('Weight dictionary',) ,
({(1, 1): {-1: 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([-1, 1],) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 1) ,
('Node mapping at start', [-1, 1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', -1, ',', 1, '-', 1) ,
([-1, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', -1) ,
('Swap gain:', -1) ,
([1, -1],) ,
('Computing match for mapping',) ,
([1, -1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [-1, 1]) ,
('Current mapping', [-1, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([-1, 1],) ,
('saved value', 1) ,
('Node mapping at start', [-1, 1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', -1, ',', 1, '-', 1) ,
([-1, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', -1) ,
('Swap gain:', -1) ,
([1, -1],) ,
('Computing match for mapping',) ,
([1, -1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [-1, 1]) ,
('Current mapping', [-1, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([-1, 1],) ,
('saved value', 1) ,
('Node mapping at start', [-1, 1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', -1, ',', 1, '-', 1) ,
([-1, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', -1) ,
('Swap gain:', -1) ,
([1, -1],) ,
('Computing match for mapping',) ,
([1, -1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [-1, 1]) ,
('Current mapping', [-1, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([-1, 1],) ,
('saved value', 1) ,
('Node mapping at start', [-1, 1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', -1, ',', 1, '-', 1) ,
([-1, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', -1) ,
('Swap gain:', -1) ,
([1, -1],) ,
('Computing match for mapping',) ,
([1, -1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [-1, 1]) ,
('Current mapping', [-1, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([-1, 1],) ,
('saved value', 1) ,
('Node mapping at start', [-1, 1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', -1, ',', 1, '-', 1) ,
([-1, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', -1) ,
('Swap gain:', -1) ,
([1, -1],) ,
('Computing match for mapping',) ,
([1, -1],) ,
('saved value', 0) ,
('no move/swap gain found',) ,
('Original mapping', [-1, 1]) ,
('Current mapping', [-1, 1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 1) ,
('best node mapping', [-1, 1]) ,
('Best node mapping alignment:', 'a0(break-up-08)-Null a1(they)-b1(they)') ,
('F-score:', 0.25) ,
0.250
('AMR pair', 25) ,
('============================================',) ,
('AMR 1 (one-line):', '(h0 / have-03:mode imperative:ARG0 (y0 / you):ARG1 (b0 / blast-05))') ,
('AMR 2 (one-line):', '(h0 / have-03:ARG1 (t0 / time:ARG1-of (g0 / good-02)):ARG0 (y0 / you):mode imperative )') ,
('Instance triples of AMR 1:', 3) ,
([('instance', 'a0', 'have-03'), ('instance', 'a1', 'you'), ('instance', 'a2', 'blast-05')],) ,
('Attribute triples of AMR 1:', 2) ,
([('mode', 'a0', 'imperative'), ('TOP', 'a0', 'have-03')],) ,
('Relation triples of AMR 1:', 2) ,
([('ARG0', 'a0', 'a1'), ('ARG1', 'a0', 'a2')],) ,
('Instance triples of AMR 2:', 4) ,
([('instance', 'b0', 'have-03'), ('instance', 'b1', 'time'), ('instance', 'b2', 'good-02'), ('instance', 'b3', 'you')],) ,
('Attribute triples of AMR 2:', 2) ,
([('mode', 'b0', 'imperative'), ('TOP', 'b0', 'have-03')],) ,
('Relation triples of AMR 2:', 3) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b3'), ('ARG1', 'b2', 'b1')],) ,
('Candidate mappings:',) ,
([{0, 2}, {3}, {1}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 3, (1, 3): 1, (2, 1): 1}, (1, 3): {-1: 1, (0, 0): 1}, (2, 1): {-1: 0, (0, 0): 1, (0, 2): 1}, (0, 2): {-1: 0, (2, 1): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 3, 1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 3) ,
('relation match with', (1, 3), 1) ,
('relation match with', (2, 1), 1) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 1) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 0) ,
('match computing complete, result:', 6) ,
('Node mapping at start', [0, 3, 1]) ,
('Triple match number at start:', 6) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([2, 3, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([3, 0, 1],) ,
('Computing match for mapping',) ,
([3, 0, 1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([1, 3, 0],) ,
('Computing match for mapping',) ,
([1, 3, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 3],) ,
('saved value', 3) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([2, 3, 1],) ,
('saved value', 2) ,
('Node mapping at start', [2, 3, 1]) ,
('Triple match number at start:', 2) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 4) ,
('Computing match for mapping',) ,
([0, 3, 1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 3) ,
([2, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 2) ,
('Swap gain:', -2) ,
([3, 2, 1],) ,
('Computing match for mapping',) ,
([3, 2, 1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', -1) ,
([1, 3, 2],) ,
('Computing match for mapping',) ,
([1, 3, 2],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([2, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -2) ,
([2, 1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 3],) ,
('saved value', 0) ,
('Use move gain',) ,
('Original mapping', [2, 3, 1]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 6) ,
('Current mapping:', [0, 3, 1]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([2, 3, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([3, 0, 1],) ,
('Computing match for mapping',) ,
([3, 0, 1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([1, 3, 0],) ,
('Computing match for mapping',) ,
([1, 3, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 3],) ,
('saved value', 3) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 3, 1],) ,
('saved value', 6) ,
('Node mapping at start', [0, 3, 1]) ,
('Triple match number at start:', 6) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([2, 3, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([3, 0, 1],) ,
('Computing match for mapping',) ,
([3, 0, 1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([1, 3, 0],) ,
('Computing match for mapping',) ,
([1, 3, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 3],) ,
('saved value', 3) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([2, 3, 1],) ,
('saved value', 2) ,
('Node mapping at start', [2, 3, 1]) ,
('Triple match number at start:', 2) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 4) ,
('Computing match for mapping',) ,
([0, 3, 1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 3) ,
([2, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 2) ,
('Swap gain:', -2) ,
([3, 2, 1],) ,
('Computing match for mapping',) ,
([3, 2, 1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', -1) ,
([1, 3, 2],) ,
('Computing match for mapping',) ,
([1, 3, 2],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([2, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -2) ,
([2, 1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 3],) ,
('saved value', 0) ,
('Use move gain',) ,
('Original mapping', [2, 3, 1]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 6) ,
('Current mapping:', [0, 3, 1]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([2, 3, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([3, 0, 1],) ,
('Computing match for mapping',) ,
([3, 0, 1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([1, 3, 0],) ,
('Computing match for mapping',) ,
([1, 3, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 3],) ,
('saved value', 3) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([2, 3, 1],) ,
('saved value', 2) ,
('Node mapping at start', [2, 3, 1]) ,
('Triple match number at start:', 2) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 4) ,
('Computing match for mapping',) ,
([0, 3, 1],) ,
('saved value', 6) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 3) ,
([2, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 2) ,
('Swap gain:', -2) ,
([3, 2, 1],) ,
('Computing match for mapping',) ,
([3, 2, 1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', -1) ,
([1, 3, 2],) ,
('Computing match for mapping',) ,
([1, 3, 2],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([2, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -2) ,
([2, 1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 3],) ,
('saved value', 0) ,
('Use move gain',) ,
('Original mapping', [2, 3, 1]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 4) ,
('Update triple match number to:', 6) ,
('Current mapping:', [0, 3, 1]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -4) ,
('Computing match for mapping',) ,
([2, 3, 1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -6) ,
([3, 0, 1],) ,
('Computing match for mapping',) ,
([3, 0, 1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -5) ,
([1, 3, 0],) ,
('Computing match for mapping',) ,
([1, 3, 0],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -3) ,
([0, 1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 3],) ,
('saved value', 3) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 6) ,
('best node mapping', [0, 3, 1]) ,
('Best node mapping alignment:', 'a0(have-03)-b0(have-03) a1(you)-b3(you) a2(blast-05)-b1(time)') ,
('F-score:', 0.75) ,
0.750
('AMR pair', 26) ,
('============================================',) ,
('AMR 1 (one-line):', '(r0 / recommend-01:ARG1 (t0 / take-01:ARG0 y0:ARG1 (b0 / break-19:ARG0 y0)):ARG2 (y0 / you))') ,
('AMR 2 (one-line):', '(r0 / recommend-01:ARG1 (r1 / rest-01:ARG0 (y0 / you)))') ,
('Instance triples of AMR 1:', 4) ,
([('instance', 'a0', 'recommend-01'), ('instance', 'a1', 'take-01'), ('instance', 'a2', 'break-19'), ('instance', 'a3', 'you')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'recommend-01')],) ,
('Relation triples of AMR 1:', 5) ,
([('ARG1', 'a0', 'a1'), ('ARG2', 'a0', 'a3'), ('ARG1', 'a1', 'a2'), ('ARG0', 'a1', 'a3'), ('ARG0', 'a2', 'a3')],) ,
('Instance triples of AMR 2:', 3) ,
([('instance', 'b0', 'recommend-01'), ('instance', 'b1', 'rest-01'), ('instance', 'b2', 'you')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'recommend-01')],) ,
('Relation triples of AMR 2:', 2) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b1', 'b2')],) ,
('Candidate mappings:',) ,
([{0}, {0, 1}, {1}, {2}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2, (1, 1): 1}, (3, 2): {-1: 1, (1, 1): 1, (2, 1): 1}, (1, 1): {-1: 0, (0, 0): 1, (3, 2): 1}, (1, 0): {-1: 0, (2, 1): 1}, (2, 1): {-1: 0, (1, 0): 1, (3, 2): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, -1, 2],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0) ,
('relation match with', (3, 2), 1) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 5) ,
('Node mapping at start', [0, 1, -1, 2]) ,
('Triple match number at start:', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 3) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, 2]) ,
('Current mapping', [0, 1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1, -1, 2],) ,
('saved value', 5) ,
('Node mapping at start', [0, 1, -1, 2]) ,
('Triple match number at start:', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 3) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, 2]) ,
('Current mapping', [0, 1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 1, -1, 2],) ,
('saved value', 5) ,
('Node mapping at start', [0, 1, -1, 2]) ,
('Triple match number at start:', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 3) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, 2]) ,
('Current mapping', [0, 1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 1, -1, 2],) ,
('saved value', 5) ,
('Node mapping at start', [0, 1, -1, 2]) ,
('Triple match number at start:', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 3) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, 2]) ,
('Current mapping', [0, 1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1, -1, 2],) ,
('saved value', 5) ,
('Node mapping at start', [0, 1, -1, 2]) ,
('Triple match number at start:', 5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4) ,
([1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -3) ,
([-1, 1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -5) ,
([2, 1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([0, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2],) ,
('saved value', 4) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3) ,
([0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1],) ,
('saved value', 2) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -2) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 3) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, 2]) ,
('Current mapping', [0, 1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 5) ,
('best node mapping', [0, 1, -1, 2]) ,
('Best node mapping alignment:', 'a0(recommend-01)-b0(recommend-01) a1(take-01)-b1(rest-01) a2(break-19)-Null a3(you)-b2(you)') ,
('F-score:', 0.625) ,
0.625
('AMR pair', 27) ,
('============================================',) ,
('AMR 1 (one-line):', '(k0 / kick-01:ARG1 (b0 / bucket):ARG0 (h0 / he))') ,
('AMR 2 (one-line):', '(d0 / die-01:ARG1 (h0 / he))') ,
('Instance triples of AMR 1:', 3) ,
([('instance', 'a0', 'kick-01'), ('instance', 'a1', 'bucket'), ('instance', 'a2', 'he')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'kick-01')],) ,
('Relation triples of AMR 1:', 2) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a2')],) ,
('Instance triples of AMR 2:', 2) ,
([('instance', 'b0', 'die-01'), ('instance', 'b1', 'he')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'die-01')],) ,
('Relation triples of AMR 2:', 1) ,
([('ARG1', 'b0', 'b1')],) ,
('Candidate mappings:',) ,
([{0}, {1}, {1}],) ,
('Weight dictionary',) ,
({(2, 1): {-1: 1}, (0, 0): {-1: 0, (1, 1): 1}, (1, 1): {-1: 0, (0, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 1) ,
('Node mapping at start', [0, -1, 1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', -1) ,
([0, -1, 1],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', 0) ,
('Swap gain:', 0) ,
([-1, 0, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 1],) ,
('saved value', 1) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, -1, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', 1) ,
([0, -1, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', -1) ,
('Swap gain:', 0) ,
([0, 1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [0, -1, 1]) ,
('Current mapping', [0, -1, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 1) ,
('best node mapping', [0, -1, 1]) ,
('Best node mapping alignment:', 'a0(kick-01)-b0(die-01) a1(bucket)-Null a2(he)-b1(he)') ,
('F-score:', 0.2) ,
0.200
('AMR pair', 28) ,
('============================================',) ,
('AMR 1 (one-line):', '(h0 / hang-01:ARG0 (y0 / you):ARG2 (t0 / there):mode imperative )') ,
('AMR 2 (one-line):', '(m0 / multi-sentence:snt1 (g0 / give-up-07:ARG0 (y0 / you):polarity -:mode imperative ):snt2 (g1 / go-02:ARG4 (s0 / sleep-01:ARG0 y1):ARG0 (y1 / you):mode imperative ))') ,
('Instance triples of AMR 1:', 3) ,
([('instance', 'a0', 'hang-01'), ('instance', 'a1', 'you'), ('instance', 'a2', 'there')],) ,
('Attribute triples of AMR 1:', 2) ,
([('mode', 'a0', 'imperative'), ('TOP', 'a0', 'hang-01')],) ,
('Relation triples of AMR 1:', 2) ,
([('ARG0', 'a0', 'a1'), ('ARG2', 'a0', 'a2')],) ,
('Instance triples of AMR 2:', 6) ,
([('instance', 'b0', 'multi-sentence'), ('instance', 'b1', 'give-up-07'), ('instance', 'b2', 'you'), ('instance', 'b3', 'go-02'), ('instance', 'b4', 'sleep-01'), ('instance', 'b5', 'you')],) ,
('Attribute triples of AMR 2:', 4) ,
([('TOP', 'b0', 'multi-sentence'), ('polarity', 'b1', '-'), ('mode', 'b1', 'imperative'), ('mode', 'b3', 'imperative')],) ,
('Relation triples of AMR 2:', 6) ,
([('snt1', 'b0', 'b1'), ('snt2', 'b0', 'b3'), ('ARG0', 'b1', 'b2'), ('ARG4', 'b3', 'b4'), ('ARG0', 'b3', 'b5'), ('ARG0', 'b4', 'b5')],) ,
('Candidate mappings:',) ,
([{1, 3, 4}, {2, 5}, set()],) ,
('Weight dictionary',) ,
({(1, 2): {-1: 1, (0, 1): 1}, (1, 5): {-1: 1, (0, 3): 1, (0, 4): 1}, (0, 1): {-1: 1, (1, 2): 1}, (0, 3): {-1: 1, (1, 5): 1}, (0, 4): {-1: 0, (1, 5): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([4, 2, -1],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 1) ,
('Node mapping at start', [4, 2, -1]) ,
('Triple match number at start:', 1) ,
('Remap node', 0, 'from ', 4, 'to', 1) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([1, 2, -1],) ,
('saved value', 3) ,
('Remap node', 0, 'from ', 4, 'to', 3) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([3, 2, -1],) ,
('saved value', 2) ,
('Remap node', 1, 'from ', 2, 'to', 5) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([4, 5, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 2) ,
([4, 2, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 4) ,
('Swap gain:', -1) ,
([2, 4, -1],) ,
('Computing match for mapping',) ,
([2, 4, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', -1) ,
([4, 2, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 4) ,
('Swap gain:', 0) ,
([-1, 2, 4],) ,
('Computing match for mapping',) ,
([-1, 2, 4],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', -1) ,
([4, 2, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 2) ,
('Swap gain:', -1) ,
([4, -1, 2],) ,
('Computing match for mapping',) ,
([4, -1, 2],) ,
('saved value', 0) ,
('Use move gain',) ,
('Original mapping', [4, 2, -1]) ,
('Current mapping', [1, 2, -1]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 3) ,
('Current mapping:', [1, 2, -1]) ,
('Remap node', 0, 'from ', 1, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 2, -1],) ,
('saved value', 2) ,
('Remap node', 0, 'from ', 1, 'to', 4) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([4, 2, -1],) ,
('saved value', 1) ,
('Remap node', 1, 'from ', 2, 'to', 5) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([1, 5, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -3) ,
([2, 1, -1],) ,
('Computing match for mapping',) ,
([2, 1, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 2, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -2) ,
([-1, 2, 1],) ,
('Computing match for mapping',) ,
([-1, 2, 1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', -1) ,
([1, 2, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 2) ,
('Swap gain:', -2) ,
([1, -1, 2],) ,
('Computing match for mapping',) ,
([1, -1, 2],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [1, 2, -1]) ,
('Current mapping', [1, 2, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([3, 5, -1],) ,
('node_pair', (0, 3)) ,
('instance/attribute match', 1) ,
('relation match with', (1, 5), 1) ,
('node_pair', (1, 5)) ,
('instance/attribute match', 1) ,
('match computing complete, result:', 3) ,
('Node mapping at start', [3, 5, -1]) ,
('Triple match number at start:', 3) ,
('Remap node', 0, 'from ', 3, 'to', 1) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([1, 5, -1],) ,
('saved value', 2) ,
('Remap node', 0, 'from ', 3, 'to', 4) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([4, 5, -1],) ,
('saved value', 2) ,
('Remap node', 1, 'from ', 5, 'to', 2) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 2, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 5) ,
([3, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 3) ,
('Swap gain:', -3) ,
([5, 3, -1],) ,
('Computing match for mapping',) ,
([5, 3, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', -1) ,
([3, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 3) ,
('Swap gain:', -2) ,
([-1, 5, 3],) ,
('Computing match for mapping',) ,
([-1, 5, 3],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', -1) ,
([3, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 5) ,
('Swap gain:', -2) ,
([3, -1, 5],) ,
('Computing match for mapping',) ,
([3, -1, 5],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [3, 5, -1]) ,
('Current mapping', [3, 5, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([4, 2, -1],) ,
('saved value', 1) ,
('Node mapping at start', [4, 2, -1]) ,
('Triple match number at start:', 1) ,
('Remap node', 0, 'from ', 4, 'to', 1) ,
('Move gain:', 2) ,
('Computing match for mapping',) ,
([1, 2, -1],) ,
('saved value', 3) ,
('Remap node', 0, 'from ', 4, 'to', 3) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([3, 2, -1],) ,
('saved value', 2) ,
('Remap node', 1, 'from ', 2, 'to', 5) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([4, 5, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 2) ,
([4, 2, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 4) ,
('Swap gain:', -1) ,
([2, 4, -1],) ,
('Computing match for mapping',) ,
([2, 4, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', -1) ,
([4, 2, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 4) ,
('Swap gain:', 0) ,
([-1, 2, 4],) ,
('Computing match for mapping',) ,
([-1, 2, 4],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', -1) ,
([4, 2, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 2) ,
('Swap gain:', -1) ,
([4, -1, 2],) ,
('Computing match for mapping',) ,
([4, -1, 2],) ,
('saved value', 0) ,
('Use move gain',) ,
('Original mapping', [4, 2, -1]) ,
('Current mapping', [1, 2, -1]) ,
('Gain after the hill-climbing', 2) ,
('Update triple match number to:', 3) ,
('Current mapping:', [1, 2, -1]) ,
('Remap node', 0, 'from ', 1, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 2, -1],) ,
('saved value', 2) ,
('Remap node', 0, 'from ', 1, 'to', 4) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([4, 2, -1],) ,
('saved value', 1) ,
('Remap node', 1, 'from ', 2, 'to', 5) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([1, 5, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -3) ,
([2, 1, -1],) ,
('Computing match for mapping',) ,
([2, 1, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 2, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -2) ,
([-1, 2, 1],) ,
('Computing match for mapping',) ,
([-1, 2, 1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', -1) ,
([1, 2, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 2) ,
('Swap gain:', -2) ,
([1, -1, 2],) ,
('Computing match for mapping',) ,
([1, -1, 2],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [1, 2, -1]) ,
('Current mapping', [1, 2, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([1, 5, -1],) ,
('saved value', 2) ,
('Node mapping at start', [1, 5, -1]) ,
('Triple match number at start:', 2) ,
('Remap node', 0, 'from ', 1, 'to', 3) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([3, 5, -1],) ,
('saved value', 3) ,
('Remap node', 0, 'from ', 1, 'to', 4) ,
('Move gain:', 0) ,
('Computing match for mapping',) ,
([4, 5, -1],) ,
('saved value', 2) ,
('Remap node', 1, 'from ', 5, 'to', 2) ,
('Move gain:', 1) ,
('Computing match for mapping',) ,
([1, 2, -1],) ,
('saved value', 3) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 5) ,
([1, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 1) ,
('Swap gain:', -2) ,
([5, 1, -1],) ,
('Computing match for mapping',) ,
([5, 1, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1) ,
([-1, 5, 1],) ,
('Computing match for mapping',) ,
([-1, 5, 1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', -1) ,
([1, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 5) ,
('Swap gain:', -1) ,
([1, -1, 5],) ,
('Computing match for mapping',) ,
([1, -1, 5],) ,
('saved value', 1) ,
('Use move gain',) ,
('Original mapping', [1, 5, -1]) ,
('Current mapping', [3, 5, -1]) ,
('Gain after the hill-climbing', 1) ,
('Update triple match number to:', 3) ,
('Current mapping:', [3, 5, -1]) ,
('Remap node', 0, 'from ', 3, 'to', 1) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([1, 5, -1],) ,
('saved value', 2) ,
('Remap node', 0, 'from ', 3, 'to', 4) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([4, 5, -1],) ,
('saved value', 2) ,
('Remap node', 1, 'from ', 5, 'to', 2) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 2, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 5) ,
([3, 5, -1],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 3) ,
('Swap gain:', -3) ,
([5, 3, -1],) ,
('Computing match for mapping',) ,
([5, 3, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', -1) ,
([3, 5, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 3) ,
('Swap gain:', -2) ,
([-1, 5, 3],) ,
('Computing match for mapping',) ,
([-1, 5, 3],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', -1) ,
([3, 5, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 5) ,
('Swap gain:', -2) ,
([3, -1, 5],) ,
('Computing match for mapping',) ,
([3, -1, 5],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [3, 5, -1]) ,
('Current mapping', [3, 5, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([1, 2, -1],) ,
('saved value', 3) ,
('Node mapping at start', [1, 2, -1]) ,
('Triple match number at start:', 3) ,
('Remap node', 0, 'from ', 1, 'to', 3) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([3, 2, -1],) ,
('saved value', 2) ,
('Remap node', 0, 'from ', 1, 'to', 4) ,
('Move gain:', -2) ,
('Computing match for mapping',) ,
([4, 2, -1],) ,
('saved value', 1) ,
('Remap node', 1, 'from ', 2, 'to', 5) ,
('Move gain:', -1) ,
('Computing match for mapping',) ,
([1, 5, -1],) ,
('saved value', 2) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -3) ,
([2, 1, -1],) ,
('Computing match for mapping',) ,
([2, 1, -1],) ,
('saved value', 0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 2, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -2) ,
([-1, 2, 1],) ,
('Computing match for mapping',) ,
([-1, 2, 1],) ,
('saved value', 1) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', -1) ,
([1, 2, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 2) ,
('Swap gain:', -2) ,
([1, -1, 2],) ,
('Computing match for mapping',) ,
([1, -1, 2],) ,
('saved value', 1) ,
('no move/swap gain found',) ,
('Original mapping', [1, 2, -1]) ,
('Current mapping', [1, 2, -1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 3) ,
('best node mapping', [1, 2, -1]) ,
('Best node mapping alignment:', 'a0(hang-01)-b1(give-up-07) a1(you)-b2(you) a2(there)-Null') ,
('F-score:', 0.26086956521739124) ,
0.261
('Total match number, total triple number in AMR 1, and total triple number in AMR 2:',) ,
(199, 315, 338) ,
('---------------------------------------------------------------------------------',) ,
Document F-score: 0.261, 0.2609
