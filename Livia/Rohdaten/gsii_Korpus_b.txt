# ::snt How do I remove mildew from a tent?
# ::tokens ["How", "do", "I", "remove", "mildew", "from", "a", "tent", "?"]
# ::ner_tags ["O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::pos_tags ["WRB", "VBP", "PRP", "VB", "NN", "IN", "DT", "NN", "."]
# ::lemmas ["how", "do", "i", "remove", "mildew", "from", "a", "tent", "?"]
(r0 / remove-01
      :ARG1 (m0 / mildew)
      :ARG0 (i0 / i)
      :ARG2 (t0 / tent)
      :manner (a0 / amr-unknown))

# ::snt What could be wrong with my A/C unit?
# ::tokens ["What", "could", "be", "wrong", "with", "my", "A", "/", "C", "unit", "?"]
# ::ner_tags ["O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::pos_tags ["WP", "MD", "VB", "JJ", "IN", "PRP$", "NNP", "SYM", "NN", "NN", "."]
# ::lemmas ["what", "could", "be", "wrong", "with", "my", "A", "/", "c", "unit", "?"]
(p0 / possible-01
      :ARG1 (w0 / wrong-02
            :ARG1 (a0 / amr-unknown)
            :ARG2 (u0 / unit
                  :mod (i0 / i)
                  :mod (a1 / air-conditioning))))

# ::snt Senate approves Obama nominee to key appeals court
# ::tokens ["Senate", "approves", "Obama", "nominee", "to", "key", "appeals", "court"]
# ::ner_tags ["ORG", "O", "ORG", "O", "O", "O", "O", "O"]
# ::ner_iob ["B", "O", "B", "O", "O", "O", "O", "O"]
# ::pos_tags ["NNP", "VBZ", "NNP", "NN", "IN", "JJ", "NNS", "NN"]
# ::lemmas ["Senate", "approve", "Obama", "nominee", "to", "key", "appeal", "court"]
(a0 / approve-01
      :ARG1 (g0 / government-organization
            :name (n1 / name
                  :op1 "Senate" ))
      :ARG1 (n0 / nominate-01
            :ARG1 (p0 / person
                  :name (n2 / name
                        :op1 "Obama" ))
            :ARG2 (c0 / court
                  :mod (a1 / appeal-01)
                  :ARG1-of (k0 / key-02))))

# ::snt What can I realistically do to raise my credit score?
# ::tokens ["What", "can", "I", "realistically", "do", "to", "raise", "my", "credit", "score", "?"]
# ::ner_tags ["O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::pos_tags ["WP", "MD", "PRP", "RB", "VB", "TO", "VB", "PRP$", "NN", "NN", "."]
# ::lemmas ["what", "can", "i", "realistically", "do", "to", "raise", "my", "credit", "score", "?"]
(p0 / possible-01
      :ARG1 (d0 / do-02
            :ARG1 (a0 / amr-unknown)
            :ARG0 (i0 / i
                  :poss-of (s0 / score
                        :mod (c0 / credit)))
            :ARG2 (r0 / realistic-03)
            :ARG2 (r1 / raise-01
                  :ARG0 i0
                  :ARG1 s0)))

# ::snt China lands robot rover on moon
# ::tokens ["China", "lands", "robot", "rover", "on", "moon"]
# ::ner_tags ["GPE", "O", "O", "O", "O", "O"]
# ::ner_iob ["B", "O", "O", "O", "O", "O"]
# ::pos_tags ["NNP", "VBZ", "NN", "NN", "IN", "NN"]
# ::lemmas ["China", "land", "robot", "rover", "on", "moon"]
(l0 / land-01
      :ARG1 (r0 / rover)
      :ARG0 (c0 / country
            :name (n0 / name
                  :op1 "China" ))
      :location (m0 / moon))

# ::snt How can I boost the water pressure in my shower?
# ::tokens ["How", "can", "I", "boost", "the", "water", "pressure", "in", "my", "shower", "?"]
# ::ner_tags ["O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::pos_tags ["WRB", "MD", "PRP", "VB", "DT", "NN", "NN", "IN", "PRP$", "NN", "."]
# ::lemmas ["how", "can", "i", "boost", "the", "water", "pressure", "in", "my", "shower", "?"]
(p0 / possible-01
      :ARG1 (b0 / boost-01
            :ARG1 (p1 / pressure
                  :mod (w0 / water)
                  :location (s0 / shower
                        :poss i0))
            :ARG0 (i0 / i)
            :manner (a0 / amr-unknown)))

# ::snt How can I locate and repair a break in a circuit?
# ::tokens ["How", "can", "I", "locate", "and", "repair", "a", "break", "in", "a", "circuit", "?"]
# ::ner_tags ["O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::pos_tags ["WRB", "MD", "PRP", "VB", "CC", "VB", "DT", "NN", "IN", "DT", "NN", "."]
# ::lemmas ["how", "can", "i", "locate", "and", "repair", "a", "break", "in", "a", "circuit", "?"]
(p0 / possible-01
      :ARG1 (a0 / and
            :op1 (l0 / locate-01
                  :ARG1 (b0 / break-01
                        :ARG1 (c0 / circuit))
                  :ARG0 (i0 / i))
            :op2 (r0 / repair-01
                  :ARG0 b0
                  :ARG0 i0))
      :manner (a1 / amr-unknown))

# ::snt The definition of term is dependent on the application.
# ::tokens ["The", "definition", "of", "term", "is", "dependent", "on", "the", "application", "."]
# ::ner_tags ["O", "O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::pos_tags ["DT", "NN", "IN", "NN", "VBZ", "JJ", "IN", "DT", "NN", "."]
# ::lemmas ["the", "definition", "of", "term", "be", "dependent", "on", "the", "application", "."]
(d0 / depend-01
      :ARG1 (a0 / apply-02)
      :ARG0 (d1 / define-01
            :ARG1 (t0 / term)))

# ::snt This is a much quicker method than other more naive methods.
# ::tokens ["This", "is", "a", "much", "quicker", "method", "than", "other", "more", "naive", "methods", "."]
# ::ner_tags ["O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::pos_tags ["DT", "VBZ", "DT", "RB", "JJR", "NN", "IN", "JJ", "RBR", "JJ", "NNS", "."]
# ::lemmas ["this", "be", "a", "much", "quick", "method", "than", "other", "more", "naive", "method", "."]
(h0 / have-degree-91
      :ARG1 (m0 / method
            :mod (t0 / this))
      :ARG2 (q0 / quick-02
            :ARG1 m0)
      :ARG3 (m1 / more
            :quant (m3 / much))
      :ARG4 (m2 / method
            :mod (o0 / other)
            :ARG1-of (h1 / have-degree-91
                  :ARG2 (n0 / naive)
                  :ARG3 (m4 / more
                        :quant (m5 / much)))))

# ::snt A link to a page is seen as a vote of support.
# ::tokens ["A", "link", "to", "a", "page", "is", "seen", "as", "a", "vote", "of", "support", "."]
# ::ner_tags ["O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O"]
# ::pos_tags ["DT", "NN", "IN", "DT", "NN", "VBZ", "VBN", "IN", "DT", "NN", "IN", "NN", "."]
# ::lemmas ["a", "link", "to", "a", "page", "be", "see", "as", "a", "vote", "of", "support", "."]
(s0 / see-01
      :ARG1 (t0 / thing
            :ARG3-of (l0 / link-01
                  :ARG1 (p0 / page)))
      :ARG2 (v0 / vote-01
            :ARG1 (s1 / support-01)))

# ::snt Russian Opposition Leader Placed Under House Arrest
# ::tokens ["Russian", "Opposition", "Leader", "Placed", "Under", "House", "Arrest"]
# ::ner_tags ["NORP", "O", "O", "PERSON", "O", "ORG", "O"]
# ::ner_iob ["B", "O", "O", "B", "O", "B", "O"]
# ::pos_tags ["NNP", "NNP", "NNP", "VBN", "IN", "NNP", "NNP"]
# ::lemmas ["Russian", "Opposition", "Leader", "Placed", "under", "House", "Arrest"]
(p0 / place-01
      :ARG1 (p1 / person
            :ARG0-of (c0 / country
                  :name (n0 / name
                        :op1 "Russia" ))
            :ARG0-of (l0 / lead-02
                  :ARG1 (o0 / oppose-01)))
      :ARG2 (u0 / under
            :op1 (s0 / strike-01
                  :ARG0 (g0 / government-organization
                        :name (n1 / name
                              :op1 "House" 
                              :op2 "House" )))))

# ::snt You don't have to worry.
# ::tokens ["You", "do", "n't", "have", "to", "worry", "."]
# ::ner_tags ["O", "O", "O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O", "O", "O"]
# ::pos_tags ["PRP", "VBP", "RB", "VB", "TO", "VB", "."]
# ::lemmas ["you", "do", "not", "have", "to", "worry", "."]
(o0 / obligate-01
      :ARG1 (y0 / you)
      :ARG2 (w0 / worry-02
            :ARG0 y0)
      :polarity - )

# ::snt I had a similar situation.
# ::tokens ["I", "had", "a", "similar", "situation", "."]
# ::ner_tags ["O", "O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O", "O"]
# ::pos_tags ["PRP", "VBD", "DT", "JJ", "NN", "."]
# ::lemmas ["i", "have", "a", "similar", "situation", "."]
(h0 / have-03
      :ARG1 (s0 / situation
            :ARG1-of (r0 / resemble-01))
      :ARG0 (i0 / i))

# ::snt They made a decision to protect and polish what remained
# ::tokens ["They", "made", "a", "decision", "to", "protect", "and", "polish", "what", "remained"]
# ::ner_tags ["O", "O", "O", "O", "O", "O", "O", "NORP", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O", "O", "O", "B", "O", "O"]
# ::pos_tags ["PRP", "VBD", "DT", "NN", "TO", "VB", "CC", "VB", "WP", "VBD"]
# ::lemmas ["they", "make", "a", "decision", "to", "protect", "and", "polish", "what", "remain"]
(d0 / decide-01
      :ARG1 (a0 / and
            :op1 (p0 / protect-01
                  :ARG0 t0
                  :ARG1 (t1 / thing
                        :ARG1-of (r0 / remain-01)))
            :op2 (m0 / meddle-01
                  :ARG0 t0
                  :ARG1 t1))
      :ARG0 (t0 / they))

# ::snt The third and final film, "The Matrix Revolutions," will be released in November.
# ::tokens ["The", "third", "and", "final", "film", ",", "\"", "The", "Matrix", "Revolutions", ",", "\"", "will", "be", "released", "in", "November", "."]
# ::ner_tags ["O", "ORDINAL", "O", "O", "O", "O", "O", "WORK_OF_ART", "WORK_OF_ART", "WORK_OF_ART", "O", "O", "O", "O", "O", "O", "DATE", "O"]
# ::ner_iob ["O", "B", "O", "O", "O", "O", "O", "B", "I", "I", "O", "O", "O", "O", "O", "O", "B", "O"]
# ::pos_tags ["DT", "JJ", "CC", "JJ", "NN", ",", "``", "DT", "NNP", "NNPS", ",", "''", "MD", "VB", "VBN", "IN", "NNP", "."]
# ::lemmas ["the", "third", "and", "final", "film", ",", "\"", "The", "Matrix", "Revolutions", ",", "\"", "will", "be", "release", "in", "November", "."]
(r0 / release-01
      :ARG1 (f0 / film
            :mod (o0 / ordinal-entity
                  :value 3 )
            :name (n0 / name
                  :op1 "The" 
                  :op2 "Matrix" 
                  :op3 "Revolutions" ))
      :time (d0 / date-entity
            :month 11 ))

# ::snt The stock had risen 44 cents in the past four trading sessions.
# ::tokens ["The", "stock", "had", "risen", "44", "cents", "in", "the", "past", "four", "trading", "sessions", "."]
# ::ner_tags ["O", "O", "O", "O", "MONEY", "MONEY", "O", "O", "O", "CARDINAL", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "B", "I", "O", "O", "O", "B", "O", "O", "O"]
# ::pos_tags ["DT", "NN", "VBD", "VBN", "CD", "NNS", "IN", "DT", "JJ", "CD", "NN", "NNS", "."]
# ::lemmas ["the", "stock", "have", "rise", "44", "cents", "in", "the", "past", "four", "trading", "session", "."]
(r0 / rise-01
      :ARG1 (s0 / stock)
      :ARG2 (s1 / session
            :mod (t0 / trade-01)
            :time (b0 / before
                  :op1 (n0 / now)))
      :ARG2 (m0 / monetary-quantity
            :quant 4 
            :unit (c0 / cent)))

# ::snt He married Casals‘ widow, Marta, after Casals‘ death.
# ::tokens ["He", "married", "Casals", "\u2018", "widow", ",", "Marta", ",", "after", "Casals", "\u2018", "death", "."]
# ::ner_tags ["O", "O", "ORG", "O", "O", "O", "PERSON", "O", "O", "ORG", "O", "O", "O"]
# ::ner_iob ["O", "O", "B", "O", "O", "O", "B", "O", "O", "B", "O", "O", "O"]
# ::pos_tags ["PRP", "VBD", "NNP", "``", "NN", ",", "NNP", ",", "IN", "NNP", "``", "NN", "."]
# ::lemmas ["he", "marry", "Casals", "'", "widow", ",", "Marta", ",", "after", "Casals", "'", "death", "."]
(m0 / marry-01
      :ARG1 (h0 / he)
      :ARG2 (p0 / person
            :ARG1-of (d0 / die-01)
            :ARG0-of (h1 / have-rel-role-91
                  :ARG0 (p1 / person
                        :name (n1 / name
                              :op1 "Casals" ))
                  :ARG2 (w0 / widow))
            :name (n0 / name
                  :op1 "Marta" ))
      :time (a0 / after))

# ::snt A kitten runs fast.
# ::tokens ["A", "kitten", "runs", "fast", "."]
# ::ner_tags ["O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O"]
# ::pos_tags ["DT", "NN", "VBZ", "RB", "."]
# ::lemmas ["a", "kitten", "run", "fast", "."]
(r0 / run-02
      :ARG0 (k0 / kitten)
      :ARG1-of (f0 / fast-02))

# ::snt A kitten runs.
# ::tokens ["A", "kitten", "runs", "."]
# ::ner_tags ["O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O"]
# ::pos_tags ["DT", "NN", "VBZ", "."]
# ::lemmas ["a", "kitten", "run", "."]
(r0 / run-02
      :ARG0 (k0 / kitten))

# ::snt He took skipping work into consideration.
# ::tokens ["He", "took", "skipping", "work", "into", "consideration", "."]
# ::ner_tags ["O", "O", "O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O", "O", "O"]
# ::pos_tags ["PRP", "VBD", "VBG", "NN", "IN", "NN", "."]
# ::lemmas ["he", "take", "skip", "work", "into", "consideration", "."]
(c0 / consider-02
      :ARG1 (s0 / skip-01
            :ARG1 (w0 / work-01))
      :ARG0 (h0 / he))

# ::snt It affected the outcome.
# ::tokens ["It", "affected", "the", "outcome", "."]
# ::ner_tags ["O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O"]
# ::pos_tags ["PRP", "VBD", "DT", "NN", "."]
# ::lemmas ["it", "affect", "the", "outcome", "."]
(a0 / affect-01
      :ARG1 (o0 / outcome)
      :ARG0 (i0 / it))

# ::snt It got out of control.
# ::tokens ["It", "got", "out", "of", "control", "."]
# ::ner_tags ["O", "O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O", "O"]
# ::pos_tags ["PRP", "VBD", "IN", "IN", "NN", "."]
# ::lemmas ["it", "get", "out", "of", "control", "."]
(g0 / get-03
      :ARG1 (i0 / it
            :ARG1-of (c0 / control-01))
      :ARG2 (o0 / out-06
            :ARG1 i0
            :ARG2 c0))

# ::snt We eat chips.
# ::tokens ["We", "eat", "chips", "."]
# ::ner_tags ["O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O"]
# ::pos_tags ["PRP", "VBP", "NNS", "."]
# ::lemmas ["we", "eat", "chip", "."]
(e0 / eat-01
      :ARG1 (c0 / chip)
      :ARG0 (w0 / we))

# ::snt They split.
# ::tokens ["They", "split", "."]
# ::ner_tags ["O", "O", "O"]
# ::ner_iob ["O", "O", "O"]
# ::pos_tags ["PRP", "VBD", "."]
# ::lemmas ["they", "split", "."]
(s0 / split-01
      :ARG0 (t0 / they))

# ::snt Have a good time.
# ::tokens ["Have", "a", "good", "time", "."]
# ::ner_tags ["O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O"]
# ::pos_tags ["VB", "DT", "JJ", "NN", "."]
# ::lemmas ["have", "a", "good", "time", "."]
(h0 / have-03
      :ARG1 (t0 / time
            :ARG1-of (g0 / good-02))
      :ARG0 (y0 / you)
      :mode imperative )

# ::snt You should rest.
# ::tokens ["You", "should", "rest", "."]
# ::ner_tags ["O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O"]
# ::pos_tags ["PRP", "MD", "VB", "."]
# ::lemmas ["you", "should", "rest", "."]
(r0 / recommend-01
      :ARG1 (r1 / rest-01
            :ARG0 (y0 / you)))

# ::snt He died.
# ::tokens ["He", "died", "."]
# ::ner_tags ["O", "O", "O"]
# ::ner_iob ["O", "O", "O"]
# ::pos_tags ["PRP", "VBD", "."]
# ::lemmas ["he", "die", "."]
(d0 / die-01
      :ARG1 (h0 / he))

# ::snt Don´t give up.Go to sleep.
# ::tokens ["Don\u00b4t", "give", "up", ".", "Go", "to", "sleep", "."]
# ::ner_tags ["O", "O", "O", "O", "O", "O", "O", "O"]
# ::ner_iob ["O", "O", "O", "O", "O", "O", "O", "O"]
# ::pos_tags ["NN", "VBP", "RP", ".", "VB", "IN", "NN", "."]
# ::lemmas ["don\u00b4t", "give", "up", ".", "go", "to", "sleep", "."]
(m0 / multi-sentence
      :snt1 (g0 / give-up-07
            :ARG0 (y0 / you)
            :polarity - 
            :mode imperative )
      :snt2 (g1 / go-02
            :ARG4 (s0 / sleep-01
                  :ARG0 y1)
            :ARG0 (y1 / you)
            :mode imperative ))