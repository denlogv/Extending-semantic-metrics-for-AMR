('AMR pair', 1) ,
('============================================',) ,
('AMR 1 (one-line):', '(r0 / remove-01:ARG1 (m0 / mold):ARG0 (y0 / you):ARG2 (t0 / tent):manner (a0 / amr-unknown))') ,
('AMR 2 (one-line):', '(r0 / remove-01:ARG1 (m0 / mildew):ARG0 (i0 / i):ARG2 (t0 / tent):manner (a0 / amr-unknown))') ,
('Instance triples of AMR 1:', 5) ,
([('instance', 'a0', 'remove-01'), ('instance', 'a1', 'mold'), ('instance', 'a2', 'you'), ('instance', 'a3', 'tent'), ('instance', 'a4', 'amr-unknown')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'remove-01')],) ,
('Relation triples of AMR 1:', 4) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a2'), ('ARG2', 'a0', 'a3'), ('manner', 'a0', 'a4')],) ,
('Instance triples of AMR 2:', 5) ,
([('instance', 'b0', 'remove-01'), ('instance', 'b1', 'mildew'), ('instance', 'b2', 'i'), ('instance', 'b3', 'tent'), ('instance', 'b4', 'amr-unknown')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'remove-01')],) ,
('Relation triples of AMR 2:', 4) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b2'), ('ARG2', 'b0', 'b3'), ('manner', 'b0', 'b4')],) ,
('Similarity', 'remove-01', 'remove-01', 1.0) ,
('Similarity', 'remove-01', 'mildew', 0.0) ,
('Similarity', 'remove-01', 'i', 0.0) ,
('Similarity', 'remove-01', 'tent', 0.0) ,
('Similarity', 'remove-01', 'amr-unknown', 0.0) ,
('Similarity', 'mold', 'remove-01', 0.0) ,
('Similarity', 'mold', 'mildew', 0.6035365562486406) ,
('Similarity', 'mold', 'i', 0.0) ,
('Similarity', 'mold', 'tent', 0.0) ,
('Similarity', 'mold', 'amr-unknown', 0.0) ,
('Similarity', 'you', 'remove-01', 0.0) ,
('Similarity', 'you', 'mildew', 0.0) ,
('Similarity', 'you', 'i', 0.9023691794906125) ,
('Similarity', 'you', 'tent', 0.0) ,
('Similarity', 'you', 'amr-unknown', 0.0) ,
('Similarity', 'tent', 'mildew', 0.0) ,
('Similarity', 'tent', 'i', 0.0) ,
('Similarity', 'tent', 'tent', 1.0) ,
('Similarity', 'tent', 'amr-unknown', 0.0) ,
('Similarity', 'amr-unknown', 'mildew', 0.0) ,
('Similarity', 'amr-unknown', 'i', 0.0) ,
('Similarity', 'amr-unknown', 'amr-unknown', 1.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2.0, (1, 1): 1, (2, 2): 1, (3, 3): 1, (4, 4): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0}, (0, 3): {-1: 0.0}, (0, 4): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 0.6035365562486406, (0, 0): 1}, (1, 2): {-1: 0.0}, (1, 3): {-1: 0.0}, (1, 4): {-1: 0.0}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.0}, (2, 2): {-1: 0.9023691794906125, (0, 0): 1}, (2, 3): {-1: 0.0}, (2, 4): {-1: 0.0}, (3, 0): {-1: 0.0}, (3, 1): {-1: 0.0}, (3, 2): {-1: 0.0}, (3, 3): {-1: 1.0, (0, 0): 1}, (3, 4): {-1: 0.0}, (4, 0): {-1: 0.0}, (4, 1): {-1: 0.0}, (4, 2): {-1: 0.0}, (4, 3): {-1: 0.0}, (4, 4): {-1: 1.0, (0, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2.0) ,
('relation match with', (1, 1), 1) ,
('relation match with', (2, 2), 1) ,
('relation match with', (3, 3), 1) ,
('relation match with', (4, 4), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.6035365562486406) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 0.9023691794906125) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 1.0) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 9.505905735739253) ,
('Node mapping at start', [0, 1, 2, 3, 4]) ,
('Triple match number at start:', 9.505905735739253) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.60353655624864) ,
([1, 0, 2, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4],) ,
('saved value', 2.902369179490613) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.902369179490613) ,
([2, 1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4],) ,
('saved value', 2.60353655624864) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 2, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4],) ,
('saved value', 2.505905735739253) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0],) ,
('saved value', 2.505905735739253) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.505905735739253) ,
([0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3.6035365562486406) ,
([0, 3, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4],) ,
('saved value', 5.902369179490613) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.6035365562486406) ,
([0, 4, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1],) ,
('saved value', 5.902369179490613) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.9023691794906123) ,
([0, 1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4],) ,
('saved value', 5.60353655624864) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.9023691794906123) ,
([0, 1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2],) ,
('saved value', 5.60353655624864) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3],) ,
('saved value', 5.505905735739253) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4]) ,
('Current mapping', [0, 1, 2, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([1, 4, 3, 0, 2],) ,
('node_pair', (0, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 2)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [1, 4, 3, 0, 2]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 4) ,
([1, 4, 3, 0, 2],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 1) ,
('Swap gain:', 0.6035365562486406) ,
([4, 1, 3, 0, 2],) ,
('Computing match for mapping',) ,
([4, 1, 3, 0, 2],) ,
('saved value', 0.6035365562486406) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 4, 3, 0, 2],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([3, 4, 1, 0, 2],) ,
('Computing match for mapping',) ,
([3, 4, 1, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 0) ,
([1, 4, 3, 0, 2],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', 2.0) ,
([0, 4, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 2],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 2) ,
([1, 4, 3, 0, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', 0.0) ,
([2, 4, 3, 0, 1],) ,
('Computing match for mapping',) ,
([2, 4, 3, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 3) ,
([1, 4, 3, 0, 2],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 4) ,
('Swap gain:', 0.0) ,
([1, 3, 4, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 0) ,
([1, 4, 3, 0, 2],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 4) ,
('Swap gain:', 0.0) ,
([1, 0, 3, 4, 2],) ,
('Computing match for mapping',) ,
([1, 0, 3, 4, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 2) ,
([1, 4, 3, 0, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([1, 2, 3, 0, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, 0, 4],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 0) ,
([1, 4, 3, 0, 2],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', 1.0) ,
([1, 4, 0, 3, 2],) ,
('Computing match for mapping',) ,
([1, 4, 0, 3, 2],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 2) ,
([1, 4, 3, 0, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 0.9023691794906125) ,
([1, 4, 2, 0, 3],) ,
('Computing match for mapping',) ,
([1, 4, 2, 0, 3],) ,
('saved value', 0.9023691794906125) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', 2) ,
([1, 4, 3, 0, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([1, 4, 3, 2, 0],) ,
('Computing match for mapping',) ,
([1, 4, 3, 2, 0],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 4, 3, 0, 2]) ,
('Current mapping', [0, 4, 3, 1, 2]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 2.0) ,
('Current mapping:', [0, 4, 3, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 4) ,
([0, 4, 3, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 0, 3, 1, 2],) ,
('Computing match for mapping',) ,
([4, 0, 3, 1, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 4, 3, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([3, 4, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 4, 0, 1, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 4, 3, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 4, 3, 0, 2],) ,
('Computing match for mapping',) ,
([1, 4, 3, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 4, 3, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 4, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 4, 3, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 3) ,
([0, 4, 3, 1, 2],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 3, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 2],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 1) ,
([0, 4, 3, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', 1.6035365562486406) ,
([0, 1, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2],) ,
('saved value', 3.6035365562486406) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 2) ,
([0, 4, 3, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 1) ,
([0, 4, 3, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 4, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 2],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 2) ,
([0, 4, 3, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 1.9023691794906123) ,
([0, 4, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3],) ,
('saved value', 3.9023691794906123) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 2) ,
([0, 4, 3, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 4, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 4, 3, 2, 1],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [0, 4, 3, 1, 2]) ,
('Current mapping', [0, 2, 3, 1, 4]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [0, 2, 3, 1, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 3, 1, 4],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 0, 3, 1, 4],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 2, 3, 1, 4],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 2, 0, 1, 4],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 2, 3, 1, 4],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 2, 3, 0, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, 0, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 2, 3, 1, 4],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([4, 2, 3, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([0, 2, 3, 1, 4],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', 1.9023691794906128) ,
([0, 3, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4],) ,
('saved value', 5.902369179490613) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 1) ,
([0, 2, 3, 1, 4],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', 1.60353655624864) ,
([0, 1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4],) ,
('saved value', 5.60353655624864) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([0, 2, 3, 1, 4],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 4, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 2],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 1) ,
([0, 2, 3, 1, 4],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([0, 2, 3, 1, 4],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 2, 4, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 3],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 4) ,
([0, 2, 3, 1, 4],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 4, 1],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 3, 1, 4]) ,
('Current mapping', [0, 2, 1, 3, 4]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 2, 1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 0, 1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 0, 1, 3, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([1, 2, 0, 3, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 2, 1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 2, 1, 0, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 2, 1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 2, 1, 3, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([0, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 3.505905735739253) ,
([0, 1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4],) ,
('saved value', 9.505905735739253) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 3) ,
([0, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 3, 1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([0, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 4, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 2],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 3) ,
([0, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 4) ,
([0, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 4, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 1],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 2, 1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 2, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 3],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 1, 3, 4]) ,
('Current mapping', [0, 1, 2, 3, 4]) ,
('Gain after the hill-climbing', 3.505905735739253) ,
('Update triple match number to:', 9.505905735739253) ,
('Current mapping:', [0, 1, 2, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.60353655624864) ,
([1, 0, 2, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4],) ,
('saved value', 2.902369179490613) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.902369179490613) ,
([2, 1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4],) ,
('saved value', 2.60353655624864) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 2, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4],) ,
('saved value', 2.505905735739253) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0],) ,
('saved value', 2.505905735739253) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.505905735739253) ,
([0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3.60353655624864) ,
([0, 3, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4],) ,
('saved value', 5.902369179490613) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.60353655624864) ,
([0, 4, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1],) ,
('saved value', 5.902369179490613) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.902369179490613) ,
([0, 1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4],) ,
('saved value', 5.60353655624864) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.902369179490613) ,
([0, 1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2],) ,
('saved value', 5.60353655624864) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3],) ,
('saved value', 5.505905735739253) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4]) ,
('Current mapping', [0, 1, 2, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.6035365562486406) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 0.9023691794906125) ,
('node_pair', (3, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 3)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 1.505905735739253) ,
('Node mapping at start', [4, 1, 2, 0, 3]) ,
('Triple match number at start:', 1.505905735739253) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 1) ,
([4, 1, 2, 0, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 4) ,
('Swap gain:', -0.6035365562486404) ,
([1, 4, 2, 0, 3],) ,
('Computing match for mapping',) ,
([1, 4, 2, 0, 3],) ,
('saved value', 0.9023691794906125) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 2) ,
([4, 1, 2, 0, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', -0.9023691794906125) ,
([2, 1, 4, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 4, 0, 3],) ,
('saved value', 0.6035365562486404) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 0) ,
([4, 1, 2, 0, 3],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 4) ,
('Swap gain:', 4.0) ,
([0, 1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3],) ,
('saved value', 5.505905735739253) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 3) ,
([4, 1, 2, 0, 3],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([3, 1, 2, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4],) ,
('saved value', 2.505905735739253) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([4, 1, 2, 0, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -1.505905735739253) ,
([4, 2, 1, 0, 3],) ,
('Computing match for mapping',) ,
([4, 2, 1, 0, 3],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 0) ,
([4, 1, 2, 0, 3],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', -0.6035365562486406) ,
([4, 0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([4, 0, 2, 1, 3],) ,
('saved value', 0.9023691794906123) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([4, 1, 2, 0, 3],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -0.6035365562486406) ,
([4, 3, 2, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 2, 0, 1],) ,
('saved value', 0.9023691794906123) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 0) ,
([4, 1, 2, 0, 3],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', -0.9023691794906125) ,
([4, 1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([4, 1, 0, 2, 3],) ,
('saved value', 0.6035365562486404) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([4, 1, 2, 0, 3],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -0.9023691794906123) ,
([4, 1, 3, 0, 2],) ,
('Computing match for mapping',) ,
([4, 1, 3, 0, 2],) ,
('saved value', 0.6035365562486406) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', 3) ,
([4, 1, 2, 0, 3],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', 1.0) ,
([4, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0],) ,
('saved value', 2.505905735739253) ,
('Use swap gain',) ,
('Original mapping', [4, 1, 2, 0, 3]) ,
('Current mapping', [0, 1, 2, 4, 3]) ,
('Gain after the hill-climbing', 4.0) ,
('Update triple match number to:', 5.505905735739253) ,
('Current mapping:', [0, 1, 2, 4, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.60353655624864) ,
([1, 0, 2, 4, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 3],) ,
('saved value', 0.9023691794906128) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.902369179490613) ,
([2, 1, 0, 4, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 3],) ,
('saved value', 0.6035365562486401) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, 0, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3],) ,
('saved value', 1.505905735739253) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 2, 4, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0],) ,
('saved value', 1.505905735739253) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.505905735739253) ,
([0, 2, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 3],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -1.6035365562486406) ,
([0, 4, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3],) ,
('saved value', 3.9023691794906123) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -1.6035365562486406) ,
([0, 3, 2, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1],) ,
('saved value', 3.9023691794906123) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -1.9023691794906123) ,
([0, 1, 4, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3],) ,
('saved value', 3.6035365562486406) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -1.9023691794906123) ,
([0, 1, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2],) ,
('saved value', 3.6035365562486406) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', 4.0) ,
([0, 1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4],) ,
('saved value', 9.505905735739253) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 3]) ,
('Current mapping', [0, 1, 2, 3, 4]) ,
('Gain after the hill-climbing', 4.0) ,
('Update triple match number to:', 9.505905735739253) ,
('Current mapping:', [0, 1, 2, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.60353655624864) ,
([1, 0, 2, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4],) ,
('saved value', 2.902369179490613) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.902369179490613) ,
([2, 1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4],) ,
('saved value', 2.60353655624864) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 2, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4],) ,
('saved value', 2.505905735739253) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0],) ,
('saved value', 2.505905735739253) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.505905735739253) ,
([0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3.60353655624864) ,
([0, 3, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4],) ,
('saved value', 5.902369179490613) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.60353655624864) ,
([0, 4, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1],) ,
('saved value', 5.902369179490613) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.902369179490613) ,
([0, 1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4],) ,
('saved value', 5.60353655624864) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.902369179490613) ,
([0, 1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2],) ,
('saved value', 5.60353655624864) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3],) ,
('saved value', 5.505905735739253) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4]) ,
('Current mapping', [0, 1, 2, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4],) ,
('saved value', 5.902369179490613) ,
('Node mapping at start', [0, 3, 2, 1, 4]) ,
('Triple match number at start:', 5.902369179490613) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 0, 2, 1, 4],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1, 4],) ,
('saved value', 1.9023691794906128) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.902369179490613) ,
([2, 3, 0, 1, 4],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 3, 2, 0, 4],) ,
('Computing match for mapping',) ,
([1, 3, 2, 0, 4],) ,
('saved value', 1.9023691794906128) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 3, 2, 1, 0],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 0],) ,
('saved value', 0.9023691794906128) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -1.9023691794906128) ,
([0, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 1) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 3.60353655624864) ,
([0, 1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4],) ,
('saved value', 9.505905735739253) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 4) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -2.0000000000000004) ,
([0, 4, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3],) ,
('saved value', 3.9023691794906123) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -1.9023691794906128) ,
([0, 3, 1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.902369179490613) ,
([0, 3, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 2],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 4) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2.0000000000000004) ,
([0, 3, 2, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1],) ,
('saved value', 3.9023691794906123) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 2, 1, 4]) ,
('Current mapping', [0, 1, 2, 3, 4]) ,
('Gain after the hill-climbing', 3.60353655624864) ,
('Update triple match number to:', 9.505905735739253) ,
('Current mapping:', [0, 1, 2, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.60353655624864) ,
([1, 0, 2, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4],) ,
('saved value', 2.902369179490613) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.902369179490613) ,
([2, 1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4],) ,
('saved value', 2.60353655624864) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 2, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4],) ,
('saved value', 2.505905735739253) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0],) ,
('saved value', 2.505905735739253) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.505905735739253) ,
([0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3.60353655624864) ,
([0, 3, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4],) ,
('saved value', 5.902369179490613) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.60353655624864) ,
([0, 4, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1],) ,
('saved value', 5.902369179490613) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.902369179490613) ,
([0, 1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4],) ,
('saved value', 5.60353655624864) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.902369179490613) ,
([0, 1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2],) ,
('saved value', 5.60353655624864) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3],) ,
('saved value', 5.505905735739253) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4]) ,
('Current mapping', [0, 1, 2, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([3, 4, 2, 1, 0],) ,
('node_pair', (0, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 0.9023691794906125) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 0)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.9023691794906125) ,
('Node mapping at start', [3, 4, 2, 1, 0]) ,
('Triple match number at start:', 0.9023691794906125) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 4) ,
([3, 4, 2, 1, 0],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 3) ,
('Swap gain:', 3.3306690738754696e-16) ,
([4, 3, 2, 1, 0],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 0],) ,
('saved value', 0.9023691794906128) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 2) ,
([3, 4, 2, 1, 0],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -0.9023691794906125) ,
([2, 4, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 4, 3, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 1) ,
([3, 4, 2, 1, 0],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 1.0) ,
([1, 4, 2, 3, 0],) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 0],) ,
('saved value', 1.9023691794906123) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 0) ,
([3, 4, 2, 1, 0],) ,
('After swapping:', 0, '-', 0, ',', 4, '-', 3) ,
('Swap gain:', 3.0) ,
([0, 4, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3],) ,
('saved value', 3.9023691794906123) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 2) ,
([3, 4, 2, 1, 0],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', -0.9023691794906125) ,
([3, 2, 4, 1, 0],) ,
('Computing match for mapping',) ,
([3, 2, 4, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 1) ,
([3, 4, 2, 1, 0],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', 0.6035365562486404) ,
([3, 1, 2, 4, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0],) ,
('saved value', 1.505905735739253) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 0) ,
([3, 4, 2, 1, 0],) ,
('After swapping:', 1, '-', 0, ',', 4, '-', 4) ,
('Swap gain:', 1.0000000000000004) ,
([3, 0, 2, 1, 4],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1, 4],) ,
('saved value', 1.9023691794906128) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([3, 4, 2, 1, 0],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -0.9023691794906125) ,
([3, 4, 1, 2, 0],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 0) ,
([3, 4, 2, 1, 0],) ,
('After swapping:', 2, '-', 0, ',', 4, '-', 2) ,
('Swap gain:', -0.9023691794906125) ,
([3, 4, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 4, 0, 1, 2],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 0) ,
([3, 4, 2, 1, 0],) ,
('After swapping:', 3, '-', 0, ',', 4, '-', 1) ,
('Swap gain:', 0.0) ,
([3, 4, 2, 0, 1],) ,
('Computing match for mapping',) ,
([3, 4, 2, 0, 1],) ,
('saved value', 0.9023691794906125) ,
('Use swap gain',) ,
('Original mapping', [3, 4, 2, 1, 0]) ,
('Current mapping', [0, 4, 2, 1, 3]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 3.9023691794906123) ,
('Current mapping:', [0, 4, 2, 1, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 4) ,
([0, 4, 2, 1, 3],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([4, 0, 2, 1, 3],) ,
('saved value', 0.9023691794906123) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 4, 2, 1, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.9023691794906123) ,
([2, 4, 0, 1, 3],) ,
('Computing match for mapping',) ,
([2, 4, 0, 1, 3],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 4, 2, 1, 3],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 4, 2, 0, 3],) ,
('Computing match for mapping',) ,
([1, 4, 2, 0, 3],) ,
('saved value', 0.9023691794906125) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 4, 2, 1, 3],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 4, 2, 1, 0],) ,
('Computing match for mapping',) ,
([3, 4, 2, 1, 0],) ,
('saved value', 0.9023691794906125) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 2) ,
([0, 4, 2, 1, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', -1.9023691794906123) ,
([0, 2, 4, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 3],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 1) ,
([0, 4, 2, 1, 3],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', 1.6035365562486406) ,
([0, 1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3],) ,
('saved value', 5.505905735739253) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 3) ,
([0, 4, 2, 1, 3],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', 2.0000000000000004) ,
([0, 3, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4],) ,
('saved value', 5.902369179490613) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([0, 4, 2, 1, 3],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -1.9023691794906123) ,
([0, 4, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 3],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 4, 2, 1, 3],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -1.9023691794906123) ,
([0, 4, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 2],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 3) ,
([0, 4, 2, 1, 3],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', 2.0000000000000004) ,
([0, 4, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1],) ,
('saved value', 5.902369179490613) ,
('Use swap gain',) ,
('Original mapping', [0, 4, 2, 1, 3]) ,
('Current mapping', [0, 3, 2, 1, 4]) ,
('Gain after the hill-climbing', 2.0000000000000004) ,
('Update triple match number to:', 5.902369179490613) ,
('Current mapping:', [0, 3, 2, 1, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 0, 2, 1, 4],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1, 4],) ,
('saved value', 1.9023691794906128) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.902369179490613) ,
([2, 3, 0, 1, 4],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 3, 2, 0, 4],) ,
('Computing match for mapping',) ,
([1, 3, 2, 0, 4],) ,
('saved value', 1.9023691794906128) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 3, 2, 1, 0],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 0],) ,
('saved value', 0.9023691794906128) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -1.9023691794906128) ,
([0, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 1) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 3.60353655624864) ,
([0, 1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4],) ,
('saved value', 9.505905735739253) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 4) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -2.0000000000000004) ,
([0, 4, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3],) ,
('saved value', 3.9023691794906123) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -1.9023691794906128) ,
([0, 3, 1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.902369179490613) ,
([0, 3, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 2],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 4) ,
([0, 3, 2, 1, 4],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2.0000000000000004) ,
([0, 3, 2, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1],) ,
('saved value', 3.9023691794906123) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 2, 1, 4]) ,
('Current mapping', [0, 1, 2, 3, 4]) ,
('Gain after the hill-climbing', 3.60353655624864) ,
('Update triple match number to:', 9.505905735739253) ,
('Current mapping:', [0, 1, 2, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.60353655624864) ,
([1, 0, 2, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4],) ,
('saved value', 2.902369179490613) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.902369179490613) ,
([2, 1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4],) ,
('saved value', 2.60353655624864) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 2, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4],) ,
('saved value', 2.505905735739253) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0],) ,
('saved value', 2.505905735739253) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.505905735739253) ,
([0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3.60353655624864) ,
([0, 3, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4],) ,
('saved value', 5.902369179490613) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.60353655624864) ,
([0, 4, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1],) ,
('saved value', 5.902369179490613) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.902369179490613) ,
([0, 1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4],) ,
('saved value', 5.60353655624864) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.902369179490613) ,
([0, 1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2],) ,
('saved value', 5.60353655624864) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3],) ,
('saved value', 5.505905735739253) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4]) ,
('Current mapping', [0, 1, 2, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 9.505905735739253) ,
('best node mapping', [0, 1, 2, 3, 4]) ,
('Best node mapping alignment:', 'a0(remove-01)-b0(remove-01) a1(mold)-b1(mildew) a2(you)-b2(i) a3(tent)-b3(tent) a4(amr-unknown)-b4(amr-unknown)') ,
('F-score:', 0.9505905735739253) ,
Smatch score F1 0.951
('AMR pair', 2) ,
('============================================',) ,
('AMR 1 (one-line):', '(p0 / possible-01:ARG1 (w0 / wrong-02:ARG1 (a0 / amr-unknown):ARG2 (c0 / conditioner:mod (i0 / i):mod (a1 / air))))') ,
('AMR 2 (one-line):', '(p0 / possible-01:ARG1 (w0 / wrong-02:ARG1 (a0 / amr-unknown):ARG2 (u0 / unit:mod (i0 / i):mod (a1 / air-conditioning))))') ,
('Instance triples of AMR 1:', 6) ,
([('instance', 'a0', 'possible-01'), ('instance', 'a1', 'wrong-02'), ('instance', 'a2', 'amr-unknown'), ('instance', 'a3', 'conditioner'), ('instance', 'a4', 'i'), ('instance', 'a5', 'air')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'possible-01')],) ,
('Relation triples of AMR 1:', 5) ,
([('ARG1', 'a0', 'a1'), ('ARG1', 'a1', 'a2'), ('ARG2', 'a1', 'a3'), ('mod', 'a3', 'a4'), ('mod', 'a3', 'a5')],) ,
('Instance triples of AMR 2:', 6) ,
([('instance', 'b0', 'possible-01'), ('instance', 'b1', 'wrong-02'), ('instance', 'b2', 'amr-unknown'), ('instance', 'b3', 'unit'), ('instance', 'b4', 'i'), ('instance', 'b5', 'air-conditioning')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'possible-01')],) ,
('Relation triples of AMR 2:', 5) ,
([('ARG1', 'b0', 'b1'), ('ARG1', 'b1', 'b2'), ('ARG2', 'b1', 'b3'), ('mod', 'b3', 'b4'), ('mod', 'b3', 'b5')],) ,
('Similarity', 'possible-01', 'possible-01', 1.0) ,
('Similarity', 'possible-01', 'wrong-02', 0.0) ,
('Similarity', 'possible-01', 'amr-unknown', 0.0) ,
('Similarity', 'possible-01', 'unit', 0.0) ,
('Similarity', 'possible-01', 'i', 0.0) ,
('Similarity', 'possible-01', 'air-conditioning', 0.0) ,
('Similarity', 'wrong-02', 'wrong-02', 1.0) ,
('Similarity', 'wrong-02', 'amr-unknown', 0.0) ,
('Similarity', 'wrong-02', 'unit', 0.0) ,
('Similarity', 'wrong-02', 'i', 0.0) ,
('Similarity', 'wrong-02', 'air-conditioning', 0.0) ,
('Similarity', 'amr-unknown', 'amr-unknown', 1.0) ,
('Similarity', 'amr-unknown', 'unit', 0.0) ,
('Similarity', 'amr-unknown', 'i', 0.0) ,
('Similarity', 'amr-unknown', 'air-conditioning', 0.0) ,
('Similarity', 'conditioner', 'possible-01', 0.0) ,
('Similarity', 'conditioner', 'wrong-02', 0.0) ,
('Similarity', 'conditioner', 'amr-unknown', 0.0) ,
('Similarity', 'conditioner', 'unit', 0.0) ,
('Similarity', 'conditioner', 'i', 0.0) ,
('Similarity', 'conditioner', 'air-conditioning', 0.0) ,
('Similarity', 'i', 'unit', 0.0) ,
('Similarity', 'i', 'i', 1.0) ,
('Similarity', 'i', 'air-conditioning', 0.0) ,
('Similarity', 'air', 'possible-01', 0.0) ,
('Similarity', 'air', 'wrong-02', 0.0) ,
('Similarity', 'air', 'amr-unknown', 0.0) ,
('Similarity', 'air', 'unit', 0.6116385619637794) ,
('Similarity', 'air', 'i', 0.0) ,
('Similarity', 'air', 'air-conditioning', 0.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 5}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2.0, (1, 1): 1}, (0, 1): {-1: 0.0, (1, 2): 1}, (0, 2): {-1: 0.0}, (0, 3): {-1: 0.0}, (0, 4): {-1: 0.0}, (0, 5): {-1: 0.0}, (1, 0): {-1: 0.0, (2, 1): 1}, (1, 1): {-1: 1.0, (0, 0): 1, (2, 2): 1, (3, 3): 1}, (1, 2): {-1: 0.0, (0, 1): 1}, (1, 3): {-1: 0.0}, (1, 4): {-1: 0.0}, (1, 5): {-1: 0.0}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.0, (1, 0): 1}, (2, 2): {-1: 1.0, (1, 1): 1}, (2, 3): {-1: 0.0}, (2, 4): {-1: 0.0}, (2, 5): {-1: 0.0}, (3, 0): {-1: 0.0}, (3, 1): {-1: 0.0}, (3, 2): {-1: 0.0}, (3, 3): {-1: 0.0, (1, 1): 1, (4, 4): 1, (4, 5): 1, (5, 4): 1, (5, 5): 1}, (3, 4): {-1: 0.0}, (3, 5): {-1: 0.0}, (4, 0): {-1: 0.0}, (4, 1): {-1: 0.0}, (4, 2): {-1: 0.0}, (4, 3): {-1: 0.0}, (4, 4): {-1: 1.0, (3, 3): 1}, (4, 5): {-1: 0.0, (3, 3): 1}, (5, 0): {-1: 0.0}, (5, 1): {-1: 0.0}, (5, 2): {-1: 0.0}, (5, 3): {-1: 0.6116385619637794}, (5, 4): {-1: 0.0, (3, 3): 1}, (5, 5): {-1: 0.0, (3, 3): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2.0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('relation match with', (2, 2), 1) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1.0) ,
('node_pair', (3, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 1.0) ,
('node_pair', (5, 3)) ,
('instance/attribute match', 0.6116385619637794) ,
('match computing complete, result:', 7.61163856196378) ,
('Node mapping at start', [0, 1, 2, 5, 4, 3]) ,
('Triple match number at start:', 7.61163856196378) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 4, 3],) ,
('saved value', 2.6116385619637796) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 5, 4, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 5, 4, 3],) ,
('saved value', 2.6116385619637796) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 0, 4, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 0, 4, 3],) ,
('saved value', 4.61163856196378) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, 5, 0, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 5, 0, 3],) ,
('saved value', 3.6116385619637796) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -3.6116385619637796) ,
([3, 1, 2, 5, 4, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 4, 0],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 1, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 5, 4, 3],) ,
('saved value', 3.6116385619637796) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 5) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 5, 2, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 1, 4, 3],) ,
('saved value', 4.61163856196378) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 2, 5, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 5, 1, 3],) ,
('saved value', 3.6116385619637796) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -3.6116385619637796) ,
([0, 3, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 4, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 5) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 4, 3],) ,
('saved value', 5.61163856196378) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 5, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 3],) ,
('saved value', 4.61163856196378) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -2.6116385619637796) ,
([0, 1, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 4, 2],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3],) ,
('saved value', 6.61163856196378) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 3) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', 2.3883614380362204) ,
([0, 1, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -1.6116385619637794) ,
([0, 1, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 4],) ,
('saved value', 6.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 5, 4, 3]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 2.3883614380362204) ,
('Update triple match number to:', 10.0) ,
('Current mapping:', [0, 1, 2, 3, 4, 5]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, 2, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 2, 1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 2, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -2.3883614380362204) ,
([0, 1, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 7.61163856196378) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2.0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('node_pair', (2, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 2)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 4.0) ,
('Node mapping at start', [0, 1, 3, 4, 5, 2]) ,
('Triple match number at start:', 4.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 3, 4, 5, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([1, 0, 3, 4, 5, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 1, 3, 4, 5, 2],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 0, 4, 5, 2],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 5, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5, 2],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 3, 0, 5, 2],) ,
('Computing match for mapping',) ,
([4, 1, 3, 0, 5, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5, 2],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 3, 4, 0, 2],) ,
('Computing match for mapping',) ,
([5, 1, 3, 4, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 3, 4, 5, 2],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([2, 1, 3, 4, 5, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([0, 1, 3, 4, 5, 2],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 1, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 5, 2],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5, 2],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 4, 3, 1, 5, 2],) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 5, 2],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5, 2],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 5, 3, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 1, 2],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 3, 4, 5, 2],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 4, 5, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5, 2],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 1, 4, 3, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, 2],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5, 2],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 1, 5, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 3, 2],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 2) ,
([0, 1, 3, 4, 5, 2],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 3) ,
('Swap gain:', 2.6116385619637796) ,
([0, 1, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3],) ,
('saved value', 6.61163856196378) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5, 2],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 4, 2],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([0, 1, 3, 4, 5, 2],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 1, 3, 2, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 4],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 2) ,
([0, 1, 3, 4, 5, 2],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 1, 3, 4, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, 5],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 3, 4, 5, 2]) ,
('Current mapping', [0, 1, 2, 4, 5, 3]) ,
('Gain after the hill-climbing', 2.6116385619637796) ,
('Update triple match number to:', 6.61163856196378) ,
('Current mapping:', [0, 1, 2, 4, 5, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 3],) ,
('saved value', 1.6116385619637796) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 3],) ,
('saved value', 1.6116385619637796) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 2, 0, 5, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 3],) ,
('saved value', 3.6116385619637796) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 4, 0, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 3],) ,
('saved value', 3.6116385619637796) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -3.6116385619637796) ,
([3, 1, 2, 4, 5, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 3],) ,
('saved value', 2.6116385619637796) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 4, 2, 1, 5, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 3],) ,
('saved value', 3.6116385619637796) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 5, 2, 4, 1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 3],) ,
('saved value', 3.6116385619637796) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -3.6116385619637796) ,
([0, 3, 2, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 3],) ,
('saved value', 4.61163856196378) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 4, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 3],) ,
('saved value', 4.61163856196378) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -2.6116385619637796) ,
([0, 1, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 7.61163856196378) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', 2.3883614380362204) ,
([0, 1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -0.6116385619637796) ,
([0, 1, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5],) ,
('saved value', 6.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 5, 3]) ,
('Current mapping', [0, 1, 2, 3, 5, 4]) ,
('Gain after the hill-climbing', 2.3883614380362204) ,
('Update triple match number to:', 9.0) ,
('Current mapping:', [0, 1, 2, 3, 5, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 5, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 3, 5, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 5, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, 0, 5, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 5, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 0, 4],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 4],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, 3, 5, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 2, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 5, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 2, 1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 5, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 1, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 4, 2, 3, 5, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 5, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 3, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, 2],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -2.3883614380362204) ,
([0, 1, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3],) ,
('saved value', 6.61163856196378) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5],) ,
('saved value', 10.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 3, 5, 4]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 10.0) ,
('Current mapping:', [0, 1, 2, 3, 4, 5]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, 2, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 2, 1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 2, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -2.3883614380362204) ,
([0, 1, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 7.61163856196378) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 2, 1],) ,
('node_pair', (0, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 1)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [3, 0, 4, 5, 2, 1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 0) ,
([3, 0, 4, 5, 2, 1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 3, 4, 5, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 4) ,
([3, 0, 4, 5, 2, 1],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', 0.0) ,
([4, 0, 3, 5, 2, 1],) ,
('Computing match for mapping',) ,
([4, 0, 3, 5, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 5) ,
([3, 0, 4, 5, 2, 1],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', 0.0) ,
([5, 0, 4, 3, 2, 1],) ,
('Computing match for mapping',) ,
([5, 0, 4, 3, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 2) ,
([3, 0, 4, 5, 2, 1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([2, 0, 4, 5, 3, 1],) ,
('Computing match for mapping',) ,
([2, 0, 4, 5, 3, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 1) ,
([3, 0, 4, 5, 2, 1],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 3) ,
('Swap gain:', 0.6116385619637794) ,
([1, 0, 4, 5, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 4, 5, 2, 3],) ,
('saved value', 0.6116385619637794) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 4) ,
([3, 0, 4, 5, 2, 1],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 4, 0, 5, 2, 1],) ,
('Computing match for mapping',) ,
([3, 4, 0, 5, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 5) ,
([3, 0, 4, 5, 2, 1],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 5, 4, 0, 2, 1],) ,
('Computing match for mapping',) ,
([3, 5, 4, 0, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', 2) ,
([3, 0, 4, 5, 2, 1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 2, 4, 5, 0, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 0, ',', 5, '-', 1) ,
([3, 0, 4, 5, 2, 1],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', 1.0) ,
([3, 1, 4, 5, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 2, 0],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([3, 0, 4, 5, 2, 1],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', 0.0) ,
([3, 0, 5, 4, 2, 1],) ,
('Computing match for mapping',) ,
([3, 0, 5, 4, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 2) ,
([3, 0, 4, 5, 2, 1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 2.0) ,
([3, 0, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([3, 0, 2, 5, 4, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 1) ,
([3, 0, 4, 5, 2, 1],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', 1.0) ,
([3, 0, 1, 5, 2, 4],) ,
('Computing match for mapping',) ,
([3, 0, 1, 5, 2, 4],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 2) ,
([3, 0, 4, 5, 2, 1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 0.0) ,
([3, 0, 4, 2, 5, 1],) ,
('Computing match for mapping',) ,
([3, 0, 4, 2, 5, 1],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 1) ,
([3, 0, 4, 5, 2, 1],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 5) ,
('Swap gain:', 0.0) ,
([3, 0, 4, 1, 2, 5],) ,
('Computing match for mapping',) ,
([3, 0, 4, 1, 2, 5],) ,
('saved value', 0.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 1) ,
([3, 0, 4, 5, 2, 1],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 0, 4, 5, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 1, 2],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [3, 0, 4, 5, 2, 1]) ,
('Current mapping', [0, 3, 4, 5, 2, 1]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 2.0) ,
('Current mapping:', [0, 3, 4, 5, 2, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 5, 2, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([3, 0, 4, 5, 2, 1],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 5, 2, 1],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 3, 0, 5, 2, 1],) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 3, 4, 5, 2, 1],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([5, 3, 4, 0, 2, 1],) ,
('Computing match for mapping',) ,
([5, 3, 4, 0, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 3, 4, 5, 2, 1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 3, 4, 5, 0, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 1) ,
([0, 3, 4, 5, 2, 1],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 4, 5, 2, 0],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 5, 2, 1],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 4, 3, 5, 2, 1],) ,
('Computing match for mapping',) ,
([0, 4, 3, 5, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([0, 3, 4, 5, 2, 1],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 5, 4, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 5, 4, 3, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 2) ,
([0, 3, 4, 5, 2, 1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 2, 4, 5, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 3, 1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 1) ,
([0, 3, 4, 5, 2, 1],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 3) ,
('Swap gain:', 2.6116385619637796) ,
([0, 1, 4, 5, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 3],) ,
('saved value', 4.61163856196378) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([0, 3, 4, 5, 2, 1],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 3, 5, 4, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 2) ,
([0, 3, 4, 5, 2, 1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 3, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 4, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 1) ,
([0, 3, 4, 5, 2, 1],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 3, 1, 5, 2, 4],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 2, 4],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 2) ,
([0, 3, 4, 5, 2, 1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 3, 4, 2, 5, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 5, 1],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 1) ,
([0, 3, 4, 5, 2, 1],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 3, 4, 1, 2, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 2, 5],) ,
('saved value', 2.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 1) ,
([0, 3, 4, 5, 2, 1],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 3, 4, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 1, 2],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 4, 5, 2, 1]) ,
('Current mapping', [0, 1, 4, 5, 2, 3]) ,
('Gain after the hill-climbing', 2.6116385619637796) ,
('Update triple match number to:', 4.61163856196378) ,
('Current mapping:', [0, 1, 4, 5, 2, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 4, 5, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 4, 5, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 4, 5, 2, 3],) ,
('saved value', 0.6116385619637794) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 1, 4, 5, 2, 3],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 0, 5, 2, 3],) ,
('Computing match for mapping',) ,
([4, 1, 0, 5, 2, 3],) ,
('saved value', 1.6116385619637796) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 1, 4, 5, 2, 3],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 4, 0, 2, 3],) ,
('Computing match for mapping',) ,
([5, 1, 4, 0, 2, 3],) ,
('saved value', 1.6116385619637796) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 4, 5, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 4, 5, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 4, 5, 0, 3],) ,
('saved value', 1.6116385619637796) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 4, 5, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -3.6116385619637796) ,
([3, 1, 4, 5, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 2, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([0, 1, 4, 5, 2, 3],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 4, 1, 5, 2, 3],) ,
('Computing match for mapping',) ,
([0, 4, 1, 5, 2, 3],) ,
('saved value', 2.6116385619637796) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 5) ,
([0, 1, 4, 5, 2, 3],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 5, 4, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 5, 4, 1, 2, 3],) ,
('saved value', 2.6116385619637796) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 4, 5, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 4, 5, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 1, 3],) ,
('saved value', 2.6116385619637796) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 4, 5, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -2.6116385619637796) ,
([0, 3, 4, 5, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([0, 1, 4, 5, 2, 3],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 1, 5, 4, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 3],) ,
('saved value', 4.61163856196378) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 2) ,
([0, 1, 4, 5, 2, 3],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 3.0) ,
([0, 1, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 7.61163856196378) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 3) ,
([0, 1, 4, 5, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -0.6116385619637794) ,
([0, 1, 3, 5, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 2) ,
([0, 1, 4, 5, 2, 3],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 1, 4, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 3],) ,
('saved value', 4.61163856196378) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 3) ,
([0, 1, 4, 5, 2, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', 1.3883614380362204) ,
([0, 1, 4, 3, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 3) ,
([0, 1, 4, 5, 2, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -0.6116385619637794) ,
([0, 1, 4, 5, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 3, 2],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 4, 5, 2, 3]) ,
('Current mapping', [0, 1, 2, 5, 4, 3]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 7.61163856196378) ,
('Current mapping:', [0, 1, 2, 5, 4, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 4, 3],) ,
('saved value', 2.6116385619637796) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 5, 4, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 5, 4, 3],) ,
('saved value', 2.6116385619637796) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 0, 4, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 0, 4, 3],) ,
('saved value', 4.61163856196378) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, 5, 0, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 5, 0, 3],) ,
('saved value', 3.6116385619637796) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -3.6116385619637796) ,
([3, 1, 2, 5, 4, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 4, 0],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 1, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 5, 4, 3],) ,
('saved value', 3.6116385619637796) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 5) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 5, 2, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 1, 4, 3],) ,
('saved value', 4.61163856196378) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 2, 5, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 5, 1, 3],) ,
('saved value', 3.6116385619637796) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -3.6116385619637796) ,
([0, 3, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 4, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 5) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 4, 3],) ,
('saved value', 5.61163856196378) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 5, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 3],) ,
('saved value', 4.61163856196378) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -2.6116385619637796) ,
([0, 1, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 4, 2],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3],) ,
('saved value', 6.61163856196378) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 3) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', 2.3883614380362204) ,
([0, 1, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([0, 1, 2, 5, 4, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -1.6116385619637796) ,
([0, 1, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 4],) ,
('saved value', 6.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 5, 4, 3]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 2.3883614380362204) ,
('Update triple match number to:', 10.0) ,
('Current mapping:', [0, 1, 2, 3, 4, 5]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, 2, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 2, 1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 2, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -2.3883614380362204) ,
([0, 1, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 7.61163856196378) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([1, 2, 0, 3, 5, 4],) ,
('node_pair', (0, 1)) ,
('instance/attribute match', 0.0) ,
('relation match with', (1, 2), 1) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0.0) ,
('relation match with', (4, 5), 1) ,
('relation match with', (5, 4), 1) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 4)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 3.0) ,
('Node mapping at start', [1, 2, 0, 3, 5, 4]) ,
('Triple match number at start:', 3.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 0, 3, 5, 4],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', 1.0) ,
([2, 1, 0, 3, 5, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 5, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 0) ,
([1, 2, 0, 3, 5, 4],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', 1.0) ,
([0, 2, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 5, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 3) ,
([1, 2, 0, 3, 5, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([3, 2, 0, 1, 5, 4],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 5, 4],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 5) ,
([1, 2, 0, 3, 5, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([5, 2, 0, 3, 1, 4],) ,
('Computing match for mapping',) ,
([5, 2, 0, 3, 1, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 4) ,
([1, 2, 0, 3, 5, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 2, 0, 3, 5, 1],) ,
('Computing match for mapping',) ,
([4, 2, 0, 3, 5, 1],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 0) ,
([1, 2, 0, 3, 5, 4],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 0, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 5, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 3) ,
([1, 2, 0, 3, 5, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([1, 3, 0, 2, 5, 4],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2, 5, 4],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 5) ,
([1, 2, 0, 3, 5, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([1, 5, 0, 3, 2, 4],) ,
('Computing match for mapping',) ,
([1, 5, 0, 3, 2, 4],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 4) ,
([1, 2, 0, 3, 5, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -2.0) ,
([1, 4, 0, 3, 5, 2],) ,
('Computing match for mapping',) ,
([1, 4, 0, 3, 5, 2],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 3) ,
([1, 2, 0, 3, 5, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 2, 3, 0, 5, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, 0, 5, 4],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 5) ,
([1, 2, 0, 3, 5, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 2, 5, 3, 0, 4],) ,
('Computing match for mapping',) ,
([1, 2, 5, 3, 0, 4],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 4) ,
([1, 2, 0, 3, 5, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 2, 4, 3, 5, 0],) ,
('Computing match for mapping',) ,
([1, 2, 4, 3, 5, 0],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([1, 2, 0, 3, 5, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -2.0) ,
([1, 2, 0, 5, 3, 4],) ,
('Computing match for mapping',) ,
([1, 2, 0, 5, 3, 4],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([1, 2, 0, 3, 5, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -1.3883614380362206) ,
([1, 2, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([1, 2, 0, 4, 5, 3],) ,
('saved value', 1.6116385619637794) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([1, 2, 0, 3, 5, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 1.0) ,
([1, 2, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 2, 0, 3, 4, 5],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [1, 2, 0, 3, 5, 4]) ,
('Current mapping', [2, 1, 0, 3, 5, 4]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [2, 1, 0, 3, 5, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 0, 3, 5, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -1.0) ,
([1, 2, 0, 3, 5, 4],) ,
('Computing match for mapping',) ,
([1, 2, 0, 3, 5, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 1, 0, 3, 5, 4],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 5.0) ,
([0, 1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 3) ,
([2, 1, 0, 3, 5, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([3, 1, 0, 2, 5, 4],) ,
('Computing match for mapping',) ,
([3, 1, 0, 2, 5, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 5) ,
([2, 1, 0, 3, 5, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([5, 1, 0, 3, 2, 4],) ,
('Computing match for mapping',) ,
([5, 1, 0, 3, 2, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 4) ,
([2, 1, 0, 3, 5, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([4, 1, 0, 3, 5, 2],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, 5, 2],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 0) ,
([2, 1, 0, 3, 5, 4],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([2, 0, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([2, 0, 1, 3, 5, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([2, 1, 0, 3, 5, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([2, 3, 0, 1, 5, 4],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, 5, 4],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([2, 1, 0, 3, 5, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([2, 5, 0, 3, 1, 4],) ,
('Computing match for mapping',) ,
([2, 5, 0, 3, 1, 4],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([2, 1, 0, 3, 5, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([2, 4, 0, 3, 5, 1],) ,
('Computing match for mapping',) ,
([2, 4, 0, 3, 5, 1],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 3) ,
([2, 1, 0, 3, 5, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 3, 0, 5, 4],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0, 5, 4],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 5) ,
([2, 1, 0, 3, 5, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 1, 5, 3, 0, 4],) ,
('Computing match for mapping',) ,
([2, 1, 5, 3, 0, 4],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 4) ,
([2, 1, 0, 3, 5, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 1, 4, 3, 5, 0],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 5, 0],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([2, 1, 0, 3, 5, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([2, 1, 0, 5, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 5, 3, 4],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([2, 1, 0, 3, 5, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -2.3883614380362204) ,
([2, 1, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 3],) ,
('saved value', 1.6116385619637796) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([2, 1, 0, 3, 5, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 1.0) ,
([2, 1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5],) ,
('saved value', 5.0) ,
('Use swap gain',) ,
('Original mapping', [2, 1, 0, 3, 5, 4]) ,
('Current mapping', [0, 1, 2, 3, 5, 4]) ,
('Gain after the hill-climbing', 5.0) ,
('Update triple match number to:', 9.0) ,
('Current mapping:', [0, 1, 2, 3, 5, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 5, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 3, 5, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 5, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, 0, 5, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 5, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 0, 4],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 4],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, 3, 5, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 2, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 5, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 2, 1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 5, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 1, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 4, 2, 3, 5, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 5, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 3, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, 2],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -2.3883614380362204) ,
([0, 1, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3],) ,
('saved value', 6.61163856196378) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5],) ,
('saved value', 10.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 3, 5, 4]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 10.0) ,
('Current mapping:', [0, 1, 2, 3, 4, 5]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, 2, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 2, 1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 2, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -2.3883614380362204) ,
([0, 1, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 7.61163856196378) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([3, 0, 5, 4, 2, 1],) ,
('saved value', 0.0) ,
('Node mapping at start', [3, 0, 5, 4, 2, 1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 0) ,
([3, 0, 5, 4, 2, 1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 3, 5, 4, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 5) ,
([3, 0, 5, 4, 2, 1],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', 0.0) ,
([5, 0, 3, 4, 2, 1],) ,
('Computing match for mapping',) ,
([5, 0, 3, 4, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 4) ,
([3, 0, 5, 4, 2, 1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', 0.0) ,
([4, 0, 5, 3, 2, 1],) ,
('Computing match for mapping',) ,
([4, 0, 5, 3, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 2) ,
([3, 0, 5, 4, 2, 1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([2, 0, 5, 4, 3, 1],) ,
('Computing match for mapping',) ,
([2, 0, 5, 4, 3, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 1) ,
([3, 0, 5, 4, 2, 1],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 3) ,
('Swap gain:', 0.6116385619637794) ,
([1, 0, 5, 4, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 5, 4, 2, 3],) ,
('saved value', 0.6116385619637794) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 5) ,
([3, 0, 5, 4, 2, 1],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 5, 0, 4, 2, 1],) ,
('Computing match for mapping',) ,
([3, 5, 0, 4, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 4) ,
([3, 0, 5, 4, 2, 1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 4, 5, 0, 2, 1],) ,
('Computing match for mapping',) ,
([3, 4, 5, 0, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', 2) ,
([3, 0, 5, 4, 2, 1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 2, 5, 4, 0, 1],) ,
('Computing match for mapping',) ,
([3, 2, 5, 4, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 0, ',', 5, '-', 1) ,
([3, 0, 5, 4, 2, 1],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', 1.0) ,
([3, 1, 5, 4, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 5, 4, 2, 0],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 4) ,
([3, 0, 5, 4, 2, 1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', 0.0) ,
([3, 0, 4, 5, 2, 1],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 2) ,
([3, 0, 5, 4, 2, 1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 1.0) ,
([3, 0, 2, 4, 5, 1],) ,
('Computing match for mapping',) ,
([3, 0, 2, 4, 5, 1],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 1) ,
([3, 0, 5, 4, 2, 1],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 5) ,
('Swap gain:', 1.0) ,
([3, 0, 1, 4, 2, 5],) ,
('Computing match for mapping',) ,
([3, 0, 1, 4, 2, 5],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 2) ,
([3, 0, 5, 4, 2, 1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([3, 0, 5, 2, 4, 1],) ,
('Computing match for mapping',) ,
([3, 0, 5, 2, 4, 1],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 1) ,
([3, 0, 5, 4, 2, 1],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([3, 0, 5, 1, 2, 4],) ,
('Computing match for mapping',) ,
([3, 0, 5, 1, 2, 4],) ,
('saved value', 0.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 1) ,
([3, 0, 5, 4, 2, 1],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 0, 5, 4, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 5, 4, 1, 2],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [3, 0, 5, 4, 2, 1]) ,
('Current mapping', [0, 3, 5, 4, 2, 1]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 2.0) ,
('Current mapping:', [0, 3, 5, 4, 2, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 5, 4, 2, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([3, 0, 5, 4, 2, 1],) ,
('Computing match for mapping',) ,
([3, 0, 5, 4, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 3, 5, 4, 2, 1],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([5, 3, 0, 4, 2, 1],) ,
('Computing match for mapping',) ,
([5, 3, 0, 4, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 3, 5, 4, 2, 1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 0, 2, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 3, 5, 4, 2, 1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 3, 5, 4, 0, 1],) ,
('Computing match for mapping',) ,
([2, 3, 5, 4, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 1) ,
([0, 3, 5, 4, 2, 1],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 5, 4, 2, 0],) ,
('Computing match for mapping',) ,
([1, 3, 5, 4, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([0, 3, 5, 4, 2, 1],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 5, 3, 4, 2, 1],) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 4) ,
([0, 3, 5, 4, 2, 1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 4, 5, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 4, 5, 3, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 2) ,
([0, 3, 5, 4, 2, 1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 2, 5, 4, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 3, 1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 1) ,
([0, 3, 5, 4, 2, 1],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 3) ,
('Swap gain:', 2.6116385619637796) ,
([0, 1, 5, 4, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 3],) ,
('saved value', 4.61163856196378) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 4) ,
([0, 3, 5, 4, 2, 1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 3, 4, 5, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 2) ,
([0, 3, 5, 4, 2, 1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 3, 2, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 1) ,
([0, 3, 5, 4, 2, 1],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 3, 1, 4, 2, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 2, 5],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 2) ,
([0, 3, 5, 4, 2, 1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 3, 5, 2, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 4, 1],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 1) ,
([0, 3, 5, 4, 2, 1],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 3, 5, 1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 2, 4],) ,
('saved value', 2.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 1) ,
([0, 3, 5, 4, 2, 1],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 3, 5, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 1, 2],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 5, 4, 2, 1]) ,
('Current mapping', [0, 1, 5, 4, 2, 3]) ,
('Gain after the hill-climbing', 2.6116385619637796) ,
('Update triple match number to:', 4.61163856196378) ,
('Current mapping:', [0, 1, 5, 4, 2, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 5, 4, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 5, 4, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 5, 4, 2, 3],) ,
('saved value', 0.6116385619637794) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 1, 5, 4, 2, 3],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 0, 4, 2, 3],) ,
('Computing match for mapping',) ,
([5, 1, 0, 4, 2, 3],) ,
('saved value', 1.6116385619637796) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 5, 0, 2, 3],) ,
('Computing match for mapping',) ,
([4, 1, 5, 0, 2, 3],) ,
('saved value', 1.6116385619637796) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 5, 4, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 5, 4, 0, 3],) ,
('saved value', 1.6116385619637796) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 5, 4, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -3.6116385619637796) ,
([3, 1, 5, 4, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 5, 4, 2, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 5) ,
([0, 1, 5, 4, 2, 3],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 5, 1, 4, 2, 3],) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 2, 3],) ,
('saved value', 2.6116385619637796) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 4, 5, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 4, 5, 1, 2, 3],) ,
('saved value', 2.6116385619637796) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 5, 4, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 1, 3],) ,
('saved value', 2.6116385619637796) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 5, 4, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -2.6116385619637796) ,
([0, 3, 5, 4, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 1, 4, 5, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 3],) ,
('saved value', 4.61163856196378) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 3],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 2.0) ,
([0, 1, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3],) ,
('saved value', 6.61163856196378) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 3) ,
([0, 1, 5, 4, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -0.6116385619637796) ,
([0, 1, 3, 4, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, 5],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 3],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 4, 3],) ,
('saved value', 5.61163856196378) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 3) ,
([0, 1, 5, 4, 2, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', 1.3883614380362204) ,
([0, 1, 5, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 3) ,
([0, 1, 5, 4, 2, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -0.6116385619637796) ,
([0, 1, 5, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 3, 2],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 5, 4, 2, 3]) ,
('Current mapping', [0, 1, 2, 4, 5, 3]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 6.61163856196378) ,
('Current mapping:', [0, 1, 2, 4, 5, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 3],) ,
('saved value', 1.6116385619637796) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 3],) ,
('saved value', 1.6116385619637796) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 2, 0, 5, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 3],) ,
('saved value', 3.6116385619637796) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 4, 0, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 3],) ,
('saved value', 3.6116385619637796) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -3.6116385619637796) ,
([3, 1, 2, 4, 5, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 3],) ,
('saved value', 2.6116385619637796) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 4, 2, 1, 5, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 3],) ,
('saved value', 3.6116385619637796) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 5, 2, 4, 1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 3],) ,
('saved value', 3.6116385619637796) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -3.6116385619637796) ,
([0, 3, 2, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 3],) ,
('saved value', 4.61163856196378) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 4, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 3],) ,
('saved value', 4.61163856196378) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -2.6116385619637796) ,
([0, 1, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 7.61163856196378) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', 2.3883614380362204) ,
([0, 1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 1, 2, 4, 5, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -0.6116385619637796) ,
([0, 1, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5],) ,
('saved value', 6.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 5, 3]) ,
('Current mapping', [0, 1, 2, 3, 5, 4]) ,
('Gain after the hill-climbing', 2.3883614380362204) ,
('Update triple match number to:', 9.0) ,
('Current mapping:', [0, 1, 2, 3, 5, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 5, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 3, 5, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 5, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, 0, 5, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 5, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 0, 4],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 4],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, 3, 5, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 2, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 5, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 2, 1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 5, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 1, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 4, 2, 3, 5, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 5, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 3, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, 2],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -2.3883614380362204) ,
([0, 1, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3],) ,
('saved value', 6.61163856196378) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5],) ,
('saved value', 10.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 3, 5, 4]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 10.0) ,
('Current mapping:', [0, 1, 2, 3, 4, 5]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, 2, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 2, 1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 2, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -2.3883614380362204) ,
([0, 1, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 7.61163856196378) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 9.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 10.0) ,
('best node mapping', [0, 1, 2, 3, 4, 5]) ,
('Best node mapping alignment:', 'a0(possible-01)-b0(possible-01) a1(wrong-02)-b1(wrong-02) a2(amr-unknown)-b2(amr-unknown) a3(conditioner)-b3(unit) a4(i)-b4(i) a5(air)-b5(air-conditioning)') ,
('F-score:', 0.8333333333333334) ,
Smatch score F1 0.833
('AMR pair', 3) ,
('============================================',) ,
('AMR 1 (one-line):', '(c0 / confirm-01:ARG1 (n0 / nominate-01:ARG1 (p0 / person:name (n2 / name:op1 "Obama" )):ARG2 (c1 / court:mod (a0 / appeal-01):ARG1-of (k0 / key-02))):ARG0 (g0 / government-organization:name (n1 / name:op1 "Senate" )))') ,
('AMR 2 (one-line):', '(a0 / approve-01:ARG1 (g0 / government-organization:name (n1 / name:op1 "Senate" )):ARG1 (n0 / nominate-01:ARG1 (p0 / person:name (n2 / name:op1 "Obama" )):ARG2 (c0 / court:mod (a1 / appeal-01):ARG1-of (k0 / key-02))))') ,
('Instance triples of AMR 1:', 9) ,
([('instance', 'a0', 'confirm-01'), ('instance', 'a1', 'nominate-01'), ('instance', 'a2', 'person'), ('instance', 'a3', 'name'), ('instance', 'a4', 'court'), ('instance', 'a5', 'appeal-01'), ('instance', 'a6', 'key-02'), ('instance', 'a7', 'government-organization'), ('instance', 'a8', 'name')],) ,
('Attribute triples of AMR 1:', 3) ,
([('TOP', 'a0', 'confirm-01'), ('op1', 'a3', 'Obama_'), ('op1', 'a8', 'Senate_')],) ,
('Relation triples of AMR 1:', 8) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a7'), ('ARG1', 'a1', 'a2'), ('ARG2', 'a1', 'a4'), ('name', 'a2', 'a3'), ('mod', 'a4', 'a5'), ('ARG1', 'a6', 'a4'), ('name', 'a7', 'a8')],) ,
('Instance triples of AMR 2:', 9) ,
([('instance', 'b0', 'approve-01'), ('instance', 'b1', 'government-organization'), ('instance', 'b2', 'name'), ('instance', 'b3', 'nominate-01'), ('instance', 'b4', 'person'), ('instance', 'b5', 'name'), ('instance', 'b6', 'court'), ('instance', 'b7', 'appeal-01'), ('instance', 'b8', 'key-02')],) ,
('Attribute triples of AMR 2:', 3) ,
([('TOP', 'b0', 'approve-01'), ('op1', 'b2', 'Senate_'), ('op1', 'b5', 'Obama_')],) ,
('Relation triples of AMR 2:', 8) ,
([('ARG1', 'b0', 'b1'), ('ARG1', 'b0', 'b3'), ('name', 'b1', 'b2'), ('ARG1', 'b3', 'b4'), ('ARG2', 'b3', 'b6'), ('name', 'b4', 'b5'), ('mod', 'b6', 'b7'), ('ARG1', 'b8', 'b6')],) ,
('Similarity', 'confirm-01', 'approve-01', 0.0) ,
('Similarity', 'confirm-01', 'government-organization', 0.0) ,
('Similarity', 'confirm-01', 'name', 0.0) ,
('Similarity', 'confirm-01', 'nominate-01', 0.0) ,
('Similarity', 'confirm-01', 'person', 0.0) ,
('Similarity', 'confirm-01', 'court', 0.0) ,
('Similarity', 'confirm-01', 'appeal-01', 0.0) ,
('Similarity', 'confirm-01', 'key-02', 0.0) ,
('Similarity', 'nominate-01', 'approve-01', 0.2566118953744497) ,
('Similarity', 'nominate-01', 'government-organization', 0.0) ,
('Similarity', 'nominate-01', 'name', 0.0) ,
('Similarity', 'nominate-01', 'nominate-01', 1.0) ,
('Similarity', 'nominate-01', 'person', 0.0) ,
('Similarity', 'nominate-01', 'court', 0.0) ,
('Similarity', 'nominate-01', 'appeal-01', 0.0) ,
('Similarity', 'nominate-01', 'key-02', 0.0) ,
('Similarity', 'person', 'approve-01', 0.0) ,
('Similarity', 'person', 'government-organization', 0.5069831227987472) ,
('Similarity', 'person', 'name', 0.5223025907899909) ,
('Similarity', 'person', 'person', 1.0) ,
('Similarity', 'person', 'court', 0.0) ,
('Similarity', 'person', 'appeal-01', 0.0) ,
('Similarity', 'person', 'key-02', 0.0) ,
('Similarity', 'name', 'approve-01', 0.0) ,
('Similarity', 'name', 'government-organization', 0.0) ,
('Similarity', 'name', 'name', 1.0) ,
('Similarity', 'name', 'court', 0.0) ,
('Similarity', 'name', 'appeal-01', 0.0) ,
('Similarity', 'name', 'key-02', 0.0) ,
('Similarity', 'court', 'approve-01', 0.0) ,
('Similarity', 'court', 'government-organization', 0.5405941366317017) ,
('Similarity', 'court', 'court', 1.0) ,
('Similarity', 'court', 'appeal-01', 0.42518123746510306) ,
('Similarity', 'court', 'key-02', 0.0) ,
('Similarity', 'appeal-01', 'approve-01', 0.0) ,
('Similarity', 'appeal-01', 'government-organization', 0.0) ,
('Similarity', 'appeal-01', 'appeal-01', 1.0) ,
('Similarity', 'appeal-01', 'key-02', 0.0) ,
('Similarity', 'key-02', 'approve-01', 0.0) ,
('Similarity', 'key-02', 'government-organization', 0.0) ,
('Similarity', 'key-02', 'key-02', 1.0) ,
('Similarity', 'government-organization', 'approve-01', 0.0) ,
('Similarity', 'government-organization', 'government-organization', 1.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3, 4, 5, 6, 7, 8}, {0, 1, 2, 3, 4, 5, 6, 7, 8}, {0, 1, 2, 3, 4, 5, 6, 7, 8}, {0, 1, 2, 3, 4, 5, 6, 7, 8}, {0, 1, 2, 3, 4, 5, 6, 7, 8}, {0, 1, 2, 3, 4, 5, 6, 7, 8}, {0, 1, 2, 3, 4, 5, 6, 7, 8}, {0, 1, 2, 3, 4, 5, 6, 7, 8}, {0, 1, 2, 3, 4, 5, 6, 7, 8}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.0, (1, 1): 1, (1, 3): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0}, (0, 3): {-1: 0.0, (1, 4): 1}, (0, 4): {-1: 0.0}, (0, 5): {-1: 0.0}, (0, 6): {-1: 0.0}, (0, 7): {-1: 0.0}, (0, 8): {-1: 0.0, (1, 6): 1}, (1, 0): {-1: 0.2566118953744497, (2, 1): 1, (2, 3): 1}, (1, 1): {-1: 0.0, (0, 0): 1}, (1, 2): {-1: 0.0}, (1, 3): {-1: 1.0, (0, 0): 1, (2, 4): 1, (4, 6): 1}, (1, 4): {-1: 0.0, (0, 3): 1}, (1, 5): {-1: 0.0}, (1, 6): {-1: 0.0, (0, 8): 1}, (1, 7): {-1: 0.0}, (1, 8): {-1: 0.0, (2, 6): 1}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.5069831227987472, (1, 0): 1, (3, 2): 1}, (2, 2): {-1: 0.5223025907899909}, (2, 3): {-1: 0.0, (1, 0): 1}, (2, 4): {-1: 1.0, (1, 3): 1, (3, 5): 1}, (2, 5): {-1: 0.5223025907899909}, (2, 6): {-1: 0.0, (1, 8): 1}, (2, 7): {-1: 0.0}, (2, 8): {-1: 0.0}, (3, 0): {-1: 0.0}, (3, 1): {-1: 0.0}, (3, 2): {-1: 1.0, (2, 1): 1}, (3, 3): {-1: 0.0}, (3, 4): {-1: 0.5223025907899909}, (3, 5): {-1: 2.0, (2, 4): 1}, (3, 6): {-1: 0.0}, (3, 7): {-1: 0.0}, (3, 8): {-1: 0.0}, (4, 0): {-1: 0.0}, (4, 1): {-1: 0.5405941366317017, (6, 0): 1}, (4, 2): {-1: 0.0}, (4, 3): {-1: 0.0, (6, 0): 1}, (4, 4): {-1: 0.0, (6, 3): 1}, (4, 5): {-1: 0.0}, (4, 6): {-1: 1.0, (1, 3): 1, (5, 7): 1, (6, 8): 1}, (4, 7): {-1: 0.42518123746510306}, (4, 8): {-1: 0.0}, (5, 0): {-1: 0.0}, (5, 1): {-1: 0.0}, (5, 2): {-1: 0.0}, (5, 3): {-1: 0.0}, (5, 4): {-1: 0.0}, (5, 5): {-1: 0.0}, (5, 6): {-1: 0.42518123746510306}, (5, 7): {-1: 1.0, (4, 6): 1}, (5, 8): {-1: 0.0}, (6, 0): {-1: 0.0, (4, 1): 1, (4, 3): 1}, (6, 1): {-1: 0.0}, (6, 2): {-1: 0.0}, (6, 3): {-1: 0.0, (4, 4): 1}, (6, 4): {-1: 0.0}, (6, 5): {-1: 0.0}, (6, 6): {-1: 0.0}, (6, 7): {-1: 0.0}, (6, 8): {-1: 1.0, (4, 6): 1}, (7, 0): {-1: 0.0}, (7, 1): {-1: 1.0, (8, 2): 1}, (7, 2): {-1: 0.0}, (7, 3): {-1: 0.0}, (7, 4): {-1: 0.5069831227987472, (8, 5): 1}, (7, 5): {-1: 0.0}, (7, 6): {-1: 0.5405941366317017}, (7, 7): {-1: 0.0}, (7, 8): {-1: 0.0}, (8, 0): {-1: 0.0}, (8, 1): {-1: 0.0}, (8, 2): {-1: 2.0, (7, 1): 1}, (8, 3): {-1: 0.0}, (8, 4): {-1: 0.5223025907899909}, (8, 5): {-1: 1.0, (7, 4): 1}, (8, 6): {-1: 0.0}, (8, 7): {-1: 0.0}, (8, 8): {-1: 0.0}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0.0) ,
('relation match with', (1, 3), 1) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 1.0) ,
('relation match with', (2, 4), 1) ,
('relation match with', (4, 6), 1) ,
('node_pair', (2, 4)) ,
('instance/attribute match', 1.0) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1.0) ,
('node_pair', (4, 6)) ,
('instance/attribute match', 1.0) ,
('relation match with', (5, 7), 1) ,
('relation match with', (6, 8), 1) ,
('node_pair', (5, 7)) ,
('instance/attribute match', 1.0) ,
('node_pair', (6, 8)) ,
('instance/attribute match', 1.0) ,
('node_pair', (7, 1)) ,
('instance/attribute match', 1.0) ,
('node_pair', (8, 5)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 13.0) ,
('Node mapping at start', [0, 3, 4, 2, 6, 7, 8, 1, 5]) ,
('Triple match number at start:', 13.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -3.7433881046255504) ,
([3, 0, 4, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([3, 0, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 9.25661189537445) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 3, 0, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 0, 2, 6, 7, 8, 1, 5],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 3, 4, 0, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([2, 3, 4, 0, 6, 7, 8, 1, 5],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 3, 4, 2, 0, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([6, 3, 4, 2, 0, 7, 8, 1, 5],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 3, 4, 2, 6, 0, 8, 1, 5],) ,
('Computing match for mapping',) ,
([7, 3, 4, 2, 6, 0, 8, 1, 5],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([8, 3, 4, 2, 6, 7, 0, 1, 5],) ,
('Computing match for mapping',) ,
([8, 3, 4, 2, 6, 7, 0, 1, 5],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 4, 2, 6, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([1, 3, 4, 2, 6, 7, 8, 0, 5],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 0) ,
('Swap gain:', -2.0) ,
([5, 3, 4, 2, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([5, 3, 4, 2, 6, 7, 8, 1, 0],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 4, 3, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 3, 2, 6, 7, 8, 1, 5],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 2, 4, 3, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 6, 7, 8, 1, 5],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -7.0) ,
([0, 6, 4, 2, 3, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 3, 7, 8, 1, 5],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 7, 4, 2, 6, 3, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 7, 4, 2, 6, 3, 8, 1, 5],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 8, 4, 2, 6, 7, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 8, 4, 2, 6, 7, 3, 1, 5],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 2, 6, 7, 8, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 7, 8, 3, 5],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 5, 4, 2, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 4, 2, 6, 7, 8, 1, 3],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 2) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -1.9553948184200183) ,
([0, 3, 2, 4, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 6, 7, 8, 1, 5],) ,
('saved value', 11.044605181579982) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -6.0) ,
([0, 3, 6, 2, 4, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 4, 7, 8, 1, 5],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 3, 7, 2, 6, 4, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 6, 4, 8, 1, 5],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 3, 8, 2, 6, 7, 4, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 8, 2, 6, 7, 4, 1, 5],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', 0.013966245597494265) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('saved value', 13.013966245597494) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', -1.9553948184200183) ,
([0, 3, 5, 2, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 6, 7, 8, 1, 4],) ,
('saved value', 11.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 6) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 6, 2, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 2, 7, 8, 1, 5],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 3, 4, 7, 6, 2, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 7, 6, 2, 8, 1, 5],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 3, 4, 8, 6, 7, 2, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 8, 6, 7, 2, 1, 5],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 3, 4, 1, 6, 7, 8, 2, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 7, 8, 2, 5],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 4.0) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 17.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4.149637525069794) ,
([0, 3, 4, 2, 7, 6, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 7, 6, 8, 1, 5],) ,
('saved value', 8.850362474930206) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 2, 8, 7, 6, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 8, 7, 6, 1, 5],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -3.9188117267365965) ,
([0, 3, 4, 2, 1, 7, 8, 6, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 1, 7, 8, 6, 5],) ,
('saved value', 9.081188273263404) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 2, 5, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 5, 7, 8, 1, 6],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 2, 6, 8, 7, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 8, 7, 1, 5],) ,
('saved value', 9.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 3, 4, 2, 6, 1, 8, 7, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 1, 8, 7, 5],) ,
('saved value', 10.0) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 3, 4, 2, 6, 5, 8, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 5, 8, 1, 7],) ,
('saved value', 10.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -3.0) ,
([0, 3, 4, 2, 6, 7, 1, 8, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 1, 8, 5],) ,
('saved value', 10.0) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -3.0) ,
([0, 3, 4, 2, 6, 7, 5, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 5, 1, 8],) ,
('saved value', 10.0) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 5) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 4, 2, 6, 7, 8, 5, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 5, 1],) ,
('saved value', 11.0) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 4, 2, 6, 7, 8, 1, 5]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 4.0) ,
('Update triple match number to:', 17.0) ,
('Current mapping:', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -3.7433881046255504) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13.25661189537445) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('saved value', 13.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('saved value', 14.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('saved value', 14.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('saved value', 14.0) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('saved value', 13.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -7.0) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -7.0) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('saved value', 12.0) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -7.0) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -3.955394818420018) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('saved value', 13.044605181579982) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -7.0) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -3.9860337544025057) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('saved value', 13.013966245597494) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -4.955394818420018) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('saved value', 12.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -7.0) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 13.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4.149637525069794) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('saved value', 12.850362474930206) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -4.918811726736596) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('saved value', 12.081188273263404) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -7.0) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('saved value', 10.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('saved value', 13.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('saved value', 13.0) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('saved value', 12.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('saved value', 13.0) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('saved value', 12.0) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('saved value', 13.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('node_pair', (0, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 1.0) ,
('node_pair', (2, 5)) ,
('instance/attribute match', 0.5223025907899909) ,
('node_pair', (3, 8)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (7, 4)) ,
('instance/attribute match', 0.5069831227987472) ,
('node_pair', (8, 6)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 2.029285713588738) ,
('Node mapping at start', [7, 3, 5, 8, 2, 0, 1, 4, 6]) ,
('Triple match number at start:', 2.029285713588738) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 3) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 7) ,
('Swap gain:', -1.0) ,
([3, 7, 5, 8, 2, 0, 1, 4, 6],) ,
('Computing match for mapping',) ,
([3, 7, 5, 8, 2, 0, 1, 4, 6],) ,
('saved value', 1.029285713588738) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 5) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 7) ,
('Swap gain:', -0.5223025907899909) ,
([5, 3, 7, 8, 2, 0, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 3, 7, 8, 2, 0, 1, 4, 6],) ,
('saved value', 1.5069831227987471) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 8) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 0, '-', 8, ',', 3, '-', 7) ,
('Swap gain:', 0.0) ,
([8, 3, 5, 7, 2, 0, 1, 4, 6],) ,
('Computing match for mapping',) ,
([8, 3, 5, 7, 2, 0, 1, 4, 6],) ,
('saved value', 2.029285713588738) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 2) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 7) ,
('Swap gain:', 0.42518123746510306) ,
([2, 3, 5, 8, 7, 0, 1, 4, 6],) ,
('Computing match for mapping',) ,
([2, 3, 5, 8, 7, 0, 1, 4, 6],) ,
('saved value', 2.454466951053841) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 0) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 7) ,
('Swap gain:', 2.0) ,
([0, 3, 5, 8, 2, 7, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 8, 2, 7, 1, 4, 6],) ,
('saved value', 4.029285713588738) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', 1) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 6, '-', 7) ,
('Swap gain:', 0.0) ,
([1, 3, 5, 8, 2, 0, 7, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 5, 8, 2, 0, 7, 4, 6],) ,
('saved value', 2.029285713588738) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 7, ',', 7, '-', 4) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 7, '-', 7) ,
('Swap gain:', -0.5069831227987472) ,
([4, 3, 5, 8, 2, 0, 1, 7, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 8, 2, 0, 1, 7, 6],) ,
('saved value', 1.522302590789991) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 7, ',', 8, '-', 6) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 8, '-', 7) ,
('Swap gain:', 0.0) ,
([6, 3, 5, 8, 2, 0, 1, 4, 7],) ,
('Computing match for mapping',) ,
([6, 3, 5, 8, 2, 0, 1, 4, 7],) ,
('saved value', 2.029285713588738) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -1.522302590789991) ,
([7, 5, 3, 8, 2, 0, 1, 4, 6],) ,
('Computing match for mapping',) ,
([7, 5, 3, 8, 2, 0, 1, 4, 6],) ,
('saved value', 0.5069831227987471) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 8) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 1, '-', 8, ',', 3, '-', 3) ,
('Swap gain:', -1.0) ,
([7, 8, 5, 3, 2, 0, 1, 4, 6],) ,
('Computing match for mapping',) ,
([7, 8, 5, 3, 2, 0, 1, 4, 6],) ,
('saved value', 1.029285713588738) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 2) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', -1.0) ,
([7, 2, 5, 8, 3, 0, 1, 4, 6],) ,
('Computing match for mapping',) ,
([7, 2, 5, 8, 3, 0, 1, 4, 6],) ,
('saved value', 1.029285713588738) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 0) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -0.7433881046255503) ,
([7, 0, 5, 8, 2, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([7, 0, 5, 8, 2, 3, 1, 4, 6],) ,
('saved value', 1.2858976089631877) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 1) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 1, '-', 1, ',', 6, '-', 3) ,
('Swap gain:', -1.0) ,
([7, 1, 5, 8, 2, 0, 3, 4, 6],) ,
('Computing match for mapping',) ,
([7, 1, 5, 8, 2, 0, 3, 4, 6],) ,
('saved value', 1.029285713588738) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 4) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 7, '-', 3) ,
('Swap gain:', -1.5069831227987471) ,
([7, 4, 5, 8, 2, 0, 1, 3, 6],) ,
('Computing match for mapping',) ,
([7, 4, 5, 8, 2, 0, 1, 3, 6],) ,
('saved value', 0.522302590789991) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 6) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 8, '-', 3) ,
('Swap gain:', -1.0) ,
([7, 6, 5, 8, 2, 0, 1, 4, 3],) ,
('Computing match for mapping',) ,
([7, 6, 5, 8, 2, 0, 1, 4, 3],) ,
('saved value', 1.029285713588738) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 8) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 2, '-', 8, ',', 3, '-', 5) ,
('Swap gain:', 1.477697409210009) ,
([7, 3, 8, 5, 2, 0, 1, 4, 6],) ,
('Computing match for mapping',) ,
([7, 3, 8, 5, 2, 0, 1, 4, 6],) ,
('saved value', 3.506983122798747) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 2) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 0.0) ,
([7, 3, 2, 8, 5, 0, 1, 4, 6],) ,
('Computing match for mapping',) ,
([7, 3, 2, 8, 5, 0, 1, 4, 6],) ,
('saved value', 2.029285713588738) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 0) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', -0.5223025907899909) ,
([7, 3, 0, 8, 2, 5, 1, 4, 6],) ,
('Computing match for mapping',) ,
([7, 3, 0, 8, 2, 5, 1, 4, 6],) ,
('saved value', 1.5069831227987471) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 1) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 2, '-', 1, ',', 6, '-', 5) ,
('Swap gain:', -0.015319467991243618) ,
([7, 3, 1, 8, 2, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([7, 3, 1, 8, 2, 0, 5, 4, 6],) ,
('saved value', 2.0139662455974943) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 4) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 7, '-', 5) ,
('Swap gain:', 0.9707142864112618) ,
([7, 3, 4, 8, 2, 0, 1, 5, 6],) ,
('Computing match for mapping',) ,
([7, 3, 4, 8, 2, 0, 1, 5, 6],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 5, ',', 8, '-', 6) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 8, '-', 5) ,
('Swap gain:', 1.477697409210009) ,
([7, 3, 6, 8, 2, 0, 1, 4, 5],) ,
('Computing match for mapping',) ,
([7, 3, 6, 8, 2, 0, 1, 4, 5],) ,
('saved value', 3.506983122798747) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 8, ',', 4, '-', 2) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 8) ,
('Swap gain:', 1.0) ,
([7, 3, 5, 2, 8, 0, 1, 4, 6],) ,
('Computing match for mapping',) ,
([7, 3, 5, 2, 8, 0, 1, 4, 6],) ,
('saved value', 3.029285713588738) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 8, ',', 5, '-', 0) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 8) ,
('Swap gain:', 0.0) ,
([7, 3, 5, 0, 2, 8, 1, 4, 6],) ,
('Computing match for mapping',) ,
([7, 3, 5, 0, 2, 8, 1, 4, 6],) ,
('saved value', 2.029285713588738) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 8, ',', 6, '-', 1) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 3, '-', 1, ',', 6, '-', 8) ,
('Swap gain:', 1.0) ,
([7, 3, 5, 1, 2, 0, 8, 4, 6],) ,
('Computing match for mapping',) ,
([7, 3, 5, 1, 2, 0, 8, 4, 6],) ,
('saved value', 3.029285713588738) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 8, ',', 7, '-', 4) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 7, '-', 8) ,
('Swap gain:', 0.015319467991243618) ,
([7, 3, 5, 4, 2, 0, 1, 8, 6],) ,
('Computing match for mapping',) ,
([7, 3, 5, 4, 2, 0, 1, 8, 6],) ,
('saved value', 2.044605181579982) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 8, ',', 8, '-', 6) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 8, '-', 8) ,
('Swap gain:', 0.0) ,
([7, 3, 5, 6, 2, 0, 1, 4, 8],) ,
('Computing match for mapping',) ,
([7, 3, 5, 6, 2, 0, 1, 4, 8],) ,
('saved value', 2.029285713588738) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 0) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([7, 3, 5, 8, 0, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 0, 2, 1, 4, 6],) ,
('saved value', 2.029285713588738) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 1) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 4, '-', 1, ',', 6, '-', 2) ,
('Swap gain:', 0.5405941366317017) ,
([7, 3, 5, 8, 1, 0, 2, 4, 6],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 1, 0, 2, 4, 6],) ,
('saved value', 2.56987985022044) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 4) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 4, '-', 4, ',', 7, '-', 2) ,
('Swap gain:', -0.5069831227987472) ,
([7, 3, 5, 8, 4, 0, 1, 2, 6],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 4, 0, 1, 2, 6],) ,
('saved value', 1.522302590789991) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', 6) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 8, '-', 2) ,
('Swap gain:', 4.0) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('saved value', 6.029285713588738) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 1) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 5, '-', 1, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([7, 3, 5, 8, 2, 1, 0, 4, 6],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 2, 1, 0, 4, 6],) ,
('saved value', 2.029285713588738) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 4) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 5, '-', 4, ',', 7, '-', 0) ,
('Swap gain:', -0.5069831227987472) ,
([7, 3, 5, 8, 2, 4, 1, 0, 6],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 2, 4, 1, 0, 6],) ,
('saved value', 1.522302590789991) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 6) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 5, '-', 6, ',', 8, '-', 0) ,
('Swap gain:', 0.42518123746510306) ,
([7, 3, 5, 8, 2, 6, 1, 4, 0],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 2, 6, 1, 4, 0],) ,
('saved value', 2.454466951053841) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 1, ',', 7, '-', 4) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 6, '-', 4, ',', 7, '-', 1) ,
('Swap gain:', 0.49301687720125276) ,
([7, 3, 5, 8, 2, 0, 4, 1, 6],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 2, 0, 4, 1, 6],) ,
('saved value', 2.522302590789991) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 1, ',', 8, '-', 6) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 6, '-', 6, ',', 8, '-', 1) ,
('Swap gain:', 0.0) ,
([7, 3, 5, 8, 2, 0, 6, 4, 1],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 2, 0, 6, 4, 1],) ,
('saved value', 2.029285713588738) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 4, ',', 8, '-', 6) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('After swapping:', 7, '-', 6, ',', 8, '-', 4) ,
('Swap gain:', 0.5559136046229453) ,
([7, 3, 5, 8, 2, 0, 1, 6, 4],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 2, 0, 1, 6, 4],) ,
('saved value', 2.5851993182116835) ,
('Use swap gain',) ,
('Original mapping', [7, 3, 5, 8, 2, 0, 1, 4, 6]) ,
('Current mapping', [7, 3, 5, 8, 6, 0, 1, 4, 2]) ,
('Gain after the hill-climbing', 4.0) ,
('Update triple match number to:', 6.029285713588738) ,
('Current mapping:', [7, 3, 5, 8, 6, 0, 1, 4, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 3) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 7) ,
('Swap gain:', -2.0) ,
([3, 7, 5, 8, 6, 0, 1, 4, 2],) ,
('Computing match for mapping',) ,
([3, 7, 5, 8, 6, 0, 1, 4, 2],) ,
('saved value', 4.029285713588738) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 5) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 7) ,
('Swap gain:', -0.5223025907899909) ,
([5, 3, 7, 8, 6, 0, 1, 4, 2],) ,
('Computing match for mapping',) ,
([5, 3, 7, 8, 6, 0, 1, 4, 2],) ,
('saved value', 5.506983122798747) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 8) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 0, '-', 8, ',', 3, '-', 7) ,
('Swap gain:', 0.0) ,
([8, 3, 5, 7, 6, 0, 1, 4, 2],) ,
('Computing match for mapping',) ,
([8, 3, 5, 7, 6, 0, 1, 4, 2],) ,
('saved value', 6.029285713588738) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 6) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 7) ,
('Swap gain:', -1.574818762534897) ,
([6, 3, 5, 8, 7, 0, 1, 4, 2],) ,
('Computing match for mapping',) ,
([6, 3, 5, 8, 7, 0, 1, 4, 2],) ,
('saved value', 4.454466951053841) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 0) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 7) ,
('Swap gain:', 3.0) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('saved value', 9.029285713588738) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', 1) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 0, '-', 1, ',', 6, '-', 7) ,
('Swap gain:', 0.0) ,
([1, 3, 5, 8, 6, 0, 7, 4, 2],) ,
('Computing match for mapping',) ,
([1, 3, 5, 8, 6, 0, 7, 4, 2],) ,
('saved value', 6.029285713588738) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 7, ',', 7, '-', 4) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 0, '-', 4, ',', 7, '-', 7) ,
('Swap gain:', -0.5069831227987472) ,
([4, 3, 5, 8, 6, 0, 1, 7, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 8, 6, 0, 1, 7, 2],) ,
('saved value', 5.522302590789991) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 7, ',', 8, '-', 2) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -2.0) ,
([2, 3, 5, 8, 6, 0, 1, 4, 7],) ,
('Computing match for mapping',) ,
([2, 3, 5, 8, 6, 0, 1, 4, 7],) ,
('saved value', 4.029285713588738) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -2.522302590789991) ,
([7, 5, 3, 8, 6, 0, 1, 4, 2],) ,
('Computing match for mapping',) ,
([7, 5, 3, 8, 6, 0, 1, 4, 2],) ,
('saved value', 3.506983122798747) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 8) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 1, '-', 8, ',', 3, '-', 3) ,
('Swap gain:', -2.0) ,
([7, 8, 5, 3, 6, 0, 1, 4, 2],) ,
('Computing match for mapping',) ,
([7, 8, 5, 3, 6, 0, 1, 4, 2],) ,
('saved value', 4.029285713588738) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([7, 6, 5, 8, 3, 0, 1, 4, 2],) ,
('Computing match for mapping',) ,
([7, 6, 5, 8, 3, 0, 1, 4, 2],) ,
('saved value', 3.029285713588738) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 0) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -1.7433881046255504) ,
([7, 0, 5, 8, 6, 3, 1, 4, 2],) ,
('Computing match for mapping',) ,
([7, 0, 5, 8, 6, 3, 1, 4, 2],) ,
('saved value', 4.285897608963188) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 1) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 1, '-', 1, ',', 6, '-', 3) ,
('Swap gain:', -2.0) ,
([7, 1, 5, 8, 6, 0, 3, 4, 2],) ,
('Computing match for mapping',) ,
([7, 1, 5, 8, 6, 0, 3, 4, 2],) ,
('saved value', 4.029285713588738) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 4) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 1, '-', 4, ',', 7, '-', 3) ,
('Swap gain:', -2.506983122798747) ,
([7, 4, 5, 8, 6, 0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([7, 4, 5, 8, 6, 0, 1, 3, 2],) ,
('saved value', 3.522302590789991) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -4.0) ,
([7, 2, 5, 8, 6, 0, 1, 4, 3],) ,
('Computing match for mapping',) ,
([7, 2, 5, 8, 6, 0, 1, 4, 3],) ,
('saved value', 2.029285713588738) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 8) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 2, '-', 8, ',', 3, '-', 5) ,
('Swap gain:', 1.477697409210009) ,
([7, 3, 8, 5, 6, 0, 1, 4, 2],) ,
('Computing match for mapping',) ,
([7, 3, 8, 5, 6, 0, 1, 4, 2],) ,
('saved value', 7.506983122798747) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 6) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([7, 3, 6, 8, 5, 0, 1, 4, 2],) ,
('Computing match for mapping',) ,
([7, 3, 6, 8, 5, 0, 1, 4, 2],) ,
('saved value', 3.506983122798747) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 0) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', -0.5223025907899909) ,
([7, 3, 0, 8, 6, 5, 1, 4, 2],) ,
('Computing match for mapping',) ,
([7, 3, 0, 8, 6, 5, 1, 4, 2],) ,
('saved value', 5.506983122798747) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 1) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 2, '-', 1, ',', 6, '-', 5) ,
('Swap gain:', -0.015319467991243618) ,
([7, 3, 1, 8, 6, 0, 5, 4, 2],) ,
('Computing match for mapping',) ,
([7, 3, 1, 8, 6, 0, 5, 4, 2],) ,
('saved value', 6.013966245597494) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 4) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 2, '-', 4, ',', 7, '-', 5) ,
('Swap gain:', 0.9707142864112618) ,
([7, 3, 4, 8, 6, 0, 1, 5, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 8, 6, 0, 1, 5, 2],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 5, ',', 8, '-', 2) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', 0.0) ,
([7, 3, 2, 8, 6, 0, 1, 4, 5],) ,
('Computing match for mapping',) ,
([7, 3, 2, 8, 6, 0, 1, 4, 5],) ,
('saved value', 6.029285713588738) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 8, ',', 4, '-', 6) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 8) ,
('Swap gain:', -2.0) ,
([7, 3, 5, 6, 8, 0, 1, 4, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 6, 8, 0, 1, 4, 2],) ,
('saved value', 4.029285713588738) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 8, ',', 5, '-', 0) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 8) ,
('Swap gain:', 0.0) ,
([7, 3, 5, 0, 6, 8, 1, 4, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 0, 6, 8, 1, 4, 2],) ,
('saved value', 6.029285713588738) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 8, ',', 6, '-', 1) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 3, '-', 1, ',', 6, '-', 8) ,
('Swap gain:', 2.0) ,
([7, 3, 5, 1, 6, 0, 8, 4, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 1, 6, 0, 8, 4, 2],) ,
('saved value', 8.029285713588738) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 8, ',', 7, '-', 4) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 3, '-', 4, ',', 7, '-', 8) ,
('Swap gain:', 0.015319467991243618) ,
([7, 3, 5, 4, 6, 0, 1, 8, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 4, 6, 0, 1, 8, 2],) ,
('saved value', 6.044605181579982) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 8, ',', 8, '-', 2) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -1.0) ,
([7, 3, 5, 2, 6, 0, 1, 4, 8],) ,
('Computing match for mapping',) ,
([7, 3, 5, 2, 6, 0, 1, 4, 8],) ,
('saved value', 5.029285713588738) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 0) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 6) ,
('Swap gain:', -1.574818762534897) ,
([7, 3, 5, 8, 0, 6, 1, 4, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 0, 6, 1, 4, 2],) ,
('saved value', 4.454466951053841) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 1) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 4, '-', 1, ',', 6, '-', 6) ,
('Swap gain:', -1.4594058633682983) ,
([7, 3, 5, 8, 1, 0, 6, 4, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 1, 0, 6, 4, 2],) ,
('saved value', 4.56987985022044) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 4) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 4, '-', 4, ',', 7, '-', 6) ,
('Swap gain:', -1.9663889861670456) ,
([7, 3, 5, 8, 4, 0, 1, 6, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 4, 0, 1, 6, 2],) ,
('saved value', 4.062896727421693) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -4.0) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 2, 0, 1, 4, 6],) ,
('saved value', 2.029285713588738) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 1) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 5, '-', 1, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([7, 3, 5, 8, 6, 1, 0, 4, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 6, 1, 0, 4, 2],) ,
('saved value', 6.029285713588738) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 4) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 5, '-', 4, ',', 7, '-', 0) ,
('Swap gain:', -0.5069831227987472) ,
([7, 3, 5, 8, 6, 4, 1, 0, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 6, 4, 1, 0, 2],) ,
('saved value', 5.522302590789991) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 2) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -2.0) ,
([7, 3, 5, 8, 6, 2, 1, 4, 0],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 6, 2, 1, 4, 0],) ,
('saved value', 4.029285713588738) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 1, ',', 7, '-', 4) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 6, '-', 4, ',', 7, '-', 1) ,
('Swap gain:', 1.4930168772012529) ,
([7, 3, 5, 8, 6, 0, 4, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 6, 0, 4, 1, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 1, ',', 8, '-', 2) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -2.0) ,
([7, 3, 5, 8, 6, 0, 2, 4, 1],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 6, 0, 2, 4, 1],) ,
('saved value', 4.029285713588738) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 4, ',', 8, '-', 2) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -1.9846805320087564) ,
([7, 3, 5, 8, 6, 0, 1, 2, 4],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 6, 0, 1, 2, 4],) ,
('saved value', 4.044605181579982) ,
('Use swap gain',) ,
('Original mapping', [7, 3, 5, 8, 6, 0, 1, 4, 2]) ,
('Current mapping', [0, 3, 5, 8, 6, 7, 1, 4, 2]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 9.029285713588738) ,
('Current mapping:', [0, 3, 5, 8, 6, 7, 1, 4, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -2.7433881046255504) ,
([3, 0, 5, 8, 6, 7, 1, 4, 2],) ,
('Computing match for mapping',) ,
([3, 0, 5, 8, 6, 7, 1, 4, 2],) ,
('saved value', 6.285897608963188) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -1.522302590789991) ,
([5, 3, 0, 8, 6, 7, 1, 4, 2],) ,
('Computing match for mapping',) ,
([5, 3, 0, 8, 6, 7, 1, 4, 2],) ,
('saved value', 7.506983122798747) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 8) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 0, '-', 8, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([8, 3, 5, 0, 6, 7, 1, 4, 2],) ,
('Computing match for mapping',) ,
([8, 3, 5, 0, 6, 7, 1, 4, 2],) ,
('saved value', 8.029285713588738) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([6, 3, 5, 8, 0, 7, 1, 4, 2],) ,
('Computing match for mapping',) ,
([6, 3, 5, 8, 0, 7, 1, 4, 2],) ,
('saved value', 5.029285713588738) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 8, 6, 0, 1, 4, 2],) ,
('saved value', 6.029285713588738) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 1) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 0, '-', 1, ',', 6, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 3, 5, 8, 6, 7, 0, 4, 2],) ,
('Computing match for mapping',) ,
([1, 3, 5, 8, 6, 7, 0, 4, 2],) ,
('saved value', 8.029285713588738) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 4) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 0, '-', 4, ',', 7, '-', 0) ,
('Swap gain:', -1.5069831227987471) ,
([4, 3, 5, 8, 6, 7, 1, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 8, 6, 7, 1, 0, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 2) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 3, 5, 8, 6, 7, 1, 4, 0],) ,
('Computing match for mapping',) ,
([2, 3, 5, 8, 6, 7, 1, 4, 0],) ,
('saved value', 6.029285713588738) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -3.522302590789991) ,
([0, 5, 3, 8, 6, 7, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 5, 3, 8, 6, 7, 1, 4, 2],) ,
('saved value', 5.506983122798747) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 8) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 1, '-', 8, ',', 3, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 8, 5, 3, 6, 7, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 8, 5, 3, 6, 7, 1, 4, 2],) ,
('saved value', 6.029285713588738) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 6, 5, 8, 3, 7, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 6, 5, 8, 3, 7, 1, 4, 2],) ,
('saved value', 4.029285713588738) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 7, 5, 8, 6, 3, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 7, 5, 8, 6, 3, 1, 4, 2],) ,
('saved value', 4.029285713588738) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 1) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 1, '-', 1, ',', 6, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 8, 6, 7, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 8, 6, 7, 3, 4, 2],) ,
('saved value', 7.029285713588738) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 4) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 1, '-', 4, ',', 7, '-', 3) ,
('Swap gain:', -3.506983122798747) ,
([0, 4, 5, 8, 6, 7, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 4, 5, 8, 6, 7, 1, 3, 2],) ,
('saved value', 5.522302590789991) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 2, 5, 8, 6, 7, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 2, 5, 8, 6, 7, 1, 4, 3],) ,
('saved value', 4.029285713588738) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 8) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 2, '-', 8, ',', 3, '-', 5) ,
('Swap gain:', 1.477697409210009) ,
([0, 3, 8, 5, 6, 7, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 5, 6, 7, 1, 4, 2],) ,
('saved value', 10.506983122798747) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 6) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -3.522302590789991) ,
([0, 3, 6, 8, 5, 7, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 8, 5, 7, 1, 4, 2],) ,
('saved value', 5.506983122798747) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 7) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([0, 3, 7, 8, 6, 5, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 8, 6, 5, 1, 4, 2],) ,
('saved value', 6.506983122798747) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 1) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 2, '-', 1, ',', 6, '-', 5) ,
('Swap gain:', -0.015319467991243618) ,
([0, 3, 1, 8, 6, 7, 5, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 8, 6, 7, 5, 4, 2],) ,
('saved value', 9.013966245597494) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 4) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 2, '-', 4, ',', 7, '-', 5) ,
('Swap gain:', 0.9707142864112618) ,
([0, 3, 4, 8, 6, 7, 1, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 8, 6, 7, 1, 5, 2],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 5, ',', 8, '-', 2) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 3, 2, 8, 6, 7, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 8, 6, 7, 1, 4, 5],) ,
('saved value', 9.029285713588738) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 8, ',', 4, '-', 6) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 8) ,
('Swap gain:', -3.0) ,
([0, 3, 5, 6, 8, 7, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 6, 8, 7, 1, 4, 2],) ,
('saved value', 6.029285713588738) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 8, ',', 5, '-', 7) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 8) ,
('Swap gain:', -2.0) ,
([0, 3, 5, 7, 6, 8, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 7, 6, 8, 1, 4, 2],) ,
('saved value', 7.029285713588738) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 8, ',', 6, '-', 1) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 3, '-', 1, ',', 6, '-', 8) ,
('Swap gain:', 2.0) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('saved value', 11.029285713588738) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 8, ',', 7, '-', 4) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 3, '-', 4, ',', 7, '-', 8) ,
('Swap gain:', 0.015319467991243618) ,
([0, 3, 5, 4, 6, 7, 1, 8, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 1, 8, 2],) ,
('saved value', 9.044605181579982) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 8, ',', 8, '-', 2) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -1.0) ,
([0, 3, 5, 2, 6, 7, 1, 4, 8],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 6, 7, 1, 4, 8],) ,
('saved value', 8.029285713588738) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -3.149637525069794) ,
([0, 3, 5, 8, 7, 6, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 8, 7, 6, 1, 4, 2],) ,
('saved value', 5.879648188518944) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 1) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 4, '-', 1, ',', 6, '-', 6) ,
('Swap gain:', -2.459405863368298) ,
([0, 3, 5, 8, 1, 7, 6, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 8, 1, 7, 6, 4, 2],) ,
('saved value', 6.56987985022044) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 4) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 4, '-', 4, ',', 7, '-', 6) ,
('Swap gain:', -2.966388986167045) ,
([0, 3, 5, 8, 4, 7, 1, 6, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 8, 4, 7, 1, 6, 2],) ,
('saved value', 6.062896727421693) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -5.0) ,
([0, 3, 5, 8, 2, 7, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 8, 2, 7, 1, 4, 6],) ,
('saved value', 4.029285713588738) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 1) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 5, '-', 1, ',', 6, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 3, 5, 8, 6, 1, 7, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 8, 6, 1, 7, 4, 2],) ,
('saved value', 7.029285713588738) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 4) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 5, '-', 4, ',', 7, '-', 7) ,
('Swap gain:', -2.506983122798747) ,
([0, 3, 5, 8, 6, 4, 1, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 8, 6, 4, 1, 7, 2],) ,
('saved value', 6.522302590789991) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 5, 8, 6, 2, 1, 4, 7],) ,
('Computing match for mapping',) ,
([0, 3, 5, 8, 6, 2, 1, 4, 7],) ,
('saved value', 5.029285713588738) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 1, ',', 7, '-', 4) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 6, '-', 4, ',', 7, '-', 1) ,
('Swap gain:', 1.4930168772012529) ,
([0, 3, 5, 8, 6, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 8, 6, 7, 4, 1, 2],) ,
('saved value', 10.522302590789991) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 1, ',', 8, '-', 2) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 5, 8, 6, 7, 2, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 8, 6, 7, 2, 4, 1],) ,
('saved value', 7.029285713588738) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 4, ',', 8, '-', 2) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -1.9846805320087564) ,
([0, 3, 5, 8, 6, 7, 1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 3, 5, 8, 6, 7, 1, 2, 4],) ,
('saved value', 7.044605181579982) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 5, 8, 6, 7, 1, 4, 2]) ,
('Current mapping', [0, 3, 5, 1, 6, 7, 8, 4, 2]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 11.029285713588738) ,
('Current mapping:', [0, 3, 5, 1, 6, 7, 8, 4, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -2.7433881046255504) ,
([3, 0, 5, 1, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([3, 0, 5, 1, 6, 7, 8, 4, 2],) ,
('saved value', 8.285897608963188) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -1.522302590789991) ,
([5, 3, 0, 1, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([5, 3, 0, 1, 6, 7, 8, 4, 2],) ,
('saved value', 9.506983122798747) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 3, 5, 0, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([1, 3, 5, 0, 6, 7, 8, 4, 2],) ,
('saved value', 10.029285713588738) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 3, 5, 1, 0, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([6, 3, 5, 1, 0, 7, 8, 4, 2],) ,
('saved value', 6.029285713588738) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 3, 5, 1, 6, 0, 8, 4, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 1, 6, 0, 8, 4, 2],) ,
('saved value', 8.029285713588738) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([8, 3, 5, 1, 6, 7, 0, 4, 2],) ,
('Computing match for mapping',) ,
([8, 3, 5, 1, 6, 7, 0, 4, 2],) ,
('saved value', 8.029285713588738) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 4) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 0, '-', 4, ',', 7, '-', 0) ,
('Swap gain:', -1.5069831227987471) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('saved value', 9.522302590789991) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 2) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 3, 5, 1, 6, 7, 8, 4, 0],) ,
('Computing match for mapping',) ,
([2, 3, 5, 1, 6, 7, 8, 4, 0],) ,
('saved value', 8.029285713588738) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -3.522302590789991) ,
([0, 5, 3, 1, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 5, 3, 1, 6, 7, 8, 4, 2],) ,
('saved value', 7.506983122798747) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 1) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 3, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 6, 7, 8, 4, 2],) ,
('saved value', 9.029285713588738) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 6, 5, 1, 3, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 6, 5, 1, 3, 7, 8, 4, 2],) ,
('saved value', 5.029285713588738) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 7, 5, 1, 6, 3, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 7, 5, 1, 6, 3, 8, 4, 2],) ,
('saved value', 6.029285713588738) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 8, 5, 1, 6, 7, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 8, 5, 1, 6, 7, 3, 4, 2],) ,
('saved value', 6.029285713588738) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 4) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 1, '-', 4, ',', 7, '-', 3) ,
('Swap gain:', -3.506983122798747) ,
([0, 4, 5, 1, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([0, 4, 5, 1, 6, 7, 8, 3, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 2, 5, 1, 6, 7, 8, 4, 3],) ,
('Computing match for mapping',) ,
([0, 2, 5, 1, 6, 7, 8, 4, 3],) ,
('saved value', 6.029285713588738) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 1) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 5) ,
('Swap gain:', 1.9846805320087562) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('saved value', 13.013966245597494) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 6) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -4.522302590789991) ,
([0, 3, 6, 1, 5, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 1, 5, 7, 8, 4, 2],) ,
('saved value', 6.506983122798747) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 7) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([0, 3, 7, 1, 6, 5, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 1, 6, 5, 8, 4, 2],) ,
('saved value', 8.506983122798747) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 8) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([0, 3, 8, 1, 6, 7, 5, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 1, 6, 7, 5, 4, 2],) ,
('saved value', 8.506983122798747) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 4) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 2, '-', 4, ',', 7, '-', 5) ,
('Swap gain:', 0.9707142864112619) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 5, ',', 8, '-', 2) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 3, 2, 1, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 6, 7, 8, 4, 5],) ,
('saved value', 11.029285713588738) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 6) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -3.459405863368298) ,
([0, 3, 5, 6, 1, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 6, 1, 7, 8, 4, 2],) ,
('saved value', 7.56987985022044) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 7) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 5, 7, 6, 1, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 7, 6, 1, 8, 4, 2],) ,
('saved value', 9.029285713588738) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 8) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 8, 6, 7, 1, 4, 2],) ,
('saved value', 9.029285713588738) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 4) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 3, '-', 4, ',', 7, '-', 1) ,
('Swap gain:', 2.015319467991244) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('saved value', 13.044605181579982) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 2) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 3, 5, 2, 6, 7, 8, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 6, 7, 8, 4, 1],) ,
('saved value', 10.029285713588738) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4.149637525069794) ,
([0, 3, 5, 1, 7, 6, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 7, 6, 8, 4, 2],) ,
('saved value', 6.879648188518944) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5.0) ,
([0, 3, 5, 1, 8, 7, 6, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 8, 7, 6, 4, 2],) ,
('saved value', 6.029285713588738) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 4) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 4, '-', 4, ',', 7, '-', 6) ,
('Swap gain:', -3.966388986167045) ,
([0, 3, 5, 1, 4, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 4, 7, 8, 6, 2],) ,
('saved value', 7.062896727421693) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -6.0) ,
([0, 3, 5, 1, 2, 7, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 2, 7, 8, 4, 6],) ,
('saved value', 5.029285713588738) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 5, 1, 6, 8, 7, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 6, 8, 7, 4, 2],) ,
('saved value', 7.029285713588738) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 4) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 5, '-', 4, ',', 7, '-', 7) ,
('Swap gain:', -2.506983122798747) ,
([0, 3, 5, 1, 6, 4, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 6, 4, 8, 7, 2],) ,
('saved value', 8.522302590789991) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 5, 1, 6, 2, 8, 4, 7],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 6, 2, 8, 4, 7],) ,
('saved value', 7.029285713588738) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 4) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 6, '-', 4, ',', 7, '-', 8) ,
('Swap gain:', -2.506983122798747) ,
([0, 3, 5, 1, 6, 7, 4, 8, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 6, 7, 4, 8, 2],) ,
('saved value', 8.522302590789991) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -4.0) ,
([0, 3, 5, 1, 6, 7, 2, 4, 8],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 6, 7, 2, 4, 8],) ,
('saved value', 7.029285713588738) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 4, ',', 8, '-', 2) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -1.9846805320087564) ,
([0, 3, 5, 1, 6, 7, 8, 2, 4],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 6, 7, 8, 2, 4],) ,
('saved value', 9.044605181579982) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 5, 1, 6, 7, 8, 4, 2]) ,
('Current mapping', [0, 3, 5, 4, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 2.015319467991244) ,
('Update triple match number to:', 13.044605181579982) ,
('Current mapping:', [0, 3, 5, 4, 6, 7, 8, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -2.7433881046255504) ,
([3, 0, 5, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 5, 4, 6, 7, 8, 1, 2],) ,
('saved value', 10.301217076954432) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -1.522302590789991) ,
([5, 3, 0, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 0, 4, 6, 7, 8, 1, 2],) ,
('saved value', 11.522302590789991) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -1.522302590789991) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('saved value', 11.522302590789991) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 3, 5, 4, 0, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 5, 4, 0, 7, 8, 1, 2],) ,
('saved value', 8.044605181579982) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 3, 5, 4, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 4, 6, 0, 8, 1, 2],) ,
('saved value', 10.044605181579982) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([8, 3, 5, 4, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 5, 4, 6, 7, 0, 1, 2],) ,
('saved value', 10.044605181579982) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 1) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 3, 5, 4, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 5, 4, 6, 7, 8, 0, 2],) ,
('saved value', 10.044605181579982) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 3, 5, 4, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 5, 4, 6, 7, 8, 1, 0],) ,
('saved value', 9.044605181579982) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -3.522302590789991) ,
([0, 5, 3, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 6, 7, 8, 1, 2],) ,
('saved value', 9.522302590789991) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 4) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -3.522302590789991) ,
([0, 4, 5, 3, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 5, 3, 6, 7, 8, 1, 2],) ,
('saved value', 9.522302590789991) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 6, 5, 4, 3, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 5, 4, 3, 7, 8, 1, 2],) ,
('saved value', 7.044605181579982) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 7, 5, 4, 6, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 5, 4, 6, 3, 8, 1, 2],) ,
('saved value', 8.044605181579982) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 8, 5, 4, 6, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 8, 5, 4, 6, 7, 3, 1, 2],) ,
('saved value', 8.044605181579982) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 5, 4, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 6, 7, 8, 3, 2],) ,
('saved value', 9.044605181579982) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 2, 5, 4, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 6, 7, 8, 1, 3],) ,
('saved value', 7.044605181579982) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 4) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', 3.955394818420018) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 17.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 6) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -4.522302590789991) ,
([0, 3, 6, 4, 5, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 4, 5, 7, 8, 1, 2],) ,
('saved value', 8.522302590789991) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 7) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([0, 3, 7, 4, 6, 5, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 6, 5, 8, 1, 2],) ,
('saved value', 10.522302590789991) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 8) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([0, 3, 8, 4, 6, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 4, 6, 7, 5, 1, 2],) ,
('saved value', 10.522302590789991) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 1) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -2.015319467991244) ,
([0, 3, 1, 4, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 6, 7, 8, 5, 2],) ,
('saved value', 11.029285713588738) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 5, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 3, 2, 4, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 6, 7, 8, 1, 5],) ,
('saved value', 11.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 6) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -4.522302590789991) ,
([0, 3, 5, 6, 4, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 6, 4, 7, 8, 1, 2],) ,
('saved value', 8.522302590789991) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 7) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -2.522302590789991) ,
([0, 3, 5, 7, 6, 4, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 7, 6, 4, 8, 1, 2],) ,
('saved value', 10.522302590789991) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 8) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -2.522302590789991) ,
([0, 3, 5, 8, 6, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 8, 6, 7, 4, 1, 2],) ,
('saved value', 10.522302590789991) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 1) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -2.015319467991244) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('saved value', 11.029285713588738) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 4, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 3, 5, 2, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 6, 7, 8, 1, 4],) ,
('saved value', 11.044605181579982) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4.149637525069794) ,
([0, 3, 5, 4, 7, 6, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 7, 6, 8, 1, 2],) ,
('saved value', 8.894967656510188) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5.0) ,
([0, 3, 5, 4, 8, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 8, 7, 6, 1, 2],) ,
('saved value', 8.044605181579982) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -4.918811726736596) ,
([0, 3, 5, 4, 1, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 1, 7, 8, 6, 2],) ,
('saved value', 8.125793454843386) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -7.0) ,
([0, 3, 5, 4, 2, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 2, 7, 8, 1, 6],) ,
('saved value', 6.044605181579982) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 5, 4, 6, 8, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 8, 7, 1, 2],) ,
('saved value', 9.044605181579982) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 5, 4, 6, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 1, 8, 7, 2],) ,
('saved value', 9.044605181579982) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 3, 5, 4, 6, 2, 8, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 2, 8, 1, 7],) ,
('saved value', 8.044605181579982) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -4.0) ,
([0, 3, 5, 4, 6, 7, 1, 8, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 1, 8, 2],) ,
('saved value', 9.044605181579982) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -5.0) ,
([0, 3, 5, 4, 6, 7, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 2, 1, 8],) ,
('saved value', 8.044605181579982) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 5, 4, 6, 7, 8, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 8, 2, 1],) ,
('saved value', 9.044605181579982) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 5, 4, 6, 7, 8, 1, 2]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 3.955394818420018) ,
('Update triple match number to:', 17.0) ,
('Current mapping:', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -3.7433881046255504) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13.25661189537445) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('saved value', 13.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('saved value', 14.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('saved value', 14.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('saved value', 14.0) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('saved value', 13.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -7.0) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -7.0) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('saved value', 12.0) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -7.0) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -3.955394818420018) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('saved value', 13.044605181579982) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -7.0) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -3.9860337544025057) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('saved value', 13.013966245597494) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -4.955394818420018) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('saved value', 12.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -7.0) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 13.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4.149637525069794) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('saved value', 12.850362474930206) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -4.918811726736596) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('saved value', 12.081188273263404) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -7.0) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('saved value', 10.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('saved value', 13.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('saved value', 13.0) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('saved value', 12.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('saved value', 13.0) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('saved value', 12.0) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('saved value', 13.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 1.0) ,
('node_pair', (2, 5)) ,
('instance/attribute match', 0.5223025907899909) ,
('node_pair', (3, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (7, 6)) ,
('instance/attribute match', 0.5405941366317017) ,
('node_pair', (8, 8)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 2.062896727421693) ,
('Node mapping at start', [4, 3, 5, 7, 0, 1, 2, 6, 8]) ,
('Triple match number at start:', 2.062896727421693) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 3) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 4) ,
('Swap gain:', 0.0) ,
([3, 4, 5, 7, 0, 1, 2, 6, 8],) ,
('Computing match for mapping',) ,
([3, 4, 5, 7, 0, 1, 2, 6, 8],) ,
('saved value', 2.062896727421693) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 5) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 4) ,
('Swap gain:', 1.477697409210009) ,
([5, 3, 4, 7, 0, 1, 2, 6, 8],) ,
('Computing match for mapping',) ,
([5, 3, 4, 7, 0, 1, 2, 6, 8],) ,
('saved value', 3.540594136631702) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 7) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 4) ,
('Swap gain:', 0.5223025907899909) ,
([7, 3, 5, 4, 0, 1, 2, 6, 8],) ,
('Computing match for mapping',) ,
([7, 3, 5, 4, 0, 1, 2, 6, 8],) ,
('saved value', 2.585199318211684) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 0) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 0, '-', 0, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 3, 5, 7, 4, 1, 2, 6, 8],) ,
('Computing match for mapping',) ,
([0, 3, 5, 7, 4, 1, 2, 6, 8],) ,
('saved value', 3.062896727421693) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 1) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([1, 3, 5, 7, 0, 4, 2, 6, 8],) ,
('Computing match for mapping',) ,
([1, 3, 5, 7, 0, 4, 2, 6, 8],) ,
('saved value', 2.062896727421693) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 2) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 0, '-', 2, ',', 6, '-', 4) ,
('Swap gain:', 0.0) ,
([2, 3, 5, 7, 0, 1, 4, 6, 8],) ,
('Computing match for mapping',) ,
([2, 3, 5, 7, 0, 1, 4, 6, 8],) ,
('saved value', 2.062896727421693) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 6) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', -0.033611013832954506) ,
([6, 3, 5, 7, 0, 1, 2, 4, 8],) ,
('Computing match for mapping',) ,
([6, 3, 5, 7, 0, 1, 2, 4, 8],) ,
('saved value', 2.0292857135887385) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 8) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 0, '-', 8, ',', 8, '-', 4) ,
('Swap gain:', 0.5223025907899909) ,
([8, 3, 5, 7, 0, 1, 2, 6, 4],) ,
('Computing match for mapping',) ,
([8, 3, 5, 7, 0, 1, 2, 6, 4],) ,
('saved value', 2.585199318211684) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -1.522302590789991) ,
([4, 5, 3, 7, 0, 1, 2, 6, 8],) ,
('Computing match for mapping',) ,
([4, 5, 3, 7, 0, 1, 2, 6, 8],) ,
('saved value', 0.540594136631702) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 7) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 3) ,
('Swap gain:', -1.0) ,
([4, 7, 5, 3, 0, 1, 2, 6, 8],) ,
('Computing match for mapping',) ,
([4, 7, 5, 3, 0, 1, 2, 6, 8],) ,
('saved value', 1.062896727421693) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 0) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 1, '-', 0, ',', 4, '-', 3) ,
('Swap gain:', -0.7433881046255503) ,
([4, 0, 5, 7, 3, 1, 2, 6, 8],) ,
('Computing match for mapping',) ,
([4, 0, 5, 7, 3, 1, 2, 6, 8],) ,
('saved value', 1.3195086227961426) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 1) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 3) ,
('Swap gain:', -1.0) ,
([4, 1, 5, 7, 0, 3, 2, 6, 8],) ,
('Computing match for mapping',) ,
([4, 1, 5, 7, 0, 3, 2, 6, 8],) ,
('saved value', 1.062896727421693) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 2) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 1, '-', 2, ',', 6, '-', 3) ,
('Swap gain:', -1.0) ,
([4, 2, 5, 7, 0, 1, 3, 6, 8],) ,
('Computing match for mapping',) ,
([4, 2, 5, 7, 0, 1, 3, 6, 8],) ,
('saved value', 1.062896727421693) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 6) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 3) ,
('Swap gain:', -1.5405941366317017) ,
([4, 6, 5, 7, 0, 1, 2, 3, 8],) ,
('Computing match for mapping',) ,
([4, 6, 5, 7, 0, 1, 2, 3, 8],) ,
('saved value', 0.5223025907899912) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 8) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 1, '-', 8, ',', 8, '-', 3) ,
('Swap gain:', -1.0) ,
([4, 8, 5, 7, 0, 1, 2, 6, 3],) ,
('Computing match for mapping',) ,
([4, 8, 5, 7, 0, 1, 2, 6, 3],) ,
('saved value', 1.062896727421693) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 7) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 5) ,
('Swap gain:', 1.477697409210009) ,
([4, 3, 7, 5, 0, 1, 2, 6, 8],) ,
('Computing match for mapping',) ,
([4, 3, 7, 5, 0, 1, 2, 6, 8],) ,
('saved value', 3.540594136631702) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 0) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 2, '-', 0, ',', 4, '-', 5) ,
('Swap gain:', -0.5223025907899909) ,
([4, 3, 0, 7, 5, 1, 2, 6, 8],) ,
('Computing match for mapping',) ,
([4, 3, 0, 7, 5, 1, 2, 6, 8],) ,
('saved value', 1.540594136631702) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 1) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 5) ,
('Swap gain:', -0.015319467991243618) ,
([4, 3, 1, 7, 0, 5, 2, 6, 8],) ,
('Computing match for mapping',) ,
([4, 3, 1, 7, 0, 5, 2, 6, 8],) ,
('saved value', 2.047577259430449) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 2) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 2, '-', 2, ',', 6, '-', 5) ,
('Swap gain:', 0.0) ,
([4, 3, 2, 7, 0, 1, 5, 6, 8],) ,
('Computing match for mapping',) ,
([4, 3, 2, 7, 0, 1, 5, 6, 8],) ,
('saved value', 2.062896727421693) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 6) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 5) ,
('Swap gain:', -1.0628967274216925) ,
([4, 3, 6, 7, 0, 1, 2, 5, 8],) ,
('Computing match for mapping',) ,
([4, 3, 6, 7, 0, 1, 2, 5, 8],) ,
('saved value', 1.0000000000000004) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 5, ',', 8, '-', 8) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 2, '-', 8, ',', 8, '-', 5) ,
('Swap gain:', 0.47769740921000914) ,
([4, 3, 8, 7, 0, 1, 2, 6, 5],) ,
('Computing match for mapping',) ,
([4, 3, 8, 7, 0, 1, 2, 6, 5],) ,
('saved value', 2.540594136631702) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 0) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 3, '-', 0, ',', 4, '-', 7) ,
('Swap gain:', 0.42518123746510306) ,
([4, 3, 5, 0, 7, 1, 2, 6, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 7, 1, 2, 6, 8],) ,
('saved value', 2.488077964886796) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 1) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 7) ,
('Swap gain:', 1.0) ,
([4, 3, 5, 1, 0, 7, 2, 6, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 0, 7, 2, 6, 8],) ,
('saved value', 3.062896727421693) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 7, ',', 6, '-', 2) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 3, '-', 2, ',', 6, '-', 7) ,
('Swap gain:', 1.0) ,
([4, 3, 5, 2, 0, 1, 7, 6, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 0, 1, 7, 6, 8],) ,
('saved value', 3.062896727421693) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 7, ',', 7, '-', 6) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 7) ,
('Swap gain:', -0.5405941366317017) ,
([4, 3, 5, 6, 0, 1, 2, 7, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 6, 0, 1, 2, 7, 8],) ,
('saved value', 1.5223025907899912) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 7, ',', 8, '-', 8) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 3, '-', 8, ',', 8, '-', 7) ,
('Swap gain:', 0.0) ,
([4, 3, 5, 8, 0, 1, 2, 6, 7],) ,
('Computing match for mapping',) ,
([4, 3, 5, 8, 0, 1, 2, 6, 7],) ,
('saved value', 2.062896727421693) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 0, ',', 5, '-', 1) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', 0.5405941366317017) ,
([4, 3, 5, 7, 1, 0, 2, 6, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 1, 0, 2, 6, 8],) ,
('saved value', 2.603490864053395) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 0, ',', 6, '-', 2) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 4, '-', 2, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([4, 3, 5, 7, 2, 1, 0, 6, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 2, 1, 0, 6, 8],) ,
('saved value', 2.062896727421693) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 0, ',', 7, '-', 6) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', 1.4594058633682983) ,
([4, 3, 5, 7, 6, 1, 2, 0, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 6, 1, 2, 0, 8],) ,
('saved value', 3.522302590789991) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 0, ',', 8, '-', 8) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 4, '-', 8, ',', 8, '-', 0) ,
('Swap gain:', 0.0) ,
([4, 3, 5, 7, 8, 1, 2, 6, 0],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 8, 1, 2, 6, 0],) ,
('saved value', 2.062896727421693) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 1, ',', 6, '-', 2) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 5, '-', 2, ',', 6, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 3, 5, 7, 0, 2, 1, 6, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 0, 2, 1, 6, 8],) ,
('saved value', 2.062896727421693) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 1, ',', 7, '-', 6) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 1) ,
('Swap gain:', 0.8845871008334012) ,
([4, 3, 5, 7, 0, 6, 2, 1, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 0, 6, 2, 1, 8],) ,
('saved value', 2.947483828255094) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 1, ',', 8, '-', 8) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 5, '-', 8, ',', 8, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 3, 5, 7, 0, 8, 2, 6, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 0, 8, 2, 6, 1],) ,
('saved value', 2.062896727421693) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 2, ',', 7, '-', 6) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', 2) ,
('Swap gain:', -0.5405941366317017) ,
([4, 3, 5, 7, 0, 1, 6, 2, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 0, 1, 6, 2, 8],) ,
('saved value', 1.5223025907899912) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 2, ',', 8, '-', 8) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 6, '-', 8, ',', 8, '-', 2) ,
('Swap gain:', 3.0) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('saved value', 5.062896727421693) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 6, ',', 8, '-', 8) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('After swapping:', 7, '-', 8, ',', 8, '-', 6) ,
('Swap gain:', -0.5405941366317017) ,
([4, 3, 5, 7, 0, 1, 2, 8, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 0, 1, 2, 8, 6],) ,
('saved value', 1.5223025907899912) ,
('Use swap gain',) ,
('Original mapping', [4, 3, 5, 7, 0, 1, 2, 6, 8]) ,
('Current mapping', [4, 3, 5, 7, 0, 1, 8, 6, 2]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 5.062896727421693) ,
('Current mapping:', [4, 3, 5, 7, 0, 1, 8, 6, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 3) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 4) ,
('Swap gain:', 0.0) ,
([3, 4, 5, 7, 0, 1, 8, 6, 2],) ,
('Computing match for mapping',) ,
([3, 4, 5, 7, 0, 1, 8, 6, 2],) ,
('saved value', 5.062896727421693) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 5) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 4) ,
('Swap gain:', 1.477697409210009) ,
([5, 3, 4, 7, 0, 1, 8, 6, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 7, 0, 1, 8, 6, 2],) ,
('saved value', 6.540594136631702) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 7) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 4) ,
('Swap gain:', 0.5223025907899909) ,
([7, 3, 5, 4, 0, 1, 8, 6, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 4, 0, 1, 8, 6, 2],) ,
('saved value', 5.585199318211684) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 0) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 0, '-', 0, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 3, 5, 7, 4, 1, 8, 6, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 7, 4, 1, 8, 6, 2],) ,
('saved value', 6.062896727421693) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 1) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([1, 3, 5, 7, 0, 4, 8, 6, 2],) ,
('Computing match for mapping',) ,
([1, 3, 5, 7, 0, 4, 8, 6, 2],) ,
('saved value', 5.062896727421693) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 8) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -1.0) ,
([8, 3, 5, 7, 0, 1, 4, 6, 2],) ,
('Computing match for mapping',) ,
([8, 3, 5, 7, 0, 1, 4, 6, 2],) ,
('saved value', 4.062896727421693) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 6) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', -0.033611013832954506) ,
([6, 3, 5, 7, 0, 1, 8, 4, 2],) ,
('Computing match for mapping',) ,
([6, 3, 5, 7, 0, 1, 8, 4, 2],) ,
('saved value', 5.029285713588738) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 2) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -1.477697409210009) ,
([2, 3, 5, 7, 0, 1, 8, 6, 4],) ,
('Computing match for mapping',) ,
([2, 3, 5, 7, 0, 1, 8, 6, 4],) ,
('saved value', 3.585199318211684) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -1.522302590789991) ,
([4, 5, 3, 7, 0, 1, 8, 6, 2],) ,
('Computing match for mapping',) ,
([4, 5, 3, 7, 0, 1, 8, 6, 2],) ,
('saved value', 3.540594136631702) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 7) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 3) ,
('Swap gain:', -1.0) ,
([4, 7, 5, 3, 0, 1, 8, 6, 2],) ,
('Computing match for mapping',) ,
([4, 7, 5, 3, 0, 1, 8, 6, 2],) ,
('saved value', 4.062896727421693) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 0) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 1, '-', 0, ',', 4, '-', 3) ,
('Swap gain:', -0.7433881046255503) ,
([4, 0, 5, 7, 3, 1, 8, 6, 2],) ,
('Computing match for mapping',) ,
([4, 0, 5, 7, 3, 1, 8, 6, 2],) ,
('saved value', 4.319508622796143) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 1) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 3) ,
('Swap gain:', -1.0) ,
([4, 1, 5, 7, 0, 3, 8, 6, 2],) ,
('Computing match for mapping',) ,
([4, 1, 5, 7, 0, 3, 8, 6, 2],) ,
('saved value', 4.062896727421693) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -2.0) ,
([4, 8, 5, 7, 0, 1, 3, 6, 2],) ,
('Computing match for mapping',) ,
([4, 8, 5, 7, 0, 1, 3, 6, 2],) ,
('saved value', 3.062896727421693) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 6) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 3) ,
('Swap gain:', -1.5405941366317017) ,
([4, 6, 5, 7, 0, 1, 8, 3, 2],) ,
('Computing match for mapping',) ,
([4, 6, 5, 7, 0, 1, 8, 3, 2],) ,
('saved value', 3.522302590789991) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -3.0) ,
([4, 2, 5, 7, 0, 1, 8, 6, 3],) ,
('Computing match for mapping',) ,
([4, 2, 5, 7, 0, 1, 8, 6, 3],) ,
('saved value', 2.062896727421693) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 7) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 5) ,
('Swap gain:', 1.477697409210009) ,
([4, 3, 7, 5, 0, 1, 8, 6, 2],) ,
('Computing match for mapping',) ,
([4, 3, 7, 5, 0, 1, 8, 6, 2],) ,
('saved value', 6.540594136631702) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 0) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 2, '-', 0, ',', 4, '-', 5) ,
('Swap gain:', -0.5223025907899909) ,
([4, 3, 0, 7, 5, 1, 8, 6, 2],) ,
('Computing match for mapping',) ,
([4, 3, 0, 7, 5, 1, 8, 6, 2],) ,
('saved value', 4.540594136631702) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 1) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 5) ,
('Swap gain:', -0.015319467991243618) ,
([4, 3, 1, 7, 0, 5, 8, 6, 2],) ,
('Computing match for mapping',) ,
([4, 3, 1, 7, 0, 5, 8, 6, 2],) ,
('saved value', 5.047577259430449) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 8) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -1.522302590789991) ,
([4, 3, 8, 7, 0, 1, 5, 6, 2],) ,
('Computing match for mapping',) ,
([4, 3, 8, 7, 0, 1, 5, 6, 2],) ,
('saved value', 3.540594136631702) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 6) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 5) ,
('Swap gain:', -1.0628967274216925) ,
([4, 3, 6, 7, 0, 1, 8, 5, 2],) ,
('Computing match for mapping',) ,
([4, 3, 6, 7, 0, 1, 8, 5, 2],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 5, ',', 8, '-', 2) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -1.0) ,
([4, 3, 2, 7, 0, 1, 8, 6, 5],) ,
('Computing match for mapping',) ,
([4, 3, 2, 7, 0, 1, 8, 6, 5],) ,
('saved value', 4.062896727421693) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 0) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 3, '-', 0, ',', 4, '-', 7) ,
('Swap gain:', 0.42518123746510306) ,
([4, 3, 5, 0, 7, 1, 8, 6, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 7, 1, 8, 6, 2],) ,
('saved value', 5.488077964886796) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 1) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 7) ,
('Swap gain:', 1.0) ,
([4, 3, 5, 1, 0, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 0, 7, 8, 6, 2],) ,
('saved value', 6.062896727421693) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 7, ',', 6, '-', 8) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -1.0) ,
([4, 3, 5, 8, 0, 1, 7, 6, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 8, 0, 1, 7, 6, 2],) ,
('saved value', 4.062896727421693) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 7, ',', 7, '-', 6) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 7) ,
('Swap gain:', -0.5405941366317017) ,
([4, 3, 5, 6, 0, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 6, 0, 1, 8, 7, 2],) ,
('saved value', 4.522302590789991) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 7, ',', 8, '-', 2) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -1.0) ,
([4, 3, 5, 2, 0, 1, 8, 6, 7],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 0, 1, 8, 6, 7],) ,
('saved value', 4.062896727421693) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 0, ',', 5, '-', 1) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', 0.5405941366317017) ,
([4, 3, 5, 7, 1, 0, 8, 6, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 1, 0, 8, 6, 2],) ,
('saved value', 5.603490864053395) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 0, ',', 6, '-', 8) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -1.0) ,
([4, 3, 5, 7, 8, 1, 0, 6, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 8, 1, 0, 6, 2],) ,
('saved value', 4.062896727421693) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 0, ',', 7, '-', 6) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', 2.459405863368298) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 0, ',', 8, '-', 2) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 7, 2, 1, 8, 6, 0],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 2, 1, 8, 6, 0],) ,
('saved value', 3.062896727421693) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 1, ',', 6, '-', 8) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -1.0) ,
([4, 3, 5, 7, 0, 8, 1, 6, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 0, 8, 1, 6, 2],) ,
('saved value', 4.062896727421693) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 1, ',', 7, '-', 6) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 1) ,
('Swap gain:', 1.8845871008334012) ,
([4, 3, 5, 7, 0, 6, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 0, 6, 8, 1, 2],) ,
('saved value', 6.947483828255094) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 1, ',', 8, '-', 2) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 7, 0, 2, 8, 6, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 0, 2, 8, 6, 1],) ,
('saved value', 3.062896727421693) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 6) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', 8) ,
('Swap gain:', -1.5405941366317017) ,
([4, 3, 5, 7, 0, 1, 6, 8, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 0, 1, 6, 8, 2],) ,
('saved value', 3.522302590789991) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -3.0) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 0, 1, 2, 6, 8],) ,
('saved value', 2.062896727421693) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 6, ',', 8, '-', 2) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -2.540594136631702) ,
([4, 3, 5, 7, 0, 1, 8, 2, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 0, 1, 8, 2, 6],) ,
('saved value', 2.522302590789991) ,
('Use swap gain',) ,
('Original mapping', [4, 3, 5, 7, 0, 1, 8, 6, 2]) ,
('Current mapping', [4, 3, 5, 7, 6, 1, 8, 0, 2]) ,
('Gain after the hill-climbing', 2.459405863368298) ,
('Update triple match number to:', 7.522302590789991) ,
('Current mapping:', [4, 3, 5, 7, 6, 1, 8, 0, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 3) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 4) ,
('Swap gain:', -1.0) ,
([3, 4, 5, 7, 6, 1, 8, 0, 2],) ,
('Computing match for mapping',) ,
([3, 4, 5, 7, 6, 1, 8, 0, 2],) ,
('saved value', 6.522302590789991) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 5) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 4) ,
('Swap gain:', 1.477697409210009) ,
([5, 3, 4, 7, 6, 1, 8, 0, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 7, 6, 1, 8, 0, 2],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 7) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 4) ,
('Swap gain:', 0.5223025907899909) ,
([7, 3, 5, 4, 6, 1, 8, 0, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 4, 6, 1, 8, 0, 2],) ,
('saved value', 8.044605181579982) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 6) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -3.0) ,
([6, 3, 5, 7, 4, 1, 8, 0, 2],) ,
('Computing match for mapping',) ,
([6, 3, 5, 7, 4, 1, 8, 0, 2],) ,
('saved value', 4.522302590789991) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 1) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([1, 3, 5, 7, 6, 4, 8, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 5, 7, 6, 4, 8, 0, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 8) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([8, 3, 5, 7, 6, 1, 4, 0, 2],) ,
('Computing match for mapping',) ,
([8, 3, 5, 7, 6, 1, 4, 0, 2],) ,
('saved value', 5.522302590789991) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 0) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 0, '-', 0, ',', 7, '-', 4) ,
('Swap gain:', 1.5069831227987471) ,
([0, 3, 5, 7, 6, 1, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 7, 6, 1, 8, 4, 2],) ,
('saved value', 9.029285713588738) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 2) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -1.477697409210009) ,
([2, 3, 5, 7, 6, 1, 8, 0, 4],) ,
('Computing match for mapping',) ,
([2, 3, 5, 7, 6, 1, 8, 0, 4],) ,
('saved value', 6.044605181579982) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -2.522302590789991) ,
([4, 5, 3, 7, 6, 1, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 5, 3, 7, 6, 1, 8, 0, 2],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 7) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 3) ,
('Swap gain:', -2.0) ,
([4, 7, 5, 3, 6, 1, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 7, 5, 3, 6, 1, 8, 0, 2],) ,
('saved value', 5.522302590789991) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 6, 5, 7, 3, 1, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 6, 5, 7, 3, 1, 8, 0, 2],) ,
('saved value', 3.522302590789991) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 1) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 3) ,
('Swap gain:', -2.0) ,
([4, 1, 5, 7, 6, 3, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 1, 5, 7, 6, 3, 8, 0, 2],) ,
('saved value', 5.522302590789991) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 8, 5, 7, 6, 1, 3, 0, 2],) ,
('Computing match for mapping',) ,
([4, 8, 5, 7, 6, 1, 3, 0, 2],) ,
('saved value', 3.522302590789991) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 0) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 1, '-', 0, ',', 7, '-', 3) ,
('Swap gain:', -1.7433881046255504) ,
([4, 0, 5, 7, 6, 1, 8, 3, 2],) ,
('Computing match for mapping',) ,
([4, 0, 5, 7, 6, 1, 8, 3, 2],) ,
('saved value', 5.778914486164441) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 2, 5, 7, 6, 1, 8, 0, 3],) ,
('Computing match for mapping',) ,
([4, 2, 5, 7, 6, 1, 8, 0, 3],) ,
('saved value', 3.522302590789991) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 7) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 5) ,
('Swap gain:', 1.477697409210009) ,
([4, 3, 7, 5, 6, 1, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 7, 5, 6, 1, 8, 0, 2],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 6) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -3.522302590789991) ,
([4, 3, 6, 7, 5, 1, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 6, 7, 5, 1, 8, 0, 2],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 1) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 5) ,
('Swap gain:', -0.015319467991243618) ,
([4, 3, 1, 7, 6, 5, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 1, 7, 6, 5, 8, 0, 2],) ,
('saved value', 7.506983122798747) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 8) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([4, 3, 8, 7, 6, 1, 5, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 8, 7, 6, 1, 5, 0, 2],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 0) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 2, '-', 0, ',', 7, '-', 5) ,
('Swap gain:', -0.5223025907899909) ,
([4, 3, 0, 7, 6, 1, 8, 5, 2],) ,
('Computing match for mapping',) ,
([4, 3, 0, 7, 6, 1, 8, 5, 2],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 5, ',', 8, '-', 2) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -1.0) ,
([4, 3, 2, 7, 6, 1, 8, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 2, 7, 6, 1, 8, 0, 5],) ,
('saved value', 6.522302590789991) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 6) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 7) ,
('Swap gain:', -2.574818762534897) ,
([4, 3, 5, 6, 7, 1, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 6, 7, 1, 8, 0, 2],) ,
('saved value', 4.947483828255094) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 1) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 7) ,
('Swap gain:', 2.0) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('saved value', 9.522302590789991) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 7, ',', 6, '-', 8) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 8, 6, 1, 7, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 8, 6, 1, 7, 0, 2],) ,
('saved value', 5.522302590789991) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 7, ',', 7, '-', 0) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 3, '-', 0, ',', 7, '-', 7) ,
('Swap gain:', 0.0) ,
([4, 3, 5, 0, 6, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 6, 1, 8, 7, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 7, ',', 8, '-', 2) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -1.0) ,
([4, 3, 5, 2, 6, 1, 8, 0, 7],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 1, 8, 0, 7],) ,
('saved value', 6.522302590789991) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 1) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 6) ,
('Swap gain:', -2.034224625903195) ,
([4, 3, 5, 7, 1, 6, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 1, 6, 8, 0, 2],) ,
('saved value', 5.488077964886796) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -4.0) ,
([4, 3, 5, 7, 8, 1, 6, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 8, 1, 6, 0, 2],) ,
('saved value', 3.522302590789991) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 0) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 4, '-', 0, ',', 7, '-', 6) ,
('Swap gain:', -2.459405863368298) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 0, 1, 8, 6, 2],) ,
('saved value', 5.062896727421693) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -5.0) ,
([4, 3, 5, 7, 2, 1, 8, 0, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 2, 1, 8, 0, 6],) ,
('saved value', 2.522302590789991) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 1, ',', 6, '-', 8) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 7, 6, 8, 1, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 6, 8, 1, 0, 2],) ,
('saved value', 5.522302590789991) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 1, ',', 7, '-', 0) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 5, '-', 0, ',', 7, '-', 1) ,
('Swap gain:', 2.0) ,
([4, 3, 5, 7, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 6, 0, 8, 1, 2],) ,
('saved value', 9.522302590789991) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 1, ',', 8, '-', 2) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 7, 6, 2, 8, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 6, 2, 8, 0, 1],) ,
('saved value', 5.522302590789991) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 0) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 6, '-', 0, ',', 7, '-', 8) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 7, 6, 1, 0, 8, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 6, 1, 0, 8, 2],) ,
('saved value', 5.522302590789991) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -4.0) ,
([4, 3, 5, 7, 6, 1, 2, 0, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 6, 1, 2, 0, 8],) ,
('saved value', 3.522302590789991) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 0, ',', 8, '-', 2) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 7, 6, 1, 8, 2, 0],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 6, 1, 8, 2, 0],) ,
('saved value', 5.522302590789991) ,
('Use swap gain',) ,
('Original mapping', [4, 3, 5, 7, 6, 1, 8, 0, 2]) ,
('Current mapping', [4, 3, 5, 1, 6, 7, 8, 0, 2]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 9.522302590789991) ,
('Current mapping:', [4, 3, 5, 1, 6, 7, 8, 0, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 3) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 4) ,
('Swap gain:', -1.0) ,
([3, 4, 5, 1, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([3, 4, 5, 1, 6, 7, 8, 0, 2],) ,
('saved value', 8.522302590789991) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 5) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 4) ,
('Swap gain:', 1.477697409210009) ,
([5, 3, 4, 1, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 1, 6, 7, 8, 0, 2],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 1) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', 0.522302590789991) ,
([1, 3, 5, 4, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 5, 4, 6, 7, 8, 0, 2],) ,
('saved value', 10.044605181579982) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 6) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([6, 3, 5, 1, 4, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([6, 3, 5, 1, 4, 7, 8, 0, 2],) ,
('saved value', 5.522302590789991) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 7) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([7, 3, 5, 1, 6, 4, 8, 0, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 1, 6, 4, 8, 0, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 8) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([8, 3, 5, 1, 6, 7, 4, 0, 2],) ,
('Computing match for mapping',) ,
([8, 3, 5, 1, 6, 7, 4, 0, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 0) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 0, '-', 0, ',', 7, '-', 4) ,
('Swap gain:', 1.5069831227987471) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('saved value', 11.029285713588738) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 2) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -1.477697409210009) ,
([2, 3, 5, 1, 6, 7, 8, 0, 4],) ,
('Computing match for mapping',) ,
([2, 3, 5, 1, 6, 7, 8, 0, 4],) ,
('saved value', 8.044605181579982) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -2.522302590789991) ,
([4, 5, 3, 1, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 5, 3, 1, 6, 7, 8, 0, 2],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 1) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', -2.0) ,
([4, 1, 5, 3, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 1, 5, 3, 6, 7, 8, 0, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -5.0) ,
([4, 6, 5, 1, 3, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 6, 5, 1, 3, 7, 8, 0, 2],) ,
('saved value', 4.522302590789991) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 7, 5, 1, 6, 3, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 7, 5, 1, 6, 3, 8, 0, 2],) ,
('saved value', 5.522302590789991) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 8, 5, 1, 6, 7, 3, 0, 2],) ,
('Computing match for mapping',) ,
([4, 8, 5, 1, 6, 7, 3, 0, 2],) ,
('saved value', 5.522302590789991) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 0) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 1, '-', 0, ',', 7, '-', 3) ,
('Swap gain:', -1.7433881046255504) ,
([4, 0, 5, 1, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([4, 0, 5, 1, 6, 7, 8, 3, 2],) ,
('saved value', 7.778914486164441) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 2, 5, 1, 6, 7, 8, 0, 3],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 6, 7, 8, 0, 3],) ,
('saved value', 5.522302590789991) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 1) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 5) ,
('Swap gain:', 1.9846805320087562) ,
([4, 3, 1, 5, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 1, 5, 6, 7, 8, 0, 2],) ,
('saved value', 11.506983122798747) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 6) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -4.522302590789991) ,
([4, 3, 6, 1, 5, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 6, 1, 5, 7, 8, 0, 2],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 7) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([4, 3, 7, 1, 6, 5, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 7, 1, 6, 5, 8, 0, 2],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 8) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([4, 3, 8, 1, 6, 7, 5, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 8, 1, 6, 7, 5, 0, 2],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 0) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 2, '-', 0, ',', 7, '-', 5) ,
('Swap gain:', -0.5223025907899909) ,
([4, 3, 0, 1, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([4, 3, 0, 1, 6, 7, 8, 5, 2],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 5, ',', 8, '-', 2) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -1.0) ,
([4, 3, 2, 1, 6, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 6, 7, 8, 0, 5],) ,
('saved value', 8.522302590789991) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 6) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -3.459405863368298) ,
([4, 3, 5, 6, 1, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 6, 1, 7, 8, 0, 2],) ,
('saved value', 6.062896727421693) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 7) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 6, 1, 8, 0, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 8) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 8, 6, 7, 1, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 8, 6, 7, 1, 0, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 0) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 3, '-', 0, ',', 7, '-', 1) ,
('Swap gain:', 2.0) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('saved value', 11.522302590789991) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 2) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -1.0) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('saved value', 8.522302590789991) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4.149637525069794) ,
([4, 3, 5, 1, 7, 6, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 7, 6, 8, 0, 2],) ,
('saved value', 5.372665065720197) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5.0) ,
([4, 3, 5, 1, 8, 7, 6, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 8, 7, 6, 0, 2],) ,
('saved value', 4.522302590789991) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 0) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 4, '-', 0, ',', 7, '-', 6) ,
('Swap gain:', -3.459405863368298) ,
([4, 3, 5, 1, 0, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 0, 7, 8, 6, 2],) ,
('saved value', 6.062896727421693) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -6.0) ,
([4, 3, 5, 1, 2, 7, 8, 0, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 2, 7, 8, 0, 6],) ,
('saved value', 3.522302590789991) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([4, 3, 5, 1, 6, 8, 7, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 6, 8, 7, 0, 2],) ,
('saved value', 5.522302590789991) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 0) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 5, '-', 0, ',', 7, '-', 7) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 1, 6, 0, 8, 7, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 6, 0, 8, 7, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -4.0) ,
([4, 3, 5, 1, 6, 2, 8, 0, 7],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 6, 2, 8, 0, 7],) ,
('saved value', 5.522302590789991) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 0) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 6, '-', 0, ',', 7, '-', 8) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 1, 6, 7, 0, 8, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 6, 7, 0, 8, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -4.0) ,
([4, 3, 5, 1, 6, 7, 2, 0, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 6, 7, 2, 0, 8],) ,
('saved value', 5.522302590789991) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 0, ',', 8, '-', 2) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 1, 6, 7, 8, 2, 0],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 6, 7, 8, 2, 0],) ,
('saved value', 7.522302590789991) ,
('Use swap gain',) ,
('Original mapping', [4, 3, 5, 1, 6, 7, 8, 0, 2]) ,
('Current mapping', [4, 3, 5, 0, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 11.522302590789991) ,
('Current mapping:', [4, 3, 5, 0, 6, 7, 8, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 3) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 4) ,
('Swap gain:', -1.0) ,
([3, 4, 5, 0, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([3, 4, 5, 0, 6, 7, 8, 1, 2],) ,
('saved value', 10.522302590789991) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 5) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 4) ,
('Swap gain:', 1.477697409210009) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('saved value', 13.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 0) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 4) ,
('Swap gain:', 1.522302590789991) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('saved value', 13.044605181579982) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 6) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([6, 3, 5, 0, 4, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 5, 0, 4, 7, 8, 1, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 7) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([7, 3, 5, 0, 6, 4, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 0, 6, 4, 8, 1, 2],) ,
('saved value', 9.522302590789991) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 8) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([8, 3, 5, 0, 6, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 5, 0, 6, 7, 4, 1, 2],) ,
('saved value', 9.522302590789991) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 1) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -1.4930168772012529) ,
([1, 3, 5, 0, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([1, 3, 5, 0, 6, 7, 8, 4, 2],) ,
('saved value', 10.029285713588738) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 2) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -2.477697409210009) ,
([2, 3, 5, 0, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([2, 3, 5, 0, 6, 7, 8, 1, 4],) ,
('saved value', 9.044605181579982) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -2.522302590789991) ,
([4, 5, 3, 0, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 5, 3, 0, 6, 7, 8, 1, 2],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 0) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', -1.7433881046255504) ,
([4, 0, 5, 3, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 0, 5, 3, 6, 7, 8, 1, 2],) ,
('saved value', 9.77891448616444) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -5.0) ,
([4, 6, 5, 0, 3, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 6, 5, 0, 3, 7, 8, 1, 2],) ,
('saved value', 6.522302590789991) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 7, 5, 0, 6, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 7, 5, 0, 6, 3, 8, 1, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 8, 5, 0, 6, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([4, 8, 5, 0, 6, 7, 3, 1, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 1, 5, 0, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([4, 1, 5, 0, 6, 7, 8, 3, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -5.0) ,
([4, 2, 5, 0, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([4, 2, 5, 0, 6, 7, 8, 1, 3],) ,
('saved value', 6.522302590789991) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 0) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 5) ,
('Swap gain:', 1.477697409210009) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 6) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -4.522302590789991) ,
([4, 3, 6, 0, 5, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 6, 0, 5, 7, 8, 1, 2],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 7) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([4, 3, 7, 0, 6, 5, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 7, 0, 6, 5, 8, 1, 2],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 8) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([4, 3, 8, 0, 6, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 8, 0, 6, 7, 5, 1, 2],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 1) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -2.015319467991244) ,
([4, 3, 1, 0, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([4, 3, 1, 0, 6, 7, 8, 5, 2],) ,
('saved value', 9.506983122798747) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 5, ',', 8, '-', 2) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -2.0) ,
([4, 3, 2, 0, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 2, 0, 6, 7, 8, 1, 5],) ,
('saved value', 9.522302590789991) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', 6) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 3, 5, 6, 0, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 6, 0, 7, 8, 1, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 0, ',', 5, '-', 7) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 7, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 6, 0, 8, 1, 2],) ,
('saved value', 9.522302590789991) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 0, ',', 6, '-', 8) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 8, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 8, 6, 7, 0, 1, 2],) ,
('saved value', 9.522302590789991) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 0, ',', 7, '-', 1) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('saved value', 9.522302590789991) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 0, ',', 8, '-', 2) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 2, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 7, 8, 1, 0],) ,
('saved value', 9.522302590789991) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4.149637525069794) ,
([4, 3, 5, 0, 7, 6, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 7, 6, 8, 1, 2],) ,
('saved value', 7.372665065720197) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5.0) ,
([4, 3, 5, 0, 8, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 8, 7, 6, 1, 2],) ,
('saved value', 6.522302590789991) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -4.918811726736596) ,
([4, 3, 5, 0, 1, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 1, 7, 8, 6, 2],) ,
('saved value', 6.603490864053395) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -7.0) ,
([4, 3, 5, 0, 2, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 2, 7, 8, 1, 6],) ,
('saved value', 4.522302590789991) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([4, 3, 5, 0, 6, 8, 7, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 6, 8, 7, 1, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -4.0) ,
([4, 3, 5, 0, 6, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 6, 1, 8, 7, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -5.0) ,
([4, 3, 5, 0, 6, 2, 8, 1, 7],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 6, 2, 8, 1, 7],) ,
('saved value', 6.522302590789991) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -4.0) ,
([4, 3, 5, 0, 6, 7, 1, 8, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 6, 7, 1, 8, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -5.0) ,
([4, 3, 5, 0, 6, 7, 2, 1, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 6, 7, 2, 1, 8],) ,
('saved value', 6.522302590789991) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4.0) ,
([4, 3, 5, 0, 6, 7, 8, 2, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 6, 7, 8, 2, 1],) ,
('saved value', 7.522302590789991) ,
('Use swap gain',) ,
('Original mapping', [4, 3, 5, 0, 6, 7, 8, 1, 2]) ,
('Current mapping', [0, 3, 5, 4, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 1.522302590789991) ,
('Update triple match number to:', 13.044605181579982) ,
('Current mapping:', [0, 3, 5, 4, 6, 7, 8, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -2.7433881046255504) ,
([3, 0, 5, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 5, 4, 6, 7, 8, 1, 2],) ,
('saved value', 10.301217076954432) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -1.522302590789991) ,
([5, 3, 0, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 0, 4, 6, 7, 8, 1, 2],) ,
('saved value', 11.522302590789991) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -1.522302590789991) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 6, 7, 8, 1, 2],) ,
('saved value', 11.522302590789991) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 3, 5, 4, 0, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 5, 4, 0, 7, 8, 1, 2],) ,
('saved value', 8.044605181579982) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 3, 5, 4, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 4, 6, 0, 8, 1, 2],) ,
('saved value', 10.044605181579982) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([8, 3, 5, 4, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 5, 4, 6, 7, 0, 1, 2],) ,
('saved value', 10.044605181579982) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 1) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 3, 5, 4, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 5, 4, 6, 7, 8, 0, 2],) ,
('saved value', 10.044605181579982) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 3, 5, 4, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 5, 4, 6, 7, 8, 1, 0],) ,
('saved value', 9.044605181579982) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -3.522302590789991) ,
([0, 5, 3, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 6, 7, 8, 1, 2],) ,
('saved value', 9.522302590789991) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 4) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -3.522302590789991) ,
([0, 4, 5, 3, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 5, 3, 6, 7, 8, 1, 2],) ,
('saved value', 9.522302590789991) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 6, 5, 4, 3, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 5, 4, 3, 7, 8, 1, 2],) ,
('saved value', 7.044605181579982) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 7, 5, 4, 6, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 5, 4, 6, 3, 8, 1, 2],) ,
('saved value', 8.044605181579982) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 8, 5, 4, 6, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 8, 5, 4, 6, 7, 3, 1, 2],) ,
('saved value', 8.044605181579982) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 5, 4, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 6, 7, 8, 3, 2],) ,
('saved value', 9.044605181579982) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 2, 5, 4, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 6, 7, 8, 1, 3],) ,
('saved value', 7.044605181579982) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 4) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', 3.955394818420018) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 17.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 6) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -4.522302590789991) ,
([0, 3, 6, 4, 5, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 4, 5, 7, 8, 1, 2],) ,
('saved value', 8.522302590789991) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 7) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([0, 3, 7, 4, 6, 5, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 6, 5, 8, 1, 2],) ,
('saved value', 10.522302590789991) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 8) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([0, 3, 8, 4, 6, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 4, 6, 7, 5, 1, 2],) ,
('saved value', 10.522302590789991) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 1) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -2.015319467991244) ,
([0, 3, 1, 4, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 6, 7, 8, 5, 2],) ,
('saved value', 11.029285713588738) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 5, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 3, 2, 4, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 6, 7, 8, 1, 5],) ,
('saved value', 11.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 6) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -4.522302590789991) ,
([0, 3, 5, 6, 4, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 6, 4, 7, 8, 1, 2],) ,
('saved value', 8.522302590789991) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 7) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -2.522302590789991) ,
([0, 3, 5, 7, 6, 4, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 7, 6, 4, 8, 1, 2],) ,
('saved value', 10.522302590789991) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 8) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -2.522302590789991) ,
([0, 3, 5, 8, 6, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 8, 6, 7, 4, 1, 2],) ,
('saved value', 10.522302590789991) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 1) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -2.015319467991244) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 6, 7, 8, 4, 2],) ,
('saved value', 11.029285713588738) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 4, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 3, 5, 2, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 6, 7, 8, 1, 4],) ,
('saved value', 11.044605181579982) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4.149637525069794) ,
([0, 3, 5, 4, 7, 6, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 7, 6, 8, 1, 2],) ,
('saved value', 8.894967656510188) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5.0) ,
([0, 3, 5, 4, 8, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 8, 7, 6, 1, 2],) ,
('saved value', 8.044605181579982) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -4.918811726736596) ,
([0, 3, 5, 4, 1, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 1, 7, 8, 6, 2],) ,
('saved value', 8.125793454843386) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -7.0) ,
([0, 3, 5, 4, 2, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 2, 7, 8, 1, 6],) ,
('saved value', 6.044605181579982) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 5, 4, 6, 8, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 8, 7, 1, 2],) ,
('saved value', 9.044605181579982) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 5, 4, 6, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 1, 8, 7, 2],) ,
('saved value', 9.044605181579982) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 3, 5, 4, 6, 2, 8, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 2, 8, 1, 7],) ,
('saved value', 8.044605181579982) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -4.0) ,
([0, 3, 5, 4, 6, 7, 1, 8, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 1, 8, 2],) ,
('saved value', 9.044605181579982) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -5.0) ,
([0, 3, 5, 4, 6, 7, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 2, 1, 8],) ,
('saved value', 8.044605181579982) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 5, 4, 6, 7, 8, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 8, 2, 1],) ,
('saved value', 9.044605181579982) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 5, 4, 6, 7, 8, 1, 2]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 3.955394818420018) ,
('Update triple match number to:', 17.0) ,
('Current mapping:', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -3.7433881046255504) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13.25661189537445) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('saved value', 13.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('saved value', 14.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('saved value', 14.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('saved value', 14.0) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('saved value', 13.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -7.0) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -7.0) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('saved value', 12.0) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -7.0) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -3.955394818420018) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('saved value', 13.044605181579982) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -7.0) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -3.9860337544025057) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('saved value', 13.013966245597494) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -4.955394818420018) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('saved value', 12.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -7.0) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 13.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4.149637525069794) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('saved value', 12.850362474930206) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -4.918811726736596) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('saved value', 12.081188273263404) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -7.0) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('saved value', 10.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('saved value', 13.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('saved value', 13.0) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('saved value', 12.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('saved value', 13.0) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('saved value', 12.0) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('saved value', 13.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 1.0) ,
('node_pair', (2, 5)) ,
('instance/attribute match', 0.5223025907899909) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1.0) ,
('node_pair', (4, 1)) ,
('instance/attribute match', 0.5405941366317017) ,
('node_pair', (5, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 8)) ,
('instance/attribute match', 1.0) ,
('node_pair', (7, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (8, 6)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 4.062896727421693) ,
('Node mapping at start', [4, 3, 5, 2, 1, 0, 8, 7, 6]) ,
('Triple match number at start:', 4.062896727421693) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 3) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 4) ,
('Swap gain:', 0.0) ,
([3, 4, 5, 2, 1, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([3, 4, 5, 2, 1, 0, 8, 7, 6],) ,
('saved value', 4.062896727421693) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 5) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 4) ,
('Swap gain:', 1.477697409210009) ,
([5, 3, 4, 2, 1, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([5, 3, 4, 2, 1, 0, 8, 7, 6],) ,
('saved value', 5.540594136631702) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 2) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -0.47769740921000914) ,
([2, 3, 5, 4, 1, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([2, 3, 5, 4, 1, 0, 8, 7, 6],) ,
('saved value', 3.585199318211684) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 1) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 4) ,
('Swap gain:', -0.5405941366317017) ,
([1, 3, 5, 2, 4, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([1, 3, 5, 2, 4, 0, 8, 7, 6],) ,
('saved value', 3.522302590789991) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 0) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 3, 5, 2, 1, 4, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 1, 4, 8, 7, 6],) ,
('saved value', 5.062896727421693) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 8) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -1.0) ,
([8, 3, 5, 2, 1, 0, 4, 7, 6],) ,
('Computing match for mapping',) ,
([8, 3, 5, 2, 1, 0, 4, 7, 6],) ,
('saved value', 3.062896727421693) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 7) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 0, '-', 7, ',', 7, '-', 4) ,
('Swap gain:', 0.5069831227987472) ,
([7, 3, 5, 2, 1, 0, 8, 4, 6],) ,
('Computing match for mapping',) ,
([7, 3, 5, 2, 1, 0, 8, 4, 6],) ,
('saved value', 4.56987985022044) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 6) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 0, '-', 6, ',', 8, '-', 4) ,
('Swap gain:', 0.5223025907899909) ,
([6, 3, 5, 2, 1, 0, 8, 7, 4],) ,
('Computing match for mapping',) ,
([6, 3, 5, 2, 1, 0, 8, 7, 4],) ,
('saved value', 4.585199318211684) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -1.522302590789991) ,
([4, 5, 3, 2, 1, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([4, 5, 3, 2, 1, 0, 8, 7, 6],) ,
('saved value', 2.540594136631702) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -2.0) ,
([4, 2, 5, 3, 1, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([4, 2, 5, 3, 1, 0, 8, 7, 6],) ,
('saved value', 2.062896727421693) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 1) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', -1.5405941366317017) ,
([4, 1, 5, 2, 3, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([4, 1, 5, 2, 3, 0, 8, 7, 6],) ,
('saved value', 2.522302590789991) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 0) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -0.7433881046255503) ,
([4, 0, 5, 2, 1, 3, 8, 7, 6],) ,
('Computing match for mapping',) ,
([4, 0, 5, 2, 1, 3, 8, 7, 6],) ,
('saved value', 3.3195086227961426) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -2.0) ,
([4, 8, 5, 2, 1, 0, 3, 7, 6],) ,
('Computing match for mapping',) ,
([4, 8, 5, 2, 1, 0, 3, 7, 6],) ,
('saved value', 2.062896727421693) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 7) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 1, '-', 7, ',', 7, '-', 3) ,
('Swap gain:', -1.0) ,
([4, 7, 5, 2, 1, 0, 8, 3, 6],) ,
('Computing match for mapping',) ,
([4, 7, 5, 2, 1, 0, 8, 3, 6],) ,
('saved value', 3.062896727421693) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 6) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 1, '-', 6, ',', 8, '-', 3) ,
('Swap gain:', -1.0) ,
([4, 6, 5, 2, 1, 0, 8, 7, 3],) ,
('Computing match for mapping',) ,
([4, 6, 5, 2, 1, 0, 8, 7, 3],) ,
('saved value', 3.062896727421693) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 2) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 5) ,
('Swap gain:', 1.0) ,
([4, 3, 2, 5, 1, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([4, 3, 2, 5, 1, 0, 8, 7, 6],) ,
('saved value', 5.062896727421693) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 1) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 5) ,
('Swap gain:', 0.4440863953770545) ,
([4, 3, 1, 2, 5, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 5, 0, 8, 7, 6],) ,
('saved value', 4.506983122798747) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 0) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', -0.5223025907899909) ,
([4, 3, 0, 2, 1, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([4, 3, 0, 2, 1, 5, 8, 7, 6],) ,
('saved value', 3.540594136631702) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 8) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -1.522302590789991) ,
([4, 3, 8, 2, 1, 0, 5, 7, 6],) ,
('Computing match for mapping',) ,
([4, 3, 8, 2, 1, 0, 5, 7, 6],) ,
('saved value', 2.540594136631702) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 7) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 2, '-', 7, ',', 7, '-', 5) ,
('Swap gain:', -0.5223025907899909) ,
([4, 3, 7, 2, 1, 0, 8, 5, 6],) ,
('Computing match for mapping',) ,
([4, 3, 7, 2, 1, 0, 8, 5, 6],) ,
('saved value', 3.540594136631702) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 5, ',', 8, '-', 6) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 2, '-', 6, ',', 8, '-', 5) ,
('Swap gain:', 0.47769740921000914) ,
([4, 3, 6, 2, 1, 0, 8, 7, 5],) ,
('Computing match for mapping',) ,
([4, 3, 6, 2, 1, 0, 8, 7, 5],) ,
('saved value', 4.540594136631702) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 1) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -1.5405941366317017) ,
([4, 3, 5, 1, 2, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 2, 0, 8, 7, 6],) ,
('saved value', 2.522302590789991) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 0) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([4, 3, 5, 0, 1, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 1, 2, 8, 7, 6],) ,
('saved value', 3.062896727421693) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 8) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 8, 1, 0, 2, 7, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 8, 1, 0, 2, 7, 6],) ,
('saved value', 2.062896727421693) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 7) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 3, '-', 7, ',', 7, '-', 2) ,
('Swap gain:', -1.0) ,
([4, 3, 5, 7, 1, 0, 8, 2, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 1, 0, 8, 2, 6],) ,
('saved value', 3.062896727421693) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 6) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 3, '-', 6, ',', 8, '-', 2) ,
('Swap gain:', 1.0) ,
([4, 3, 5, 6, 1, 0, 8, 7, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 6, 1, 0, 8, 7, 2],) ,
('saved value', 5.062896727421693) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 0) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -0.5405941366317017) ,
([4, 3, 5, 2, 0, 1, 8, 7, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 0, 1, 8, 7, 6],) ,
('saved value', 3.522302590789991) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 8) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -1.5405941366317017) ,
([4, 3, 5, 2, 8, 0, 1, 7, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 8, 0, 1, 7, 6],) ,
('saved value', 2.522302590789991) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 1, ',', 7, '-', 7) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 4, '-', 7, ',', 7, '-', 1) ,
('Swap gain:', 0.8845871008334012) ,
([4, 3, 5, 2, 7, 0, 8, 1, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 7, 0, 8, 1, 6],) ,
('saved value', 4.947483828255094) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 1, ',', 8, '-', 6) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 4, '-', 6, ',', 8, '-', 1) ,
('Swap gain:', 2.459405863368298) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('saved value', 6.522302590789991) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 8) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([4, 3, 5, 2, 1, 8, 0, 7, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 1, 8, 0, 7, 6],) ,
('saved value', 4.062896727421693) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 7) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 5, '-', 7, ',', 7, '-', 0) ,
('Swap gain:', 1.0) ,
([4, 3, 5, 2, 1, 7, 8, 0, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 1, 7, 8, 0, 6],) ,
('saved value', 5.062896727421693) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 6) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 5, '-', 6, ',', 8, '-', 0) ,
('Swap gain:', 0.42518123746510306) ,
([4, 3, 5, 2, 1, 6, 8, 7, 0],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 1, 6, 8, 7, 0],) ,
('saved value', 4.488077964886796) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 7) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 6, '-', 7, ',', 7, '-', 8) ,
('Swap gain:', -1.0) ,
([4, 3, 5, 2, 1, 0, 7, 8, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 1, 0, 7, 8, 6],) ,
('saved value', 3.062896727421693) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 6) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 6, '-', 6, ',', 8, '-', 8) ,
('Swap gain:', -1.0) ,
([4, 3, 5, 2, 1, 0, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 1, 0, 6, 7, 8],) ,
('saved value', 3.062896727421693) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 7, ',', 8, '-', 6) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('After swapping:', 7, '-', 6, ',', 8, '-', 7) ,
('Swap gain:', 0.5405941366317017) ,
([4, 3, 5, 2, 1, 0, 8, 6, 7],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 1, 0, 8, 6, 7],) ,
('saved value', 4.603490864053395) ,
('Use swap gain',) ,
('Original mapping', [4, 3, 5, 2, 1, 0, 8, 7, 6]) ,
('Current mapping', [4, 3, 5, 2, 6, 0, 8, 7, 1]) ,
('Gain after the hill-climbing', 2.459405863368298) ,
('Update triple match number to:', 6.522302590789991) ,
('Current mapping:', [4, 3, 5, 2, 6, 0, 8, 7, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 3) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 4) ,
('Swap gain:', -1.0) ,
([3, 4, 5, 2, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([3, 4, 5, 2, 6, 0, 8, 7, 1],) ,
('saved value', 5.522302590789991) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 5) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 4) ,
('Swap gain:', 1.477697409210009) ,
([5, 3, 4, 2, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([5, 3, 4, 2, 6, 0, 8, 7, 1],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 2) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -0.47769740921000914) ,
([2, 3, 5, 4, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([2, 3, 5, 4, 6, 0, 8, 7, 1],) ,
('saved value', 6.044605181579982) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 6) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -3.0) ,
([6, 3, 5, 2, 4, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([6, 3, 5, 2, 4, 0, 8, 7, 1],) ,
('saved value', 3.522302590789991) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 0) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 3, 5, 2, 6, 4, 8, 7, 1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 6, 4, 8, 7, 1],) ,
('saved value', 7.522302590789991) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 8) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([8, 3, 5, 2, 6, 0, 4, 7, 1],) ,
('Computing match for mapping',) ,
([8, 3, 5, 2, 6, 0, 4, 7, 1],) ,
('saved value', 4.522302590789991) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 7) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 7, ',', 7, '-', 4) ,
('Swap gain:', 0.5069831227987472) ,
([7, 3, 5, 2, 6, 0, 8, 4, 1],) ,
('Computing match for mapping',) ,
([7, 3, 5, 2, 6, 0, 8, 4, 1],) ,
('saved value', 7.029285713588738) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 1, ',', 8, '-', 4) ,
('Swap gain:', 0.5223025907899909) ,
([1, 3, 5, 2, 6, 0, 8, 7, 4],) ,
('Computing match for mapping',) ,
([1, 3, 5, 2, 6, 0, 8, 7, 4],) ,
('saved value', 7.044605181579982) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -2.522302590789991) ,
([4, 5, 3, 2, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([4, 5, 3, 2, 6, 0, 8, 7, 1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -3.0) ,
([4, 2, 5, 3, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([4, 2, 5, 3, 6, 0, 8, 7, 1],) ,
('saved value', 3.522302590789991) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 6, 5, 2, 3, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([4, 6, 5, 2, 3, 0, 8, 7, 1],) ,
('saved value', 2.522302590789991) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 0) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -1.7433881046255504) ,
([4, 0, 5, 2, 6, 3, 8, 7, 1],) ,
('Computing match for mapping',) ,
([4, 0, 5, 2, 6, 3, 8, 7, 1],) ,
('saved value', 4.778914486164441) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 8, 5, 2, 6, 0, 3, 7, 1],) ,
('Computing match for mapping',) ,
([4, 8, 5, 2, 6, 0, 3, 7, 1],) ,
('saved value', 2.522302590789991) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 7) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 1, '-', 7, ',', 7, '-', 3) ,
('Swap gain:', -2.0) ,
([4, 7, 5, 2, 6, 0, 8, 3, 1],) ,
('Computing match for mapping',) ,
([4, 7, 5, 2, 6, 0, 8, 3, 1],) ,
('saved value', 4.522302590789991) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 1, '-', 1, ',', 8, '-', 3) ,
('Swap gain:', -2.0) ,
([4, 1, 5, 2, 6, 0, 8, 7, 3],) ,
('Computing match for mapping',) ,
([4, 1, 5, 2, 6, 0, 8, 7, 3],) ,
('saved value', 4.522302590789991) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 2) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 5) ,
('Swap gain:', 1.0) ,
([4, 3, 2, 5, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([4, 3, 2, 5, 6, 0, 8, 7, 1],) ,
('saved value', 7.522302590789991) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 6) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -3.522302590789991) ,
([4, 3, 6, 2, 5, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([4, 3, 6, 2, 5, 0, 8, 7, 1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 0) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', -0.5223025907899909) ,
([4, 3, 0, 2, 6, 5, 8, 7, 1],) ,
('Computing match for mapping',) ,
([4, 3, 0, 2, 6, 5, 8, 7, 1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 8) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([4, 3, 8, 2, 6, 0, 5, 7, 1],) ,
('Computing match for mapping',) ,
([4, 3, 8, 2, 6, 0, 5, 7, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 7) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 2, '-', 7, ',', 7, '-', 5) ,
('Swap gain:', -0.5223025907899909) ,
([4, 3, 7, 2, 6, 0, 8, 5, 1],) ,
('Computing match for mapping',) ,
([4, 3, 7, 2, 6, 0, 8, 5, 1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 5, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 2, '-', 1, ',', 8, '-', 5) ,
('Swap gain:', 1.9846805320087562) ,
([4, 3, 1, 2, 6, 0, 8, 7, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 0, 8, 7, 5],) ,
('saved value', 8.506983122798747) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 6) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([4, 3, 5, 6, 2, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 6, 2, 0, 8, 7, 1],) ,
('saved value', 2.522302590789991) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 0) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([4, 3, 5, 0, 6, 2, 8, 7, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 6, 2, 8, 7, 1],) ,
('saved value', 5.522302590789991) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 8) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -3.0) ,
([4, 3, 5, 8, 6, 0, 2, 7, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 8, 6, 0, 2, 7, 1],) ,
('saved value', 3.522302590789991) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 7) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 3, '-', 7, ',', 7, '-', 2) ,
('Swap gain:', -1.0) ,
([4, 3, 5, 7, 6, 0, 8, 2, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 6, 0, 8, 2, 1],) ,
('saved value', 5.522302590789991) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 3, '-', 1, ',', 8, '-', 2) ,
('Swap gain:', 1.0) ,
([4, 3, 5, 1, 6, 0, 8, 7, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 6, 0, 8, 7, 2],) ,
('saved value', 7.522302590789991) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 0) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 6) ,
('Swap gain:', -2.574818762534897) ,
([4, 3, 5, 2, 0, 6, 8, 7, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 0, 6, 8, 7, 1],) ,
('saved value', 3.947483828255094) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -4.0) ,
([4, 3, 5, 2, 8, 0, 6, 7, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 8, 0, 6, 7, 1],) ,
('saved value', 2.522302590789991) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 7) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 4, '-', 7, ',', 7, '-', 6) ,
('Swap gain:', -2.034224625903195) ,
([4, 3, 5, 2, 7, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 7, 0, 8, 6, 1],) ,
('saved value', 4.488077964886796) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 4, '-', 1, ',', 8, '-', 6) ,
('Swap gain:', -2.459405863368298) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 1, 0, 8, 7, 6],) ,
('saved value', 4.062896727421693) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 8) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 2, 6, 8, 0, 7, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 8, 0, 7, 1],) ,
('saved value', 4.522302590789991) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 7) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 5, '-', 7, ',', 7, '-', 0) ,
('Swap gain:', 2.0) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('saved value', 8.522302590789991) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 5, '-', 1, ',', 8, '-', 0) ,
('Swap gain:', 0.0) ,
([4, 3, 5, 2, 6, 1, 8, 7, 0],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 1, 8, 7, 0],) ,
('saved value', 6.522302590789991) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 7) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 6, '-', 7, ',', 7, '-', 8) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 2, 6, 0, 7, 8, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 0, 7, 8, 1],) ,
('saved value', 4.522302590789991) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 6, '-', 1, ',', 8, '-', 8) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 2, 6, 0, 1, 7, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 0, 1, 7, 8],) ,
('saved value', 4.522302590789991) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 7, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('After swapping:', 7, '-', 1, ',', 8, '-', 7) ,
('Swap gain:', 1.0) ,
([4, 3, 5, 2, 6, 0, 8, 1, 7],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 0, 8, 1, 7],) ,
('saved value', 7.522302590789991) ,
('Use swap gain',) ,
('Original mapping', [4, 3, 5, 2, 6, 0, 8, 7, 1]) ,
('Current mapping', [4, 3, 5, 2, 6, 7, 8, 0, 1]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 8.522302590789991) ,
('Current mapping:', [4, 3, 5, 2, 6, 7, 8, 0, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 3) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 4) ,
('Swap gain:', -1.0) ,
([3, 4, 5, 2, 6, 7, 8, 0, 1],) ,
('Computing match for mapping',) ,
([3, 4, 5, 2, 6, 7, 8, 0, 1],) ,
('saved value', 7.522302590789991) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 5) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 4) ,
('Swap gain:', 1.477697409210009) ,
([5, 3, 4, 2, 6, 7, 8, 0, 1],) ,
('Computing match for mapping',) ,
([5, 3, 4, 2, 6, 7, 8, 0, 1],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 2) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -0.47769740921000914) ,
([2, 3, 5, 4, 6, 7, 8, 0, 1],) ,
('Computing match for mapping',) ,
([2, 3, 5, 4, 6, 7, 8, 0, 1],) ,
('saved value', 8.044605181579982) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 6) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([6, 3, 5, 2, 4, 7, 8, 0, 1],) ,
('Computing match for mapping',) ,
([6, 3, 5, 2, 4, 7, 8, 0, 1],) ,
('saved value', 4.522302590789991) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 7) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([7, 3, 5, 2, 6, 4, 8, 0, 1],) ,
('Computing match for mapping',) ,
([7, 3, 5, 2, 6, 4, 8, 0, 1],) ,
('saved value', 6.522302590789991) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 8) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([8, 3, 5, 2, 6, 7, 4, 0, 1],) ,
('Computing match for mapping',) ,
([8, 3, 5, 2, 6, 7, 4, 0, 1],) ,
('saved value', 6.522302590789991) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 0) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 0, '-', 0, ',', 7, '-', 4) ,
('Swap gain:', 1.5069831227987471) ,
([0, 3, 5, 2, 6, 7, 8, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 6, 7, 8, 4, 1],) ,
('saved value', 10.029285713588738) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 0, '-', 1, ',', 8, '-', 4) ,
('Swap gain:', 0.5223025907899909) ,
([1, 3, 5, 2, 6, 7, 8, 0, 4],) ,
('Computing match for mapping',) ,
([1, 3, 5, 2, 6, 7, 8, 0, 4],) ,
('saved value', 9.044605181579982) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -2.522302590789991) ,
([4, 5, 3, 2, 6, 7, 8, 0, 1],) ,
('Computing match for mapping',) ,
([4, 5, 3, 2, 6, 7, 8, 0, 1],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -3.0) ,
([4, 2, 5, 3, 6, 7, 8, 0, 1],) ,
('Computing match for mapping',) ,
([4, 2, 5, 3, 6, 7, 8, 0, 1],) ,
('saved value', 5.522302590789991) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -5.0) ,
([4, 6, 5, 2, 3, 7, 8, 0, 1],) ,
('Computing match for mapping',) ,
([4, 6, 5, 2, 3, 7, 8, 0, 1],) ,
('saved value', 3.522302590789991) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 7, 5, 2, 6, 3, 8, 0, 1],) ,
('Computing match for mapping',) ,
([4, 7, 5, 2, 6, 3, 8, 0, 1],) ,
('saved value', 4.522302590789991) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 8, 5, 2, 6, 7, 3, 0, 1],) ,
('Computing match for mapping',) ,
([4, 8, 5, 2, 6, 7, 3, 0, 1],) ,
('saved value', 4.522302590789991) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 0) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 1, '-', 0, ',', 7, '-', 3) ,
('Swap gain:', -1.7433881046255504) ,
([4, 0, 5, 2, 6, 7, 8, 3, 1],) ,
('Computing match for mapping',) ,
([4, 0, 5, 2, 6, 7, 8, 3, 1],) ,
('saved value', 6.778914486164441) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 1, '-', 1, ',', 8, '-', 3) ,
('Swap gain:', -2.0) ,
([4, 1, 5, 2, 6, 7, 8, 0, 3],) ,
('Computing match for mapping',) ,
([4, 1, 5, 2, 6, 7, 8, 0, 3],) ,
('saved value', 6.522302590789991) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 2) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 5) ,
('Swap gain:', 1.0) ,
([4, 3, 2, 5, 6, 7, 8, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 2, 5, 6, 7, 8, 0, 1],) ,
('saved value', 9.522302590789991) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 6) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -4.522302590789991) ,
([4, 3, 6, 2, 5, 7, 8, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 6, 2, 5, 7, 8, 0, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 7) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([4, 3, 7, 2, 6, 5, 8, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 7, 2, 6, 5, 8, 0, 1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 8) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -2.522302590789991) ,
([4, 3, 8, 2, 6, 7, 5, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 8, 2, 6, 7, 5, 0, 1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 0) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 2, '-', 0, ',', 7, '-', 5) ,
('Swap gain:', -0.5223025907899909) ,
([4, 3, 0, 2, 6, 7, 8, 5, 1],) ,
('Computing match for mapping',) ,
([4, 3, 0, 2, 6, 7, 8, 5, 1],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 5, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 2, '-', 1, ',', 8, '-', 5) ,
('Swap gain:', 1.9846805320087562) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('saved value', 10.506983122798747) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 6) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -5.0) ,
([4, 3, 5, 6, 2, 7, 8, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 6, 2, 7, 8, 0, 1],) ,
('saved value', 3.522302590789991) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([4, 3, 5, 7, 6, 2, 8, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 7, 6, 2, 8, 0, 1],) ,
('saved value', 5.522302590789991) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 8) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -3.0) ,
([4, 3, 5, 8, 6, 7, 2, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 8, 6, 7, 2, 0, 1],) ,
('saved value', 5.522302590789991) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 0) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 3, '-', 0, ',', 7, '-', 2) ,
('Swap gain:', -1.0) ,
([4, 3, 5, 0, 6, 7, 8, 2, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 6, 7, 8, 2, 1],) ,
('saved value', 7.522302590789991) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 3, '-', 1, ',', 8, '-', 2) ,
('Swap gain:', 1.0) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 6, 7, 8, 0, 2],) ,
('saved value', 9.522302590789991) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4.149637525069794) ,
([4, 3, 5, 2, 7, 6, 8, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 7, 6, 8, 0, 1],) ,
('saved value', 4.372665065720197) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5.0) ,
([4, 3, 5, 2, 8, 7, 6, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 8, 7, 6, 0, 1],) ,
('saved value', 3.522302590789991) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 0) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 4, '-', 0, ',', 7, '-', 6) ,
('Swap gain:', -3.459405863368298) ,
([4, 3, 5, 2, 0, 7, 8, 6, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 0, 7, 8, 6, 1],) ,
('saved value', 5.062896727421693) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 4, '-', 1, ',', 8, '-', 6) ,
('Swap gain:', -3.459405863368298) ,
([4, 3, 5, 2, 1, 7, 8, 0, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 1, 7, 8, 0, 6],) ,
('saved value', 5.062896727421693) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([4, 3, 5, 2, 6, 8, 7, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 8, 7, 0, 1],) ,
('saved value', 4.522302590789991) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 0) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 5, '-', 0, ',', 7, '-', 7) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 0, 8, 7, 1],) ,
('saved value', 6.522302590789991) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 5, '-', 1, ',', 8, '-', 7) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 2, 6, 1, 8, 0, 7],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 1, 8, 0, 7],) ,
('saved value', 6.522302590789991) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 0) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 6, '-', 0, ',', 7, '-', 8) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 2, 6, 7, 0, 8, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 7, 0, 8, 1],) ,
('saved value', 6.522302590789991) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 6, '-', 1, ',', 8, '-', 8) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 2, 6, 7, 1, 0, 8],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 7, 1, 0, 8],) ,
('saved value', 6.522302590789991) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 0, ',', 8, '-', 1) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('After swapping:', 7, '-', 1, ',', 8, '-', 0) ,
('Swap gain:', 1.0) ,
([4, 3, 5, 2, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 7, 8, 1, 0],) ,
('saved value', 9.522302590789991) ,
('Use swap gain',) ,
('Original mapping', [4, 3, 5, 2, 6, 7, 8, 0, 1]) ,
('Current mapping', [4, 3, 1, 2, 6, 7, 8, 0, 5]) ,
('Gain after the hill-climbing', 1.9846805320087562) ,
('Update triple match number to:', 10.506983122798747) ,
('Current mapping:', [4, 3, 1, 2, 6, 7, 8, 0, 5]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 3) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 4) ,
('Swap gain:', -1.0) ,
([3, 4, 1, 2, 6, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 6, 7, 8, 0, 5],) ,
('saved value', 9.506983122798747) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 1) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 4) ,
('Swap gain:', 0.49301687720125287) ,
([1, 3, 4, 2, 6, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([1, 3, 4, 2, 6, 7, 8, 0, 5],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 2) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -1.477697409210009) ,
([2, 3, 1, 4, 6, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([2, 3, 1, 4, 6, 7, 8, 0, 5],) ,
('saved value', 9.029285713588738) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 6) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([6, 3, 1, 2, 4, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([6, 3, 1, 2, 4, 7, 8, 0, 5],) ,
('saved value', 6.506983122798747) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 7) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([7, 3, 1, 2, 6, 4, 8, 0, 5],) ,
('Computing match for mapping',) ,
([7, 3, 1, 2, 6, 4, 8, 0, 5],) ,
('saved value', 8.506983122798747) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 8) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([8, 3, 1, 2, 6, 7, 4, 0, 5],) ,
('Computing match for mapping',) ,
([8, 3, 1, 2, 6, 7, 4, 0, 5],) ,
('saved value', 8.506983122798747) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 0) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 0, '-', 0, ',', 7, '-', 4) ,
('Swap gain:', 2.506983122798747) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('saved value', 13.013966245597494) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', -0.47769740921000914) ,
([5, 3, 1, 2, 6, 7, 8, 0, 4],) ,
('Computing match for mapping',) ,
([5, 3, 1, 2, 6, 7, 8, 0, 4],) ,
('saved value', 10.029285713588738) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -3.506983122798747) ,
([4, 1, 3, 2, 6, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 3, 2, 6, 7, 8, 0, 5],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 2, 1, 3, 6, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([4, 2, 1, 3, 6, 7, 8, 0, 5],) ,
('saved value', 6.506983122798747) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -5.0) ,
([4, 6, 1, 2, 3, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([4, 6, 1, 2, 3, 7, 8, 0, 5],) ,
('saved value', 5.506983122798747) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 7, 1, 2, 6, 3, 8, 0, 5],) ,
('Computing match for mapping',) ,
([4, 7, 1, 2, 6, 3, 8, 0, 5],) ,
('saved value', 6.506983122798747) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -4.0) ,
([4, 8, 1, 2, 6, 7, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 8, 1, 2, 6, 7, 3, 0, 5],) ,
('saved value', 6.506983122798747) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 0) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 1, '-', 0, ',', 7, '-', 3) ,
('Swap gain:', -0.7433881046255504) ,
([4, 0, 1, 2, 6, 7, 8, 3, 5],) ,
('Computing match for mapping',) ,
([4, 0, 1, 2, 6, 7, 8, 3, 5],) ,
('saved value', 9.763595018173197) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', -3.0) ,
([4, 5, 1, 2, 6, 7, 8, 0, 3],) ,
('Computing match for mapping',) ,
([4, 5, 1, 2, 6, 7, 8, 0, 3],) ,
('saved value', 7.506983122798747) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -1.9846805320087562) ,
([4, 3, 2, 1, 6, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 6, 7, 8, 0, 5],) ,
('saved value', 8.522302590789991) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 6) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -4.966388986167045) ,
([4, 3, 6, 2, 1, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 6, 2, 1, 7, 8, 0, 5],) ,
('saved value', 5.540594136631702) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -3.506983122798747) ,
([4, 3, 7, 2, 6, 1, 8, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 7, 2, 6, 1, 8, 0, 5],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 1, ',', 6, '-', 8) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -3.506983122798747) ,
([4, 3, 8, 2, 6, 7, 1, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 8, 2, 6, 7, 1, 0, 5],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 1, ',', 7, '-', 0) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 2, '-', 0, ',', 7, '-', 1) ,
('Swap gain:', -0.5069831227987471) ,
([4, 3, 0, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 0, 2, 6, 7, 8, 1, 5],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 1, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -1.9846805320087562) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 6, 7, 8, 0, 1],) ,
('saved value', 8.522302590789991) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 6) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -6.0) ,
([4, 3, 1, 6, 2, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 6, 2, 7, 8, 0, 5],) ,
('saved value', 4.506983122798747) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -4.0) ,
([4, 3, 1, 7, 6, 2, 8, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 7, 6, 2, 8, 0, 5],) ,
('saved value', 6.506983122798747) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 8) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -4.0) ,
([4, 3, 1, 8, 6, 7, 2, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 8, 6, 7, 2, 0, 5],) ,
('saved value', 6.506983122798747) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 0) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 3, '-', 0, ',', 7, '-', 2) ,
('Swap gain:', -2.0) ,
([4, 3, 1, 0, 6, 7, 8, 2, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 0, 6, 7, 8, 2, 5],) ,
('saved value', 8.506983122798747) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 1.0) ,
([4, 3, 1, 5, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([4, 3, 1, 5, 6, 7, 8, 0, 2],) ,
('saved value', 11.506983122798747) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4.149637525069794) ,
([4, 3, 1, 2, 7, 6, 8, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 7, 6, 8, 0, 5],) ,
('saved value', 6.357345597728953) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5.0) ,
([4, 3, 1, 2, 8, 7, 6, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 8, 7, 6, 0, 5],) ,
('saved value', 5.506983122798747) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 0) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 4, '-', 0, ',', 7, '-', 6) ,
('Swap gain:', -3.459405863368298) ,
([4, 3, 1, 2, 0, 7, 8, 6, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 0, 7, 8, 6, 5],) ,
('saved value', 7.047577259430449) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', -5.0) ,
([4, 3, 1, 2, 5, 7, 8, 0, 6],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 5, 7, 8, 0, 6],) ,
('saved value', 5.506983122798747) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([4, 3, 1, 2, 6, 8, 7, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 8, 7, 0, 5],) ,
('saved value', 6.506983122798747) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 0) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 5, '-', 0, ',', 7, '-', 7) ,
('Swap gain:', -2.0) ,
([4, 3, 1, 2, 6, 0, 8, 7, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 0, 8, 7, 5],) ,
('saved value', 8.506983122798747) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', -3.0) ,
([4, 3, 1, 2, 6, 5, 8, 0, 7],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 5, 8, 0, 7],) ,
('saved value', 7.506983122798747) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 0) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 6, '-', 0, ',', 7, '-', 8) ,
('Swap gain:', -2.0) ,
([4, 3, 1, 2, 6, 7, 0, 8, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 7, 0, 8, 5],) ,
('saved value', 8.506983122798747) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -3.0) ,
([4, 3, 1, 2, 6, 7, 5, 0, 8],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 7, 5, 0, 8],) ,
('saved value', 7.506983122798747) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 0, ',', 8, '-', 5) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 0) ,
('Swap gain:', -1.0) ,
([4, 3, 1, 2, 6, 7, 8, 5, 0],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 7, 8, 5, 0],) ,
('saved value', 9.506983122798747) ,
('Use swap gain',) ,
('Original mapping', [4, 3, 1, 2, 6, 7, 8, 0, 5]) ,
('Current mapping', [0, 3, 1, 2, 6, 7, 8, 4, 5]) ,
('Gain after the hill-climbing', 2.506983122798747) ,
('Update triple match number to:', 13.013966245597494) ,
('Current mapping:', [0, 3, 1, 2, 6, 7, 8, 4, 5]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -1.7433881046255504) ,
([3, 0, 1, 2, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2, 6, 7, 8, 4, 5],) ,
('saved value', 11.270578140971944) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2.506983122798747) ,
([1, 3, 0, 2, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2, 6, 7, 8, 4, 5],) ,
('saved value', 10.506983122798747) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 3, 1, 0, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0, 6, 7, 8, 4, 5],) ,
('saved value', 10.013966245597494) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 3, 1, 2, 0, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([6, 3, 1, 2, 0, 7, 8, 4, 5],) ,
('saved value', 8.013966245597494) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 3, 1, 2, 6, 0, 8, 4, 5],) ,
('Computing match for mapping',) ,
([7, 3, 1, 2, 6, 0, 8, 4, 5],) ,
('saved value', 10.013966245597494) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([8, 3, 1, 2, 6, 7, 0, 4, 5],) ,
('Computing match for mapping',) ,
([8, 3, 1, 2, 6, 7, 0, 4, 5],) ,
('saved value', 10.013966245597494) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 7, '-', 0) ,
('Swap gain:', -2.506983122798747) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 6, 7, 8, 0, 5],) ,
('saved value', 10.506983122798747) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 3, 1, 2, 6, 7, 8, 4, 0],) ,
('Computing match for mapping',) ,
([5, 3, 1, 2, 6, 7, 8, 4, 0],) ,
('saved value', 10.013966245597494) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -3.506983122798747) ,
([0, 1, 3, 2, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 6, 7, 8, 4, 5],) ,
('saved value', 9.506983122798747) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 2, 1, 3, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 6, 7, 8, 4, 5],) ,
('saved value', 8.013966245597494) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 6, 1, 2, 3, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 6, 1, 2, 3, 7, 8, 4, 5],) ,
('saved value', 7.013966245597494) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 7, 1, 2, 6, 3, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 6, 3, 8, 4, 5],) ,
('saved value', 8.013966245597494) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 8, 1, 2, 6, 7, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 8, 1, 2, 6, 7, 3, 4, 5],) ,
('saved value', 8.013966245597494) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 7, '-', 3) ,
('Swap gain:', -4.506983122798747) ,
([0, 4, 1, 2, 6, 7, 8, 3, 5],) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 6, 7, 8, 3, 5],) ,
('saved value', 8.506983122798747) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 5, 1, 2, 6, 7, 8, 4, 3],) ,
('Computing match for mapping',) ,
([0, 5, 1, 2, 6, 7, 8, 4, 3],) ,
('saved value', 8.013966245597494) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -1.9846805320087562) ,
([0, 3, 2, 1, 6, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 6, 7, 8, 4, 5],) ,
('saved value', 11.029285713588738) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -4.966388986167045) ,
([0, 3, 6, 2, 1, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 1, 7, 8, 4, 5],) ,
('saved value', 8.047577259430449) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -3.506983122798747) ,
([0, 3, 7, 2, 6, 1, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 6, 1, 8, 4, 5],) ,
('saved value', 9.506983122798747) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 1, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -3.506983122798747) ,
([0, 3, 8, 2, 6, 7, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 8, 2, 6, 7, 1, 4, 5],) ,
('saved value', 9.506983122798747) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 1, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 7, '-', 1) ,
('Swap gain:', -0.013966245597494265) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 13.0) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 1, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -2.984680532008756) ,
([0, 3, 5, 2, 6, 7, 8, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 6, 7, 8, 4, 1],) ,
('saved value', 10.029285713588738) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 6) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 3, 1, 6, 2, 7, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 6, 2, 7, 8, 4, 5],) ,
('saved value', 7.013966245597494) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 3, 1, 7, 6, 2, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 7, 6, 2, 8, 4, 5],) ,
('saved value', 9.013966245597494) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 3, 1, 8, 6, 7, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 8, 6, 7, 2, 4, 5],) ,
('saved value', 9.013966245597494) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 7, '-', 2) ,
('Swap gain:', -2.984680532008756) ,
([0, 3, 1, 4, 6, 7, 8, 2, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 6, 7, 8, 2, 5],) ,
('saved value', 10.029285713588738) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('saved value', 13.013966245597494) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4.149637525069794) ,
([0, 3, 1, 2, 7, 6, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 7, 6, 8, 4, 5],) ,
('saved value', 8.8643287205277) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5.0) ,
([0, 3, 1, 2, 8, 7, 6, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 8, 7, 6, 4, 5],) ,
('saved value', 8.013966245597494) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 4, '-', 4, ',', 7, '-', 6) ,
('Swap gain:', -4.966388986167045) ,
([0, 3, 1, 2, 4, 7, 8, 6, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 4, 7, 8, 6, 5],) ,
('saved value', 8.047577259430449) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', -6.0) ,
([0, 3, 1, 2, 5, 7, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 5, 7, 8, 4, 6],) ,
('saved value', 7.013966245597494) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 1, 2, 6, 8, 7, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 8, 7, 4, 5],) ,
('saved value', 9.013966245597494) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 5, '-', 4, ',', 7, '-', 7) ,
('Swap gain:', -3.506983122798747) ,
([0, 3, 1, 2, 6, 4, 8, 7, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 4, 8, 7, 5],) ,
('saved value', 9.506983122798747) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 1, 2, 6, 5, 8, 4, 7],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 5, 8, 4, 7],) ,
('saved value', 9.013966245597494) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 4) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 6, '-', 4, ',', 7, '-', 8) ,
('Swap gain:', -3.506983122798747) ,
([0, 3, 1, 2, 6, 7, 4, 8, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 4, 8, 5],) ,
('saved value', 9.506983122798747) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -4.0) ,
([0, 3, 1, 2, 6, 7, 5, 4, 8],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 5, 4, 8],) ,
('saved value', 9.013966245597494) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 4, ',', 8, '-', 5) ,
([0, 3, 1, 2, 6, 7, 8, 4, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', -1.9846805320087564) ,
([0, 3, 1, 2, 6, 7, 8, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 6, 7, 8, 5, 4],) ,
('saved value', 11.029285713588738) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1, 2, 6, 7, 8, 4, 5]) ,
('Current mapping', [0, 3, 1, 2, 6, 7, 8, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('node_pair', (0, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 8)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (7, 6)) ,
('instance/attribute match', 0.5405941366317017) ,
('node_pair', (8, 1)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.5405941366317017) ,
('Node mapping at start', [3, 2, 7, 8, 4, 0, 5, 6, 1]) ,
('Triple match number at start:', 0.5405941366317017) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 2) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 3) ,
('Swap gain:', 1.0) ,
([2, 3, 7, 8, 4, 0, 5, 6, 1],) ,
('Computing match for mapping',) ,
([2, 3, 7, 8, 4, 0, 5, 6, 1],) ,
('saved value', 1.5405941366317017) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 7) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 3) ,
('Swap gain:', 0.0) ,
([7, 2, 3, 8, 4, 0, 5, 6, 1],) ,
('Computing match for mapping',) ,
([7, 2, 3, 8, 4, 0, 5, 6, 1],) ,
('saved value', 0.5405941366317017) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 8) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 0, '-', 8, ',', 3, '-', 3) ,
('Swap gain:', 0.0) ,
([8, 2, 7, 3, 4, 0, 5, 6, 1],) ,
('Computing match for mapping',) ,
([8, 2, 7, 3, 4, 0, 5, 6, 1],) ,
('saved value', 0.5405941366317017) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 4) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([4, 2, 7, 8, 3, 0, 5, 6, 1],) ,
('Computing match for mapping',) ,
([4, 2, 7, 8, 3, 0, 5, 6, 1],) ,
('saved value', 0.5405941366317017) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 0) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 2, 7, 8, 4, 3, 5, 6, 1],) ,
('Computing match for mapping',) ,
([0, 2, 7, 8, 4, 3, 5, 6, 1],) ,
('saved value', 0.5405941366317017) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', 5) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 0, '-', 5, ',', 6, '-', 3) ,
('Swap gain:', 1.0) ,
([5, 2, 7, 8, 4, 0, 3, 6, 1],) ,
('Computing match for mapping',) ,
([5, 2, 7, 8, 4, 0, 3, 6, 1],) ,
('saved value', 1.5405941366317017) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 3, ',', 7, '-', 6) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 3) ,
('Swap gain:', -0.5405941366317017) ,
([6, 2, 7, 8, 4, 0, 5, 3, 1],) ,
('Computing match for mapping',) ,
([6, 2, 7, 8, 4, 0, 5, 3, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 3, ',', 8, '-', 1) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 0, '-', 1, ',', 8, '-', 3) ,
('Swap gain:', 0.0) ,
([1, 2, 7, 8, 4, 0, 5, 6, 3],) ,
('Computing match for mapping',) ,
([1, 2, 7, 8, 4, 0, 5, 6, 3],) ,
('saved value', 0.5405941366317017) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 7) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 2) ,
('Swap gain:', 0.5223025907899909) ,
([3, 7, 2, 8, 4, 0, 5, 6, 1],) ,
('Computing match for mapping',) ,
([3, 7, 2, 8, 4, 0, 5, 6, 1],) ,
('saved value', 1.0628967274216925) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 8) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 1, '-', 8, ',', 3, '-', 2) ,
('Swap gain:', 1.0) ,
([3, 8, 7, 2, 4, 0, 5, 6, 1],) ,
('Computing match for mapping',) ,
([3, 8, 7, 2, 4, 0, 5, 6, 1],) ,
('saved value', 1.5405941366317017) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', 1.0) ,
([3, 4, 7, 8, 2, 0, 5, 6, 1],) ,
('Computing match for mapping',) ,
([3, 4, 7, 8, 2, 0, 5, 6, 1],) ,
('saved value', 1.5405941366317017) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 0) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', 0.2566118953744497) ,
([3, 0, 7, 8, 4, 2, 5, 6, 1],) ,
('Computing match for mapping',) ,
([3, 0, 7, 8, 4, 2, 5, 6, 1],) ,
('saved value', 0.7972060320061515) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 5) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 1, '-', 5, ',', 6, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 5, 7, 8, 4, 0, 2, 6, 1],) ,
('Computing match for mapping',) ,
([3, 5, 7, 8, 4, 0, 2, 6, 1],) ,
('saved value', 0.5405941366317017) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 6) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 2) ,
('Swap gain:', -0.5405941366317017) ,
([3, 6, 7, 8, 4, 0, 5, 2, 1],) ,
('Computing match for mapping',) ,
([3, 6, 7, 8, 4, 0, 5, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 2, ',', 8, '-', 1) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 1, '-', 1, ',', 8, '-', 2) ,
('Swap gain:', 2.0) ,
([3, 1, 7, 8, 4, 0, 5, 6, 2],) ,
('Computing match for mapping',) ,
([3, 1, 7, 8, 4, 0, 5, 6, 2],) ,
('saved value', 2.540594136631702) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 8) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 2, '-', 8, ',', 3, '-', 7) ,
('Swap gain:', 0.0) ,
([3, 2, 8, 7, 4, 0, 5, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 8, 7, 4, 0, 5, 6, 1],) ,
('saved value', 0.5405941366317017) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 4) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', 1.425181237465103) ,
([3, 2, 4, 8, 7, 0, 5, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 8, 7, 0, 5, 6, 1],) ,
('saved value', 1.9657753740968047) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 0) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 7) ,
('Swap gain:', 1.0) ,
([3, 2, 0, 8, 4, 7, 5, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 0, 8, 4, 7, 5, 6, 1],) ,
('saved value', 1.5405941366317017) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 5) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 2, '-', 5, ',', 6, '-', 7) ,
('Swap gain:', 0.5223025907899909) ,
([3, 2, 5, 8, 4, 0, 7, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 5, 8, 4, 0, 7, 6, 1],) ,
('saved value', 1.0628967274216925) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 6) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 7) ,
('Swap gain:', -0.5405941366317017) ,
([3, 2, 6, 8, 4, 0, 5, 7, 1],) ,
('Computing match for mapping',) ,
([3, 2, 6, 8, 4, 0, 5, 7, 1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 7, ',', 8, '-', 1) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 2, '-', 1, ',', 8, '-', 7) ,
('Swap gain:', 0.5069831227987472) ,
([3, 2, 1, 8, 4, 0, 5, 6, 7],) ,
('Computing match for mapping',) ,
([3, 2, 1, 8, 4, 0, 5, 6, 7],) ,
('saved value', 1.047577259430449) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 8, ',', 4, '-', 4) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 8) ,
('Swap gain:', 0.5223025907899909) ,
([3, 2, 7, 4, 8, 0, 5, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 4, 8, 0, 5, 6, 1],) ,
('saved value', 1.0628967274216925) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 8, ',', 5, '-', 0) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 8) ,
('Swap gain:', 0.0) ,
([3, 2, 7, 0, 4, 8, 5, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 0, 4, 8, 5, 6, 1],) ,
('saved value', 0.5405941366317017) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 8, ',', 6, '-', 5) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 3, '-', 5, ',', 6, '-', 8) ,
('Swap gain:', 3.0) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('saved value', 3.540594136631702) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 8, ',', 7, '-', 6) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 8) ,
('Swap gain:', -0.5405941366317017) ,
([3, 2, 7, 6, 4, 0, 5, 8, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 6, 4, 0, 5, 8, 1],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 8, ',', 8, '-', 1) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 3, '-', 1, ',', 8, '-', 8) ,
('Swap gain:', 0.0) ,
([3, 2, 7, 1, 4, 0, 5, 6, 8],) ,
('Computing match for mapping',) ,
([3, 2, 7, 1, 4, 0, 5, 6, 8],) ,
('saved value', 0.5405941366317017) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 0) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([3, 2, 7, 8, 0, 4, 5, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 8, 0, 4, 5, 6, 1],) ,
('saved value', 0.5405941366317017) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 5) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 4, '-', 5, ',', 6, '-', 4) ,
('Swap gain:', 0.0) ,
([3, 2, 7, 8, 5, 0, 4, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 8, 5, 0, 4, 6, 1],) ,
('saved value', 0.5405941366317017) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 4, ',', 7, '-', 6) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', 0.9663889861670454) ,
([3, 2, 7, 8, 6, 0, 5, 4, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 8, 6, 0, 5, 4, 1],) ,
('saved value', 1.5069831227987471) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 4, ',', 8, '-', 1) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 4, '-', 1, ',', 8, '-', 4) ,
('Swap gain:', 1.0628967274216925) ,
([3, 2, 7, 8, 1, 0, 5, 6, 4],) ,
('Computing match for mapping',) ,
([3, 2, 7, 8, 1, 0, 5, 6, 4],) ,
('saved value', 1.6034908640533942) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 5) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 5, '-', 5, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 2, 7, 8, 4, 5, 0, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 8, 4, 5, 0, 6, 1],) ,
('saved value', 0.5405941366317017) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 6) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', -0.11541289916659869) ,
([3, 2, 7, 8, 4, 6, 5, 0, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 8, 4, 6, 5, 0, 1],) ,
('saved value', 0.42518123746510306) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 1) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 5, '-', 1, ',', 8, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 2, 7, 8, 4, 1, 5, 6, 0],) ,
('Computing match for mapping',) ,
([3, 2, 7, 8, 4, 1, 5, 6, 0],) ,
('saved value', 0.5405941366317017) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 5, ',', 7, '-', 6) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', 5) ,
('Swap gain:', -0.5405941366317017) ,
([3, 2, 7, 8, 4, 0, 6, 5, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 8, 4, 0, 6, 5, 1],) ,
('saved value', 0.0) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 5, ',', 8, '-', 1) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 6, '-', 1, ',', 8, '-', 5) ,
('Swap gain:', 1.0) ,
([3, 2, 7, 8, 4, 0, 1, 6, 5],) ,
('Computing match for mapping',) ,
([3, 2, 7, 8, 4, 0, 1, 6, 5],) ,
('saved value', 1.5405941366317017) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 6, ',', 8, '-', 1) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('After swapping:', 7, '-', 1, ',', 8, '-', 6) ,
('Swap gain:', 0.45940586336829825) ,
([3, 2, 7, 8, 4, 0, 5, 1, 6],) ,
('Computing match for mapping',) ,
([3, 2, 7, 8, 4, 0, 5, 1, 6],) ,
('saved value', 1.0) ,
('Use swap gain',) ,
('Original mapping', [3, 2, 7, 8, 4, 0, 5, 6, 1]) ,
('Current mapping', [3, 2, 7, 5, 4, 0, 8, 6, 1]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 3.540594136631702) ,
('Current mapping:', [3, 2, 7, 5, 4, 0, 8, 6, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 2) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 3) ,
('Swap gain:', 1.0) ,
([2, 3, 7, 5, 4, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([2, 3, 7, 5, 4, 0, 8, 6, 1],) ,
('saved value', 4.540594136631702) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 7) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 3) ,
('Swap gain:', 0.0) ,
([7, 2, 3, 5, 4, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([7, 2, 3, 5, 4, 0, 8, 6, 1],) ,
('saved value', 3.540594136631702) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 5) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -2.0) ,
([5, 2, 7, 3, 4, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([5, 2, 7, 3, 4, 0, 8, 6, 1],) ,
('saved value', 1.540594136631702) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 4) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([4, 2, 7, 5, 3, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([4, 2, 7, 5, 3, 0, 8, 6, 1],) ,
('saved value', 3.540594136631702) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 0) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 2, 7, 5, 4, 3, 8, 6, 1],) ,
('Computing match for mapping',) ,
([0, 2, 7, 5, 4, 3, 8, 6, 1],) ,
('saved value', 3.540594136631702) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', 8) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', 0.0) ,
([8, 2, 7, 5, 4, 0, 3, 6, 1],) ,
('Computing match for mapping',) ,
([8, 2, 7, 5, 4, 0, 3, 6, 1],) ,
('saved value', 3.540594136631702) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 3, ',', 7, '-', 6) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 3) ,
('Swap gain:', -0.5405941366317017) ,
([6, 2, 7, 5, 4, 0, 8, 3, 1],) ,
('Computing match for mapping',) ,
([6, 2, 7, 5, 4, 0, 8, 3, 1],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 3, ',', 8, '-', 1) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 1, ',', 8, '-', 3) ,
('Swap gain:', 0.0) ,
([1, 2, 7, 5, 4, 0, 8, 6, 3],) ,
('Computing match for mapping',) ,
([1, 2, 7, 5, 4, 0, 8, 6, 3],) ,
('saved value', 3.540594136631702) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 7) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 2) ,
('Swap gain:', 0.5223025907899909) ,
([3, 7, 2, 5, 4, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 7, 2, 5, 4, 0, 8, 6, 1],) ,
('saved value', 4.062896727421693) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([3, 5, 7, 2, 4, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 5, 7, 2, 4, 0, 8, 6, 1],) ,
('saved value', 2.540594136631702) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', 1.0) ,
([3, 4, 7, 5, 2, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 4, 7, 5, 2, 0, 8, 6, 1],) ,
('saved value', 4.540594136631702) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 0) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', 0.2566118953744497) ,
([3, 0, 7, 5, 4, 2, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 0, 7, 5, 4, 2, 8, 6, 1],) ,
('saved value', 3.7972060320061516) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 8) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([3, 8, 7, 5, 4, 0, 2, 6, 1],) ,
('Computing match for mapping',) ,
([3, 8, 7, 5, 4, 0, 2, 6, 1],) ,
('saved value', 2.540594136631702) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 6) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 2) ,
('Swap gain:', -0.5405941366317017) ,
([3, 6, 7, 5, 4, 0, 8, 2, 1],) ,
('Computing match for mapping',) ,
([3, 6, 7, 5, 4, 0, 8, 2, 1],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 2, ',', 8, '-', 1) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 1, ',', 8, '-', 2) ,
('Swap gain:', 2.0) ,
([3, 1, 7, 5, 4, 0, 8, 6, 2],) ,
('Computing match for mapping',) ,
([3, 1, 7, 5, 4, 0, 8, 6, 2],) ,
('saved value', 5.540594136631702) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 5) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 7) ,
('Swap gain:', -1.477697409210009) ,
([3, 2, 5, 7, 4, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 5, 7, 4, 0, 8, 6, 1],) ,
('saved value', 2.062896727421693) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 4) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', 2.425181237465103) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('saved value', 5.965775374096805) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 0) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 7) ,
('Swap gain:', 1.0) ,
([3, 2, 0, 5, 4, 7, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 0, 5, 4, 7, 8, 6, 1],) ,
('saved value', 4.540594136631702) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 8) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -1.0) ,
([3, 2, 8, 5, 4, 0, 7, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 8, 5, 4, 0, 7, 6, 1],) ,
('saved value', 2.540594136631702) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 6) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 7) ,
('Swap gain:', -0.5405941366317017) ,
([3, 2, 6, 5, 4, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([3, 2, 6, 5, 4, 0, 8, 7, 1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 7, ',', 8, '-', 1) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 1, ',', 8, '-', 7) ,
('Swap gain:', 0.5069831227987472) ,
([3, 2, 1, 5, 4, 0, 8, 6, 7],) ,
('Computing match for mapping',) ,
([3, 2, 1, 5, 4, 0, 8, 6, 7],) ,
('saved value', 4.047577259430449) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -1.477697409210009) ,
([3, 2, 7, 4, 5, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 4, 5, 0, 8, 6, 1],) ,
('saved value', 2.062896727421693) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 0) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', -2.0) ,
([3, 2, 7, 0, 4, 5, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 0, 4, 5, 8, 6, 1],) ,
('saved value', 1.540594136631702) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -3.0) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 8, 4, 0, 5, 6, 1],) ,
('saved value', 0.5405941366317017) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 6) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 5) ,
('Swap gain:', -2.540594136631702) ,
([3, 2, 7, 6, 4, 0, 8, 5, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 6, 4, 0, 8, 5, 1],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 1) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 3, '-', 1, ',', 8, '-', 5) ,
('Swap gain:', -1.0) ,
([3, 2, 7, 1, 4, 0, 8, 6, 5],) ,
('Computing match for mapping',) ,
([3, 2, 7, 1, 4, 0, 8, 6, 5],) ,
('saved value', 2.540594136631702) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 0) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([3, 2, 7, 5, 0, 4, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 5, 0, 4, 8, 6, 1],) ,
('saved value', 3.540594136631702) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 8) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -1.0) ,
([3, 2, 7, 5, 8, 0, 4, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 5, 8, 0, 4, 6, 1],) ,
('saved value', 2.540594136631702) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 4, ',', 7, '-', 6) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', 1.9663889861670454) ,
([3, 2, 7, 5, 6, 0, 8, 4, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 5, 6, 0, 8, 4, 1],) ,
('saved value', 5.506983122798747) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 4, ',', 8, '-', 1) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 4, '-', 1, ',', 8, '-', 4) ,
('Swap gain:', 1.0628967274216925) ,
([3, 2, 7, 5, 1, 0, 8, 6, 4],) ,
('Computing match for mapping',) ,
([3, 2, 7, 5, 1, 0, 8, 6, 4],) ,
('saved value', 4.603490864053395) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 8) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -1.0) ,
([3, 2, 7, 5, 4, 8, 0, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 5, 4, 8, 0, 6, 1],) ,
('saved value', 2.540594136631702) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 6) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', -0.11541289916659869) ,
([3, 2, 7, 5, 4, 6, 8, 0, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 5, 4, 6, 8, 0, 1],) ,
('saved value', 3.4251812374651034) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 1) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 5, '-', 1, ',', 8, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 2, 7, 5, 4, 1, 8, 6, 0],) ,
('Computing match for mapping',) ,
([3, 2, 7, 5, 4, 1, 8, 6, 0],) ,
('saved value', 3.540594136631702) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 6) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', 8) ,
('Swap gain:', -1.5405941366317017) ,
([3, 2, 7, 5, 4, 0, 6, 8, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 5, 4, 0, 6, 8, 1],) ,
('saved value', 2.0) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 1) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 6, '-', 1, ',', 8, '-', 8) ,
('Swap gain:', -1.0) ,
([3, 2, 7, 5, 4, 0, 1, 6, 8],) ,
('Computing match for mapping',) ,
([3, 2, 7, 5, 4, 0, 1, 6, 8],) ,
('saved value', 2.540594136631702) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 6, ',', 8, '-', 1) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('After swapping:', 7, '-', 1, ',', 8, '-', 6) ,
('Swap gain:', 0.45940586336829825) ,
([3, 2, 7, 5, 4, 0, 8, 1, 6],) ,
('Computing match for mapping',) ,
([3, 2, 7, 5, 4, 0, 8, 1, 6],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [3, 2, 7, 5, 4, 0, 8, 6, 1]) ,
('Current mapping', [3, 2, 4, 5, 7, 0, 8, 6, 1]) ,
('Gain after the hill-climbing', 2.425181237465103) ,
('Update triple match number to:', 5.965775374096805) ,
('Current mapping:', [3, 2, 4, 5, 7, 0, 8, 6, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 2) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 3) ,
('Swap gain:', 2.0) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('saved value', 7.965775374096805) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 4) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -2.0) ,
([4, 2, 3, 5, 7, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 7, 0, 8, 6, 1],) ,
('saved value', 3.965775374096805) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 5) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -3.0) ,
([5, 2, 4, 3, 7, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([5, 2, 4, 3, 7, 0, 8, 6, 1],) ,
('saved value', 2.965775374096805) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 7) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 7, ',', 4, '-', 3) ,
('Swap gain:', -0.42518123746510306) ,
([7, 2, 4, 5, 3, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([7, 2, 4, 5, 3, 0, 8, 6, 1],) ,
('saved value', 5.540594136631702) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 0) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 2, 4, 5, 7, 3, 8, 6, 1],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 7, 3, 8, 6, 1],) ,
('saved value', 5.965775374096805) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', 8) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -1.0) ,
([8, 2, 4, 5, 7, 0, 3, 6, 1],) ,
('Computing match for mapping',) ,
([8, 2, 4, 5, 7, 0, 3, 6, 1],) ,
('saved value', 4.965775374096805) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 3, ',', 7, '-', 6) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 3) ,
('Swap gain:', -0.5405941366317017) ,
([6, 2, 4, 5, 7, 0, 8, 3, 1],) ,
('Computing match for mapping',) ,
([6, 2, 4, 5, 7, 0, 8, 3, 1],) ,
('saved value', 5.425181237465103) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 3, ',', 8, '-', 1) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 1, ',', 8, '-', 3) ,
('Swap gain:', 0.0) ,
([1, 2, 4, 5, 7, 0, 8, 6, 3],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 7, 0, 8, 6, 3],) ,
('saved value', 5.965775374096805) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 4) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 2) ,
('Swap gain:', -0.477697409210009) ,
([3, 4, 2, 5, 7, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 4, 2, 5, 7, 0, 8, 6, 1],) ,
('saved value', 5.488077964886796) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -2.0) ,
([3, 5, 4, 2, 7, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 5, 4, 2, 7, 0, 8, 6, 1],) ,
('saved value', 3.965775374096805) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 7) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 7, ',', 4, '-', 2) ,
('Swap gain:', -0.42518123746510306) ,
([3, 7, 4, 5, 2, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 7, 4, 5, 2, 0, 8, 6, 1],) ,
('saved value', 5.540594136631702) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 0) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', 0.2566118953744497) ,
([3, 0, 4, 5, 7, 2, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 7, 2, 8, 6, 1],) ,
('saved value', 6.2223872694712545) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 8) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([3, 8, 4, 5, 7, 0, 2, 6, 1],) ,
('Computing match for mapping',) ,
([3, 8, 4, 5, 7, 0, 2, 6, 1],) ,
('saved value', 4.965775374096805) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 6) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 2) ,
('Swap gain:', -0.5405941366317017) ,
([3, 6, 4, 5, 7, 0, 8, 2, 1],) ,
('Computing match for mapping',) ,
([3, 6, 4, 5, 7, 0, 8, 2, 1],) ,
('saved value', 5.425181237465103) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 2, ',', 8, '-', 1) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 1, ',', 8, '-', 2) ,
('Swap gain:', 2.0) ,
([3, 1, 4, 5, 7, 0, 8, 6, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 7, 0, 8, 6, 2],) ,
('saved value', 7.965775374096805) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -2.955394818420018) ,
([3, 2, 5, 4, 7, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 5, 4, 7, 0, 8, 6, 1],) ,
('saved value', 3.010380555676787) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 7) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 7, ',', 4, '-', 4) ,
('Swap gain:', -2.425181237465103) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 7, 5, 4, 0, 8, 6, 1],) ,
('saved value', 3.540594136631702) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 0) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([3, 2, 0, 5, 7, 4, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 0, 5, 7, 4, 8, 6, 1],) ,
('saved value', 3.965775374096805) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -3.0) ,
([3, 2, 8, 5, 7, 0, 4, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 8, 5, 7, 0, 4, 6, 1],) ,
('saved value', 2.965775374096805) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 6) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', -2.033611013832955) ,
([3, 2, 6, 5, 7, 0, 8, 4, 1],) ,
('Computing match for mapping',) ,
([3, 2, 6, 5, 7, 0, 8, 4, 1],) ,
('saved value', 3.93216436026385) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 1) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 1, ',', 8, '-', 4) ,
('Swap gain:', -0.9707142864112619) ,
([3, 2, 1, 5, 7, 0, 8, 6, 4],) ,
('Computing match for mapping',) ,
([3, 2, 1, 5, 7, 0, 8, 6, 4],) ,
('saved value', 4.995061087685543) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 7) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 3, '-', 7, ',', 4, '-', 5) ,
('Swap gain:', -3.425181237465103) ,
([3, 2, 4, 7, 5, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 7, 5, 0, 8, 6, 1],) ,
('saved value', 2.540594136631702) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 0) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', -3.0) ,
([3, 2, 4, 0, 7, 5, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 0, 7, 5, 8, 6, 1],) ,
('saved value', 2.965775374096805) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -4.0) ,
([3, 2, 4, 8, 7, 0, 5, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 8, 7, 0, 5, 6, 1],) ,
('saved value', 1.9657753740968047) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 6) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 5) ,
('Swap gain:', -3.540594136631702) ,
([3, 2, 4, 6, 7, 0, 8, 5, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 6, 7, 0, 8, 5, 1],) ,
('saved value', 2.425181237465103) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 1) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 3, '-', 1, ',', 8, '-', 5) ,
('Swap gain:', -2.0) ,
([3, 2, 4, 1, 7, 0, 8, 6, 5],) ,
('Computing match for mapping',) ,
([3, 2, 4, 1, 7, 0, 8, 6, 5],) ,
('saved value', 3.965775374096805) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 7, ',', 5, '-', 0) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 7) ,
('Swap gain:', 0.5748187625348969) ,
([3, 2, 4, 5, 0, 7, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 0, 7, 8, 6, 1],) ,
('saved value', 6.540594136631702) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 7, ',', 6, '-', 8) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -1.425181237465103) ,
([3, 2, 4, 5, 8, 0, 7, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 8, 0, 7, 6, 1],) ,
('saved value', 4.540594136631702) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 7, ',', 7, '-', 6) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 7) ,
('Swap gain:', 1.0342246259031953) ,
([3, 2, 4, 5, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 6, 0, 8, 7, 1],) ,
('saved value', 7.0) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 7, ',', 8, '-', 1) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 4, '-', 1, ',', 8, '-', 7) ,
('Swap gain:', 0.11541289916659869) ,
([3, 2, 4, 5, 1, 0, 8, 6, 7],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 1, 0, 8, 6, 7],) ,
('saved value', 6.081188273263404) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 8) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -1.0) ,
([3, 2, 4, 5, 7, 8, 0, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 7, 8, 0, 6, 1],) ,
('saved value', 4.965775374096805) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 6) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', -0.11541289916659869) ,
([3, 2, 4, 5, 7, 6, 8, 0, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 7, 6, 8, 0, 1],) ,
('saved value', 5.850362474930206) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 1) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 5, '-', 1, ',', 8, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 2, 4, 5, 7, 1, 8, 6, 0],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 7, 1, 8, 6, 0],) ,
('saved value', 5.965775374096805) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 6) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', 8) ,
('Swap gain:', -1.5405941366317017) ,
([3, 2, 4, 5, 7, 0, 6, 8, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 7, 0, 6, 8, 1],) ,
('saved value', 4.425181237465103) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 1) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 6, '-', 1, ',', 8, '-', 8) ,
('Swap gain:', -1.0) ,
([3, 2, 4, 5, 7, 0, 1, 6, 8],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 7, 0, 1, 6, 8],) ,
('saved value', 4.965775374096805) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 6, ',', 8, '-', 1) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 7, '-', 1, ',', 8, '-', 6) ,
('Swap gain:', 0.45940586336829825) ,
([3, 2, 4, 5, 7, 0, 8, 1, 6],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 7, 0, 8, 1, 6],) ,
('saved value', 6.425181237465103) ,
('Use swap gain',) ,
('Original mapping', [3, 2, 4, 5, 7, 0, 8, 6, 1]) ,
('Current mapping', [2, 3, 4, 5, 7, 0, 8, 6, 1]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 7.965775374096805) ,
('Current mapping:', [2, 3, 4, 5, 7, 0, 8, 6, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 3) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 2) ,
('Swap gain:', -2.0) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 7, 0, 8, 6, 1],) ,
('saved value', 5.965775374096805) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 4) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 2) ,
('Swap gain:', -2.477697409210009) ,
([4, 3, 2, 5, 7, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([4, 3, 2, 5, 7, 0, 8, 6, 1],) ,
('saved value', 5.488077964886796) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 5) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -2.0) ,
([5, 3, 4, 2, 7, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([5, 3, 4, 2, 7, 0, 8, 6, 1],) ,
('saved value', 5.965775374096805) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 7) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 7, ',', 4, '-', 2) ,
('Swap gain:', -0.42518123746510306) ,
([7, 3, 4, 5, 2, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 2, 0, 8, 6, 1],) ,
('saved value', 7.540594136631702) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 0) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 3, 4, 5, 7, 2, 8, 6, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 7, 2, 8, 6, 1],) ,
('saved value', 8.965775374096804) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 8) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([8, 3, 4, 5, 7, 0, 2, 6, 1],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 7, 0, 2, 6, 1],) ,
('saved value', 6.965775374096805) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 2, ',', 7, '-', 6) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 2) ,
('Swap gain:', -0.5405941366317017) ,
([6, 3, 4, 5, 7, 0, 8, 2, 1],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 7, 0, 8, 2, 1],) ,
('saved value', 7.425181237465103) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 2, ',', 8, '-', 1) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 0, '-', 1, ',', 8, '-', 2) ,
('Swap gain:', 2.0) ,
([1, 3, 4, 5, 7, 0, 8, 6, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 7, 0, 8, 6, 2],) ,
('saved value', 9.965775374096804) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -4.0) ,
([2, 4, 3, 5, 7, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([2, 4, 3, 5, 7, 0, 8, 6, 1],) ,
('saved value', 3.965775374096805) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -5.0) ,
([2, 5, 4, 3, 7, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([2, 5, 4, 3, 7, 0, 8, 6, 1],) ,
('saved value', 2.965775374096805) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 7) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 7, ',', 4, '-', 3) ,
('Swap gain:', -2.425181237465103) ,
([2, 7, 4, 5, 3, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([2, 7, 4, 5, 3, 0, 8, 6, 1],) ,
('saved value', 5.540594136631702) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 0) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -1.7433881046255504) ,
([2, 0, 4, 5, 7, 3, 8, 6, 1],) ,
('Computing match for mapping',) ,
([2, 0, 4, 5, 7, 3, 8, 6, 1],) ,
('saved value', 6.2223872694712545) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -3.0) ,
([2, 8, 4, 5, 7, 0, 3, 6, 1],) ,
('Computing match for mapping',) ,
([2, 8, 4, 5, 7, 0, 3, 6, 1],) ,
('saved value', 4.965775374096805) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 6) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 3) ,
('Swap gain:', -2.540594136631702) ,
([2, 6, 4, 5, 7, 0, 8, 3, 1],) ,
('Computing match for mapping',) ,
([2, 6, 4, 5, 7, 0, 8, 3, 1],) ,
('saved value', 5.425181237465103) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 1) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 1, '-', 1, ',', 8, '-', 3) ,
('Swap gain:', -2.0) ,
([2, 1, 4, 5, 7, 0, 8, 6, 3],) ,
('Computing match for mapping',) ,
([2, 1, 4, 5, 7, 0, 8, 6, 3],) ,
('saved value', 5.965775374096805) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -3.955394818420018) ,
([2, 3, 5, 4, 7, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([2, 3, 5, 4, 7, 0, 8, 6, 1],) ,
('saved value', 4.010380555676787) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 7) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 7, ',', 4, '-', 4) ,
('Swap gain:', -3.425181237465103) ,
([2, 3, 7, 5, 4, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([2, 3, 7, 5, 4, 0, 8, 6, 1],) ,
('saved value', 4.540594136631702) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 0) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([2, 3, 0, 5, 7, 4, 8, 6, 1],) ,
('Computing match for mapping',) ,
([2, 3, 0, 5, 7, 4, 8, 6, 1],) ,
('saved value', 4.965775374096805) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([2, 3, 8, 5, 7, 0, 4, 6, 1],) ,
('Computing match for mapping',) ,
([2, 3, 8, 5, 7, 0, 4, 6, 1],) ,
('saved value', 3.965775374096805) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 6) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', -3.033611013832955) ,
([2, 3, 6, 5, 7, 0, 8, 4, 1],) ,
('Computing match for mapping',) ,
([2, 3, 6, 5, 7, 0, 8, 4, 1],) ,
('saved value', 4.93216436026385) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 1) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 2, '-', 1, ',', 8, '-', 4) ,
('Swap gain:', -1.970714286411262) ,
([2, 3, 1, 5, 7, 0, 8, 6, 4],) ,
('Computing match for mapping',) ,
([2, 3, 1, 5, 7, 0, 8, 6, 4],) ,
('saved value', 5.995061087685543) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 7) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 3, '-', 7, ',', 4, '-', 5) ,
('Swap gain:', -3.425181237465103) ,
([2, 3, 4, 7, 5, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 7, 5, 0, 8, 6, 1],) ,
('saved value', 4.540594136631702) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 0) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', -3.0) ,
([2, 3, 4, 0, 7, 5, 8, 6, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 0, 7, 5, 8, 6, 1],) ,
('saved value', 4.965775374096805) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -4.0) ,
([2, 3, 4, 8, 7, 0, 5, 6, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 8, 7, 0, 5, 6, 1],) ,
('saved value', 3.965775374096805) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 6) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 5) ,
('Swap gain:', -3.540594136631702) ,
([2, 3, 4, 6, 7, 0, 8, 5, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 6, 7, 0, 8, 5, 1],) ,
('saved value', 4.425181237465103) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 1) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 3, '-', 1, ',', 8, '-', 5) ,
('Swap gain:', -2.0) ,
([2, 3, 4, 1, 7, 0, 8, 6, 5],) ,
('Computing match for mapping',) ,
([2, 3, 4, 1, 7, 0, 8, 6, 5],) ,
('saved value', 5.965775374096805) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 7, ',', 5, '-', 0) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 7) ,
('Swap gain:', 0.5748187625348969) ,
([2, 3, 4, 5, 0, 7, 8, 6, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 0, 7, 8, 6, 1],) ,
('saved value', 8.540594136631702) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 7, ',', 6, '-', 8) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -1.425181237465103) ,
([2, 3, 4, 5, 8, 0, 7, 6, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 8, 0, 7, 6, 1],) ,
('saved value', 6.540594136631702) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 7, ',', 7, '-', 6) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 7) ,
('Swap gain:', 2.034224625903195) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 7, ',', 8, '-', 1) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 4, '-', 1, ',', 8, '-', 7) ,
('Swap gain:', 0.11541289916659869) ,
([2, 3, 4, 5, 1, 0, 8, 6, 7],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 1, 0, 8, 6, 7],) ,
('saved value', 8.081188273263404) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 8) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 3, 4, 5, 7, 8, 0, 6, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 7, 8, 0, 6, 1],) ,
('saved value', 6.965775374096805) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 6) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', -0.11541289916659869) ,
([2, 3, 4, 5, 7, 6, 8, 0, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 7, 6, 8, 0, 1],) ,
('saved value', 7.850362474930206) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 1) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 5, '-', 1, ',', 8, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 3, 4, 5, 7, 1, 8, 6, 0],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 7, 1, 8, 6, 0],) ,
('saved value', 7.965775374096805) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 6) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', 8) ,
('Swap gain:', -1.5405941366317017) ,
([2, 3, 4, 5, 7, 0, 6, 8, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 7, 0, 6, 8, 1],) ,
('saved value', 6.425181237465103) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 1) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 6, '-', 1, ',', 8, '-', 8) ,
('Swap gain:', -1.0) ,
([2, 3, 4, 5, 7, 0, 1, 6, 8],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 7, 0, 1, 6, 8],) ,
('saved value', 6.965775374096805) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 6, ',', 8, '-', 1) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('After swapping:', 7, '-', 1, ',', 8, '-', 6) ,
('Swap gain:', 0.45940586336829825) ,
([2, 3, 4, 5, 7, 0, 8, 1, 6],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 7, 0, 8, 1, 6],) ,
('saved value', 8.425181237465104) ,
('Use swap gain',) ,
('Original mapping', [2, 3, 4, 5, 7, 0, 8, 6, 1]) ,
('Current mapping', [2, 3, 4, 5, 6, 0, 8, 7, 1]) ,
('Gain after the hill-climbing', 2.034224625903195) ,
('Update triple match number to:', 10.0) ,
('Current mapping:', [2, 3, 4, 5, 6, 0, 8, 7, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 3) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 2) ,
('Swap gain:', -3.0) ,
([3, 2, 4, 5, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 5, 6, 0, 8, 7, 1],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 4) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 2) ,
('Swap gain:', -2.477697409210009) ,
([4, 3, 2, 5, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([4, 3, 2, 5, 6, 0, 8, 7, 1],) ,
('saved value', 7.522302590789991) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 5) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -2.0) ,
([5, 3, 4, 2, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([5, 3, 4, 2, 6, 0, 8, 7, 1],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 6) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([6, 3, 4, 5, 2, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 2, 0, 8, 7, 1],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 0) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 3, 4, 5, 6, 2, 8, 7, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 2, 8, 7, 1],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 8) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -2.0) ,
([8, 3, 4, 5, 6, 0, 2, 7, 1],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 0, 2, 7, 1],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 2, ',', 7, '-', 7) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 7, ',', 7, '-', 2) ,
('Swap gain:', 0.0) ,
([7, 3, 4, 5, 6, 0, 8, 2, 1],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 0, 8, 2, 1],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 2, ',', 8, '-', 1) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 0, '-', 1, ',', 8, '-', 2) ,
('Swap gain:', 2.0) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('saved value', 12.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -5.0) ,
([2, 4, 3, 5, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([2, 4, 3, 5, 6, 0, 8, 7, 1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -6.0) ,
([2, 5, 4, 3, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([2, 5, 4, 3, 6, 0, 8, 7, 1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -5.0) ,
([2, 6, 4, 5, 3, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([2, 6, 4, 5, 3, 0, 8, 7, 1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 0) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -2.7433881046255504) ,
([2, 0, 4, 5, 6, 3, 8, 7, 1],) ,
('Computing match for mapping',) ,
([2, 0, 4, 5, 6, 3, 8, 7, 1],) ,
('saved value', 7.25661189537445) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -5.0) ,
([2, 8, 4, 5, 6, 0, 3, 7, 1],) ,
('Computing match for mapping',) ,
([2, 8, 4, 5, 6, 0, 3, 7, 1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 7) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 1, '-', 7, ',', 7, '-', 3) ,
('Swap gain:', -3.0) ,
([2, 7, 4, 5, 6, 0, 8, 3, 1],) ,
('Computing match for mapping',) ,
([2, 7, 4, 5, 6, 0, 8, 3, 1],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 1) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 1, '-', 1, ',', 8, '-', 3) ,
('Swap gain:', -3.0) ,
([2, 1, 4, 5, 6, 0, 8, 7, 3],) ,
('Computing match for mapping',) ,
([2, 1, 4, 5, 6, 0, 8, 7, 3],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -3.955394818420018) ,
([2, 3, 5, 4, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([2, 3, 5, 4, 6, 0, 8, 7, 1],) ,
('saved value', 6.044605181579982) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -6.0) ,
([2, 3, 6, 5, 4, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([2, 3, 6, 5, 4, 0, 8, 7, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 0) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([2, 3, 0, 5, 6, 4, 8, 7, 1],) ,
('Computing match for mapping',) ,
([2, 3, 0, 5, 6, 4, 8, 7, 1],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -5.0) ,
([2, 3, 8, 5, 6, 0, 4, 7, 1],) ,
('Computing match for mapping',) ,
([2, 3, 8, 5, 6, 0, 4, 7, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 7) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 2, '-', 7, ',', 7, '-', 4) ,
('Swap gain:', -2.493016877201253) ,
([2, 3, 7, 5, 6, 0, 8, 4, 1],) ,
('Computing match for mapping',) ,
([2, 3, 7, 5, 6, 0, 8, 4, 1],) ,
('saved value', 7.506983122798747) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 1) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 2, '-', 1, ',', 8, '-', 4) ,
('Swap gain:', -1.970714286411262) ,
([2, 3, 1, 5, 6, 0, 8, 7, 4],) ,
('Computing match for mapping',) ,
([2, 3, 1, 5, 6, 0, 8, 7, 4],) ,
('saved value', 8.029285713588738) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -6.0) ,
([2, 3, 4, 6, 5, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 6, 5, 0, 8, 7, 1],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 0) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', -3.0) ,
([2, 3, 4, 0, 6, 5, 8, 7, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 0, 6, 5, 8, 7, 1],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -5.0) ,
([2, 3, 4, 8, 6, 0, 5, 7, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 8, 6, 0, 5, 7, 1],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 7) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 3, '-', 7, ',', 7, '-', 5) ,
('Swap gain:', -3.0) ,
([2, 3, 4, 7, 6, 0, 8, 5, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 7, 6, 0, 8, 5, 1],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 1) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 3, '-', 1, ',', 8, '-', 5) ,
('Swap gain:', -2.0) ,
([2, 3, 4, 1, 6, 0, 8, 7, 5],) ,
('Computing match for mapping',) ,
([2, 3, 4, 1, 6, 0, 8, 7, 5],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 0) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 6) ,
('Swap gain:', -2.574818762534897) ,
([2, 3, 4, 5, 0, 6, 8, 7, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 0, 6, 8, 7, 1],) ,
('saved value', 7.425181237465103) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -4.0) ,
([2, 3, 4, 5, 8, 0, 6, 7, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 8, 0, 6, 7, 1],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 7) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 4, '-', 7, ',', 7, '-', 6) ,
('Swap gain:', -2.034224625903195) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 7, 0, 8, 6, 1],) ,
('saved value', 7.965775374096805) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 1) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 4, '-', 1, ',', 8, '-', 6) ,
('Swap gain:', -2.459405863368298) ,
([2, 3, 4, 5, 1, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 1, 0, 8, 7, 6],) ,
('saved value', 7.540594136631702) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 8) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 3, 4, 5, 6, 8, 0, 7, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 8, 0, 7, 1],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 7) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 5, '-', 7, ',', 7, '-', 0) ,
('Swap gain:', 2.0) ,
([2, 3, 4, 5, 6, 7, 8, 0, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 7, 8, 0, 1],) ,
('saved value', 12.0) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 1) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 5, '-', 1, ',', 8, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 3, 4, 5, 6, 1, 8, 7, 0],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 1, 8, 7, 0],) ,
('saved value', 10.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 7) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 6, '-', 7, ',', 7, '-', 8) ,
('Swap gain:', -2.0) ,
([2, 3, 4, 5, 6, 0, 7, 8, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 0, 7, 8, 1],) ,
('saved value', 8.0) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 1) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 6, '-', 1, ',', 8, '-', 8) ,
('Swap gain:', -2.0) ,
([2, 3, 4, 5, 6, 0, 1, 7, 8],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 0, 1, 7, 8],) ,
('saved value', 8.0) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 7, ',', 8, '-', 1) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('After swapping:', 7, '-', 1, ',', 8, '-', 7) ,
('Swap gain:', 1.0) ,
([2, 3, 4, 5, 6, 0, 8, 1, 7],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 0, 8, 1, 7],) ,
('saved value', 11.0) ,
('Use swap gain',) ,
('Original mapping', [2, 3, 4, 5, 6, 0, 8, 7, 1]) ,
('Current mapping', [1, 3, 4, 5, 6, 0, 8, 7, 2]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 12.0) ,
('Current mapping:', [1, 3, 4, 5, 6, 0, 8, 7, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 3) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 1) ,
('Swap gain:', -3.0) ,
([3, 1, 4, 5, 6, 0, 8, 7, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 6, 0, 8, 7, 2],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 4) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -2.493016877201253) ,
([4, 3, 1, 5, 6, 0, 8, 7, 2],) ,
('Computing match for mapping',) ,
([4, 3, 1, 5, 6, 0, 8, 7, 2],) ,
('saved value', 9.506983122798747) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 3, 4, 1, 6, 0, 8, 7, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 1, 6, 0, 8, 7, 2],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 6) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -2.459405863368298) ,
([6, 3, 4, 5, 1, 0, 8, 7, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 1, 0, 8, 7, 2],) ,
('saved value', 9.540594136631702) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 0) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', 1.0) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('saved value', 13.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 1, ',', 6, '-', 8) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -2.0) ,
([8, 3, 4, 5, 6, 0, 1, 7, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 0, 1, 7, 2],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 1, ',', 7, '-', 7) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 0, '-', 7, ',', 7, '-', 1) ,
('Swap gain:', 2.0) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('saved value', 14.0) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 1, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -2.0) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 0, 8, 7, 1],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -5.0) ,
([1, 4, 3, 5, 6, 0, 8, 7, 2],) ,
('Computing match for mapping',) ,
([1, 4, 3, 5, 6, 0, 8, 7, 2],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -6.0) ,
([1, 5, 4, 3, 6, 0, 8, 7, 2],) ,
('Computing match for mapping',) ,
([1, 5, 4, 3, 6, 0, 8, 7, 2],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -5.0) ,
([1, 6, 4, 5, 3, 0, 8, 7, 2],) ,
('Computing match for mapping',) ,
([1, 6, 4, 5, 3, 0, 8, 7, 2],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 0) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -2.7433881046255504) ,
([1, 0, 4, 5, 6, 3, 8, 7, 2],) ,
('Computing match for mapping',) ,
([1, 0, 4, 5, 6, 3, 8, 7, 2],) ,
('saved value', 9.25661189537445) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -5.0) ,
([1, 8, 4, 5, 6, 0, 3, 7, 2],) ,
('Computing match for mapping',) ,
([1, 8, 4, 5, 6, 0, 3, 7, 2],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 7) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 1, '-', 7, ',', 7, '-', 3) ,
('Swap gain:', -3.0) ,
([1, 7, 4, 5, 6, 0, 8, 3, 2],) ,
('Computing match for mapping',) ,
([1, 7, 4, 5, 6, 0, 8, 3, 2],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -5.0) ,
([1, 2, 4, 5, 6, 0, 8, 7, 3],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 6, 0, 8, 7, 3],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -3.955394818420018) ,
([1, 3, 5, 4, 6, 0, 8, 7, 2],) ,
('Computing match for mapping',) ,
([1, 3, 5, 4, 6, 0, 8, 7, 2],) ,
('saved value', 8.044605181579982) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -6.0) ,
([1, 3, 6, 5, 4, 0, 8, 7, 2],) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 4, 0, 8, 7, 2],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 0) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 3, 0, 5, 6, 4, 8, 7, 2],) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 6, 4, 8, 7, 2],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -5.0) ,
([1, 3, 8, 5, 6, 0, 4, 7, 2],) ,
('Computing match for mapping',) ,
([1, 3, 8, 5, 6, 0, 4, 7, 2],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 7) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 2, '-', 7, ',', 7, '-', 4) ,
('Swap gain:', -2.493016877201253) ,
([1, 3, 7, 5, 6, 0, 8, 4, 2],) ,
('Computing match for mapping',) ,
([1, 3, 7, 5, 6, 0, 8, 4, 2],) ,
('saved value', 9.506983122798747) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -3.955394818420018) ,
([1, 3, 2, 5, 6, 0, 8, 7, 4],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 6, 0, 8, 7, 4],) ,
('saved value', 8.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -6.0) ,
([1, 3, 4, 6, 5, 0, 8, 7, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 6, 5, 0, 8, 7, 2],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 0) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 3, 4, 0, 6, 5, 8, 7, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 0, 6, 5, 8, 7, 2],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -5.0) ,
([1, 3, 4, 8, 6, 0, 5, 7, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 8, 6, 0, 5, 7, 2],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 7) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 3, '-', 7, ',', 7, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 3, 4, 7, 6, 0, 8, 5, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 7, 6, 0, 8, 5, 2],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 3, 4, 2, 6, 0, 8, 7, 5],) ,
('Computing match for mapping',) ,
([1, 3, 4, 2, 6, 0, 8, 7, 5],) ,
('saved value', 9.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 0) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 6) ,
('Swap gain:', -2.574818762534897) ,
([1, 3, 4, 5, 0, 6, 8, 7, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 0, 6, 8, 7, 2],) ,
('saved value', 9.425181237465104) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -4.0) ,
([1, 3, 4, 5, 8, 0, 6, 7, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 8, 0, 6, 7, 2],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 7) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 4, '-', 7, ',', 7, '-', 6) ,
('Swap gain:', -2.034224625903196) ,
([1, 3, 4, 5, 7, 0, 8, 6, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 7, 0, 8, 6, 2],) ,
('saved value', 9.965775374096804) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -5.0) ,
([1, 3, 4, 5, 2, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 2, 0, 8, 7, 6],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 8) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 4, 5, 6, 8, 0, 7, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 8, 0, 7, 2],) ,
('saved value', 10.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 7) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 5, '-', 7, ',', 7, '-', 0) ,
('Swap gain:', 2.0) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('saved value', 14.0) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 4, 5, 6, 2, 8, 7, 0],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 2, 8, 7, 0],) ,
('saved value', 10.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 7) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 6, '-', 7, ',', 7, '-', 8) ,
('Swap gain:', -2.0) ,
([1, 3, 4, 5, 6, 0, 7, 8, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 0, 7, 8, 2],) ,
('saved value', 10.0) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -4.0) ,
([1, 3, 4, 5, 6, 0, 2, 7, 8],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 0, 2, 7, 8],) ,
('saved value', 8.0) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 7, ',', 8, '-', 2) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -2.0) ,
([1, 3, 4, 5, 6, 0, 8, 2, 7],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 0, 8, 2, 7],) ,
('saved value', 10.0) ,
('Use swap gain',) ,
('Original mapping', [1, 3, 4, 5, 6, 0, 8, 7, 2]) ,
('Current mapping', [7, 3, 4, 5, 6, 0, 8, 1, 2]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 14.0) ,
('Current mapping:', [7, 3, 4, 5, 6, 0, 8, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 3) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 7) ,
('Swap gain:', -3.0) ,
([3, 7, 4, 5, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([3, 7, 4, 5, 6, 0, 8, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 4) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 7) ,
('Swap gain:', -3.0) ,
([4, 3, 7, 5, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 7, 5, 6, 0, 8, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 5) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 7) ,
('Swap gain:', -3.0) ,
([5, 3, 4, 7, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 7, 6, 0, 8, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 6) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 7) ,
('Swap gain:', -2.574818762534897) ,
([6, 3, 4, 5, 7, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 7, 0, 8, 1, 2],) ,
('saved value', 11.425181237465104) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 0) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 7) ,
('Swap gain:', 3.0) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 17.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', 8) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -2.0) ,
([8, 3, 4, 5, 6, 0, 7, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 0, 7, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 7, ',', 7, '-', 1) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -2.0) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 0, 8, 7, 2],) ,
('saved value', 12.0) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 7, ',', 8, '-', 2) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -3.0) ,
([2, 3, 4, 5, 6, 0, 8, 1, 7],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 0, 8, 1, 7],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -5.0) ,
([7, 4, 3, 5, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 4, 3, 5, 6, 0, 8, 1, 2],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -6.0) ,
([7, 5, 4, 3, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 5, 4, 3, 6, 0, 8, 1, 2],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -5.0) ,
([7, 6, 4, 5, 3, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 6, 4, 5, 3, 0, 8, 1, 2],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 0) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -2.7433881046255504) ,
([7, 0, 4, 5, 6, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 0, 4, 5, 6, 3, 8, 1, 2],) ,
('saved value', 11.25661189537445) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -5.0) ,
([7, 8, 4, 5, 6, 0, 3, 1, 2],) ,
('Computing match for mapping',) ,
([7, 8, 4, 5, 6, 0, 3, 1, 2],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -5.0) ,
([7, 1, 4, 5, 6, 0, 8, 3, 2],) ,
('Computing match for mapping',) ,
([7, 1, 4, 5, 6, 0, 8, 3, 2],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -6.0) ,
([7, 2, 4, 5, 6, 0, 8, 1, 3],) ,
('Computing match for mapping',) ,
([7, 2, 4, 5, 6, 0, 8, 1, 3],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -3.955394818420018) ,
([7, 3, 5, 4, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 5, 4, 6, 0, 8, 1, 2],) ,
('saved value', 10.044605181579982) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -6.0) ,
([7, 3, 6, 5, 4, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 6, 5, 4, 0, 8, 1, 2],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 0) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([7, 3, 0, 5, 6, 4, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 0, 5, 6, 4, 8, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -5.0) ,
([7, 3, 8, 5, 6, 0, 4, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 8, 5, 6, 0, 4, 1, 2],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -3.9860337544025057) ,
([7, 3, 1, 5, 6, 0, 8, 4, 2],) ,
('Computing match for mapping',) ,
([7, 3, 1, 5, 6, 0, 8, 4, 2],) ,
('saved value', 10.013966245597494) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -4.955394818420018) ,
([7, 3, 2, 5, 6, 0, 8, 1, 4],) ,
('Computing match for mapping',) ,
([7, 3, 2, 5, 6, 0, 8, 1, 4],) ,
('saved value', 9.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -6.0) ,
([7, 3, 4, 6, 5, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 6, 5, 0, 8, 1, 2],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 0) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', -3.0) ,
([7, 3, 4, 0, 6, 5, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 0, 6, 5, 8, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -5.0) ,
([7, 3, 4, 8, 6, 0, 5, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 8, 6, 0, 5, 1, 2],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 1) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -5.0) ,
([7, 3, 4, 1, 6, 0, 8, 5, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 1, 6, 0, 8, 5, 2],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -4.0) ,
([7, 3, 4, 2, 6, 0, 8, 1, 5],) ,
('Computing match for mapping',) ,
([7, 3, 4, 2, 6, 0, 8, 1, 5],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 0) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 6) ,
('Swap gain:', -2.574818762534897) ,
([7, 3, 4, 5, 0, 6, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 0, 6, 8, 1, 2],) ,
('saved value', 11.425181237465104) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -4.0) ,
([7, 3, 4, 5, 8, 0, 6, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 8, 0, 6, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -3.9188117267365965) ,
([7, 3, 4, 5, 1, 0, 8, 6, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 1, 0, 8, 6, 2],) ,
('saved value', 10.081188273263404) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -6.0) ,
([7, 3, 4, 5, 2, 0, 8, 1, 6],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 2, 0, 8, 1, 6],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 8) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -2.0) ,
([7, 3, 4, 5, 6, 8, 0, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 8, 0, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 1) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -2.0) ,
([7, 3, 4, 5, 6, 1, 8, 0, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 1, 8, 0, 2],) ,
('saved value', 12.0) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 2) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 3, 4, 5, 6, 2, 8, 1, 0],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 2, 8, 1, 0],) ,
('saved value', 11.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -4.0) ,
([7, 3, 4, 5, 6, 0, 1, 8, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 0, 1, 8, 2],) ,
('saved value', 10.0) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -5.0) ,
([7, 3, 4, 5, 6, 0, 2, 1, 8],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 0, 2, 1, 8],) ,
('saved value', 9.0) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4.0) ,
([7, 3, 4, 5, 6, 0, 8, 2, 1],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 0, 8, 2, 1],) ,
('saved value', 10.0) ,
('Use swap gain',) ,
('Original mapping', [7, 3, 4, 5, 6, 0, 8, 1, 2]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 17.0) ,
('Current mapping:', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -3.7433881046255504) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13.25661189537445) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 6, 7, 8, 1, 2],) ,
('saved value', 13.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 0, 6, 7, 8, 1, 2],) ,
('saved value', 13.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([6, 3, 4, 5, 0, 7, 8, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 4, 5, 6, 0, 8, 1, 2],) ,
('saved value', 14.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('Computing match for mapping',) ,
([8, 3, 4, 5, 6, 7, 0, 1, 2],) ,
('saved value', 14.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 6, 7, 8, 0, 2],) ,
('saved value', 14.0) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 8, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 6, 7, 8, 1, 0],) ,
('saved value', 13.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 3, 5, 6, 7, 8, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -7.0) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 4, 3, 6, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -7.0) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 4, 5, 3, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 4, 5, 6, 3, 8, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 8, 4, 5, 6, 7, 3, 1, 2],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 6, 7, 8, 3, 2],) ,
('saved value', 12.0) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 3, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 8, '-', 3) ,
('Swap gain:', -7.0) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 6, 7, 8, 1, 3],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 5) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', -3.955394818420018) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7, 8, 1, 2],) ,
('saved value', 13.044605181579982) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -7.0) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 5, 4, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 5, 6, 4, 8, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 5, 6, 7, 4, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -3.9860337544025057) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 6, 7, 8, 4, 2],) ,
('saved value', 13.013966245597494) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 8, '-', 4) ,
('Swap gain:', -4.955394818420018) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 6, 7, 8, 1, 4],) ,
('saved value', 12.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 6) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', -7.0) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 5, 7, 8, 1, 2],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 7, 6, 5, 8, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 8, 6, 7, 5, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 7, 8, 5, 2],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 5, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 8, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 7, 8, 1, 5],) ,
('saved value', 13.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -4.149637525069794) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 7, 6, 8, 1, 2],) ,
('saved value', 12.850362474930206) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 6) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 8, 7, 6, 1, 2],) ,
('saved value', 12.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', -4.918811726736596) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 1, 7, 8, 6, 2],) ,
('saved value', 12.081188273263404) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 6, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 8, '-', 6) ,
('Swap gain:', -7.0) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 2, 7, 8, 1, 6],) ,
('saved value', 10.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 8) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 8, 7, 1, 2],) ,
('saved value', 13.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 1, 8, 7, 2],) ,
('saved value', 13.0) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 7, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 5, '-', 2, ',', 8, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 2, 8, 1, 7],) ,
('saved value', 12.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 8, ',', 7, '-', 1) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 1, 8, 2],) ,
('saved value', 13.0) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 8, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 6, '-', 2, ',', 8, '-', 8) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 2, 1, 8],) ,
('saved value', 12.0) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 2) ,
([0, 3, 4, 5, 6, 7, 8, 1, 2],) ,
('After swapping:', 7, '-', 2, ',', 8, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 5, 6, 7, 8, 2, 1],) ,
('saved value', 13.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Current mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 17.0) ,
('best node mapping', [0, 3, 4, 5, 6, 7, 8, 1, 2]) ,
('Best node mapping alignment:', 'a0(confirm-01)-b0(approve-01) a1(nominate-01)-b3(nominate-01) a2(person)-b4(person) a3(name)-b5(name) a4(court)-b6(court) a5(appeal-01)-b7(appeal-01) a6(key-02)-b8(key-02) a7(government-organization)-b1(government-organization) a8(name)-b2(name)') ,
('F-score:', 0.85) ,
Smatch score F1 0.850
('AMR pair', 4) ,
('============================================',) ,
('AMR 1 (one-line):', '(p0 / possible-01:ARG1 (d0 / do-02:ARG1 (i0 / improve-01:ARG0 i1:ARG1 (s0 / score:poss i1:mod (c0 / credit))):ARG0 (a0 / amr-unknown:mod (m0 / more)):ARG0 (i1 / i)))') ,
('AMR 2 (one-line):', '(p0 / possible-01:ARG1 (d0 / do-02:ARG1 (a0 / amr-unknown):ARG0 (i0 / i:poss-of (s0 / score:mod (c0 / credit))):ARG2 (r0 / realistic-03):ARG2 (r1 / raise-01:ARG0 i0:ARG1 s0)))') ,
('Instance triples of AMR 1:', 8) ,
([('instance', 'a0', 'possible-01'), ('instance', 'a1', 'do-02'), ('instance', 'a2', 'improve-01'), ('instance', 'a3', 'score'), ('instance', 'a4', 'credit'), ('instance', 'a5', 'amr-unknown'), ('instance', 'a6', 'more'), ('instance', 'a7', 'i')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'possible-01')],) ,
('Relation triples of AMR 1:', 9) ,
([('ARG1', 'a0', 'a1'), ('ARG1', 'a1', 'a2'), ('ARG0', 'a1', 'a5'), ('ARG0', 'a1', 'a7'), ('ARG1', 'a2', 'a3'), ('ARG0', 'a2', 'a7'), ('mod', 'a3', 'a4'), ('poss', 'a3', 'a7'), ('mod', 'a5', 'a6')],) ,
('Instance triples of AMR 2:', 8) ,
([('instance', 'b0', 'possible-01'), ('instance', 'b1', 'do-02'), ('instance', 'b2', 'amr-unknown'), ('instance', 'b3', 'i'), ('instance', 'b4', 'score'), ('instance', 'b5', 'credit'), ('instance', 'b6', 'realistic-03'), ('instance', 'b7', 'raise-01')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'possible-01')],) ,
('Relation triples of AMR 2:', 9) ,
([('ARG1', 'b0', 'b1'), ('ARG1', 'b1', 'b2'), ('ARG0', 'b1', 'b3'), ('ARG2', 'b1', 'b6'), ('ARG2', 'b1', 'b7'), ('poss', 'b4', 'b3'), ('mod', 'b4', 'b5'), ('ARG0', 'b7', 'b3'), ('ARG1', 'b7', 'b4')],) ,
('Similarity', 'possible-01', 'possible-01', 1.0) ,
('Similarity', 'possible-01', 'do-02', 0.0) ,
('Similarity', 'possible-01', 'amr-unknown', 0.0) ,
('Similarity', 'possible-01', 'i', 0.0) ,
('Similarity', 'possible-01', 'score', 0.0) ,
('Similarity', 'possible-01', 'credit', 0.0) ,
('Similarity', 'possible-01', 'realistic-03', 0.0) ,
('Similarity', 'possible-01', 'raise-01', 0.0) ,
('Similarity', 'do-02', 'do-02', 1.0) ,
('Similarity', 'do-02', 'amr-unknown', 0.0) ,
('Similarity', 'do-02', 'i', 0.0) ,
('Similarity', 'do-02', 'score', 0.0) ,
('Similarity', 'do-02', 'credit', 0.0) ,
('Similarity', 'do-02', 'realistic-03', 0.0) ,
('Similarity', 'do-02', 'raise-01', 0.0) ,
('Similarity', 'improve-01', 'possible-01', 0.0) ,
('Similarity', 'improve-01', 'do-02', 0.0) ,
('Similarity', 'improve-01', 'amr-unknown', 0.0) ,
('Similarity', 'improve-01', 'i', 0.0) ,
('Similarity', 'improve-01', 'score', 0.0) ,
('Similarity', 'improve-01', 'credit', 0.0) ,
('Similarity', 'improve-01', 'realistic-03', 0.0) ,
('Similarity', 'improve-01', 'raise-01', 0.0) ,
('Similarity', 'score', 'amr-unknown', 0.0) ,
('Similarity', 'score', 'i', 0.0) ,
('Similarity', 'score', 'score', 1.0) ,
('Similarity', 'score', 'credit', 0.0) ,
('Similarity', 'score', 'realistic-03', 0.0) ,
('Similarity', 'score', 'raise-01', 0.0) ,
('Similarity', 'credit', 'amr-unknown', 0.0) ,
('Similarity', 'credit', 'i', 0.0) ,
('Similarity', 'credit', 'credit', 1.0) ,
('Similarity', 'credit', 'realistic-03', 0.0) ,
('Similarity', 'credit', 'raise-01', 0.25883994037952535) ,
('Similarity', 'amr-unknown', 'amr-unknown', 1.0) ,
('Similarity', 'amr-unknown', 'i', 0.0) ,
('Similarity', 'amr-unknown', 'realistic-03', 0.0) ,
('Similarity', 'amr-unknown', 'raise-01', 0.0) ,
('Similarity', 'more', 'possible-01', 0.0) ,
('Similarity', 'more', 'do-02', 0.0) ,
('Similarity', 'more', 'amr-unknown', 0.0) ,
('Similarity', 'more', 'i', 0.608539644680773) ,
('Similarity', 'more', 'score', 0.0) ,
('Similarity', 'more', 'credit', 0.0) ,
('Similarity', 'more', 'realistic-03', 0.0) ,
('Similarity', 'more', 'raise-01', 0.2559515195213478) ,
('Similarity', 'i', 'i', 1.0) ,
('Similarity', 'i', 'realistic-03', 0.0) ,
('Similarity', 'i', 'raise-01', 0.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2.0, (1, 1): 1}, (0, 1): {-1: 0.0, (1, 2): 1}, (0, 2): {-1: 0.0}, (0, 3): {-1: 0.0}, (0, 4): {-1: 0.0}, (0, 5): {-1: 0.0}, (0, 6): {-1: 0.0}, (0, 7): {-1: 0.0, (1, 4): 1}, (1, 0): {-1: 0.0, (2, 1): 1}, (1, 1): {-1: 1.0, (0, 0): 1, (2, 2): 1, (5, 3): 1, (7, 3): 1}, (1, 2): {-1: 0.0, (0, 1): 1}, (1, 3): {-1: 0.0}, (1, 4): {-1: 0.0, (0, 7): 1}, (1, 5): {-1: 0.0}, (1, 6): {-1: 0.0}, (1, 7): {-1: 0.0, (2, 4): 1, (5, 3): 1, (7, 3): 1}, (2, 0): {-1: 0.0, (3, 1): 1}, (2, 1): {-1: 0.0, (1, 0): 1, (3, 2): 1, (7, 3): 1}, (2, 2): {-1: 0.0, (1, 1): 1}, (2, 3): {-1: 0.0}, (2, 4): {-1: 0.0, (1, 7): 1}, (2, 5): {-1: 0.0}, (2, 6): {-1: 0.0}, (2, 7): {-1: 0.0, (3, 4): 1, (7, 3): 1}, (3, 0): {-1: 0.0}, (3, 1): {-1: 0.0, (2, 0): 1}, (3, 2): {-1: 0.0, (2, 1): 1}, (3, 3): {-1: 0.0}, (3, 4): {-1: 1.0, (2, 7): 1, (4, 5): 1, (7, 3): 1}, (3, 5): {-1: 0.0}, (3, 6): {-1: 0.0}, (3, 7): {-1: 0.0}, (4, 0): {-1: 0.0}, (4, 1): {-1: 0.0}, (4, 2): {-1: 0.0}, (4, 3): {-1: 0.0}, (4, 4): {-1: 0.0}, (4, 5): {-1: 1.0, (3, 4): 1}, (4, 6): {-1: 0.0}, (4, 7): {-1: 0.25883994037952535}, (5, 0): {-1: 0.0}, (5, 1): {-1: 0.0}, (5, 2): {-1: 1.0}, (5, 3): {-1: 0.0, (1, 1): 1, (1, 7): 1}, (5, 4): {-1: 0.0, (6, 5): 1}, (5, 5): {-1: 0.0}, (5, 6): {-1: 0.0}, (5, 7): {-1: 0.0}, (6, 0): {-1: 0.0}, (6, 1): {-1: 0.0}, (6, 2): {-1: 0.0}, (6, 3): {-1: 0.608539644680773}, (6, 4): {-1: 0.0}, (6, 5): {-1: 0.0, (5, 4): 1}, (6, 6): {-1: 0.0}, (6, 7): {-1: 0.2559515195213478}, (7, 0): {-1: 0.0}, (7, 1): {-1: 0.0}, (7, 2): {-1: 0.0}, (7, 3): {-1: 1.0, (1, 1): 1, (1, 7): 1, (2, 1): 1, (2, 7): 1, (3, 4): 1}, (7, 4): {-1: 0.0}, (7, 5): {-1: 0.0}, (7, 6): {-1: 0.0}, (7, 7): {-1: 0.0}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2.0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('relation match with', (7, 3), 1) ,
('node_pair', (2, 7)) ,
('instance/attribute match', 0.0) ,
('relation match with', (3, 4), 1) ,
('relation match with', (7, 3), 1) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 1.0) ,
('relation match with', (4, 5), 1) ,
('relation match with', (7, 3), 1) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 1.0) ,
('node_pair', (5, 2)) ,
('instance/attribute match', 1.0) ,
('node_pair', (6, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (7, 3)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 13.0) ,
('Node mapping at start', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Triple match number at start:', 13.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 7, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([7, 1, 0, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 7, 0, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 5, 2, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 7, 4, 0, 2, 6, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 0, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 7, 4, 5, 0, 6, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 5, 0, 6, 3],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 7, 4, 5, 2, 0, 3],) ,
('Computing match for mapping',) ,
([6, 1, 7, 4, 5, 2, 0, 3],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 7, 4, 5, 2, 6, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 5, 2, 6, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 7, 1, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 2, 6, 3],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 4, 7, 1, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 5, 2, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 7, 4, 1, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 1, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 7, 4, 5, 1, 6, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 1, 6, 3],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 6, 7, 4, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 7, 4, 5, 2, 1, 3],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 7, 4, 5, 2, 6, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, 2, 6, 1],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 4, 7, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3.7411600596204746) ,
([0, 1, 5, 4, 7, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 2, 6, 3],) ,
('saved value', 9.258839940379525) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('saved value', 11.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -1.7440484804786522) ,
([0, 1, 6, 4, 5, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, 7, 3],) ,
('saved value', 11.255951519521348) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 4, 5, 2, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2, 6, 7],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 5, 4, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 2, 5, 4, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 2, 4, 3],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -7.0) ,
([0, 1, 7, 3, 5, 2, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, 6, 4],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 4, 2, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 5, 6, 3],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('saved value', 11.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 4, 3, 2, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 2, 6, 5],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('saved value', 12.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 4, 5, 3, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, 6, 2],) ,
('saved value', 9.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -3.391460355319227) ,
([0, 1, 7, 4, 5, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 3, 6],) ,
('saved value', 9.608539644680773) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('node_pair', (0, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('node_pair', (2, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 1.0) ,
('node_pair', (4, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 2)) ,
('instance/attribute match', 1.0) ,
('node_pair', (6, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (7, 7)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 3.0) ,
('Node mapping at start', [3, 1, 0, 4, 6, 2, 5, 7]) ,
('Triple match number at start:', 3.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 1) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 3) ,
('Swap gain:', -1.0) ,
([1, 3, 0, 4, 6, 2, 5, 7],) ,
('Computing match for mapping',) ,
([1, 3, 0, 4, 6, 2, 5, 7],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 0) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 3) ,
('Swap gain:', 3.0) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 4) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -1.0) ,
([4, 1, 0, 3, 6, 2, 5, 7],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, 6, 2, 5, 7],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 6) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([6, 1, 0, 4, 3, 2, 5, 7],) ,
('Computing match for mapping',) ,
([6, 1, 0, 4, 3, 2, 5, 7],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 2) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([2, 1, 0, 4, 6, 3, 5, 7],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 6, 3, 5, 7],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', 5) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 0, '-', 5, ',', 6, '-', 3) ,
('Swap gain:', 0.608539644680773) ,
([5, 1, 0, 4, 6, 2, 3, 7],) ,
('Computing match for mapping',) ,
([5, 1, 0, 4, 6, 2, 3, 7],) ,
('saved value', 3.608539644680773) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 3, ',', 7, '-', 7) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 0, '-', 7, ',', 7, '-', 3) ,
('Swap gain:', 3.0) ,
([7, 1, 0, 4, 6, 2, 5, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 6, 2, 5, 3],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 0) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([3, 0, 1, 4, 6, 2, 5, 7],) ,
('Computing match for mapping',) ,
([3, 0, 1, 4, 6, 2, 5, 7],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([3, 4, 0, 1, 6, 2, 5, 7],) ,
('Computing match for mapping',) ,
([3, 4, 0, 1, 6, 2, 5, 7],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 6) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([3, 6, 0, 4, 1, 2, 5, 7],) ,
('Computing match for mapping',) ,
([3, 6, 0, 4, 1, 2, 5, 7],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([3, 2, 0, 4, 6, 1, 5, 7],) ,
('Computing match for mapping',) ,
([3, 2, 0, 4, 6, 1, 5, 7],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 5) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 1, '-', 5, ',', 6, '-', 1) ,
('Swap gain:', -1.0) ,
([3, 5, 0, 4, 6, 2, 1, 7],) ,
('Computing match for mapping',) ,
([3, 5, 0, 4, 6, 2, 1, 7],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 7) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 1, '-', 7, ',', 7, '-', 1) ,
('Swap gain:', -1.0) ,
([3, 7, 0, 4, 6, 2, 5, 1],) ,
('Computing match for mapping',) ,
([3, 7, 0, 4, 6, 2, 5, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 4) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([3, 1, 4, 0, 6, 2, 5, 7],) ,
('Computing match for mapping',) ,
([3, 1, 4, 0, 6, 2, 5, 7],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 6) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 1, 6, 4, 0, 2, 5, 7],) ,
('Computing match for mapping',) ,
([3, 1, 6, 4, 0, 2, 5, 7],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 2) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 1, 2, 4, 6, 0, 5, 7],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 6, 0, 5, 7],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 5) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 2, '-', 5, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 1, 5, 4, 6, 2, 0, 7],) ,
('Computing match for mapping',) ,
([3, 1, 5, 4, 6, 2, 0, 7],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 0, ',', 7, '-', 7) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 2, '-', 7, ',', 7, '-', 0) ,
('Swap gain:', 1.0) ,
([3, 1, 7, 4, 6, 2, 5, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 6, 2, 5, 0],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 6) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -1.0) ,
([3, 1, 0, 6, 4, 2, 5, 7],) ,
('Computing match for mapping',) ,
([3, 1, 0, 6, 4, 2, 5, 7],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([3, 1, 0, 2, 6, 4, 5, 7],) ,
('Computing match for mapping',) ,
([3, 1, 0, 2, 6, 4, 5, 7],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 5) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 3, '-', 5, ',', 6, '-', 4) ,
('Swap gain:', -1.0) ,
([3, 1, 0, 5, 6, 2, 4, 7],) ,
('Computing match for mapping',) ,
([3, 1, 0, 5, 6, 2, 4, 7],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 7) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 3, '-', 7, ',', 7, '-', 4) ,
('Swap gain:', -1.0) ,
([3, 1, 0, 7, 6, 2, 5, 4],) ,
('Computing match for mapping',) ,
([3, 1, 0, 7, 6, 2, 5, 4],) ,
('saved value', 2.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 2) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 6) ,
('Swap gain:', -1.0) ,
([3, 1, 0, 4, 2, 6, 5, 7],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 2, 6, 5, 7],) ,
('saved value', 2.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 5) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 4, '-', 5, ',', 6, '-', 6) ,
('Swap gain:', 2.0) ,
([3, 1, 0, 4, 5, 2, 6, 7],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 5, 2, 6, 7],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 7) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 4, '-', 7, ',', 7, '-', 6) ,
('Swap gain:', 0.25883994037952535) ,
([3, 1, 0, 4, 7, 2, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 7, 2, 5, 6],) ,
('saved value', 3.2588399403795254) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', 5) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 5, '-', 5, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([3, 1, 0, 4, 6, 5, 2, 7],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 6, 5, 2, 7],) ,
('saved value', 2.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 7) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 5, '-', 7, ',', 7, '-', 2) ,
('Swap gain:', -1.0) ,
([3, 1, 0, 4, 6, 7, 5, 2],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 6, 7, 5, 2],) ,
('saved value', 2.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 5, ',', 7, '-', 7) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('After swapping:', 6, '-', 7, ',', 7, '-', 5) ,
('Swap gain:', 0.2559515195213478) ,
([3, 1, 0, 4, 6, 2, 7, 5],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 6, 2, 7, 5],) ,
('saved value', 3.2559515195213478) ,
('Use swap gain',) ,
('Original mapping', [3, 1, 0, 4, 6, 2, 5, 7]) ,
('Current mapping', [0, 1, 3, 4, 6, 2, 5, 7]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 1, 3, 4, 6, 2, 5, 7]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 3, 4, 6, 2, 5, 7],) ,
('Computing match for mapping',) ,
([1, 0, 3, 4, 6, 2, 5, 7],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 6, 2, 5, 7],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 3, 0, 6, 2, 5, 7],) ,
('Computing match for mapping',) ,
([4, 1, 3, 0, 6, 2, 5, 7],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 3, 4, 0, 2, 5, 7],) ,
('Computing match for mapping',) ,
([6, 1, 3, 4, 0, 2, 5, 7],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 3, 4, 6, 0, 5, 7],) ,
('Computing match for mapping',) ,
([2, 1, 3, 4, 6, 0, 5, 7],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 5) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 0, '-', 5, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 3, 4, 6, 2, 0, 7],) ,
('Computing match for mapping',) ,
([5, 1, 3, 4, 6, 2, 0, 7],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 7) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 0, '-', 7, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 1, 3, 4, 6, 2, 5, 0],) ,
('Computing match for mapping',) ,
([7, 1, 3, 4, 6, 2, 5, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 1, 4, 6, 2, 5, 7],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 6, 2, 5, 7],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 4, 3, 1, 6, 2, 5, 7],) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 6, 2, 5, 7],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 6) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 6, 3, 4, 1, 2, 5, 7],) ,
('Computing match for mapping',) ,
([0, 6, 3, 4, 1, 2, 5, 7],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 3, 4, 6, 1, 5, 7],) ,
('Computing match for mapping',) ,
([0, 2, 3, 4, 6, 1, 5, 7],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 5) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 1, '-', 5, ',', 6, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 5, 3, 4, 6, 2, 1, 7],) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 6, 2, 1, 7],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 7) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 1, '-', 7, ',', 7, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 7, 3, 4, 6, 2, 5, 1],) ,
('Computing match for mapping',) ,
([0, 7, 3, 4, 6, 2, 5, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 4) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, 4, 3, 6, 2, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 6, 2, 5, 7],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 6) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 1, 6, 4, 3, 2, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 3, 2, 5, 7],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 2) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 3) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 4, 6, 3, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 3, 5, 7],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 3, ',', 6, '-', 5) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 2, '-', 5, ',', 6, '-', 3) ,
('Swap gain:', 0.608539644680773) ,
([0, 1, 5, 4, 6, 2, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 6, 2, 3, 7],) ,
('saved value', 6.608539644680773) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 3, ',', 7, '-', 7) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 2, '-', 7, ',', 7, '-', 3) ,
('Swap gain:', 5.0) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 6) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 3, 6, 4, 2, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 6, 4, 2, 5, 7],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 3, 2, 6, 4, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 6, 4, 5, 7],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 5) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 3, '-', 5, ',', 6, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 3, 5, 6, 2, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 6, 2, 4, 7],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 7) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 3, '-', 7, ',', 7, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 3, 7, 6, 2, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 6, 2, 5, 4],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 2) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 6) ,
('Swap gain:', -1.0) ,
([0, 1, 3, 4, 2, 6, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, 6, 5, 7],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 5) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 4, '-', 5, ',', 6, '-', 6) ,
('Swap gain:', 2.0) ,
([0, 1, 3, 4, 5, 2, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2, 6, 7],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 7) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 4, '-', 7, ',', 7, '-', 6) ,
('Swap gain:', 0.25883994037952535) ,
([0, 1, 3, 4, 7, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 7, 2, 5, 6],) ,
('saved value', 6.258839940379525) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', 5) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 5, '-', 5, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 3, 4, 6, 5, 2, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 6, 5, 2, 7],) ,
('saved value', 5.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 7) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 5, '-', 7, ',', 7, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 3, 4, 6, 7, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 6, 7, 5, 2],) ,
('saved value', 5.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 5, ',', 7, '-', 7) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('After swapping:', 6, '-', 7, ',', 7, '-', 5) ,
('Swap gain:', 0.2559515195213478) ,
([0, 1, 3, 4, 6, 2, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 6, 2, 7, 5],) ,
('saved value', 6.255951519521348) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 3, 4, 6, 2, 5, 7]) ,
('Current mapping', [0, 1, 7, 4, 6, 2, 5, 3]) ,
('Gain after the hill-climbing', 5.0) ,
('Update triple match number to:', 11.0) ,
('Current mapping:', [0, 1, 7, 4, 6, 2, 5, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 7, 4, 6, 2, 5, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 6, 2, 5, 3],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([7, 1, 0, 4, 6, 2, 5, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 6, 2, 5, 3],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([4, 1, 7, 0, 6, 2, 5, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 6, 2, 5, 3],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 7, 4, 0, 2, 5, 3],) ,
('Computing match for mapping',) ,
([6, 1, 7, 4, 0, 2, 5, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 7, 4, 6, 0, 5, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 6, 0, 5, 3],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 5) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 0, '-', 5, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 7, 4, 6, 2, 0, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 6, 2, 0, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 7, 4, 6, 2, 5, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 6, 2, 5, 0],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 7, 1, 4, 6, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 6, 2, 5, 3],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 7, 1, 6, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 6, 2, 5, 3],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 6) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 6, 7, 4, 1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 6, 7, 4, 1, 2, 5, 3],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 7, 4, 6, 1, 5, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 6, 1, 5, 3],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 5) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 1, '-', 5, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 5, 7, 4, 6, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 6, 2, 1, 3],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 7, 4, 6, 2, 5, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 6, 2, 5, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 7, 6, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 6, 2, 5, 3],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 6) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 7) ,
('Swap gain:', -1.7411600596204746) ,
([0, 1, 6, 4, 7, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 7, 2, 5, 3],) ,
('saved value', 9.258839940379525) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 2) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 6, 7, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 7, 5, 3],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 5) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 2, '-', 5, ',', 6, '-', 7) ,
('Swap gain:', -1.7440484804786522) ,
([0, 1, 5, 4, 6, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 6, 2, 7, 3],) ,
('saved value', 9.255951519521348) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 6, 2, 5, 7],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 6) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 6, 4, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, 2, 5, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 2, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, 4, 5, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 5) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 3, '-', 5, ',', 6, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 5, 6, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 6, 2, 4, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 3, 6, 2, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 6, 2, 5, 4],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 2) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 6) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 4, 2, 6, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 6, 5, 3],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 5) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 4, '-', 5, ',', 6, '-', 6) ,
('Swap gain:', 2.0) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('saved value', 13.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 3) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 2, 5, 6],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', 5) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 5, '-', 5, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 4, 6, 5, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 6, 5, 2, 3],) ,
('saved value', 10.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 3) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 4, 6, 3, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 6, 3, 5, 2],) ,
('saved value', 7.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -3.391460355319227) ,
([0, 1, 7, 4, 6, 2, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 6, 2, 3, 5],) ,
('saved value', 7.608539644680773) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 7, 4, 6, 2, 5, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 13.0) ,
('Current mapping:', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 7, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([7, 1, 0, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 7, 0, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 5, 2, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 7, 4, 0, 2, 6, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 0, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 7, 4, 5, 0, 6, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 5, 0, 6, 3],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 7, 4, 5, 2, 0, 3],) ,
('Computing match for mapping',) ,
([6, 1, 7, 4, 5, 2, 0, 3],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 7, 4, 5, 2, 6, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 5, 2, 6, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 7, 1, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 2, 6, 3],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 4, 7, 1, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 5, 2, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 7, 4, 1, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 1, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 7, 4, 5, 1, 6, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 1, 6, 3],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 6, 7, 4, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 7, 4, 5, 2, 1, 3],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 7, 4, 5, 2, 6, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, 2, 6, 1],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 4, 7, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3.7411600596204746) ,
([0, 1, 5, 4, 7, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 2, 6, 3],) ,
('saved value', 9.258839940379525) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('saved value', 11.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -1.7440484804786518) ,
([0, 1, 6, 4, 5, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, 7, 3],) ,
('saved value', 11.255951519521348) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 4, 5, 2, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2, 6, 7],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 5, 4, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 2, 5, 4, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 2, 4, 3],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -7.0) ,
([0, 1, 7, 3, 5, 2, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, 6, 4],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 4, 2, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 5, 6, 3],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('saved value', 11.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 4, 3, 2, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 2, 6, 5],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('saved value', 12.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 4, 5, 3, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, 6, 2],) ,
('saved value', 9.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -3.391460355319227) ,
([0, 1, 7, 4, 5, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 3, 6],) ,
('saved value', 9.608539644680773) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (7, 0)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [4, 2, 1, 5, 3, 7, 6, 0]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 2) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 4) ,
('Swap gain:', 0.0) ,
([2, 4, 1, 5, 3, 7, 6, 0],) ,
('Computing match for mapping',) ,
([2, 4, 1, 5, 3, 7, 6, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 1) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 4) ,
('Swap gain:', 1.0) ,
([1, 2, 4, 5, 3, 7, 6, 0],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 3, 7, 6, 0],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 5) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', 1.0) ,
([5, 2, 1, 4, 3, 7, 6, 0],) ,
('Computing match for mapping',) ,
([5, 2, 1, 4, 3, 7, 6, 0],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 3) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', 0.0) ,
([3, 2, 1, 5, 4, 7, 6, 0],) ,
('Computing match for mapping',) ,
([3, 2, 1, 5, 4, 7, 6, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 7) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([7, 2, 1, 5, 3, 4, 6, 0],) ,
('Computing match for mapping',) ,
([7, 2, 1, 5, 3, 4, 6, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 6) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', 0.0) ,
([6, 2, 1, 5, 3, 7, 4, 0],) ,
('Computing match for mapping',) ,
([6, 2, 1, 5, 3, 7, 4, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 0) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 0, '-', 0, ',', 7, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 2.0) ,
([4, 1, 2, 5, 3, 7, 6, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 5, 3, 7, 6, 0],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', 1.0) ,
([4, 5, 1, 2, 3, 7, 6, 0],) ,
('Computing match for mapping',) ,
([4, 5, 1, 2, 3, 7, 6, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 3) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 3, 1, 5, 2, 7, 6, 0],) ,
('Computing match for mapping',) ,
([4, 3, 1, 5, 2, 7, 6, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 7) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', 1.0) ,
([4, 7, 1, 5, 3, 2, 6, 0],) ,
('Computing match for mapping',) ,
([4, 7, 1, 5, 3, 2, 6, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 6) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 6, 1, 5, 3, 7, 2, 0],) ,
('Computing match for mapping',) ,
([4, 6, 1, 5, 3, 7, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 0) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 1, '-', 0, ',', 7, '-', 2) ,
('Swap gain:', 1.0) ,
([4, 0, 1, 5, 3, 7, 6, 2],) ,
('Computing match for mapping',) ,
([4, 0, 1, 5, 3, 7, 6, 2],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 5) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 2, 5, 1, 3, 7, 6, 0],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 3, 7, 6, 0],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 3) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 2, 3, 5, 1, 7, 6, 0],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 1, 7, 6, 0],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 2, 7, 5, 3, 1, 6, 0],) ,
('Computing match for mapping',) ,
([4, 2, 7, 5, 3, 1, 6, 0],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 1, ',', 6, '-', 6) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 2, 6, 5, 3, 7, 1, 0],) ,
('Computing match for mapping',) ,
([4, 2, 6, 5, 3, 7, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 1, ',', 7, '-', 0) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 2, '-', 0, ',', 7, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 2, 0, 5, 3, 7, 6, 1],) ,
('Computing match for mapping',) ,
([4, 2, 0, 5, 3, 7, 6, 1],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 3) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 5) ,
('Swap gain:', 1.0) ,
([4, 2, 1, 3, 5, 7, 6, 0],) ,
('Computing match for mapping',) ,
([4, 2, 1, 3, 5, 7, 6, 0],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', 0.0) ,
([4, 2, 1, 7, 3, 5, 6, 0],) ,
('Computing match for mapping',) ,
([4, 2, 1, 7, 3, 5, 6, 0],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 6) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', 0.0) ,
([4, 2, 1, 6, 3, 7, 5, 0],) ,
('Computing match for mapping',) ,
([4, 2, 1, 6, 3, 7, 5, 0],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 0) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 3, '-', 0, ',', 7, '-', 5) ,
('Swap gain:', 0.0) ,
([4, 2, 1, 0, 3, 7, 6, 5],) ,
('Computing match for mapping',) ,
([4, 2, 1, 0, 3, 7, 6, 5],) ,
('saved value', 0.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 7) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', 0.25883994037952535) ,
([4, 2, 1, 5, 7, 3, 6, 0],) ,
('Computing match for mapping',) ,
([4, 2, 1, 5, 7, 3, 6, 0],) ,
('saved value', 0.25883994037952535) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 6) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', 0.608539644680773) ,
([4, 2, 1, 5, 6, 7, 3, 0],) ,
('Computing match for mapping',) ,
([4, 2, 1, 5, 6, 7, 3, 0],) ,
('saved value', 0.608539644680773) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 3, ',', 7, '-', 0) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 4, '-', 0, ',', 7, '-', 3) ,
('Swap gain:', 2.0) ,
([4, 2, 1, 5, 0, 7, 6, 3],) ,
('Computing match for mapping',) ,
([4, 2, 1, 5, 0, 7, 6, 3],) ,
('saved value', 2.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 6) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', 0.2559515195213478) ,
([4, 2, 1, 5, 3, 6, 7, 0],) ,
('Computing match for mapping',) ,
([4, 2, 1, 5, 3, 6, 7, 0],) ,
('saved value', 0.2559515195213478) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 0) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 5, '-', 0, ',', 7, '-', 7) ,
('Swap gain:', 0.0) ,
([4, 2, 1, 5, 3, 0, 6, 7],) ,
('Computing match for mapping',) ,
([4, 2, 1, 5, 3, 0, 6, 7],) ,
('saved value', 0.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 0) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('After swapping:', 6, '-', 0, ',', 7, '-', 6) ,
('Swap gain:', 0.0) ,
([4, 2, 1, 5, 3, 7, 0, 6],) ,
('Computing match for mapping',) ,
([4, 2, 1, 5, 3, 7, 0, 6],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [4, 2, 1, 5, 3, 7, 6, 0]) ,
('Current mapping', [0, 2, 1, 5, 3, 7, 6, 4]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 2.0) ,
('Current mapping:', [0, 2, 1, 5, 3, 7, 6, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 0, 1, 5, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([2, 0, 1, 5, 3, 7, 6, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 2, 0, 5, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([1, 2, 0, 5, 3, 7, 6, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([5, 2, 1, 0, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([5, 2, 1, 0, 3, 7, 6, 4],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([3, 2, 1, 5, 0, 7, 6, 4],) ,
('Computing match for mapping',) ,
([3, 2, 1, 5, 0, 7, 6, 4],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([7, 2, 1, 5, 3, 0, 6, 4],) ,
('Computing match for mapping',) ,
([7, 2, 1, 5, 3, 0, 6, 4],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -2.0) ,
([6, 2, 1, 5, 3, 7, 0, 4],) ,
('Computing match for mapping',) ,
([6, 2, 1, 5, 3, 7, 0, 4],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 4) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 0, '-', 4, ',', 7, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('Computing match for mapping',) ,
([4, 2, 1, 5, 3, 7, 6, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 3.0) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 5, 1, 2, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 5, 1, 2, 3, 7, 6, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 3) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 3, 1, 5, 2, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 2, 7, 6, 4],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 7) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 7, 1, 5, 3, 2, 6, 4],) ,
('Computing match for mapping',) ,
([0, 7, 1, 5, 3, 2, 6, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 6) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 6, 1, 5, 3, 7, 2, 4],) ,
('Computing match for mapping',) ,
([0, 6, 1, 5, 3, 7, 2, 4],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 4) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 1, '-', 4, ',', 7, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 4, 1, 5, 3, 7, 6, 2],) ,
('Computing match for mapping',) ,
([0, 4, 1, 5, 3, 7, 6, 2],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 5) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, 5, 1, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 2, 5, 1, 3, 7, 6, 4],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 3) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, 3, 5, 1, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 2, 3, 5, 1, 7, 6, 4],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, 7, 5, 3, 1, 6, 4],) ,
('Computing match for mapping',) ,
([0, 2, 7, 5, 3, 1, 6, 4],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 1, ',', 6, '-', 6) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, 6, 5, 3, 7, 1, 4],) ,
('Computing match for mapping',) ,
([0, 2, 6, 5, 3, 7, 1, 4],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 1, ',', 7, '-', 4) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 2, '-', 4, ',', 7, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, 4, 5, 3, 7, 6, 1],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 3, 7, 6, 1],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 3) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 2, 1, 3, 5, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 5, 7, 6, 4],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 2, 1, 7, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 7, 3, 5, 6, 4],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 6) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 2, 1, 6, 3, 7, 5, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 6, 3, 7, 5, 4],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 4) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 3, '-', 4, ',', 7, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 2, 1, 4, 3, 7, 6, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 3, 7, 6, 5],) ,
('saved value', 3.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 7) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', 0.25883994037952535) ,
([0, 2, 1, 5, 7, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 5, 7, 3, 6, 4],) ,
('saved value', 2.2588399403795254) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 6) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', 0.608539644680773) ,
([0, 2, 1, 5, 6, 7, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 5, 6, 7, 3, 4],) ,
('saved value', 2.608539644680773) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 3, ',', 7, '-', 4) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 4, '-', 4, ',', 7, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 2, 1, 5, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 5, 4, 7, 6, 3],) ,
('saved value', 4.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 6) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', 0.2559515195213478) ,
([0, 2, 1, 5, 3, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 5, 3, 6, 7, 4],) ,
('saved value', 2.2559515195213478) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 4) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 5, '-', 4, ',', 7, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 2, 1, 5, 3, 4, 6, 7],) ,
('Computing match for mapping',) ,
([0, 2, 1, 5, 3, 4, 6, 7],) ,
('saved value', 2.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 4) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('After swapping:', 6, '-', 4, ',', 7, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 2, 1, 5, 3, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 5, 3, 7, 4, 6],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 1, 5, 3, 7, 6, 4]) ,
('Current mapping', [0, 1, 2, 5, 3, 7, 6, 4]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 5.0) ,
('Current mapping:', [0, 1, 2, 5, 3, 7, 6, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, 5, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 3, 7, 6, 4],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 0, 5, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 5, 3, 7, 6, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 0, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([5, 1, 2, 0, 3, 7, 6, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 2, 5, 0, 7, 6, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 0, 7, 6, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 1, 2, 5, 3, 0, 6, 4],) ,
('Computing match for mapping',) ,
([7, 1, 2, 5, 3, 0, 6, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 2, 5, 3, 7, 0, 4],) ,
('Computing match for mapping',) ,
([6, 1, 2, 5, 3, 7, 0, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 4) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 0, '-', 4, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 2, 5, 3, 7, 6, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 5, 3, 7, 6, 0],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 5, 3, 7, 6, 4],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 5) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 5, 2, 1, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 5, 2, 1, 3, 7, 6, 4],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 3, 2, 5, 1, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 1, 7, 6, 4],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 7) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 7, 2, 5, 3, 1, 6, 4],) ,
('Computing match for mapping',) ,
([0, 7, 2, 5, 3, 1, 6, 4],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 6, 2, 5, 3, 7, 1, 4],) ,
('Computing match for mapping',) ,
([0, 6, 2, 5, 3, 7, 1, 4],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 4) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 1, '-', 4, ',', 7, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 4, 2, 5, 3, 7, 6, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 5, 3, 7, 6, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 5) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 5, 2, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 3, 7, 6, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 3, 5, 2, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 2, 7, 6, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 7) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 1, 7, 5, 3, 2, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 3, 2, 6, 4],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 6, 5, 3, 7, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 3, 7, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 4) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 2, '-', 4, ',', 7, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 4, 5, 3, 7, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 3, 7, 6, 2],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 3) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 3, 5, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 7, 6, 4],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 1, 2, 7, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 3, 5, 6, 4],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 1, 2, 6, 3, 7, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 3, 7, 5, 4],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 4) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 3, '-', 4, ',', 7, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 4, 3, 7, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 7, 6, 5],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 7) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', 1.2588399403795254) ,
([0, 1, 2, 5, 7, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 7, 3, 6, 4],) ,
('saved value', 6.258839940379525) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', 0.608539644680773) ,
([0, 1, 2, 5, 6, 7, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 6, 7, 3, 4],) ,
('saved value', 5.608539644680773) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 3, ',', 7, '-', 4) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 4, '-', 4, ',', 7, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 6) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', 0.2559515195213478) ,
([0, 1, 2, 5, 3, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 6, 7, 4],) ,
('saved value', 5.255951519521348) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 4) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 5, '-', 4, ',', 7, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 1, 2, 5, 3, 4, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 4, 6, 7],) ,
('saved value', 5.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 4) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('After swapping:', 6, '-', 4, ',', 7, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 1, 2, 5, 3, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 7, 4, 6],) ,
('saved value', 5.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 5, 3, 7, 6, 4]) ,
('Current mapping', [0, 1, 2, 5, 4, 7, 6, 3]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 7.0) ,
('Current mapping:', [0, 1, 2, 5, 4, 7, 6, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 5, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 4, 7, 6, 3],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 0, 5, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 5, 4, 7, 6, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 0, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 0, 4, 7, 6, 3],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 2, 5, 0, 7, 6, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 5, 0, 7, 6, 3],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 1, 2, 5, 4, 0, 6, 3],) ,
('Computing match for mapping',) ,
([7, 1, 2, 5, 4, 0, 6, 3],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 2, 5, 4, 7, 0, 3],) ,
('Computing match for mapping',) ,
([6, 1, 2, 5, 4, 7, 0, 3],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 2, 5, 4, 7, 6, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 4, 7, 6, 0],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 5, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 5, 4, 7, 6, 3],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 5) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 5, 2, 1, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 1, 4, 7, 6, 3],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 2, 5, 1, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 5, 1, 7, 6, 3],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 7) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 7, 2, 5, 4, 1, 6, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 5, 4, 1, 6, 3],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 6, 2, 5, 4, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 2, 5, 4, 7, 1, 3],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 3, 2, 5, 4, 7, 6, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 4, 7, 6, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 5) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 5, 2, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 4, 7, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 4, 5, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 7, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 7) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 1, 7, 5, 4, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 6, 5, 4, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 4, 7, 2, 3],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 3) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 5, 4, 7, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 4, 7, 6, 2],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', 4.0) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 7) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 1, 2, 7, 4, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 5, 6, 3],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 1, 2, 6, 4, 7, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 7, 5, 3],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 5, ',', 7, '-', 3) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 3, 4, 7, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 6, 5],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 7) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', 0.25883994037952535) ,
([0, 1, 2, 5, 7, 4, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 7, 4, 6, 3],) ,
('saved value', 7.258839940379525) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 1, 2, 5, 6, 7, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 6, 7, 4, 3],) ,
('saved value', 7.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 4, ',', 7, '-', 3) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 7, 6, 4],) ,
('saved value', 5.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 6) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', 0.2559515195213478) ,
([0, 1, 2, 5, 4, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6, 7, 3],) ,
('saved value', 7.255951519521348) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 3) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 5, 4, 3, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 6, 7],) ,
('saved value', 6.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 3) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -1.3914603553192268) ,
([0, 1, 2, 5, 4, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 7, 3, 6],) ,
('saved value', 5.608539644680773) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 5, 4, 7, 6, 3]) ,
('Current mapping', [0, 1, 2, 4, 5, 7, 6, 3]) ,
('Gain after the hill-climbing', 4.0) ,
('Update triple match number to:', 11.0) ,
('Current mapping:', [0, 1, 2, 4, 5, 7, 6, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 4, 5, 7, 6, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 7, 6, 3],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 0, 4, 5, 7, 6, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 7, 6, 3],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([4, 1, 2, 0, 5, 7, 6, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 7, 6, 3],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 2, 4, 0, 7, 6, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 7, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 1, 2, 4, 5, 0, 6, 3],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 0, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 2, 4, 5, 7, 0, 3],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 5, 7, 0, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, 4, 5, 7, 6, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 7, 6, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 4, 5, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 7, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 4, 2, 1, 5, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 7, 6, 3],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 5, 2, 4, 1, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 7, 6, 3],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 7) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 7, 2, 4, 5, 1, 6, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 1, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 6, 2, 4, 5, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 7, 1, 3],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 2, 4, 5, 7, 6, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 7, 6, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 2, 5, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 7, 6, 3],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 4, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 7, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 7) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', 2.0) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('saved value', 13.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 6, 4, 5, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 7, 2, 3],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 3, 4, 5, 7, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 7, 6, 2],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 7, 6, 3],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 7) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 7, 5, 4, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 4, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 6, 5, 7, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 7, 4, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 3, 5, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 7, 6, 4],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 7) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -1.7411600596204746) ,
([0, 1, 2, 4, 7, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 5, 6, 3],) ,
('saved value', 9.258839940379525) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 6, 7, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 7, 5, 3],) ,
('saved value', 9.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 4, 3, 7, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 7, 6, 5],) ,
('saved value', 6.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 6) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', 0.2559515195213478) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('saved value', 11.255951519521348) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 7, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 5, 3, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, 6, 7],) ,
('saved value', 9.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -2.391460355319227) ,
([0, 1, 2, 4, 5, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 3, 6],) ,
('saved value', 8.608539644680773) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 5, 7, 6, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 13.0) ,
('Current mapping:', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 7, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([7, 1, 0, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 7, 0, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 5, 2, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 7, 4, 0, 2, 6, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 0, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 7, 4, 5, 0, 6, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 5, 0, 6, 3],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 7, 4, 5, 2, 0, 3],) ,
('Computing match for mapping',) ,
([6, 1, 7, 4, 5, 2, 0, 3],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 7, 4, 5, 2, 6, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 5, 2, 6, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 7, 1, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 2, 6, 3],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 4, 7, 1, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 5, 2, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 7, 4, 1, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 1, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 7, 4, 5, 1, 6, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 1, 6, 3],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 6, 7, 4, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 7, 4, 5, 2, 1, 3],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 7, 4, 5, 2, 6, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, 2, 6, 1],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 4, 7, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3.7411600596204746) ,
([0, 1, 5, 4, 7, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 2, 6, 3],) ,
('saved value', 9.258839940379525) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('saved value', 11.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -1.7440484804786518) ,
([0, 1, 6, 4, 5, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, 7, 3],) ,
('saved value', 11.255951519521348) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 4, 5, 2, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2, 6, 7],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 5, 4, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 2, 5, 4, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 2, 4, 3],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -7.0) ,
([0, 1, 7, 3, 5, 2, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, 6, 4],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 4, 2, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 5, 6, 3],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('saved value', 11.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 4, 3, 2, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 2, 6, 5],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('saved value', 12.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 4, 5, 3, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, 6, 2],) ,
('saved value', 9.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -3.391460355319227) ,
([0, 1, 7, 4, 5, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 3, 6],) ,
('saved value', 9.608539644680773) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('node_pair', (2, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 7)) ,
('instance/attribute match', 0.2559515195213478) ,
('node_pair', (7, 0)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 1.2559515195213478) ,
('Node mapping at start', [2, 1, 4, 3, 6, 5, 7, 0]) ,
('Triple match number at start:', 1.2559515195213478) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 2, 4, 3, 6, 5, 7, 0],) ,
('Computing match for mapping',) ,
([1, 2, 4, 3, 6, 5, 7, 0],) ,
('saved value', 1.2559515195213478) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 4) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([4, 1, 2, 3, 6, 5, 7, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 6, 5, 7, 0],) ,
('saved value', 2.2559515195213478) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 3) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 1, 4, 2, 6, 5, 7, 0],) ,
('Computing match for mapping',) ,
([3, 1, 4, 2, 6, 5, 7, 0],) ,
('saved value', 1.2559515195213478) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 6) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([6, 1, 4, 3, 2, 5, 7, 0],) ,
('Computing match for mapping',) ,
([6, 1, 4, 3, 2, 5, 7, 0],) ,
('saved value', 1.2559515195213478) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 5) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', 1.0) ,
([5, 1, 4, 3, 6, 2, 7, 0],) ,
('Computing match for mapping',) ,
([5, 1, 4, 3, 6, 2, 7, 0],) ,
('saved value', 2.2559515195213478) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 7) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -0.2559515195213478) ,
([7, 1, 4, 3, 6, 5, 2, 0],) ,
('Computing match for mapping',) ,
([7, 1, 4, 3, 6, 5, 2, 0],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 2, ',', 7, '-', 0) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 0, '-', 0, ',', 7, '-', 2) ,
('Swap gain:', 3.0) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('saved value', 4.255951519521348) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([2, 4, 1, 3, 6, 5, 7, 0],) ,
('Computing match for mapping',) ,
([2, 4, 1, 3, 6, 5, 7, 0],) ,
('saved value', 0.25595151952134776) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([2, 3, 4, 1, 6, 5, 7, 0],) ,
('Computing match for mapping',) ,
([2, 3, 4, 1, 6, 5, 7, 0],) ,
('saved value', 0.25595151952134776) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 6) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([2, 6, 4, 3, 1, 5, 7, 0],) ,
('Computing match for mapping',) ,
([2, 6, 4, 3, 1, 5, 7, 0],) ,
('saved value', 0.25595151952134776) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -1.0) ,
([2, 5, 4, 3, 6, 1, 7, 0],) ,
('Computing match for mapping',) ,
([2, 5, 4, 3, 6, 1, 7, 0],) ,
('saved value', 0.25595151952134776) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -0.2559515195213478) ,
([2, 7, 4, 3, 6, 5, 1, 0],) ,
('Computing match for mapping',) ,
([2, 7, 4, 3, 6, 5, 1, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 0) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 1, '-', 0, ',', 7, '-', 1) ,
('Swap gain:', -1.0) ,
([2, 0, 4, 3, 6, 5, 7, 1],) ,
('Computing match for mapping',) ,
([2, 0, 4, 3, 6, 5, 7, 1],) ,
('saved value', 0.25595151952134776) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 3) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', 1.0) ,
([2, 1, 3, 4, 6, 5, 7, 0],) ,
('Computing match for mapping',) ,
([2, 1, 3, 4, 6, 5, 7, 0],) ,
('saved value', 2.2559515195213478) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', 0.0) ,
([2, 1, 6, 3, 4, 5, 7, 0],) ,
('Computing match for mapping',) ,
([2, 1, 6, 3, 4, 5, 7, 0],) ,
('saved value', 1.2559515195213478) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 5) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([2, 1, 5, 3, 6, 4, 7, 0],) ,
('Computing match for mapping',) ,
([2, 1, 5, 3, 6, 4, 7, 0],) ,
('saved value', 1.2559515195213478) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 7) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -0.2559515195213478) ,
([2, 1, 7, 3, 6, 5, 4, 0],) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 6, 5, 4, 0],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 0) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 2, '-', 0, ',', 7, '-', 4) ,
('Swap gain:', 0.0) ,
([2, 1, 0, 3, 6, 5, 7, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 6, 5, 7, 4],) ,
('saved value', 1.2559515195213478) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 6) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([2, 1, 4, 6, 3, 5, 7, 0],) ,
('Computing match for mapping',) ,
([2, 1, 4, 6, 3, 5, 7, 0],) ,
('saved value', 1.2559515195213478) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', 1.0) ,
([2, 1, 4, 5, 6, 3, 7, 0],) ,
('Computing match for mapping',) ,
([2, 1, 4, 5, 6, 3, 7, 0],) ,
('saved value', 2.2559515195213478) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 7) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', 0.3525881251594252) ,
([2, 1, 4, 7, 6, 5, 3, 0],) ,
('Computing match for mapping',) ,
([2, 1, 4, 7, 6, 5, 3, 0],) ,
('saved value', 1.608539644680773) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 3, ',', 7, '-', 0) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 3, '-', 0, ',', 7, '-', 3) ,
('Swap gain:', 2.0) ,
([2, 1, 4, 0, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([2, 1, 4, 0, 6, 5, 7, 3],) ,
('saved value', 3.2559515195213478) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 5) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 6) ,
('Swap gain:', 1.0) ,
([2, 1, 4, 3, 5, 6, 7, 0],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 5, 6, 7, 0],) ,
('saved value', 2.2559515195213478) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 7) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', 0.0028884208581775317) ,
([2, 1, 4, 3, 7, 5, 6, 0],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 7, 5, 6, 0],) ,
('saved value', 1.2588399403795254) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 0) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 4, '-', 0, ',', 7, '-', 6) ,
('Swap gain:', 0.0) ,
([2, 1, 4, 3, 0, 5, 7, 6],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 0, 5, 7, 6],) ,
('saved value', 1.2559515195213478) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 7) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -0.2559515195213478) ,
([2, 1, 4, 3, 6, 7, 5, 0],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 6, 7, 5, 0],) ,
('saved value', 1.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 5, ',', 7, '-', 0) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 5, '-', 0, ',', 7, '-', 5) ,
('Swap gain:', 0.0) ,
([2, 1, 4, 3, 6, 0, 7, 5],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 6, 0, 7, 5],) ,
('saved value', 1.2559515195213478) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 0) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('After swapping:', 6, '-', 0, ',', 7, '-', 7) ,
('Swap gain:', -0.2559515195213478) ,
([2, 1, 4, 3, 6, 5, 0, 7],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 6, 5, 0, 7],) ,
('saved value', 1.0) ,
('Use swap gain',) ,
('Original mapping', [2, 1, 4, 3, 6, 5, 7, 0]) ,
('Current mapping', [0, 1, 4, 3, 6, 5, 7, 2]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 4.255951519521348) ,
('Current mapping:', [0, 1, 4, 3, 6, 5, 7, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 4, 3, 6, 5, 7, 2],) ,
('Computing match for mapping',) ,
([1, 0, 4, 3, 6, 5, 7, 2],) ,
('saved value', 0.2559515195213482) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 0, 3, 6, 5, 7, 2],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, 6, 5, 7, 2],) ,
('saved value', 1.2559515195213482) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 4, 0, 6, 5, 7, 2],) ,
('Computing match for mapping',) ,
([3, 1, 4, 0, 6, 5, 7, 2],) ,
('saved value', 1.2559515195213482) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 4, 3, 0, 5, 7, 2],) ,
('Computing match for mapping',) ,
([6, 1, 4, 3, 0, 5, 7, 2],) ,
('saved value', 1.2559515195213482) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 4, 3, 6, 0, 7, 2],) ,
('Computing match for mapping',) ,
([5, 1, 4, 3, 6, 0, 7, 2],) ,
('saved value', 1.2559515195213482) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -3.2559515195213478) ,
([7, 1, 4, 3, 6, 5, 0, 2],) ,
('Computing match for mapping',) ,
([7, 1, 4, 3, 6, 5, 0, 2],) ,
('saved value', 1.0000000000000004) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 2) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 0, '-', 2, ',', 7, '-', 0) ,
('Swap gain:', -3.0000000000000004) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 6, 5, 7, 0],) ,
('saved value', 1.2559515195213478) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 4, 1, 3, 6, 5, 7, 2],) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 6, 5, 7, 2],) ,
('saved value', 2.255951519521348) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 4, 1, 6, 5, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 5, 7, 2],) ,
('saved value', 2.255951519521348) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 6) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 6, 4, 3, 1, 5, 7, 2],) ,
('Computing match for mapping',) ,
([0, 6, 4, 3, 1, 5, 7, 2],) ,
('saved value', 2.255951519521348) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 5, 4, 3, 6, 1, 7, 2],) ,
('Computing match for mapping',) ,
([0, 5, 4, 3, 6, 1, 7, 2],) ,
('saved value', 2.255951519521348) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -1.2559515195213478) ,
([0, 7, 4, 3, 6, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 4, 3, 6, 5, 1, 2],) ,
('saved value', 3.0000000000000004) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 2) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 1, '-', 2, ',', 7, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 4, 3, 6, 5, 7, 1],) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 6, 5, 7, 1],) ,
('saved value', 2.255951519521348) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 3) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 3, 4, 6, 5, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 6, 5, 7, 2],) ,
('saved value', 5.255951519521348) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 1, 6, 3, 4, 5, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 7, 2],) ,
('saved value', 4.255951519521348) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 5) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 1, 5, 3, 6, 4, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 6, 4, 7, 2],) ,
('saved value', 4.255951519521348) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 7) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -0.2559515195213478) ,
([0, 1, 7, 3, 6, 5, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 6, 5, 4, 2],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 2) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 2, '-', 2, ',', 7, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 3, 6, 5, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 7, 4],) ,
('saved value', 5.255951519521348) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 6) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 1, 4, 6, 3, 5, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 3, 5, 7, 2],) ,
('saved value', 4.255951519521348) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', 1.0) ,
([0, 1, 4, 5, 6, 3, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 6, 3, 7, 2],) ,
('saved value', 5.255951519521348) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 7) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', 0.3525881251594252) ,
([0, 1, 4, 7, 6, 5, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 6, 5, 3, 2],) ,
('saved value', 4.608539644680773) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 3, ',', 7, '-', 2) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 3, '-', 2, ',', 7, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('saved value', 6.255951519521348) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 5) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 6) ,
('Swap gain:', 1.0) ,
([0, 1, 4, 3, 5, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, 6, 7, 2],) ,
('saved value', 5.255951519521348) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 7) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', 0.0028884208581775317) ,
([0, 1, 4, 3, 7, 5, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 7, 5, 6, 2],) ,
('saved value', 4.258839940379525) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 2) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 4, '-', 2, ',', 7, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 1, 4, 3, 2, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 7, 6],) ,
('saved value', 4.255951519521348) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 7) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -0.2559515195213478) ,
([0, 1, 4, 3, 6, 7, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 6, 7, 5, 2],) ,
('saved value', 4.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 5, ',', 7, '-', 2) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 5, '-', 2, ',', 7, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 1, 4, 3, 6, 2, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 6, 2, 7, 5],) ,
('saved value', 5.255951519521348) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 2) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('After swapping:', 6, '-', 2, ',', 7, '-', 7) ,
('Swap gain:', -0.2559515195213478) ,
([0, 1, 4, 3, 6, 5, 2, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 6, 5, 2, 7],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 4, 3, 6, 5, 7, 2]) ,
('Current mapping', [0, 1, 4, 2, 6, 5, 7, 3]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 6.255951519521348) ,
('Current mapping:', [0, 1, 4, 2, 6, 5, 7, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 4, 2, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([1, 0, 4, 2, 6, 5, 7, 3],) ,
('saved value', 1.2559515195213482) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 0, 2, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([4, 1, 0, 2, 6, 5, 7, 3],) ,
('saved value', 3.255951519521348) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -3.0000000000000004) ,
([2, 1, 4, 0, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([2, 1, 4, 0, 6, 5, 7, 3],) ,
('saved value', 3.2559515195213478) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 4, 2, 0, 5, 7, 3],) ,
('Computing match for mapping',) ,
([6, 1, 4, 2, 0, 5, 7, 3],) ,
('saved value', 3.255951519521348) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 4, 2, 6, 0, 7, 3],) ,
('Computing match for mapping',) ,
([5, 1, 4, 2, 6, 0, 7, 3],) ,
('saved value', 3.255951519521348) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -3.2559515195213478) ,
([7, 1, 4, 2, 6, 5, 0, 3],) ,
('Computing match for mapping',) ,
([7, 1, 4, 2, 6, 5, 0, 3],) ,
('saved value', 3.0000000000000004) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 4, 2, 6, 5, 7, 0],) ,
('Computing match for mapping',) ,
([3, 1, 4, 2, 6, 5, 7, 0],) ,
('saved value', 1.2559515195213478) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 4, 1, 2, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 6, 5, 7, 3],) ,
('saved value', 5.255951519521348) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 4, 1, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 6, 5, 7, 3],) ,
('saved value', 3.255951519521348) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 6) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 6, 4, 2, 1, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 1, 5, 7, 3],) ,
('saved value', 3.255951519521348) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 5, 4, 2, 6, 1, 7, 3],) ,
('Computing match for mapping',) ,
([0, 5, 4, 2, 6, 1, 7, 3],) ,
('saved value', 3.255951519521348) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -1.2559515195213478) ,
([0, 7, 4, 2, 6, 5, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 4, 2, 6, 5, 1, 3],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 2, 6, 5, 7, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 6, 5, 7, 1],) ,
('saved value', 2.255951519521348) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 2) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', 3.0) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('saved value', 9.255951519521348) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 1, 6, 2, 4, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 4, 5, 7, 3],) ,
('saved value', 6.255951519521348) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 5) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 1, 5, 2, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 6, 4, 7, 3],) ,
('saved value', 6.255951519521348) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 7) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', 0.7440484804786522) ,
([0, 1, 7, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, 5, 4, 3],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 3) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 2, 6, 5, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 6, 5, 7, 4],) ,
('saved value', 4.255951519521348) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 6) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 1, 4, 6, 2, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 2, 5, 7, 3],) ,
('saved value', 6.255951519521348) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 5) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 1, 4, 5, 6, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 6, 2, 7, 3],) ,
('saved value', 7.255951519521348) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 7) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -0.2559515195213478) ,
([0, 1, 4, 7, 6, 5, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 6, 5, 2, 3],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 3) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 6, 5, 7, 2],) ,
('saved value', 4.255951519521348) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 5) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 6) ,
('Swap gain:', 1.0) ,
([0, 1, 4, 2, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 6, 7, 3],) ,
('saved value', 7.255951519521348) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 7) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', 0.0028884208581775317) ,
([0, 1, 4, 2, 7, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 7, 5, 6, 3],) ,
('saved value', 6.258839940379525) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 3) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 2, 3, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, 5, 7, 6],) ,
('saved value', 4.255951519521348) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 7) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -0.2559515195213478) ,
([0, 1, 4, 2, 6, 7, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 7, 5, 3],) ,
('saved value', 6.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 5, ',', 7, '-', 3) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -1.0) ,
([0, 1, 4, 2, 6, 3, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 3, 7, 5],) ,
('saved value', 5.255951519521348) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 3) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -1.6474118748405748) ,
([0, 1, 4, 2, 6, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 5, 3, 7],) ,
('saved value', 4.608539644680773) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 4, 2, 6, 5, 7, 3]) ,
('Current mapping', [0, 1, 2, 4, 6, 5, 7, 3]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 9.255951519521348) ,
('Current mapping:', [0, 1, 2, 4, 6, 5, 7, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 4, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 6, 5, 7, 3],) ,
('saved value', 3.255951519521348) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 0, 4, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 6, 5, 7, 3],) ,
('saved value', 5.255951519521348) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, 2, 0, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 6, 5, 7, 3],) ,
('saved value', 4.255951519521348) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 2, 4, 0, 5, 7, 3],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 0, 5, 7, 3],) ,
('saved value', 6.255951519521348) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 4, 6, 0, 7, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 6, 0, 7, 3],) ,
('saved value', 6.255951519521348) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -3.2559515195213478) ,
([7, 1, 2, 4, 6, 5, 0, 3],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 6, 5, 0, 3],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, 4, 6, 5, 7, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 6, 5, 7, 0],) ,
('saved value', 3.255951519521348) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 4, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 6, 5, 7, 3],) ,
('saved value', 6.255951519521348) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 1, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 6, 5, 7, 3],) ,
('saved value', 3.255951519521348) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 6) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 6, 2, 4, 1, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 1, 5, 7, 3],) ,
('saved value', 5.255951519521348) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 5, 2, 4, 6, 1, 7, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 6, 1, 7, 3],) ,
('saved value', 5.255951519521348) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -3.2559515195213478) ,
([0, 7, 2, 4, 6, 5, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 6, 5, 1, 3],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 2, 4, 6, 5, 7, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 6, 5, 7, 1],) ,
('saved value', 3.255951519521348) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 5, 7, 3],) ,
('saved value', 6.255951519521348) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 6) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 6, 4, 2, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 2, 5, 7, 3],) ,
('saved value', 8.255951519521348) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 1, 5, 4, 6, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 6, 2, 7, 3],) ,
('saved value', 9.255951519521348) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', 0.7440484804786518) ,
([0, 1, 7, 4, 6, 5, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 6, 5, 2, 3],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 3) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 3, 4, 6, 5, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 6, 5, 7, 2],) ,
('saved value', 5.255951519521348) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 6) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 6, 4, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 7, 3],) ,
('saved value', 7.255951519521348) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 5, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 6, 4, 7, 3],) ,
('saved value', 7.255951519521348) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -2.2559515195213478) ,
([0, 1, 2, 7, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 6, 5, 4, 3],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 3, 6, 5, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 7, 4],) ,
('saved value', 5.255951519521348) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 5) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 6) ,
('Swap gain:', 2.0) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('saved value', 11.255951519521348) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 7) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', 0.0028884208581771986) ,
([0, 1, 2, 4, 7, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 5, 6, 3],) ,
('saved value', 9.258839940379525) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 6, ',', 7, '-', 3) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 4, 3, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 7, 6],) ,
('saved value', 6.255951519521348) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 7) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -0.2559515195213482) ,
([0, 1, 2, 4, 6, 7, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 7, 5, 3],) ,
('saved value', 9.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 5, ',', 7, '-', 3) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 6, 3, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 3, 7, 5],) ,
('saved value', 7.255951519521348) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 3) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -2.647411874840575) ,
([0, 1, 2, 4, 6, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 5, 3, 7],) ,
('saved value', 6.608539644680773) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 6, 5, 7, 3]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 3]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 11.255951519521348) ,
('Current mapping:', [0, 1, 2, 4, 5, 6, 7, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 4, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 6, 7, 3],) ,
('saved value', 5.255951519521348) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 0, 4, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 6, 7, 3],) ,
('saved value', 7.255951519521348) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([4, 1, 2, 0, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 6, 7, 3],) ,
('saved value', 5.255951519521348) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 2, 4, 0, 6, 7, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 6, 7, 3],) ,
('saved value', 6.255951519521348) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 2, 4, 5, 0, 7, 3],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 5, 0, 7, 3],) ,
('saved value', 8.255951519521348) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -3.2559515195213478) ,
([7, 1, 2, 4, 5, 6, 0, 3],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 6, 0, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, 4, 5, 6, 7, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 6, 7, 0],) ,
('saved value', 5.255951519521348) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 4, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 6, 7, 3],) ,
('saved value', 8.255951519521348) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 4, 2, 1, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 6, 7, 3],) ,
('saved value', 4.255951519521348) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 5, 2, 4, 1, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 6, 7, 3],) ,
('saved value', 5.255951519521348) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 6, 2, 4, 5, 1, 7, 3],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 1, 7, 3],) ,
('saved value', 7.255951519521348) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -3.2559515195213478) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 2, 4, 5, 6, 7, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 6, 7, 1],) ,
('saved value', 5.255951519521348) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 2, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 6, 7, 3],) ,
('saved value', 7.255951519521348) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 4, 2, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, 7, 3],) ,
('saved value', 8.255951519521348) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 1, 6, 4, 5, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, 7, 3],) ,
('saved value', 11.255951519521348) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', 0.7440484804786518) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 3, 4, 5, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 6, 7, 2],) ,
('saved value', 7.255951519521348) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 5, 4, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6, 7, 3],) ,
('saved value', 7.255951519521348) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 6, 5, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, 7, 3],) ,
('saved value', 8.255951519521348) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -3.2559515195213478) ,
([0, 1, 2, 7, 5, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 6, 4, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 3, 5, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, 7, 4],) ,
('saved value', 6.255951519521348) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('saved value', 9.255951519521348) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -1.9971115791418224) ,
([0, 1, 2, 4, 7, 6, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 6, 5, 3],) ,
('saved value', 9.258839940379525) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 4, 3, 6, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6, 7, 5],) ,
('saved value', 6.255951519521348) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -0.2559515195213482) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('saved value', 11.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 5, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, 7, 6],) ,
('saved value', 9.255951519521348) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -2.647411874840575) ,
([0, 1, 2, 4, 5, 6, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 3, 7],) ,
('saved value', 8.608539644680773) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 5, 6, 7, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 6, 2, 3]) ,
('Gain after the hill-climbing', 0.7440484804786518) ,
('Update triple match number to:', 12.0) ,
('Current mapping:', [0, 1, 7, 4, 5, 6, 2, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 7, 4, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, 6, 2, 3],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([7, 1, 0, 4, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 6, 2, 3],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 7, 0, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 5, 6, 2, 3],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 7, 4, 0, 6, 2, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 0, 6, 2, 3],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 7, 4, 5, 0, 2, 3],) ,
('Computing match for mapping',) ,
([6, 1, 7, 4, 5, 0, 2, 3],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 2) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 7, 4, 5, 6, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 5, 6, 0, 3],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 7, 4, 5, 6, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 5, 6, 2, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 7, 1, 4, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 6, 2, 3],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 4, 7, 1, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 5, 6, 2, 3],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 7, 4, 1, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 1, 6, 2, 3],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 6, 7, 4, 5, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 6, 7, 4, 5, 1, 2, 3],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 2) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 7, 4, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 6, 1, 3],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 7, 4, 5, 6, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, 6, 2, 1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 4, 7, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 6, 2, 3],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3.7411600596204746) ,
([0, 1, 5, 4, 7, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 6, 2, 3],) ,
('saved value', 8.258839940379525) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 6) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 6, 4, 5, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 7, 2, 3],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 2) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 2, '-', 2, ',', 6, '-', 7) ,
('Swap gain:', -0.7440484804786518) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('saved value', 11.255951519521348) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 4, 5, 6, 2, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 6, 2, 7],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 5, 4, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, 6, 2, 3],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 5, 4, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 4, 2, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 2) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 3, '-', 2, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 2, 5, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 6, 4, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -7.0) ,
([0, 1, 7, 3, 5, 6, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 6, 2, 4],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 7, 4, 6, 5, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 6, 5, 2, 3],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 2) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 4, '-', 2, ',', 6, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 7, 4, 2, 6, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 6, 5, 3],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 4, 3, 6, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 6, 2, 5],) ,
('saved value', 6.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 2) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 5, '-', 2, ',', 6, '-', 6) ,
('Swap gain:', 1.0) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('saved value', 13.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 4, 5, 3, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, 2, 6],) ,
('saved value', 9.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 2, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -3.391460355319227) ,
([0, 1, 7, 4, 5, 6, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 3, 2],) ,
('saved value', 8.608539644680773) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 7, 4, 5, 6, 2, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 13.0) ,
('Current mapping:', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 7, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([7, 1, 0, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 7, 0, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 5, 2, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 7, 4, 0, 2, 6, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 0, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 7, 4, 5, 0, 6, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 5, 0, 6, 3],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 7, 4, 5, 2, 0, 3],) ,
('Computing match for mapping',) ,
([6, 1, 7, 4, 5, 2, 0, 3],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 7, 4, 5, 2, 6, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 5, 2, 6, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 7, 1, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 2, 6, 3],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 4, 7, 1, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 5, 2, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 7, 4, 1, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 1, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 7, 4, 5, 1, 6, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 1, 6, 3],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 6, 7, 4, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 7, 4, 5, 2, 1, 3],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 7, 4, 5, 2, 6, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, 2, 6, 1],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 4, 7, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3.7411600596204746) ,
([0, 1, 5, 4, 7, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 2, 6, 3],) ,
('saved value', 9.258839940379525) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('saved value', 11.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -1.7440484804786518) ,
([0, 1, 6, 4, 5, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, 7, 3],) ,
('saved value', 11.255951519521348) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 4, 5, 2, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2, 6, 7],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 5, 4, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 2, 5, 4, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 2, 4, 3],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -7.0) ,
([0, 1, 7, 3, 5, 2, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, 6, 4],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 4, 2, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 5, 6, 3],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('saved value', 11.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 4, 3, 2, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 2, 6, 5],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('saved value', 12.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 4, 5, 3, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, 6, 2],) ,
('saved value', 9.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -3.391460355319227) ,
([0, 1, 7, 4, 5, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 3, 6],) ,
('saved value', 9.608539644680773) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 1.0) ,
('node_pair', (5, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (7, 1)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 1.0) ,
('Node mapping at start', [2, 7, 0, 3, 5, 6, 4, 1]) ,
('Triple match number at start:', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 7) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 2) ,
('Swap gain:', 0.0) ,
([7, 2, 0, 3, 5, 6, 4, 1],) ,
('Computing match for mapping',) ,
([7, 2, 0, 3, 5, 6, 4, 1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 2.0) ,
([0, 7, 2, 3, 5, 6, 4, 1],) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 5, 6, 4, 1],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 3) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 7, 0, 2, 5, 6, 4, 1],) ,
('Computing match for mapping',) ,
([3, 7, 0, 2, 5, 6, 4, 1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 5) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([5, 7, 0, 3, 2, 6, 4, 1],) ,
('Computing match for mapping',) ,
([5, 7, 0, 3, 2, 6, 4, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 6) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', 1.0) ,
([6, 7, 0, 3, 5, 2, 4, 1],) ,
('Computing match for mapping',) ,
([6, 7, 0, 3, 5, 2, 4, 1],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 4) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 7, 0, 3, 5, 6, 2, 1],) ,
('Computing match for mapping',) ,
([4, 7, 0, 3, 5, 6, 2, 1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 2, ',', 7, '-', 1) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 7, 0, 3, 5, 6, 4, 2],) ,
('Computing match for mapping',) ,
([1, 7, 0, 3, 5, 6, 4, 2],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 0) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 7) ,
('Swap gain:', 0.0) ,
([2, 0, 7, 3, 5, 6, 4, 1],) ,
('Computing match for mapping',) ,
([2, 0, 7, 3, 5, 6, 4, 1],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 3) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 7) ,
('Swap gain:', 0.0) ,
([2, 3, 0, 7, 5, 6, 4, 1],) ,
('Computing match for mapping',) ,
([2, 3, 0, 7, 5, 6, 4, 1],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 5) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -0.7411600596204746) ,
([2, 5, 0, 3, 7, 6, 4, 1],) ,
('Computing match for mapping',) ,
([2, 5, 0, 3, 7, 6, 4, 1],) ,
('saved value', 0.2588399403795254) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 6) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 7) ,
('Swap gain:', 0.0) ,
([2, 6, 0, 3, 5, 7, 4, 1],) ,
('Computing match for mapping',) ,
([2, 6, 0, 3, 5, 7, 4, 1],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', 4) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', 0.2559515195213478) ,
([2, 4, 0, 3, 5, 6, 7, 1],) ,
('Computing match for mapping',) ,
([2, 4, 0, 3, 5, 6, 7, 1],) ,
('saved value', 1.2559515195213478) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 1) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', 1.0) ,
([2, 1, 0, 3, 5, 6, 4, 7],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 5, 6, 4, 7],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 3) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 7, 3, 0, 5, 6, 4, 1],) ,
('Computing match for mapping',) ,
([2, 7, 3, 0, 5, 6, 4, 1],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 5) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 7, 5, 3, 0, 6, 4, 1],) ,
('Computing match for mapping',) ,
([2, 7, 5, 3, 0, 6, 4, 1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 6) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 7, 6, 3, 5, 0, 4, 1],) ,
('Computing match for mapping',) ,
([2, 7, 6, 3, 5, 0, 4, 1],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 4) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', 1.0) ,
([2, 7, 4, 3, 5, 6, 0, 1],) ,
('Computing match for mapping',) ,
([2, 7, 4, 3, 5, 6, 0, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 0, ',', 7, '-', 1) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 7, 1, 3, 5, 6, 4, 0],) ,
('Computing match for mapping',) ,
([2, 7, 1, 3, 5, 6, 4, 0],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -1.0) ,
([2, 7, 0, 5, 3, 6, 4, 1],) ,
('Computing match for mapping',) ,
([2, 7, 0, 5, 3, 6, 4, 1],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 6) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', 1.0) ,
([2, 7, 0, 6, 5, 3, 4, 1],) ,
('Computing match for mapping',) ,
([2, 7, 0, 6, 5, 3, 4, 1],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 4) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', 2.608539644680773) ,
([2, 7, 0, 4, 5, 6, 3, 1],) ,
('Computing match for mapping',) ,
([2, 7, 0, 4, 5, 6, 3, 1],) ,
('saved value', 3.608539644680773) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 3, ',', 7, '-', 1) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', 3.0) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('Computing match for mapping',) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -1.0) ,
([2, 7, 0, 3, 6, 5, 4, 1],) ,
('Computing match for mapping',) ,
([2, 7, 0, 3, 6, 5, 4, 1],) ,
('saved value', 0.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 4) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 5) ,
('Swap gain:', -1.0) ,
([2, 7, 0, 3, 4, 6, 5, 1],) ,
('Computing match for mapping',) ,
([2, 7, 0, 3, 4, 6, 5, 1],) ,
('saved value', 0.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 1) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', -1.0) ,
([2, 7, 0, 3, 1, 6, 4, 5],) ,
('Computing match for mapping',) ,
([2, 7, 0, 3, 1, 6, 4, 5],) ,
('saved value', 0.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 4) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', 0.0) ,
([2, 7, 0, 3, 5, 4, 6, 1],) ,
('Computing match for mapping',) ,
([2, 7, 0, 3, 5, 4, 6, 1],) ,
('saved value', 1.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 1) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', 0.0) ,
([2, 7, 0, 3, 5, 1, 4, 6],) ,
('Computing match for mapping',) ,
([2, 7, 0, 3, 5, 1, 4, 6],) ,
('saved value', 1.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 1) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', 0.0) ,
([2, 7, 0, 3, 5, 6, 1, 4],) ,
('Computing match for mapping',) ,
([2, 7, 0, 3, 5, 6, 1, 4],) ,
('saved value', 1.0) ,
('Use swap gain',) ,
('Original mapping', [2, 7, 0, 3, 5, 6, 4, 1]) ,
('Current mapping', [2, 7, 0, 1, 5, 6, 4, 3]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [2, 7, 0, 1, 5, 6, 4, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 7) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 2) ,
('Swap gain:', -1.0) ,
([7, 2, 0, 1, 5, 6, 4, 3],) ,
('Computing match for mapping',) ,
([7, 2, 0, 1, 5, 6, 4, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 7, 2, 1, 5, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 1, 5, 6, 4, 3],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 1) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([1, 7, 0, 2, 5, 6, 4, 3],) ,
('Computing match for mapping',) ,
([1, 7, 0, 2, 5, 6, 4, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 5) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([5, 7, 0, 1, 2, 6, 4, 3],) ,
('Computing match for mapping',) ,
([5, 7, 0, 1, 2, 6, 4, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 6) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', 1.0) ,
([6, 7, 0, 1, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([6, 7, 0, 1, 5, 2, 4, 3],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 4) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 7, 0, 1, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([4, 7, 0, 1, 5, 6, 2, 3],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 2, ',', 7, '-', 3) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -2.0) ,
([3, 7, 0, 1, 5, 6, 4, 2],) ,
('Computing match for mapping',) ,
([3, 7, 0, 1, 5, 6, 4, 2],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 0) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 7) ,
('Swap gain:', -1.0) ,
([2, 0, 7, 1, 5, 6, 4, 3],) ,
('Computing match for mapping',) ,
([2, 0, 7, 1, 5, 6, 4, 3],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 1) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 7) ,
('Swap gain:', 0.0) ,
([2, 1, 0, 7, 5, 6, 4, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 7, 5, 6, 4, 3],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 5) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -1.7411600596204746) ,
([2, 5, 0, 1, 7, 6, 4, 3],) ,
('Computing match for mapping',) ,
([2, 5, 0, 1, 7, 6, 4, 3],) ,
('saved value', 2.2588399403795254) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 6) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 7) ,
('Swap gain:', -1.0) ,
([2, 6, 0, 1, 5, 7, 4, 3],) ,
('Computing match for mapping',) ,
([2, 6, 0, 1, 5, 7, 4, 3],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', 4) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', -0.7440484804786522) ,
([2, 4, 0, 1, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([2, 4, 0, 1, 5, 6, 7, 3],) ,
('saved value', 3.2559515195213478) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 3) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -2.0) ,
([2, 3, 0, 1, 5, 6, 4, 7],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, 5, 6, 4, 7],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 1) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 7, 1, 0, 5, 6, 4, 3],) ,
('Computing match for mapping',) ,
([2, 7, 1, 0, 5, 6, 4, 3],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 5) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 7, 5, 1, 0, 6, 4, 3],) ,
('Computing match for mapping',) ,
([2, 7, 5, 1, 0, 6, 4, 3],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 6) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 7, 6, 1, 5, 0, 4, 3],) ,
('Computing match for mapping',) ,
([2, 7, 6, 1, 5, 0, 4, 3],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 4) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 7, 4, 1, 5, 6, 0, 3],) ,
('Computing match for mapping',) ,
([2, 7, 4, 1, 5, 6, 0, 3],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 0, ',', 7, '-', 3) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 7, 3, 1, 5, 6, 4, 0],) ,
('Computing match for mapping',) ,
([2, 7, 3, 1, 5, 6, 4, 0],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 5) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([2, 7, 0, 5, 1, 6, 4, 3],) ,
('Computing match for mapping',) ,
([2, 7, 0, 5, 1, 6, 4, 3],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 6) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -1.0) ,
([2, 7, 0, 6, 5, 1, 4, 3],) ,
('Computing match for mapping',) ,
([2, 7, 0, 6, 5, 1, 4, 3],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 4) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', 2.0) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 3) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -3.0) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('Computing match for mapping',) ,
([2, 7, 0, 3, 5, 6, 4, 1],) ,
('saved value', 1.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -1.0) ,
([2, 7, 0, 1, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([2, 7, 0, 1, 6, 5, 4, 3],) ,
('saved value', 3.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 4) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 5) ,
('Swap gain:', -1.0) ,
([2, 7, 0, 1, 4, 6, 5, 3],) ,
('Computing match for mapping',) ,
([2, 7, 0, 1, 4, 6, 5, 3],) ,
('saved value', 3.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -3.0) ,
([2, 7, 0, 1, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([2, 7, 0, 1, 3, 6, 4, 5],) ,
('saved value', 1.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 4) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', 0.0) ,
([2, 7, 0, 1, 5, 4, 6, 3],) ,
('Computing match for mapping',) ,
([2, 7, 0, 1, 5, 4, 6, 3],) ,
('saved value', 4.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 3) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -1.0) ,
([2, 7, 0, 1, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([2, 7, 0, 1, 5, 3, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 3) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -1.3914603553192268) ,
([2, 7, 0, 1, 5, 6, 3, 4],) ,
('Computing match for mapping',) ,
([2, 7, 0, 1, 5, 6, 3, 4],) ,
('saved value', 2.608539644680773) ,
('Use swap gain',) ,
('Original mapping', [2, 7, 0, 1, 5, 6, 4, 3]) ,
('Current mapping', [2, 7, 0, 4, 5, 6, 1, 3]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [2, 7, 0, 4, 5, 6, 1, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 7) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 2) ,
('Swap gain:', -1.0) ,
([7, 2, 0, 4, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([7, 2, 0, 4, 5, 6, 1, 3],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 2.0) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 4) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([4, 7, 0, 2, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([4, 7, 0, 2, 5, 6, 1, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 5) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([5, 7, 0, 4, 2, 6, 1, 3],) ,
('Computing match for mapping',) ,
([5, 7, 0, 4, 2, 6, 1, 3],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 6) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', 1.0) ,
([6, 7, 0, 4, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([6, 7, 0, 4, 5, 2, 1, 3],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 1) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 0, '-', 1, ',', 6, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 7, 0, 4, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([1, 7, 0, 4, 5, 6, 2, 3],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 2, ',', 7, '-', 3) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -3.0) ,
([3, 7, 0, 4, 5, 6, 1, 2],) ,
('Computing match for mapping',) ,
([3, 7, 0, 4, 5, 6, 1, 2],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 0) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 7) ,
('Swap gain:', 1.0) ,
([2, 0, 7, 4, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([2, 0, 7, 4, 5, 6, 1, 3],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 4) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -4.0) ,
([2, 4, 0, 7, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([2, 4, 0, 7, 5, 6, 1, 3],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 5) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -2.7411600596204746) ,
([2, 5, 0, 4, 7, 6, 1, 3],) ,
('Computing match for mapping',) ,
([2, 5, 0, 4, 7, 6, 1, 3],) ,
('saved value', 3.2588399403795254) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 6) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 7) ,
('Swap gain:', -1.0) ,
([2, 6, 0, 4, 5, 7, 1, 3],) ,
('Computing match for mapping',) ,
([2, 6, 0, 4, 5, 7, 1, 3],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', 1) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 1, '-', 1, ',', 6, '-', 7) ,
('Swap gain:', 1.2559515195213482) ,
([2, 1, 0, 4, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 6, 7, 3],) ,
('saved value', 7.255951519521348) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 3) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -3.0) ,
([2, 3, 0, 4, 5, 6, 1, 7],) ,
('Computing match for mapping',) ,
([2, 3, 0, 4, 5, 6, 1, 7],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 4) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 7, 4, 0, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([2, 7, 4, 0, 5, 6, 1, 3],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 5) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 7, 5, 4, 0, 6, 1, 3],) ,
('Computing match for mapping',) ,
([2, 7, 5, 4, 0, 6, 1, 3],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 6) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 7, 6, 4, 5, 0, 1, 3],) ,
('Computing match for mapping',) ,
([2, 7, 6, 4, 5, 0, 1, 3],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 1) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 2, '-', 1, ',', 6, '-', 0) ,
('Swap gain:', 1.0) ,
([2, 7, 1, 4, 5, 6, 0, 3],) ,
('Computing match for mapping',) ,
([2, 7, 1, 4, 5, 6, 0, 3],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 0, ',', 7, '-', 3) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 7, 3, 4, 5, 6, 1, 0],) ,
('Computing match for mapping',) ,
([2, 7, 3, 4, 5, 6, 1, 0],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([2, 7, 0, 5, 4, 6, 1, 3],) ,
('Computing match for mapping',) ,
([2, 7, 0, 5, 4, 6, 1, 3],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([2, 7, 0, 6, 5, 4, 1, 3],) ,
('Computing match for mapping',) ,
([2, 7, 0, 6, 5, 4, 1, 3],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 1) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 3, '-', 1, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('Computing match for mapping',) ,
([2, 7, 0, 1, 5, 6, 4, 3],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -5.0) ,
([2, 7, 0, 3, 5, 6, 1, 4],) ,
('Computing match for mapping',) ,
([2, 7, 0, 3, 5, 6, 1, 4],) ,
('saved value', 1.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -2.0) ,
([2, 7, 0, 4, 6, 5, 1, 3],) ,
('Computing match for mapping',) ,
([2, 7, 0, 4, 6, 5, 1, 3],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 1) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 4, '-', 1, ',', 6, '-', 5) ,
('Swap gain:', -2.0) ,
([2, 7, 0, 4, 1, 6, 5, 3],) ,
('Computing match for mapping',) ,
([2, 7, 0, 4, 1, 6, 5, 3],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -5.0) ,
([2, 7, 0, 4, 3, 6, 1, 5],) ,
('Computing match for mapping',) ,
([2, 7, 0, 4, 3, 6, 1, 5],) ,
('saved value', 1.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 1) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 5, '-', 1, ',', 6, '-', 6) ,
('Swap gain:', 0.0) ,
([2, 7, 0, 4, 5, 1, 6, 3],) ,
('Computing match for mapping',) ,
([2, 7, 0, 4, 5, 1, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 3) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -2.0) ,
([2, 7, 0, 4, 5, 3, 1, 6],) ,
('Computing match for mapping',) ,
([2, 7, 0, 4, 5, 3, 1, 6],) ,
('saved value', 4.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 1, ',', 7, '-', 3) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -2.391460355319227) ,
([2, 7, 0, 4, 5, 6, 3, 1],) ,
('Computing match for mapping',) ,
([2, 7, 0, 4, 5, 6, 3, 1],) ,
('saved value', 3.608539644680773) ,
('Use swap gain',) ,
('Original mapping', [2, 7, 0, 4, 5, 6, 1, 3]) ,
('Current mapping', [0, 7, 2, 4, 5, 6, 1, 3]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 8.0) ,
('Current mapping:', [0, 7, 2, 4, 5, 6, 1, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 7) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 0, 2, 4, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([7, 0, 2, 4, 5, 6, 1, 3],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([2, 7, 0, 4, 5, 6, 1, 3],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 7, 2, 0, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([4, 7, 2, 0, 5, 6, 1, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 7, 2, 4, 0, 6, 1, 3],) ,
('Computing match for mapping',) ,
([5, 7, 2, 4, 0, 6, 1, 3],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([6, 7, 2, 4, 5, 0, 1, 3],) ,
('Computing match for mapping',) ,
([6, 7, 2, 4, 5, 0, 1, 3],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 1) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 0, '-', 1, ',', 6, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 7, 2, 4, 5, 6, 0, 3],) ,
('Computing match for mapping',) ,
([1, 7, 2, 4, 5, 6, 0, 3],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 7, 2, 4, 5, 6, 1, 0],) ,
('Computing match for mapping',) ,
([3, 7, 2, 4, 5, 6, 1, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 2) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 7) ,
('Swap gain:', 1.0) ,
([0, 2, 7, 4, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 6, 1, 3],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 4) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 4, 2, 7, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 7, 5, 6, 1, 3],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 5) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -2.7411600596204746) ,
([0, 5, 2, 4, 7, 6, 1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 7, 6, 1, 3],) ,
('saved value', 5.258839940379525) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 6) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 7) ,
('Swap gain:', -1.0) ,
([0, 6, 2, 4, 5, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 7, 1, 3],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', 1) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 1, '-', 1, ',', 6, '-', 7) ,
('Swap gain:', 3.255951519521348) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('saved value', 11.255951519521348) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 3) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 3, 2, 4, 5, 6, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 6, 1, 7],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 7, 4, 2, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 4, 2, 5, 6, 1, 3],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 7, 5, 4, 2, 6, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 5, 4, 2, 6, 1, 3],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 7, 6, 4, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 6, 4, 5, 2, 1, 3],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 1) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 2, '-', 1, ',', 6, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 7, 1, 4, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 6, 2, 3],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 3) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 7, 3, 4, 5, 6, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 3, 4, 5, 6, 1, 2],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 7, 2, 5, 4, 6, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 5, 4, 6, 1, 3],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 7, 2, 6, 5, 4, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 6, 5, 4, 1, 3],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 1) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 3, '-', 1, ',', 6, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 7, 2, 1, 5, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 1, 5, 6, 4, 3],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 7, 2, 3, 5, 6, 1, 4],) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 5, 6, 1, 4],) ,
('saved value', 3.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 7, 2, 4, 6, 5, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 6, 5, 1, 3],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 1) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 4, '-', 1, ',', 6, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 7, 2, 4, 1, 6, 5, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 1, 6, 5, 3],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 7, 2, 4, 3, 6, 1, 5],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 3, 6, 1, 5],) ,
('saved value', 3.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 1) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 5, '-', 1, ',', 6, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 7, 2, 4, 5, 1, 6, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 1, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 3) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 7, 2, 4, 5, 3, 1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 3, 1, 6],) ,
('saved value', 6.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 1, ',', 7, '-', 3) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -2.391460355319227) ,
([0, 7, 2, 4, 5, 6, 3, 1],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 6, 3, 1],) ,
('saved value', 5.608539644680773) ,
('Use swap gain',) ,
('Original mapping', [0, 7, 2, 4, 5, 6, 1, 3]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 3]) ,
('Gain after the hill-climbing', 3.255951519521348) ,
('Update triple match number to:', 11.255951519521348) ,
('Current mapping:', [0, 1, 2, 4, 5, 6, 7, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 4, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 6, 7, 3],) ,
('saved value', 5.255951519521348) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 0, 4, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 6, 7, 3],) ,
('saved value', 7.255951519521348) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([4, 1, 2, 0, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 6, 7, 3],) ,
('saved value', 5.255951519521348) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 2, 4, 0, 6, 7, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 6, 7, 3],) ,
('saved value', 6.255951519521348) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 2, 4, 5, 0, 7, 3],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 5, 0, 7, 3],) ,
('saved value', 8.255951519521348) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -3.255951519521348) ,
([7, 1, 2, 4, 5, 6, 0, 3],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 6, 0, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, 4, 5, 6, 7, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 6, 7, 0],) ,
('saved value', 5.255951519521348) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 4, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 6, 7, 3],) ,
('saved value', 8.255951519521348) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 4, 2, 1, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 6, 7, 3],) ,
('saved value', 4.255951519521348) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 5, 2, 4, 1, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 6, 7, 3],) ,
('saved value', 5.255951519521348) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 6, 2, 4, 5, 1, 7, 3],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 1, 7, 3],) ,
('saved value', 7.255951519521348) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -3.255951519521348) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 6, 1, 3],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 2, 4, 5, 6, 7, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 6, 7, 1],) ,
('saved value', 5.255951519521348) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 2, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 6, 7, 3],) ,
('saved value', 7.255951519521348) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 4, 2, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, 7, 3],) ,
('saved value', 8.255951519521348) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 1, 6, 4, 5, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, 7, 3],) ,
('saved value', 11.255951519521348) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', 0.7440484804786518) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 3, 4, 5, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 6, 7, 2],) ,
('saved value', 7.255951519521348) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 5, 4, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6, 7, 3],) ,
('saved value', 7.255951519521348) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 6, 5, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, 7, 3],) ,
('saved value', 8.255951519521348) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -3.255951519521348) ,
([0, 1, 2, 7, 5, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 6, 4, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 3, 5, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, 7, 4],) ,
('saved value', 6.255951519521348) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 5, 7, 3],) ,
('saved value', 9.255951519521348) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -1.9971115791418228) ,
([0, 1, 2, 4, 7, 6, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 6, 5, 3],) ,
('saved value', 9.258839940379525) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 4, 3, 6, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6, 7, 5],) ,
('saved value', 6.255951519521348) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -0.2559515195213482) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('saved value', 11.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 5, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, 7, 6],) ,
('saved value', 9.255951519521348) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 3) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -2.647411874840575) ,
([0, 1, 2, 4, 5, 6, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 3, 7],) ,
('saved value', 8.608539644680773) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 5, 6, 7, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 6, 2, 3]) ,
('Gain after the hill-climbing', 0.7440484804786518) ,
('Update triple match number to:', 12.0) ,
('Current mapping:', [0, 1, 7, 4, 5, 6, 2, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 7, 4, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, 6, 2, 3],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([7, 1, 0, 4, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 6, 2, 3],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 7, 0, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 5, 6, 2, 3],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 7, 4, 0, 6, 2, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 0, 6, 2, 3],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 7, 4, 5, 0, 2, 3],) ,
('Computing match for mapping',) ,
([6, 1, 7, 4, 5, 0, 2, 3],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 2) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 7, 4, 5, 6, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 5, 6, 0, 3],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 7, 4, 5, 6, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 5, 6, 2, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 7, 1, 4, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 6, 2, 3],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 4, 7, 1, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 5, 6, 2, 3],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 7, 4, 1, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 1, 6, 2, 3],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 6, 7, 4, 5, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 6, 7, 4, 5, 1, 2, 3],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 2) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 7, 4, 5, 6, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 6, 1, 3],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 7, 4, 5, 6, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, 6, 2, 1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 4, 7, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 6, 2, 3],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3.7411600596204746) ,
([0, 1, 5, 4, 7, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 6, 2, 3],) ,
('saved value', 8.258839940379525) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 6) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 6, 4, 5, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 7, 2, 3],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 2) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 2, '-', 2, ',', 6, '-', 7) ,
('Swap gain:', -0.7440484804786518) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('saved value', 11.255951519521348) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 4, 5, 6, 2, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 6, 2, 7],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 5, 4, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, 6, 2, 3],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 5, 4, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 4, 2, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 2) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 3, '-', 2, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 2, 5, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 6, 4, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -7.0) ,
([0, 1, 7, 3, 5, 6, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 6, 2, 4],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 7, 4, 6, 5, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 6, 5, 2, 3],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 2) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 4, '-', 2, ',', 6, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 7, 4, 2, 6, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 6, 5, 3],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 4, 3, 6, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 6, 2, 5],) ,
('saved value', 6.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 2) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 5, '-', 2, ',', 6, '-', 6) ,
('Swap gain:', 1.0) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('saved value', 13.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 4, 5, 3, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, 2, 6],) ,
('saved value', 9.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 2, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -3.391460355319227) ,
([0, 1, 7, 4, 5, 6, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 3, 2],) ,
('saved value', 8.608539644680773) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 7, 4, 5, 6, 2, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 13.0) ,
('Current mapping:', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 7, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([1, 0, 7, 4, 5, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([7, 1, 0, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([7, 1, 0, 4, 5, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 7, 0, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([4, 1, 7, 0, 5, 2, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 7, 4, 0, 2, 6, 3],) ,
('Computing match for mapping',) ,
([5, 1, 7, 4, 0, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 7, 4, 5, 0, 6, 3],) ,
('Computing match for mapping',) ,
([2, 1, 7, 4, 5, 0, 6, 3],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 7, 4, 5, 2, 0, 3],) ,
('Computing match for mapping',) ,
([6, 1, 7, 4, 5, 2, 0, 3],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 7, 4, 5, 2, 6, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 4, 5, 2, 6, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 7, 1, 4, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 5, 2, 6, 3],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 4, 7, 1, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 5, 2, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 7, 4, 1, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 1, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 7, 4, 5, 1, 6, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 4, 5, 1, 6, 3],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 6, 7, 4, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 7, 4, 5, 2, 1, 3],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, 7, 4, 5, 2, 6, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, 2, 6, 1],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 4) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 4, 7, 5, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3.7411600596204746) ,
([0, 1, 5, 4, 7, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 2, 6, 3],) ,
('saved value', 9.258839940379525) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 3],) ,
('saved value', 11.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -1.7440484804786518) ,
([0, 1, 6, 4, 5, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, 7, 3],) ,
('saved value', 11.255951519521348) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 4, 5, 2, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 2, 6, 7],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 5, 4, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 4, 2, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 2, 5, 4, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 6, 3],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 5, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 2, 4, 3],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', -7.0) ,
([0, 1, 7, 3, 5, 2, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, 6, 4],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 2) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 4, 2, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 5, 6, 3],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 6, 2, 5, 3],) ,
('saved value', 11.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 4, 3, 2, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 2, 6, 5],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 2, 3],) ,
('saved value', 12.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 4, 5, 3, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, 6, 2],) ,
('saved value', 9.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 3) ,
([0, 1, 7, 4, 5, 2, 6, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', -3.391460355319227) ,
([0, 1, 7, 4, 5, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 2, 3, 6],) ,
('saved value', 9.608539644680773) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Current mapping', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 13.0) ,
('best node mapping', [0, 1, 7, 4, 5, 2, 6, 3]) ,
('Best node mapping alignment:', 'a0(possible-01)-b0(possible-01) a1(do-02)-b1(do-02) a2(improve-01)-b7(raise-01) a3(score)-b4(score) a4(credit)-b5(credit) a5(amr-unknown)-b2(amr-unknown) a6(more)-b6(realistic-03) a7(i)-b3(i)') ,
('F-score:', 0.7222222222222222) ,
Smatch score F1 0.722
('AMR pair', 5) ,
('============================================',) ,
('AMR 1 (one-line):', '(l0 / land-01:ARG1 (r0 / rover:mod (c0 / country):mod (m1 / moon):mod (n0 / name:op1 "China" )):location (m0 / moon))') ,
('AMR 2 (one-line):', '(l0 / land-01:ARG1 (r0 / rover):ARG0 (c0 / country:name (n0 / name:op1 "China" )):location (m0 / moon))') ,
('Instance triples of AMR 1:', 6) ,
([('instance', 'a0', 'land-01'), ('instance', 'a1', 'rover'), ('instance', 'a2', 'country'), ('instance', 'a3', 'moon'), ('instance', 'a4', 'name'), ('instance', 'a5', 'moon')],) ,
('Attribute triples of AMR 1:', 2) ,
([('TOP', 'a0', 'land-01'), ('op1', 'a4', 'China_')],) ,
('Relation triples of AMR 1:', 5) ,
([('ARG1', 'a0', 'a1'), ('location', 'a0', 'a5'), ('mod', 'a1', 'a2'), ('mod', 'a1', 'a3'), ('mod', 'a1', 'a4')],) ,
('Instance triples of AMR 2:', 5) ,
([('instance', 'b0', 'land-01'), ('instance', 'b1', 'rover'), ('instance', 'b2', 'country'), ('instance', 'b3', 'name'), ('instance', 'b4', 'moon')],) ,
('Attribute triples of AMR 2:', 2) ,
([('TOP', 'b0', 'land-01'), ('op1', 'b3', 'China_')],) ,
('Relation triples of AMR 2:', 4) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b2'), ('location', 'b0', 'b4'), ('name', 'b2', 'b3')],) ,
('Similarity', 'land-01', 'land-01', 1.0) ,
('Similarity', 'land-01', 'rover', 0.0) ,
('Similarity', 'land-01', 'country', 0.0) ,
('Similarity', 'land-01', 'name', 0.0) ,
('Similarity', 'land-01', 'moon', 0.0) ,
('Similarity', 'rover', 'rover', 1.0) ,
('Similarity', 'rover', 'country', 0.0) ,
('Similarity', 'rover', 'name', 0.0) ,
('Similarity', 'rover', 'moon', 0.0) ,
('Similarity', 'country', 'country', 1.0) ,
('Similarity', 'country', 'name', 0.0) ,
('Similarity', 'country', 'moon', 0.0) ,
('Similarity', 'moon', 'name', 0.0) ,
('Similarity', 'moon', 'moon', 1.0) ,
('Similarity', 'name', 'name', 1.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2.0, (1, 1): 1, (5, 4): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0}, (0, 3): {-1: 0.0}, (0, 4): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 1.0, (0, 0): 1}, (1, 2): {-1: 0.0}, (1, 3): {-1: 0.0}, (1, 4): {-1: 0.0}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.0}, (2, 2): {-1: 1.0}, (2, 3): {-1: 0.0}, (2, 4): {-1: 0.0}, (3, 0): {-1: 0.0}, (3, 1): {-1: 0.0}, (3, 2): {-1: 0.0}, (3, 3): {-1: 0.0}, (3, 4): {-1: 1.0}, (4, 0): {-1: 0.0}, (4, 1): {-1: 0.0}, (4, 2): {-1: 0.0}, (4, 3): {-1: 2.0}, (4, 4): {-1: 0.0}, (5, 0): {-1: 0.0}, (5, 1): {-1: 0.0}, (5, 2): {-1: 0.0}, (5, 3): {-1: 0.0}, (5, 4): {-1: 1.0, (0, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2.0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1.0) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 1.0) ,
('node_pair', (4, 3)) ,
('instance/attribute match', 2.0) ,
('match computing complete, result:', 8.0) ,
('Node mapping at start', [0, 1, 2, 4, 3, -1]) ,
('Triple match number at start:', 8.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 0, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, 0, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 2, 4, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0, -1],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, 4, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 3, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 4, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 2, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, -1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 2, 4, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 3, 1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, -1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 3, 2],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3],) ,
('saved value', 6.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 3, -1]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 9.0) ,
('Current mapping:', [0, 1, 2, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, 3, 4],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, 0, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, 2, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, 3, 0],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 2, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1, 4],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, 3, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 3, 2],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 4],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3],) ,
('saved value', 5.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 2, -1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2.0) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 2)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 2.0) ,
('Node mapping at start', [0, 3, 4, 1, 2, -1]) ,
('Triple match number at start:', 2.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 4, 1, 2, -1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([3, 0, 4, 1, 2, -1],) ,
('Computing match for mapping',) ,
([3, 0, 4, 1, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 3, 4, 1, 2, -1],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 3, 0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([4, 3, 0, 1, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 3, 4, 1, 2, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 4, 0, 2, -1],) ,
('Computing match for mapping',) ,
([1, 3, 4, 0, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 3, 4, 1, 2, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 3, 4, 1, 0, -1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 3, 4, 1, 2, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 3, 4, 1, 2, 0],) ,
('Computing match for mapping',) ,
([-1, 3, 4, 1, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([0, 3, 4, 1, 2, -1],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 4, 3, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 2, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 1) ,
([0, 3, 4, 1, 2, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 1, 4, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, -1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 2) ,
([0, 3, 4, 1, 2, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 2, 4, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', -1) ,
([0, 3, 4, 1, 2, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([0, -1, 4, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, -1, 4, 1, 2, 3],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 1) ,
([0, 3, 4, 1, 2, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 3, 1, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 2, -1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 2) ,
([0, 3, 4, 1, 2, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 3, 2, 1, 4, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, -1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', -1) ,
([0, 3, 4, 1, 2, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 3, -1, 1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 3, -1, 1, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 2) ,
([0, 3, 4, 1, 2, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 3, 4, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 1, -1],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', -1) ,
([0, 3, 4, 1, 2, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 3, 4, -1, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, -1, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', -1) ,
([0, 3, 4, 1, 2, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 3, 4, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, -1, 2],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 4, 1, 2, -1]) ,
('Current mapping', [0, 1, 4, 3, 2, -1]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [0, 1, 4, 3, 2, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 4, 3, 2, -1],) ,
('Computing match for mapping',) ,
([1, 0, 4, 3, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 0, 3, 2, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, 2, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 4, 0, 2, -1],) ,
('Computing match for mapping',) ,
([3, 1, 4, 0, 2, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 4, 3, 0, -1],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 0, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 4, 3, 2, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 4, 3, 2, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 4, 1, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 2, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 4, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 2, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 4, 3, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 1, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 4, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, -1, 4, 3, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 3) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, -1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', -1) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 1, -1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 1, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', -1) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 1, 4, -1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 2, 3],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', -1) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 1, 4, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, -1, 2],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 4, 3, 2, -1]) ,
('Current mapping', [0, 1, -1, 3, 2, 4]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 1, -1, 3, 2, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, -1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([1, 0, -1, 3, 2, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, 0, 3, 2, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 3, 2, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, -1, 0, 2, 4],) ,
('Computing match for mapping',) ,
([3, 1, -1, 0, 2, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, -1, 3, 0, 4],) ,
('Computing match for mapping',) ,
([2, 1, -1, 3, 0, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, -1, 3, 2, 0],) ,
('Computing match for mapping',) ,
([4, 1, -1, 3, 2, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, -1, 1, 3, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, -1, 1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 3, -1, 1, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, -1, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 2, -1, 3, 1, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, -1, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 4, -1, 3, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 3) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, 3, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 4],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', -1, ',', 5, '-', 4) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, -1],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 2) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 4, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 2, 3],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 4) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, -1, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 4, 2],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, -1, 3, 2, 4]) ,
('Current mapping', [0, 1, -1, 2, 3, 4]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 8.0) ,
('Current mapping:', [0, 1, -1, 2, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2, 3, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, 0, 2, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, -1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, -1, 2, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, -1, 2, 0, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, -1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, -1, 2, 3, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, -1, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, -1, 2, 1, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, -1, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, -1, 2, 3, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', 1.0) ,
([0, 1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 3) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 2, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, -1, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', -1, ',', 5, '-', 4) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 3) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, -1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 4) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 3, 2],) ,
('saved value', 7.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 4) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, -1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 4, 3],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, -1, 2, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 9.0) ,
('Current mapping:', [0, 1, 2, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, 3, 4],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, 0, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, 2, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, 3, 0],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 2, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1, 4],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, 3, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 3, 2],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 4],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3],) ,
('saved value', 5.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([3, 2, 1, 0, 4, -1],) ,
('node_pair', (0, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [3, 2, 1, 0, 4, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 2) ,
([3, 2, 1, 0, 4, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 3) ,
('Swap gain:', 0.0) ,
([2, 3, 1, 0, 4, -1],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0, 4, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 1) ,
([3, 2, 1, 0, 4, -1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', 0.0) ,
([1, 2, 3, 0, 4, -1],) ,
('Computing match for mapping',) ,
([1, 2, 3, 0, 4, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 0) ,
([3, 2, 1, 0, 4, -1],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 2, 1, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, -1],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 4) ,
([3, 2, 1, 0, 4, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', 2.0) ,
([4, 2, 1, 0, 3, -1],) ,
('Computing match for mapping',) ,
([4, 2, 1, 0, 3, -1],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', -1) ,
([3, 2, 1, 0, 4, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([-1, 2, 1, 0, 4, 3],) ,
('Computing match for mapping',) ,
([-1, 2, 1, 0, 4, 3],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([3, 2, 1, 0, 4, -1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 2.0) ,
([3, 1, 2, 0, 4, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 0) ,
([3, 2, 1, 0, 4, -1],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 0, 1, 2, 4, -1],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2, 4, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([3, 2, 1, 0, 4, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 4, 1, 0, 2, -1],) ,
('Computing match for mapping',) ,
([3, 4, 1, 0, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', -1) ,
([3, 2, 1, 0, 4, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([3, -1, 1, 0, 4, 2],) ,
('Computing match for mapping',) ,
([3, -1, 1, 0, 4, 2],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 0) ,
([3, 2, 1, 0, 4, -1],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([3, 2, 0, 1, 4, -1],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 4, -1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 4) ,
([3, 2, 1, 0, 4, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', 0.0) ,
([3, 2, 4, 0, 1, -1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 0, 1, -1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', -1) ,
([3, 2, 1, 0, 4, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([3, 2, -1, 0, 4, 1],) ,
('Computing match for mapping',) ,
([3, 2, -1, 0, 4, 1],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', 4) ,
([3, 2, 1, 0, 4, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', 1.0) ,
([3, 2, 1, 4, 0, -1],) ,
('Computing match for mapping',) ,
([3, 2, 1, 4, 0, -1],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 0, ',', 5, '-', -1) ,
([3, 2, 1, 0, 4, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 2, 1, -1, 4, 0],) ,
('Computing match for mapping',) ,
([3, 2, 1, -1, 4, 0],) ,
('saved value', 0.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', -1) ,
([3, 2, 1, 0, 4, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 1.0) ,
([3, 2, 1, 0, -1, 4],) ,
('Computing match for mapping',) ,
([3, 2, 1, 0, -1, 4],) ,
('saved value', 1.0) ,
('Use swap gain',) ,
('Original mapping', [3, 2, 1, 0, 4, -1]) ,
('Current mapping', [0, 2, 1, 3, 4, -1]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 2.0) ,
('Current mapping:', [0, 2, 1, 3, 4, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 1, 3, 4, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 0, 1, 3, 4, -1],) ,
('Computing match for mapping',) ,
([2, 0, 1, 3, 4, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 2, 1, 3, 4, -1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 2, 0, 3, 4, -1],) ,
('Computing match for mapping',) ,
([1, 2, 0, 3, 4, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 2, 1, 3, 4, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([3, 2, 1, 0, 4, -1],) ,
('Computing match for mapping',) ,
([3, 2, 1, 0, 4, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 2, 1, 3, 4, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 2, 1, 3, 0, -1],) ,
('Computing match for mapping',) ,
([4, 2, 1, 3, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 2, 1, 3, 4, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 2, 1, 3, 4, 0],) ,
('Computing match for mapping',) ,
([-1, 2, 1, 3, 4, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([0, 2, 1, 3, 4, -1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 3.0) ,
([0, 1, 2, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 3) ,
([0, 2, 1, 3, 4, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 3, 1, 2, 4, -1],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 4, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([0, 2, 1, 3, 4, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 4, 1, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 2, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', -1) ,
([0, 2, 1, 3, 4, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, -1, 1, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 3, 4, 2],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 3) ,
([0, 2, 1, 3, 4, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, 3, 1, 4, -1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 4, -1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 4) ,
([0, 2, 1, 3, 4, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, 4, 3, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 1, -1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', -1) ,
([0, 2, 1, 3, 4, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, -1, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 3, 4, 1],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 2, 1, 3, 4, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', 3.0) ,
([0, 2, 1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', -1) ,
([0, 2, 1, 3, 4, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 2, 1, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, 4, 3],) ,
('saved value', 2.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', -1) ,
([0, 2, 1, 3, 4, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 2, 1, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, -1, 4],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 1, 3, 4, -1]) ,
('Current mapping', [0, 1, 2, 3, 4, -1]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 5.0) ,
('Current mapping:', [0, 1, 2, 3, 4, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 2, 3, 4, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 0, 3, 4, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 2, 0, 4, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, -1],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 2, 3, 0, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, -1],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 2, 3, 4, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 4, 0],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 2, 1, 4, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, -1],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 4, 2, 3, 1, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, -1],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 2, 3, 4, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 4, 1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 3, 2, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, -1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 4, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, -1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', -1) ,
([0, 1, 2, 3, 4, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 4, 2],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', 3.0) ,
([0, 1, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', -1) ,
([0, 1, 2, 3, 4, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 1, 2, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', -1) ,
([0, 1, 2, 3, 4, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 1, 2, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 4],) ,
('saved value', 7.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 3, 4, -1]) ,
('Current mapping', [0, 1, 2, 4, 3, -1]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 8.0) ,
('Current mapping:', [0, 1, 2, 4, 3, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 0, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, 0, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 2, 4, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0, -1],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, 4, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 3, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 4, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 2, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, -1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 2, 4, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 3, 1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, -1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 3, 2],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3],) ,
('saved value', 6.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 3, -1]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 9.0) ,
('Current mapping:', [0, 1, 2, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, 3, 4],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, 0, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, 2, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, 3, 0],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 2, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1, 4],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, 3, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 3, 2],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 4],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3],) ,
('saved value', 5.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([2, 0, 3, 1, 4, -1],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [2, 0, 3, 1, 4, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0, 3, 1, 4, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', 2.0) ,
([0, 2, 3, 1, 4, -1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 4, -1],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 3) ,
([2, 0, 3, 1, 4, -1],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([3, 0, 2, 1, 4, -1],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1, 4, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 1) ,
([2, 0, 3, 1, 4, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 0, 3, 2, 4, -1],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2, 4, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 4) ,
([2, 0, 3, 1, 4, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 0, 3, 1, 2, -1],) ,
('Computing match for mapping',) ,
([4, 0, 3, 1, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', -1) ,
([2, 0, 3, 1, 4, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([-1, 0, 3, 1, 4, 2],) ,
('Computing match for mapping',) ,
([-1, 0, 3, 1, 4, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 3) ,
([2, 0, 3, 1, 4, -1],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 3, 0, 1, 4, -1],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, 4, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 1) ,
([2, 0, 3, 1, 4, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', 1.0) ,
([2, 1, 3, 0, 4, -1],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0, 4, -1],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', 4) ,
([2, 0, 3, 1, 4, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 4, 3, 1, 0, -1],) ,
('Computing match for mapping',) ,
([2, 4, 3, 1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 0, ',', 5, '-', -1) ,
([2, 0, 3, 1, 4, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([2, -1, 3, 1, 4, 0],) ,
('Computing match for mapping',) ,
([2, -1, 3, 1, 4, 0],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 1) ,
([2, 0, 3, 1, 4, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 0.0) ,
([2, 0, 1, 3, 4, -1],) ,
('Computing match for mapping',) ,
([2, 0, 1, 3, 4, -1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([2, 0, 3, 1, 4, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', 2.0) ,
([2, 0, 4, 1, 3, -1],) ,
('Computing match for mapping',) ,
([2, 0, 4, 1, 3, -1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', -1) ,
([2, 0, 3, 1, 4, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([2, 0, -1, 1, 4, 3],) ,
('Computing match for mapping',) ,
([2, 0, -1, 1, 4, 3],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 4) ,
([2, 0, 3, 1, 4, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', 1.0) ,
([2, 0, 3, 4, 1, -1],) ,
('Computing match for mapping',) ,
([2, 0, 3, 4, 1, -1],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', -1) ,
([2, 0, 3, 1, 4, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([2, 0, 3, -1, 4, 1],) ,
('Computing match for mapping',) ,
([2, 0, 3, -1, 4, 1],) ,
('saved value', 0.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', -1) ,
([2, 0, 3, 1, 4, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 1.0) ,
([2, 0, 3, 1, -1, 4],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1, -1, 4],) ,
('saved value', 1.0) ,
('Use swap gain',) ,
('Original mapping', [2, 0, 3, 1, 4, -1]) ,
('Current mapping', [0, 2, 3, 1, 4, -1]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 2.0) ,
('Current mapping:', [0, 2, 3, 1, 4, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 3, 1, 4, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 0, 3, 1, 4, -1],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1, 4, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 2, 3, 1, 4, -1],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([3, 2, 0, 1, 4, -1],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 4, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 2, 3, 1, 4, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 2, 3, 0, 4, -1],) ,
('Computing match for mapping',) ,
([1, 2, 3, 0, 4, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 2, 3, 1, 4, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 2, 3, 1, 0, -1],) ,
('Computing match for mapping',) ,
([4, 2, 3, 1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 2, 3, 1, 4, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 2, 3, 1, 4, 0],) ,
('Computing match for mapping',) ,
([-1, 2, 3, 1, 4, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([0, 2, 3, 1, 4, -1],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 3, 2, 1, 4, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, -1],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 1) ,
([0, 2, 3, 1, 4, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', 2.0) ,
([0, 1, 3, 2, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, -1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([0, 2, 3, 1, 4, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 4, 3, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 2, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', -1) ,
([0, 2, 3, 1, 4, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, -1, 3, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, -1, 3, 1, 4, 2],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 1) ,
([0, 2, 3, 1, 4, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 2, 1, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, -1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([0, 2, 3, 1, 4, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 2, 4, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', -1) ,
([0, 2, 3, 1, 4, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 2, -1, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1, 4, 3],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 4) ,
([0, 2, 3, 1, 4, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', 1.0) ,
([0, 2, 3, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 4, 1, -1],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', -1) ,
([0, 2, 3, 1, 4, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, 3, -1, 4, 1],) ,
('Computing match for mapping',) ,
([0, 2, 3, -1, 4, 1],) ,
('saved value', 2.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', -1) ,
([0, 2, 3, 1, 4, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 2, 3, 1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, -1, 4],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 3, 1, 4, -1]) ,
('Current mapping', [0, 1, 3, 2, 4, -1]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [0, 1, 3, 2, 4, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 3, 2, 4, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 3, 2, 4, -1],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2, 4, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 1, 3, 2, 4, -1],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 0, 2, 4, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 2, 4, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 3, 2, 4, -1],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 3, 0, 4, -1],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0, 4, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 3, 2, 4, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 3, 2, 0, -1],) ,
('Computing match for mapping',) ,
([4, 1, 3, 2, 0, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 3, 2, 4, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 3, 2, 4, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 3, 2, 4, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([0, 1, 3, 2, 4, -1],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 1, 2, 4, -1],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 4, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 3, 2, 4, -1],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 3, 1, 4, -1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 4, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 3, 2, 4, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 4, 3, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 4, 3, 2, 1, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 3, 2, 4, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 3, 2, 4, 1],) ,
('Computing match for mapping',) ,
([0, -1, 3, 2, 4, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 2) ,
([0, 1, 3, 2, 4, -1],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([0, 1, 3, 2, 4, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 1, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', -1) ,
([0, 1, 3, 2, 4, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 1, -1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 4, 3],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 4) ,
([0, 1, 3, 2, 4, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 1, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, -1],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', -1) ,
([0, 1, 3, 2, 4, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 1, 3, -1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, 4, 2],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', -1) ,
([0, 1, 3, 2, 4, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 1, 3, 2, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, -1, 4],) ,
('saved value', 6.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 3, 2, 4, -1]) ,
('Current mapping', [0, 1, 4, 2, 3, -1]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 1, 4, 2, 3, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 4, 2, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 4, 2, 3, -1],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 1, 4, 2, 3, -1],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 0, 2, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, 2, 3, -1],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 4, 2, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 4, 0, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 4, 0, 3, -1],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 4, 2, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 4, 2, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 4, 2, 0, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 4, 2, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 4, 2, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 4, 2, 3, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([0, 1, 4, 2, 3, -1],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 4, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 4, 2, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 4, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 4, 2, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 4, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 1, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 4, 2, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 4, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 4, 2, 3, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 2) ,
([0, 1, 4, 2, 3, -1],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 1, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 3) ,
([0, 1, 4, 2, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 2, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, -1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', -1) ,
([0, 1, 4, 2, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 3) ,
([0, 1, 4, 2, 3, -1],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, -1],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', -1) ,
([0, 1, 4, 2, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 1, 4, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 3, 2],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', -1) ,
([0, 1, 4, 2, 3, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, -1, 3],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 4, 2, 3, -1]) ,
('Current mapping', [0, 1, 2, 4, 3, -1]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 8.0) ,
('Current mapping:', [0, 1, 2, 4, 3, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 0, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, 0, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 2, 4, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0, -1],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, 4, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 3, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 4, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 2, 4, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, -1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 2, 4, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 3, 1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, -1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 3, 2],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', -1) ,
([0, 1, 2, 4, 3, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3],) ,
('saved value', 6.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 3, -1]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 9.0) ,
('Current mapping:', [0, 1, 2, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, 3, 4],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, 0, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, 2, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, 3, 0],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 2, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1, 4],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, 3, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 3, 2],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 4],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3],) ,
('saved value', 5.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 2, -1],) ,
('saved value', 2.0) ,
('Node mapping at start', [0, 4, 1, 3, 2, -1]) ,
('Triple match number at start:', 2.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 4) ,
([0, 4, 1, 3, 2, -1],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 0, 1, 3, 2, -1],) ,
('Computing match for mapping',) ,
([4, 0, 1, 3, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 4, 1, 3, 2, -1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 4, 0, 3, 2, -1],) ,
('Computing match for mapping',) ,
([1, 4, 0, 3, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 4, 1, 3, 2, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([3, 4, 1, 0, 2, -1],) ,
('Computing match for mapping',) ,
([3, 4, 1, 0, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 4, 1, 3, 2, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 4, 1, 3, 0, -1],) ,
('Computing match for mapping',) ,
([2, 4, 1, 3, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 4, 1, 3, 2, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 4, 1, 3, 2, 0],) ,
('Computing match for mapping',) ,
([-1, 4, 1, 3, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 1) ,
([0, 4, 1, 3, 2, -1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 1, 4, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, -1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 3) ,
([0, 4, 1, 3, 2, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 3, 1, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 2, -1],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 2) ,
([0, 4, 1, 3, 2, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 2, 1, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 4, ',', 5, '-', -1) ,
([0, 4, 1, 3, 2, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 2.0) ,
([0, -1, 1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, -1, 1, 3, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 3) ,
([0, 4, 1, 3, 2, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 4, 3, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 2, -1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 2) ,
([0, 4, 1, 3, 2, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', 1.0) ,
([0, 4, 2, 3, 1, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, -1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', -1) ,
([0, 4, 1, 3, 2, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 4, -1, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 4, -1, 3, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 2) ,
([0, 4, 1, 3, 2, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 4, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', -1) ,
([0, 4, 1, 3, 2, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 4, 1, -1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 4, 1, -1, 2, 3],) ,
('saved value', 2.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', -1) ,
([0, 4, 1, 3, 2, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 4, 1, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, -1, 2],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [0, 4, 1, 3, 2, -1]) ,
('Current mapping', [0, 1, 4, 3, 2, -1]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [0, 1, 4, 3, 2, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 4, 3, 2, -1],) ,
('Computing match for mapping',) ,
([1, 0, 4, 3, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 0, 3, 2, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, 2, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 4, 0, 2, -1],) ,
('Computing match for mapping',) ,
([3, 1, 4, 0, 2, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 4, 3, 0, -1],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 0, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', -1) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 4, 3, 2, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 4, 3, 2, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 4, 1, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 2, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 4, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 2, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 4, 3, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 1, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 4, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, -1, 4, 3, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 3) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 3, 4, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, -1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 3, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, -1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', -1) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 1, -1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 1, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', -1) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 1, 4, -1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 2, 3],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', -1) ,
([0, 1, 4, 3, 2, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 1, 4, 3, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, -1, 2],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 4, 3, 2, -1]) ,
('Current mapping', [0, 1, -1, 3, 2, 4]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 1, -1, 3, 2, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, -1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([1, 0, -1, 3, 2, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, 0, 3, 2, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 3, 2, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, -1, 0, 2, 4],) ,
('Computing match for mapping',) ,
([3, 1, -1, 0, 2, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, -1, 3, 0, 4],) ,
('Computing match for mapping',) ,
([2, 1, -1, 3, 0, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, -1, 3, 2, 0],) ,
('Computing match for mapping',) ,
([4, 1, -1, 3, 2, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, -1, 1, 3, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, -1, 1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 3, -1, 1, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, -1, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 2, -1, 3, 1, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, -1, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 4, -1, 3, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 3) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, 3, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 4],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', -1, ',', 5, '-', 4) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, -1],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 2) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 4, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 2, 3],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 4) ,
([0, 1, -1, 3, 2, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, -1, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 4, 2],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, -1, 3, 2, 4]) ,
('Current mapping', [0, 1, -1, 2, 3, 4]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 8.0) ,
('Current mapping:', [0, 1, -1, 2, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2, 3, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, 0, 2, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, -1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, -1, 2, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, -1, 2, 0, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, -1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, -1, 2, 3, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, -1, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, -1, 2, 1, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, -1, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, -1, 2, 3, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', 1.0) ,
([0, 1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 3) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 2, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, -1, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', -1, ',', 5, '-', 4) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 3) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, -1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 4) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 3, 2],) ,
('saved value', 7.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 4) ,
([0, 1, -1, 2, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, -1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 4, 3],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, -1, 2, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 9.0) ,
('Current mapping:', [0, 1, 2, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, 3, 4],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, 0, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, 2, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, 3, 0],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 3, 2, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1, 4],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, 3, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 3, 2],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 3) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 4],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', -1) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3],) ,
('saved value', 5.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 9.0) ,
('best node mapping', [0, 1, 2, -1, 3, 4]) ,
('Best node mapping alignment:', 'a0(land-01)-b0(land-01) a1(rover)-b1(rover) a2(country)-b2(country) a3(moon)-Null a4(name)-b3(name) a5(moon)-b4(moon)') ,
('F-score:', 0.7500000000000001) ,
Smatch score F1 0.750
('AMR pair', 6) ,
('============================================',) ,
('AMR 1 (one-line):', '(p0 / pump-01:manner (p1 / pressure:mod (w0 / water)):ARG0 (i0 / i):ARG2 (s0 / shower):manner (a0 / amr-unknown))') ,
('AMR 2 (one-line):', '(p0 / possible-01:ARG1 (b0 / boost-01:ARG1 (p1 / pressure:mod (w0 / water):location (s0 / shower:poss i0)):ARG0 (i0 / i):manner (a0 / amr-unknown)))') ,
('Instance triples of AMR 1:', 6) ,
([('instance', 'a0', 'pump-01'), ('instance', 'a1', 'pressure'), ('instance', 'a2', 'water'), ('instance', 'a3', 'i'), ('instance', 'a4', 'shower'), ('instance', 'a5', 'amr-unknown')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'pump-01')],) ,
('Relation triples of AMR 1:', 5) ,
([('manner', 'a0', 'a1'), ('ARG0', 'a0', 'a3'), ('ARG2', 'a0', 'a4'), ('manner', 'a0', 'a5'), ('mod', 'a1', 'a2')],) ,
('Instance triples of AMR 2:', 7) ,
([('instance', 'b0', 'possible-01'), ('instance', 'b1', 'boost-01'), ('instance', 'b2', 'pressure'), ('instance', 'b3', 'water'), ('instance', 'b4', 'shower'), ('instance', 'b5', 'i'), ('instance', 'b6', 'amr-unknown')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'possible-01')],) ,
('Relation triples of AMR 2:', 7) ,
([('ARG1', 'b0', 'b1'), ('ARG1', 'b1', 'b2'), ('ARG0', 'b1', 'b5'), ('manner', 'b1', 'b6'), ('mod', 'b2', 'b3'), ('location', 'b2', 'b4'), ('poss', 'b4', 'b5')],) ,
('Similarity', 'pump-01', 'possible-01', 0.0) ,
('Similarity', 'pump-01', 'boost-01', 0.0) ,
('Similarity', 'pump-01', 'pressure', 0.0) ,
('Similarity', 'pump-01', 'water', 0.29444804474818576) ,
('Similarity', 'pump-01', 'shower', 0.0) ,
('Similarity', 'pump-01', 'i', 0.0) ,
('Similarity', 'pump-01', 'amr-unknown', 0.0) ,
('Similarity', 'pressure', 'possible-01', 0.0) ,
('Similarity', 'pressure', 'boost-01', 0.0) ,
('Similarity', 'pressure', 'pressure', 1.0) ,
('Similarity', 'pressure', 'water', 0.5421365690425208) ,
('Similarity', 'pressure', 'shower', 0.0) ,
('Similarity', 'pressure', 'i', 0.0) ,
('Similarity', 'pressure', 'amr-unknown', 0.0) ,
('Similarity', 'water', 'possible-01', 0.0) ,
('Similarity', 'water', 'boost-01', 0.0) ,
('Similarity', 'water', 'water', 1.0) ,
('Similarity', 'water', 'shower', 0.0) ,
('Similarity', 'water', 'i', 0.0) ,
('Similarity', 'water', 'amr-unknown', 0.0) ,
('Similarity', 'i', 'possible-01', 0.0) ,
('Similarity', 'i', 'boost-01', 0.0) ,
('Similarity', 'i', 'shower', 0.0) ,
('Similarity', 'i', 'i', 1.0) ,
('Similarity', 'i', 'amr-unknown', 0.0) ,
('Similarity', 'shower', 'possible-01', 0.0) ,
('Similarity', 'shower', 'boost-01', 0.0) ,
('Similarity', 'shower', 'shower', 1.0) ,
('Similarity', 'shower', 'amr-unknown', 0.0) ,
('Similarity', 'amr-unknown', 'possible-01', 0.0) ,
('Similarity', 'amr-unknown', 'boost-01', 0.0) ,
('Similarity', 'amr-unknown', 'amr-unknown', 1.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.0}, (0, 1): {-1: 0.0, (1, 6): 1, (3, 5): 1, (5, 6): 1}, (0, 2): {-1: 0.0}, (0, 3): {-1: 0.29444804474818576}, (0, 4): {-1: 0.0}, (0, 5): {-1: 0.0}, (0, 6): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 0.0}, (1, 2): {-1: 1.0, (2, 3): 1}, (1, 3): {-1: 0.5421365690425208}, (1, 4): {-1: 0.0}, (1, 5): {-1: 0.0}, (1, 6): {-1: 0.0, (0, 1): 1}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.0}, (2, 2): {-1: 0.5421365690425208}, (2, 3): {-1: 1.0, (1, 2): 1}, (2, 4): {-1: 0.0}, (2, 5): {-1: 0.0}, (2, 6): {-1: 0.0}, (3, 0): {-1: 0.0}, (3, 1): {-1: 0.0}, (3, 2): {-1: 0.0}, (3, 3): {-1: 0.0}, (3, 4): {-1: 0.0}, (3, 5): {-1: 1.0, (0, 1): 1}, (3, 6): {-1: 0.0}, (4, 0): {-1: 0.0}, (4, 1): {-1: 0.0}, (4, 2): {-1: 0.0}, (4, 3): {-1: 0.0}, (4, 4): {-1: 1.0}, (4, 5): {-1: 0.0}, (4, 6): {-1: 0.0}, (5, 0): {-1: 0.0}, (5, 1): {-1: 0.0}, (5, 2): {-1: 0.0}, (5, 3): {-1: 0.0}, (5, 4): {-1: 0.0}, (5, 5): {-1: 0.0}, (5, 6): {-1: 1.0, (0, 1): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 2, 3, 5, 4, 6],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 1.0) ,
('relation match with', (2, 3), 1) ,
('node_pair', (2, 3)) ,
('instance/attribute match', 1.0) ,
('node_pair', (3, 5)) ,
('instance/attribute match', 1.0) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 1.0) ,
('node_pair', (5, 6)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 6.0) ,
('Node mapping at start', [0, 2, 3, 5, 4, 6]) ,
('Triple match number at start:', 6.0) ,
('Remap node', 0, 'from ', 0, 'to', 1) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, 6],) ,
('saved value', 8.0) ,
('Remap node', 1, 'from ', 2, 'to', 1) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 4, 6],) ,
('saved value', 4.0) ,
('Remap node', 2, 'from ', 3, 'to', 1) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 1, 5, 4, 6],) ,
('saved value', 4.0) ,
('Remap node', 3, 'from ', 5, 'to', 1) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 4, 6],) ,
('saved value', 5.0) ,
('Remap node', 4, 'from ', 4, 'to', 1) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 5, 1, 6],) ,
('saved value', 5.0) ,
('Remap node', 5, 'from ', 6, 'to', 1) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 5, 4, 1],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 0, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 0, 3, 5, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -1.7055519552518144) ,
([3, 2, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 0, 5, 4, 6],) ,
('saved value', 4.294448044748186) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([5, 2, 3, 0, 4, 6],) ,
('Computing match for mapping',) ,
([5, 2, 3, 0, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([4, 2, 3, 5, 0, 6],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 0, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([6, 2, 3, 5, 4, 0],) ,
('Computing match for mapping',) ,
([6, 2, 3, 5, 4, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([0, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -1.9157268619149583) ,
([0, 3, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 4, 6],) ,
('saved value', 4.084273138085042) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([0, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 5, 3, 2, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([0, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 4, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 4, 3, 5, 2, 6],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([0, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 6, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([0, 6, 3, 5, 4, 2],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 5) ,
([0, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 2, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 5, 3, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([0, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 2, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 2, 4, 5, 3, 6],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 6) ,
([0, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 2, 6, 5, 4, 3],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([0, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 3, 4, 5, 6],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([0, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 2, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 3, 6, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([0, 2, 3, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 2, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([0, 2, 3, 5, 6, 4],) ,
('saved value', 4.0) ,
('Use move gain',) ,
('Original mapping', [0, 2, 3, 5, 4, 6]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 8.0) ,
('Current mapping:', [1, 2, 3, 5, 4, 6]) ,
('Remap node', 0, 'from ', 1, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 1, 'from ', 2, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 0, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 2, 'from ', 3, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 2, 0, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 3, 'from ', 5, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 0, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 0, 6],) ,
('saved value', 7.0) ,
('Remap node', 5, 'from ', 6, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, 0],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -4.0) ,
([2, 1, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 5, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -3.7055519552518144) ,
([3, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 1, 5, 4, 6],) ,
('saved value', 4.294448044748186) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 2, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 2, 3, 1, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 2, 3, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 1, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([6, 2, 3, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 2, 3, 5, 4, 1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -1.9157268619149583) ,
([1, 3, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 6],) ,
('saved value', 6.084273138085042) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -4.0) ,
([1, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 3, 2, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([1, 4, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 4, 3, 5, 2, 6],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([1, 6, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 6, 3, 5, 4, 2],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -4.0) ,
([1, 2, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 5, 3, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([1, 2, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 3, 6],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([1, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, 6, 5, 4, 3],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 2, 3, 4, 5, 6],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4.0) ,
([1, 2, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 2, 3, 6, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 2, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 6, 4],) ,
('saved value', 5.0) ,
('no move/swap gain found',) ,
('Original mapping', [1, 2, 3, 5, 4, 6]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 2],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 1.0) ,
('node_pair', (5, 2)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 1.0) ,
('Node mapping at start', [0, 1, 6, 3, 4, 2]) ,
('Triple match number at start:', 1.0) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 1, 6, 3, 4, 2],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 3, 4, 2],) ,
('saved value', 1.0) ,
('Remap node', 2, 'from ', 6, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2],) ,
('saved value', 1.0) ,
('Remap node', 3, 'from ', 3, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 4, 2],) ,
('saved value', 2.0) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 5, 2],) ,
('saved value', 0.0) ,
('Remap node', 5, 'from ', 2, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 3, 4, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', 0.0) ,
([1, 0, 6, 3, 4, 2],) ,
('Computing match for mapping',) ,
([1, 0, 6, 3, 4, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 3, 4, 2],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([6, 1, 0, 3, 4, 2],) ,
('Computing match for mapping',) ,
([6, 1, 0, 3, 4, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 6, 3, 4, 2],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', 0.29444804474818576) ,
([3, 1, 6, 0, 4, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 0, 4, 2],) ,
('saved value', 1.2944480447481856) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 6, 3, 4, 2],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([4, 1, 6, 3, 0, 2],) ,
('Computing match for mapping',) ,
([4, 1, 6, 3, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 6, 3, 4, 2],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 1, 6, 3, 4, 0],) ,
('Computing match for mapping',) ,
([2, 1, 6, 3, 4, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 3, 4, 2],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 6, 1, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 6, 1, 3, 4, 2],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 6, 3, 4, 2],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', 0.5421365690425208) ,
([0, 3, 6, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 1, 4, 2],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 6, 3, 4, 2],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 4, 6, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 6, 3, 1, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 6, 3, 4, 2],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', 1.0) ,
([0, 2, 6, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 2, 6, 3, 4, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 3) ,
([0, 1, 6, 3, 4, 2],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 6) ,
('Swap gain:', 1.0) ,
([0, 1, 3, 6, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 6, 4, 2],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 1, 6, 3, 4, 2],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -1.0) ,
([0, 1, 4, 3, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 6, 2],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 2) ,
([0, 1, 6, 3, 4, 2],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 6) ,
('Swap gain:', 1.5421365690425208) ,
([0, 1, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 6, 3, 4, 2],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, 6, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 3, 2],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 2) ,
([0, 1, 6, 3, 4, 2],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 1, 6, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 4, 3],) ,
('saved value', 1.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 2) ,
([0, 1, 6, 3, 4, 2],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 6, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 4],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 6, 3, 4, 2]) ,
('Current mapping', [0, 1, 2, 3, 4, 6]) ,
('Gain after the hill-climbing', 1.5421365690425208) ,
('Update triple match number to:', 2.542136569042521) ,
('Current mapping:', [0, 1, 2, 3, 4, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Remap node', 2, 'from ', 2, 'to', 5) ,
('Move gain:', -0.5421365690425208) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 6],) ,
('saved value', 2.0) ,
('Remap node', 3, 'from ', 3, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6],) ,
('saved value', 1.5421365690425208) ,
('Remap node', 5, 'from ', 6, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', 1.0) ,
([1, 0, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -0.5421365690425208) ,
([2, 1, 0, 3, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 6],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', 0.29444804474818576) ,
([3, 1, 2, 0, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 6],) ,
('saved value', 2.8365846137907065) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([4, 1, 2, 3, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 6],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([6, 1, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 0],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', 0.45786343095747917) ,
([0, 2, 1, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', 0.5421365690425208) ,
([0, 3, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 6],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 4, 2, 3, 1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 6],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 6, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 1],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', 0.45786343095747917) ,
([0, 1, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([0, 1, 4, 3, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 6],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([0, 1, 6, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 2],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 6) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 3],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 4],) ,
('saved value', 0.5421365690425208) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 3, 4, 6]) ,
('Current mapping', [0, 1, 2, 5, 4, 6]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 3.542136569042521) ,
('Current mapping:', [0, 1, 2, 5, 4, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', 0.29444804474818576) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 4, 6],) ,
('saved value', 3.8365846137907065) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', 0.5421365690425208) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 4, 6],) ,
('saved value', 4.084273138085042) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', 0.45786343095747917) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 4, 6],) ,
('saved value', 4.0) ,
('Remap node', 3, 'from ', 5, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Remap node', 4, 'from ', 4, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 6],) ,
('saved value', 2.542136569042521) ,
('Remap node', 5, 'from ', 6, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', 2.0) ,
([1, 0, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 4, 6],) ,
('saved value', 5.542136569042521) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -0.5421365690425208) ,
([2, 1, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 5, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([5, 1, 2, 0, 4, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 0, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([4, 1, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 5, 0, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([6, 1, 2, 5, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 5, 4, 0],) ,
('saved value', 2.542136569042521) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', 0.45786343095747917) ,
([0, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 5, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 5) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 5, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 1, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 4, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 5, 1, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 6, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 5, 4, 1],) ,
('saved value', 2.542136569042521) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 5) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([0, 1, 5, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 4, 6],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([0, 1, 4, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 6],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([0, 1, 6, 5, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 4, 2],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 6, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 5, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 6, 4],) ,
('saved value', 1.5421365690425208) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 5, 4, 6]) ,
('Current mapping', [1, 0, 2, 5, 4, 6]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 5.542136569042521) ,
('Current mapping:', [1, 0, 2, 5, 4, 6]) ,
('Remap node', 0, 'from ', 1, 'to', 3) ,
('Move gain:', -1.7055519552518144) ,
('Computing match for mapping',) ,
([3, 0, 2, 5, 4, 6],) ,
('saved value', 3.8365846137907065) ,
('Remap node', 1, 'from ', 0, 'to', 3) ,
('Move gain:', 0.5421365690425208) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 6],) ,
('saved value', 6.084273138085042) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', 0.45786343095747917) ,
('Computing match for mapping',) ,
([1, 0, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 3, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Remap node', 4, 'from ', 4, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 3, 6],) ,
('saved value', 4.542136569042521) ,
('Remap node', 5, 'from ', 6, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 4, 3],) ,
('saved value', 3.542136569042521) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 2) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -2.542136569042521) ,
([2, 0, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 0, 1, 5, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 0, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 0, 2, 1, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 0, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 0, 2, 5, 1, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([6, 0, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 0, 2, 5, 4, 1],) ,
('saved value', 2.542136569042521) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 2) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', 0.45786343095747917) ,
([1, 2, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 0, 5, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 5) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 5, 2, 0, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 2, 0, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', 4) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 4, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([1, 4, 2, 5, 0, 6],) ,
('saved value', 4.542136569042521) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 0, ',', 5, '-', 6) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 6, 2, 5, 4, 0],) ,
('Computing match for mapping',) ,
([1, 6, 2, 5, 4, 0],) ,
('saved value', 4.542136569042521) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 5) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -2.542136569042521) ,
([1, 0, 5, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 5, 2, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([1, 0, 4, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 0, 4, 5, 2, 6],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -2.542136569042521) ,
([1, 0, 6, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 0, 6, 5, 4, 2],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 0, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4.0) ,
([1, 0, 2, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 2, 6, 4, 5],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 0, 2, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 6, 4],) ,
('saved value', 2.542136569042521) ,
('Use move gain',) ,
('Original mapping', [1, 0, 2, 5, 4, 6]) ,
('Current mapping', [1, 3, 2, 5, 4, 6]) ,
('Gain after the hill-climbing', 0.5421365690425208) ,
('Update triple match number to:', 6.084273138085042) ,
('Current mapping:', [1, 3, 2, 5, 4, 6]) ,
('Remap node', 0, 'from ', 1, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 4, 6],) ,
('saved value', 4.084273138085042) ,
('Remap node', 1, 'from ', 3, 'to', 0) ,
('Move gain:', -0.5421365690425208) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 4, 6],) ,
('saved value', 5.542136569042521) ,
('Remap node', 2, 'from ', 2, 'to', 0) ,
('Move gain:', -0.5421365690425208) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 4, 6],) ,
('saved value', 5.542136569042521) ,
('Remap node', 3, 'from ', 5, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 2, 0, 4, 6],) ,
('saved value', 4.084273138085042) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 0, 6],) ,
('saved value', 5.084273138085042) ,
('Remap node', 5, 'from ', 6, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 0],) ,
('saved value', 4.084273138085042) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 3) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 1) ,
('Swap gain:', -2.247688524294335) ,
([3, 1, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 4, 6],) ,
('saved value', 3.8365846137907065) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 2) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -2.542136569042521) ,
([2, 3, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 3, 1, 5, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 3, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 3, 2, 1, 4, 6],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 3, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 3, 2, 5, 1, 6],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([6, 3, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 3, 2, 5, 4, 1],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', 1.9157268619149583) ,
([1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -2.542136569042521) ,
([1, 5, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 2, 3, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -1.5421365690425208) ,
([1, 4, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 4, 2, 5, 3, 6],) ,
('saved value', 4.542136569042521) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -1.5421365690425208) ,
([1, 6, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 6, 2, 5, 4, 3],) ,
('saved value', 4.542136569042521) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 5) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -2.542136569042521) ,
([1, 3, 5, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 5, 2, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([1, 3, 4, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 2, 6],) ,
('saved value', 4.542136569042521) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -2.542136569042521) ,
([1, 3, 6, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 4, 2],) ,
('saved value', 3.542136569042521) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 4, 5, 6],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4.0) ,
([1, 3, 2, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 3, 2, 6, 4, 5],) ,
('saved value', 2.0842731380850417) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 3, 2, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 6, 4],) ,
('saved value', 3.0842731380850417) ,
('Use swap gain',) ,
('Original mapping', [1, 3, 2, 5, 4, 6]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 1.9157268619149583) ,
('Update triple match number to:', 8.0) ,
('Current mapping:', [1, 2, 3, 5, 4, 6]) ,
('Remap node', 0, 'from ', 1, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 1, 'from ', 2, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 0, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 2, 'from ', 3, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 2, 0, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 3, 'from ', 5, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 0, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 0, 6],) ,
('saved value', 7.0) ,
('Remap node', 5, 'from ', 6, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, 0],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -4.0) ,
([2, 1, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 5, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -3.7055519552518144) ,
([3, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 1, 5, 4, 6],) ,
('saved value', 4.294448044748186) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 2, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 2, 3, 1, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 2, 3, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 1, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([6, 2, 3, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 2, 3, 5, 4, 1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -1.9157268619149583) ,
([1, 3, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 6],) ,
('saved value', 6.084273138085042) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -4.0) ,
([1, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 3, 2, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([1, 4, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 4, 3, 5, 2, 6],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([1, 6, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 6, 3, 5, 4, 2],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -4.0) ,
([1, 2, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 5, 3, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([1, 2, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 3, 6],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([1, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, 6, 5, 4, 3],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 2, 3, 4, 5, 6],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4.0) ,
([1, 2, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 2, 3, 6, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 2, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 6, 4],) ,
('saved value', 5.0) ,
('no move/swap gain found',) ,
('Original mapping', [1, 2, 3, 5, 4, 6]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([6, 1, 5, 0, 4, 3],) ,
('node_pair', (0, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 1.0) ,
('node_pair', (5, 3)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 1.0) ,
('Node mapping at start', [6, 1, 5, 0, 4, 3]) ,
('Triple match number at start:', 1.0) ,
('Remap node', 0, 'from ', 6, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 1, 5, 0, 4, 3],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([6, 2, 5, 0, 4, 3],) ,
('saved value', 2.0) ,
('Remap node', 2, 'from ', 5, 'to', 2) ,
('Move gain:', 0.5421365690425208) ,
('Computing match for mapping',) ,
([6, 1, 2, 0, 4, 3],) ,
('saved value', 1.5421365690425208) ,
('Remap node', 3, 'from ', 0, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 1, 5, 2, 4, 3],) ,
('saved value', 1.0) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([6, 1, 5, 0, 2, 3],) ,
('saved value', 0.0) ,
('Remap node', 5, 'from ', 3, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 1, 5, 0, 4, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 6, ',', 1, '-', 1) ,
([6, 1, 5, 0, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 6) ,
('Swap gain:', 1.0) ,
([1, 6, 5, 0, 4, 3],) ,
('Computing match for mapping',) ,
([1, 6, 5, 0, 4, 3],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 6, ',', 2, '-', 5) ,
([6, 1, 5, 0, 4, 3],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 6) ,
('Swap gain:', 0.0) ,
([5, 1, 6, 0, 4, 3],) ,
('Computing match for mapping',) ,
([5, 1, 6, 0, 4, 3],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 6, ',', 3, '-', 0) ,
([6, 1, 5, 0, 4, 3],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 1, 5, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 6, 4, 3],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 6, ',', 4, '-', 4) ,
([6, 1, 5, 0, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -1.0) ,
([4, 1, 5, 0, 6, 3],) ,
('Computing match for mapping',) ,
([4, 1, 5, 0, 6, 3],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 6, ',', 5, '-', 3) ,
([6, 1, 5, 0, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', 1.2944480447481856) ,
([3, 1, 5, 0, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 5, 0, 4, 6],) ,
('saved value', 2.2944480447481856) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 5) ,
([6, 1, 5, 0, 4, 3],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([6, 5, 1, 0, 4, 3],) ,
('Computing match for mapping',) ,
([6, 5, 1, 0, 4, 3],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 0) ,
([6, 1, 5, 0, 4, 3],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([6, 0, 5, 1, 4, 3],) ,
('Computing match for mapping',) ,
([6, 0, 5, 1, 4, 3],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([6, 1, 5, 0, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([6, 4, 5, 0, 1, 3],) ,
('Computing match for mapping',) ,
([6, 4, 5, 0, 1, 3],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([6, 1, 5, 0, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', 0.5421365690425208) ,
([6, 3, 5, 0, 4, 1],) ,
('Computing match for mapping',) ,
([6, 3, 5, 0, 4, 1],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 0) ,
([6, 1, 5, 0, 4, 3],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 5) ,
('Swap gain:', 1.0) ,
([6, 1, 0, 5, 4, 3],) ,
('Computing match for mapping',) ,
([6, 1, 0, 5, 4, 3],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 4) ,
([6, 1, 5, 0, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -1.0) ,
([6, 1, 4, 0, 5, 3],) ,
('Computing match for mapping',) ,
([6, 1, 4, 0, 5, 3],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 3) ,
([6, 1, 5, 0, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', 1.0) ,
([6, 1, 3, 0, 4, 5],) ,
('Computing match for mapping',) ,
([6, 1, 3, 0, 4, 5],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', 4) ,
([6, 1, 5, 0, 4, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([6, 1, 5, 4, 0, 3],) ,
('Computing match for mapping',) ,
([6, 1, 5, 4, 0, 3],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 0, ',', 5, '-', 3) ,
([6, 1, 5, 0, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([6, 1, 5, 3, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 5, 3, 4, 0],) ,
('saved value', 1.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([6, 1, 5, 0, 4, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([6, 1, 5, 0, 3, 4],) ,
('Computing match for mapping',) ,
([6, 1, 5, 0, 3, 4],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [6, 1, 5, 0, 4, 3]) ,
('Current mapping', [3, 1, 5, 0, 4, 6]) ,
('Gain after the hill-climbing', 1.2944480447481856) ,
('Update triple match number to:', 2.2944480447481856) ,
('Current mapping:', [3, 1, 5, 0, 4, 6]) ,
('Remap node', 0, 'from ', 3, 'to', 2) ,
('Move gain:', -0.29444804474818576) ,
('Computing match for mapping',) ,
([2, 1, 5, 0, 4, 6],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([3, 2, 5, 0, 4, 6],) ,
('saved value', 3.2944480447481856) ,
('Remap node', 2, 'from ', 5, 'to', 2) ,
('Move gain:', 0.5421365690425208) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 6],) ,
('saved value', 2.8365846137907065) ,
('Remap node', 3, 'from ', 0, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 1, 5, 2, 4, 6],) ,
('saved value', 2.2944480447481856) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([3, 1, 5, 0, 2, 6],) ,
('saved value', 1.2944480447481856) ,
('Remap node', 5, 'from ', 6, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([3, 1, 5, 0, 4, 2],) ,
('saved value', 1.2944480447481856) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 1) ,
([3, 1, 5, 0, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 3) ,
('Swap gain:', 1.2476885242943352) ,
([1, 3, 5, 0, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 5, 0, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 5) ,
([3, 1, 5, 0, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', 0.7055519552518142) ,
([5, 1, 3, 0, 4, 6],) ,
('Computing match for mapping',) ,
([5, 1, 3, 0, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 0) ,
([3, 1, 5, 0, 4, 6],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', -0.29444804474818564) ,
([0, 1, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 6],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 4) ,
([3, 1, 5, 0, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -1.2944480447481856) ,
([4, 1, 5, 0, 3, 6],) ,
('Computing match for mapping',) ,
([4, 1, 5, 0, 3, 6],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 6) ,
([3, 1, 5, 0, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -1.2944480447481856) ,
([6, 1, 5, 0, 4, 3],) ,
('Computing match for mapping',) ,
([6, 1, 5, 0, 4, 3],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 5) ,
([3, 1, 5, 0, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([3, 5, 1, 0, 4, 6],) ,
('Computing match for mapping',) ,
([3, 5, 1, 0, 4, 6],) ,
('saved value', 2.2944480447481856) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 0) ,
([3, 1, 5, 0, 4, 6],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([3, 0, 5, 1, 4, 6],) ,
('Computing match for mapping',) ,
([3, 0, 5, 1, 4, 6],) ,
('saved value', 2.2944480447481856) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([3, 1, 5, 0, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([3, 4, 5, 0, 1, 6],) ,
('Computing match for mapping',) ,
([3, 4, 5, 0, 1, 6],) ,
('saved value', 1.2944480447481856) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([3, 1, 5, 0, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -1.0) ,
([3, 6, 5, 0, 4, 1],) ,
('Computing match for mapping',) ,
([3, 6, 5, 0, 4, 1],) ,
('saved value', 1.2944480447481856) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 0) ,
([3, 1, 5, 0, 4, 6],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 5) ,
('Swap gain:', 1.0) ,
([3, 1, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 0, 5, 4, 6],) ,
('saved value', 3.2944480447481856) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 4) ,
([3, 1, 5, 0, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -1.0) ,
([3, 1, 4, 0, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 4, 0, 5, 6],) ,
('saved value', 1.2944480447481856) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 6) ,
([3, 1, 5, 0, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -1.0) ,
([3, 1, 6, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 6, 0, 4, 5],) ,
('saved value', 1.2944480447481856) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', 4) ,
([3, 1, 5, 0, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([3, 1, 5, 4, 0, 6],) ,
('Computing match for mapping',) ,
([3, 1, 5, 4, 0, 6],) ,
('saved value', 1.2944480447481856) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 0, ',', 5, '-', 6) ,
([3, 1, 5, 0, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([3, 1, 5, 6, 4, 0],) ,
('Computing match for mapping',) ,
([3, 1, 5, 6, 4, 0],) ,
('saved value', 1.2944480447481856) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([3, 1, 5, 0, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([3, 1, 5, 0, 6, 4],) ,
('Computing match for mapping',) ,
([3, 1, 5, 0, 6, 4],) ,
('saved value', 0.29444804474818564) ,
('Use swap gain',) ,
('Original mapping', [3, 1, 5, 0, 4, 6]) ,
('Current mapping', [1, 3, 5, 0, 4, 6]) ,
('Gain after the hill-climbing', 1.2476885242943352) ,
('Update triple match number to:', 3.542136569042521) ,
('Current mapping:', [1, 3, 5, 0, 4, 6]) ,
('Remap node', 0, 'from ', 1, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 3, 5, 0, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Remap node', 1, 'from ', 3, 'to', 2) ,
('Move gain:', 0.45786343095747917) ,
('Computing match for mapping',) ,
([1, 2, 5, 0, 4, 6],) ,
('saved value', 4.0) ,
('Remap node', 2, 'from ', 5, 'to', 2) ,
('Move gain:', 0.5421365690425208) ,
('Computing match for mapping',) ,
([1, 3, 2, 0, 4, 6],) ,
('saved value', 4.084273138085042) ,
('Remap node', 3, 'from ', 0, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 3, 5, 2, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 3, 5, 0, 2, 6],) ,
('saved value', 2.542136569042521) ,
('Remap node', 5, 'from ', 6, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 5, 0, 4, 2],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 3) ,
([1, 3, 5, 0, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 1) ,
('Swap gain:', -1.2476885242943352) ,
([3, 1, 5, 0, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 5, 0, 4, 6],) ,
('saved value', 2.2944480447481856) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 5) ,
([1, 3, 5, 0, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([5, 3, 1, 0, 4, 6],) ,
('Computing match for mapping',) ,
([5, 3, 1, 0, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 0) ,
([1, 3, 5, 0, 4, 6],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 3, 5, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 3, 5, 0, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 0, 1, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 0, 1, 6],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 3, 5, 0, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([6, 3, 5, 0, 4, 1],) ,
('Computing match for mapping',) ,
([6, 3, 5, 0, 4, 1],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([1, 3, 5, 0, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', 0.45786343095747917) ,
([1, 5, 3, 0, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 3, 0, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 0) ,
([1, 3, 5, 0, 4, 6],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', -0.5421365690425208) ,
([1, 0, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 5, 3, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 4) ,
([1, 3, 5, 0, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -1.5421365690425208) ,
([1, 4, 5, 0, 3, 6],) ,
('Computing match for mapping',) ,
([1, 4, 5, 0, 3, 6],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 6) ,
([1, 3, 5, 0, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -1.5421365690425208) ,
([1, 6, 5, 0, 4, 3],) ,
('Computing match for mapping',) ,
([1, 6, 5, 0, 4, 3],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 0) ,
([1, 3, 5, 0, 4, 6],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 5) ,
('Swap gain:', 2.0) ,
([1, 3, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 4, 6],) ,
('saved value', 5.542136569042521) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 4) ,
([1, 3, 5, 0, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -1.0) ,
([1, 3, 4, 0, 5, 6],) ,
('Computing match for mapping',) ,
([1, 3, 4, 0, 5, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 6) ,
([1, 3, 5, 0, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -2.0) ,
([1, 3, 6, 0, 4, 5],) ,
('Computing match for mapping',) ,
([1, 3, 6, 0, 4, 5],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', 4) ,
([1, 3, 5, 0, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 3, 5, 4, 0, 6],) ,
('Computing match for mapping',) ,
([1, 3, 5, 4, 0, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 0, ',', 5, '-', 6) ,
([1, 3, 5, 0, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 5, 6, 4, 0],) ,
('Computing match for mapping',) ,
([1, 3, 5, 6, 4, 0],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 3, 5, 0, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 3, 5, 0, 6, 4],) ,
('Computing match for mapping',) ,
([1, 3, 5, 0, 6, 4],) ,
('saved value', 0.5421365690425208) ,
('Use swap gain',) ,
('Original mapping', [1, 3, 5, 0, 4, 6]) ,
('Current mapping', [1, 3, 0, 5, 4, 6]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 5.542136569042521) ,
('Current mapping:', [1, 3, 0, 5, 4, 6]) ,
('Remap node', 0, 'from ', 1, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 3, 0, 5, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Remap node', 1, 'from ', 3, 'to', 2) ,
('Move gain:', 0.45786343095747917) ,
('Computing match for mapping',) ,
([1, 2, 0, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 2, 'from ', 0, 'to', 2) ,
('Move gain:', 0.5421365690425208) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 6],) ,
('saved value', 6.084273138085042) ,
('Remap node', 3, 'from ', 5, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 0, 2, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 2, 6],) ,
('saved value', 4.542136569042521) ,
('Remap node', 5, 'from ', 6, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 4, 2],) ,
('saved value', 3.542136569042521) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 3) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 1) ,
('Swap gain:', -2.247688524294335) ,
([3, 1, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 0, 5, 4, 6],) ,
('saved value', 3.2944480447481856) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 0) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 3, 0, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 3, 0, 1, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 3, 0, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 1, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([6, 3, 0, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 3, 0, 5, 4, 1],) ,
('saved value', 2.542136569042521) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 0) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 3) ,
('Swap gain:', 0.45786343095747917) ,
([1, 0, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -2.542136569042521) ,
([1, 5, 0, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 0, 3, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 4) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -1.5421365690425208) ,
([1, 4, 0, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 4, 0, 5, 3, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 6) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -1.5421365690425208) ,
([1, 6, 0, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 6, 0, 5, 4, 3],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 5) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 5, 0, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 5, 0, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 4) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 3, 4, 5, 0, 6],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 0, 6],) ,
('saved value', 4.542136569042521) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 6) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 6, 5, 4, 0],) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 4, 0],) ,
('saved value', 3.542136569042521) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 3, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 3, 0, 4, 5, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4.0) ,
([1, 3, 0, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 3, 0, 6, 4, 5],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 3, 0, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 6, 4],) ,
('saved value', 2.542136569042521) ,
('Use move gain',) ,
('Original mapping', [1, 3, 0, 5, 4, 6]) ,
('Current mapping', [1, 3, 2, 5, 4, 6]) ,
('Gain after the hill-climbing', 0.5421365690425208) ,
('Update triple match number to:', 6.084273138085042) ,
('Current mapping:', [1, 3, 2, 5, 4, 6]) ,
('Remap node', 0, 'from ', 1, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 4, 6],) ,
('saved value', 4.084273138085042) ,
('Remap node', 1, 'from ', 3, 'to', 0) ,
('Move gain:', -0.5421365690425208) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 4, 6],) ,
('saved value', 5.542136569042521) ,
('Remap node', 2, 'from ', 2, 'to', 0) ,
('Move gain:', -0.5421365690425208) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 4, 6],) ,
('saved value', 5.542136569042521) ,
('Remap node', 3, 'from ', 5, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 2, 0, 4, 6],) ,
('saved value', 4.084273138085042) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 0, 6],) ,
('saved value', 5.084273138085042) ,
('Remap node', 5, 'from ', 6, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 0],) ,
('saved value', 4.084273138085042) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 3) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 1) ,
('Swap gain:', -2.247688524294335) ,
([3, 1, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 4, 6],) ,
('saved value', 3.8365846137907065) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 2) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -2.542136569042521) ,
([2, 3, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 3, 1, 5, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 3, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 3, 2, 1, 4, 6],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 3, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 3, 2, 5, 1, 6],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([6, 3, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 3, 2, 5, 4, 1],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', 1.9157268619149583) ,
([1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -2.542136569042521) ,
([1, 5, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 2, 3, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -1.5421365690425208) ,
([1, 4, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 4, 2, 5, 3, 6],) ,
('saved value', 4.542136569042521) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -1.5421365690425208) ,
([1, 6, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 6, 2, 5, 4, 3],) ,
('saved value', 4.542136569042521) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 5) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -2.542136569042521) ,
([1, 3, 5, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 5, 2, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([1, 3, 4, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 2, 6],) ,
('saved value', 4.542136569042521) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -2.542136569042521) ,
([1, 3, 6, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 4, 2],) ,
('saved value', 3.542136569042521) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 4, 5, 6],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4.0) ,
([1, 3, 2, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 3, 2, 6, 4, 5],) ,
('saved value', 2.0842731380850417) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 3, 2, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 6, 4],) ,
('saved value', 3.0842731380850417) ,
('Use swap gain',) ,
('Original mapping', [1, 3, 2, 5, 4, 6]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 1.9157268619149583) ,
('Update triple match number to:', 8.0) ,
('Current mapping:', [1, 2, 3, 5, 4, 6]) ,
('Remap node', 0, 'from ', 1, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 1, 'from ', 2, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 0, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 2, 'from ', 3, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 2, 0, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 3, 'from ', 5, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 0, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 0, 6],) ,
('saved value', 7.0) ,
('Remap node', 5, 'from ', 6, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, 0],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -4.0) ,
([2, 1, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 5, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -3.7055519552518144) ,
([3, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 1, 5, 4, 6],) ,
('saved value', 4.294448044748186) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 2, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 2, 3, 1, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 2, 3, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 1, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([6, 2, 3, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 2, 3, 5, 4, 1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -1.9157268619149583) ,
([1, 3, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 6],) ,
('saved value', 6.084273138085042) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -4.0) ,
([1, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 3, 2, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([1, 4, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 4, 3, 5, 2, 6],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([1, 6, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 6, 3, 5, 4, 2],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -4.0) ,
([1, 2, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 5, 3, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([1, 2, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 3, 6],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([1, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, 6, 5, 4, 3],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 2, 3, 4, 5, 6],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4.0) ,
([1, 2, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 2, 3, 6, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 2, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 6, 4],) ,
('saved value', 5.0) ,
('no move/swap gain found',) ,
('Original mapping', [1, 2, 3, 5, 4, 6]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([5, 1, 6, 3, 2, 0],) ,
('node_pair', (0, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 0)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [5, 1, 6, 3, 2, 0]) ,
('Triple match number at start:', 0.0) ,
('Remap node', 0, 'from ', 5, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 1, 6, 3, 2, 0],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 4, 6, 3, 2, 0],) ,
('saved value', 0.0) ,
('Remap node', 2, 'from ', 6, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 1, 4, 3, 2, 0],) ,
('saved value', 0.0) ,
('Remap node', 3, 'from ', 3, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 1, 6, 4, 2, 0],) ,
('saved value', 0.0) ,
('Remap node', 4, 'from ', 2, 'to', 4) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([5, 1, 6, 3, 4, 0],) ,
('saved value', 1.0) ,
('Remap node', 5, 'from ', 0, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 1, 6, 3, 2, 4],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 5, ',', 1, '-', 1) ,
([5, 1, 6, 3, 2, 0],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 5) ,
('Swap gain:', 0.0) ,
([1, 5, 6, 3, 2, 0],) ,
('Computing match for mapping',) ,
([1, 5, 6, 3, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 5, ',', 2, '-', 6) ,
([5, 1, 6, 3, 2, 0],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 5) ,
('Swap gain:', 0.0) ,
([6, 1, 5, 3, 2, 0],) ,
('Computing match for mapping',) ,
([6, 1, 5, 3, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 5, ',', 3, '-', 3) ,
([5, 1, 6, 3, 2, 0],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 5) ,
('Swap gain:', 1.2944480447481856) ,
([3, 1, 6, 5, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 2, 0],) ,
('saved value', 1.2944480447481856) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 5, ',', 4, '-', 2) ,
([5, 1, 6, 3, 2, 0],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 0.0) ,
([2, 1, 6, 3, 5, 0],) ,
('Computing match for mapping',) ,
([2, 1, 6, 3, 5, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 5, ',', 5, '-', 0) ,
([5, 1, 6, 3, 2, 0],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 1, 6, 3, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 5],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([5, 1, 6, 3, 2, 0],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([5, 6, 1, 3, 2, 0],) ,
('Computing match for mapping',) ,
([5, 6, 1, 3, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([5, 1, 6, 3, 2, 0],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', 0.5421365690425208) ,
([5, 3, 6, 1, 2, 0],) ,
('Computing match for mapping',) ,
([5, 3, 6, 1, 2, 0],) ,
('saved value', 0.5421365690425208) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([5, 1, 6, 3, 2, 0],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', 1.0) ,
([5, 2, 6, 3, 1, 0],) ,
('Computing match for mapping',) ,
([5, 2, 6, 3, 1, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 0) ,
([5, 1, 6, 3, 2, 0],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([5, 0, 6, 3, 2, 1],) ,
('Computing match for mapping',) ,
([5, 0, 6, 3, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 3) ,
([5, 1, 6, 3, 2, 0],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 6) ,
('Swap gain:', 1.0) ,
([5, 1, 3, 6, 2, 0],) ,
('Computing match for mapping',) ,
([5, 1, 3, 6, 2, 0],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 2) ,
([5, 1, 6, 3, 2, 0],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', 0.5421365690425208) ,
([5, 1, 2, 3, 6, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 6, 0],) ,
('saved value', 0.5421365690425208) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 0) ,
([5, 1, 6, 3, 2, 0],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 6) ,
('Swap gain:', 1.0) ,
([5, 1, 0, 3, 2, 6],) ,
('Computing match for mapping',) ,
([5, 1, 0, 3, 2, 6],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 2) ,
([5, 1, 6, 3, 2, 0],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([5, 1, 6, 2, 3, 0],) ,
('Computing match for mapping',) ,
([5, 1, 6, 2, 3, 0],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 0) ,
([5, 1, 6, 3, 2, 0],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([5, 1, 6, 0, 2, 3],) ,
('Computing match for mapping',) ,
([5, 1, 6, 0, 2, 3],) ,
('saved value', 0.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 0) ,
([5, 1, 6, 3, 2, 0],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([5, 1, 6, 3, 0, 2],) ,
('Computing match for mapping',) ,
([5, 1, 6, 3, 0, 2],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [5, 1, 6, 3, 2, 0]) ,
('Current mapping', [3, 1, 6, 5, 2, 0]) ,
('Gain after the hill-climbing', 1.2944480447481856) ,
('Update triple match number to:', 1.2944480447481856) ,
('Current mapping:', [3, 1, 6, 5, 2, 0]) ,
('Remap node', 0, 'from ', 3, 'to', 4) ,
('Move gain:', -0.29444804474818576) ,
('Computing match for mapping',) ,
([4, 1, 6, 5, 2, 0],) ,
('saved value', 0.9999999999999999) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 4, 6, 5, 2, 0],) ,
('saved value', 1.2944480447481856) ,
('Remap node', 2, 'from ', 6, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 1, 4, 5, 2, 0],) ,
('saved value', 1.2944480447481856) ,
('Remap node', 3, 'from ', 5, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([3, 1, 6, 4, 2, 0],) ,
('saved value', 0.29444804474818564) ,
('Remap node', 4, 'from ', 2, 'to', 4) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 4, 0],) ,
('saved value', 2.2944480447481856) ,
('Remap node', 5, 'from ', 0, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 2, 4],) ,
('saved value', 1.2944480447481856) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 1) ,
([3, 1, 6, 5, 2, 0],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 3) ,
('Swap gain:', 1.2476885242943352) ,
([1, 3, 6, 5, 2, 0],) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 2, 0],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 6) ,
([3, 1, 6, 5, 2, 0],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 3) ,
('Swap gain:', 0.7055519552518142) ,
([6, 1, 3, 5, 2, 0],) ,
('Computing match for mapping',) ,
([6, 1, 3, 5, 2, 0],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 5) ,
([3, 1, 6, 5, 2, 0],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -1.2944480447481856) ,
([5, 1, 6, 3, 2, 0],) ,
('Computing match for mapping',) ,
([5, 1, 6, 3, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 2) ,
([3, 1, 6, 5, 2, 0],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', -0.29444804474818576) ,
([2, 1, 6, 5, 3, 0],) ,
('Computing match for mapping',) ,
([2, 1, 6, 5, 3, 0],) ,
('saved value', 0.9999999999999999) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 0) ,
([3, 1, 6, 5, 2, 0],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -0.29444804474818576) ,
([0, 1, 6, 5, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 2, 3],) ,
('saved value', 0.9999999999999999) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([3, 1, 6, 5, 2, 0],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([3, 6, 1, 5, 2, 0],) ,
('Computing match for mapping',) ,
([3, 6, 1, 5, 2, 0],) ,
('saved value', 1.2944480447481856) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 5) ,
([3, 1, 6, 5, 2, 0],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([3, 5, 6, 1, 2, 0],) ,
('Computing match for mapping',) ,
([3, 5, 6, 1, 2, 0],) ,
('saved value', 0.29444804474818564) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([3, 1, 6, 5, 2, 0],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', 1.0) ,
([3, 2, 6, 5, 1, 0],) ,
('Computing match for mapping',) ,
([3, 2, 6, 5, 1, 0],) ,
('saved value', 2.2944480447481856) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 0) ,
([3, 1, 6, 5, 2, 0],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([3, 0, 6, 5, 2, 1],) ,
('Computing match for mapping',) ,
([3, 0, 6, 5, 2, 1],) ,
('saved value', 1.2944480447481856) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 5) ,
([3, 1, 6, 5, 2, 0],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 6) ,
('Swap gain:', -1.0) ,
([3, 1, 5, 6, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 5, 6, 2, 0],) ,
('saved value', 0.29444804474818564) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 2) ,
([3, 1, 6, 5, 2, 0],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', 0.5421365690425208) ,
([3, 1, 2, 5, 6, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 6, 0],) ,
('saved value', 1.8365846137907065) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 0) ,
([3, 1, 6, 5, 2, 0],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 6) ,
('Swap gain:', 1.0) ,
([3, 1, 0, 5, 2, 6],) ,
('Computing match for mapping',) ,
([3, 1, 0, 5, 2, 6],) ,
('saved value', 2.2944480447481856) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 2) ,
([3, 1, 6, 5, 2, 0],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', -1.0) ,
([3, 1, 6, 2, 5, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 2, 5, 0],) ,
('saved value', 0.29444804474818564) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 0) ,
([3, 1, 6, 5, 2, 0],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', -1.0) ,
([3, 1, 6, 0, 2, 5],) ,
('Computing match for mapping',) ,
([3, 1, 6, 0, 2, 5],) ,
('saved value', 0.29444804474818564) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 0) ,
([3, 1, 6, 5, 2, 0],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 1, 6, 5, 0, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 0, 2],) ,
('saved value', 1.2944480447481856) ,
('Use swap gain',) ,
('Original mapping', [3, 1, 6, 5, 2, 0]) ,
('Current mapping', [1, 3, 6, 5, 2, 0]) ,
('Gain after the hill-climbing', 1.2476885242943352) ,
('Update triple match number to:', 2.542136569042521) ,
('Current mapping:', [1, 3, 6, 5, 2, 0]) ,
('Remap node', 0, 'from ', 1, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 3, 6, 5, 2, 0],) ,
('saved value', 1.5421365690425208) ,
('Remap node', 1, 'from ', 3, 'to', 4) ,
('Move gain:', -0.5421365690425208) ,
('Computing match for mapping',) ,
([1, 4, 6, 5, 2, 0],) ,
('saved value', 2.0) ,
('Remap node', 2, 'from ', 6, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 2, 0],) ,
('saved value', 2.542136569042521) ,
('Remap node', 3, 'from ', 5, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 6, 4, 2, 0],) ,
('saved value', 0.5421365690425208) ,
('Remap node', 4, 'from ', 2, 'to', 4) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 4, 0],) ,
('saved value', 3.542136569042521) ,
('Remap node', 5, 'from ', 0, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 2, 4],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 3) ,
([1, 3, 6, 5, 2, 0],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 1) ,
('Swap gain:', -1.2476885242943352) ,
([3, 1, 6, 5, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 5, 2, 0],) ,
('saved value', 1.2944480447481856) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 6) ,
([1, 3, 6, 5, 2, 0],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([6, 3, 1, 5, 2, 0],) ,
('Computing match for mapping',) ,
([6, 3, 1, 5, 2, 0],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 3, 6, 5, 2, 0],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([5, 3, 6, 1, 2, 0],) ,
('Computing match for mapping',) ,
([5, 3, 6, 1, 2, 0],) ,
('saved value', 0.5421365690425208) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 2) ,
([1, 3, 6, 5, 2, 0],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([2, 3, 6, 5, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 6, 5, 1, 0],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 0) ,
([1, 3, 6, 5, 2, 0],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 3, 6, 5, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 5, 2, 1],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 6) ,
([1, 3, 6, 5, 2, 0],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 3) ,
('Swap gain:', 1.4578634309574792) ,
([1, 6, 3, 5, 2, 0],) ,
('Computing match for mapping',) ,
([1, 6, 3, 5, 2, 0],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([1, 3, 6, 5, 2, 0],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -2.542136569042521) ,
([1, 5, 6, 3, 2, 0],) ,
('Computing match for mapping',) ,
([1, 5, 6, 3, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 2) ,
([1, 3, 6, 5, 2, 0],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 0.45786343095747917) ,
([1, 2, 6, 5, 3, 0],) ,
('Computing match for mapping',) ,
([1, 2, 6, 5, 3, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 0) ,
([1, 3, 6, 5, 2, 0],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -0.5421365690425208) ,
([1, 0, 6, 5, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 6, 5, 2, 3],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 5) ,
([1, 3, 6, 5, 2, 0],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 6) ,
('Swap gain:', -2.0) ,
([1, 3, 5, 6, 2, 0],) ,
('Computing match for mapping',) ,
([1, 3, 5, 6, 2, 0],) ,
('saved value', 0.5421365690425208) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 2) ,
([1, 3, 6, 5, 2, 0],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', 0.5421365690425208) ,
([1, 3, 2, 5, 6, 0],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 6, 0],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 0) ,
([1, 3, 6, 5, 2, 0],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 6) ,
('Swap gain:', 2.0) ,
([1, 3, 0, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 2, 6],) ,
('saved value', 4.542136569042521) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 2) ,
([1, 3, 6, 5, 2, 0],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', -2.0) ,
([1, 3, 6, 2, 5, 0],) ,
('Computing match for mapping',) ,
([1, 3, 6, 2, 5, 0],) ,
('saved value', 0.5421365690425208) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 0) ,
([1, 3, 6, 5, 2, 0],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', -2.0) ,
([1, 3, 6, 0, 2, 5],) ,
('Computing match for mapping',) ,
([1, 3, 6, 0, 2, 5],) ,
('saved value', 0.5421365690425208) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 0) ,
([1, 3, 6, 5, 2, 0],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 3, 6, 5, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 0, 2],) ,
('saved value', 2.542136569042521) ,
('Use swap gain',) ,
('Original mapping', [1, 3, 6, 5, 2, 0]) ,
('Current mapping', [1, 3, 0, 5, 2, 6]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 4.542136569042521) ,
('Current mapping:', [1, 3, 0, 5, 2, 6]) ,
('Remap node', 0, 'from ', 1, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 2, 6],) ,
('saved value', 2.542136569042521) ,
('Remap node', 1, 'from ', 3, 'to', 4) ,
('Move gain:', -0.5421365690425208) ,
('Computing match for mapping',) ,
([1, 4, 0, 5, 2, 6],) ,
('saved value', 4.0) ,
('Remap node', 2, 'from ', 0, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 2, 6],) ,
('saved value', 4.542136569042521) ,
('Remap node', 3, 'from ', 5, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 0, 4, 2, 6],) ,
('saved value', 2.542136569042521) ,
('Remap node', 4, 'from ', 2, 'to', 4) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 4, 6],) ,
('saved value', 5.542136569042521) ,
('Remap node', 5, 'from ', 6, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 2, 4],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 3) ,
([1, 3, 0, 5, 2, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 1) ,
('Swap gain:', -2.247688524294335) ,
([3, 1, 0, 5, 2, 6],) ,
('Computing match for mapping',) ,
([3, 1, 0, 5, 2, 6],) ,
('saved value', 2.2944480447481856) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 0) ,
([1, 3, 0, 5, 2, 6],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 1, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 2, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 3, 0, 5, 2, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 3, 0, 1, 2, 6],) ,
('Computing match for mapping',) ,
([5, 3, 0, 1, 2, 6],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 2) ,
([1, 3, 0, 5, 2, 6],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([2, 3, 0, 5, 1, 6],) ,
('Computing match for mapping',) ,
([2, 3, 0, 5, 1, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 3, 0, 5, 2, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([6, 3, 0, 5, 2, 1],) ,
('Computing match for mapping',) ,
([6, 3, 0, 5, 2, 1],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 0) ,
([1, 3, 0, 5, 2, 6],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 3) ,
('Swap gain:', 0.45786343095747917) ,
([1, 0, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 0, 3, 5, 2, 6],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([1, 3, 0, 5, 2, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -2.542136569042521) ,
([1, 5, 0, 3, 2, 6],) ,
('Computing match for mapping',) ,
([1, 5, 0, 3, 2, 6],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 2) ,
([1, 3, 0, 5, 2, 6],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 0.45786343095747917) ,
([1, 2, 0, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 2, 0, 5, 3, 6],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 6) ,
([1, 3, 0, 5, 2, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -1.5421365690425208) ,
([1, 6, 0, 5, 2, 3],) ,
('Computing match for mapping',) ,
([1, 6, 0, 5, 2, 3],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 5) ,
([1, 3, 0, 5, 2, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 5, 0, 2, 6],) ,
('Computing match for mapping',) ,
([1, 3, 5, 0, 2, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 2) ,
([1, 3, 0, 5, 2, 6],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', 0.5421365690425208) ,
([1, 3, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 0, 6],) ,
('saved value', 5.084273138085042) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 6) ,
([1, 3, 0, 5, 2, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 6, 5, 2, 0],) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 2, 0],) ,
('saved value', 2.542136569042521) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 2) ,
([1, 3, 0, 5, 2, 6],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', -2.0) ,
([1, 3, 0, 2, 5, 6],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2, 5, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 3, 0, 5, 2, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4.0) ,
([1, 3, 0, 6, 2, 5],) ,
('Computing match for mapping',) ,
([1, 3, 0, 6, 2, 5],) ,
('saved value', 0.5421365690425208) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 6) ,
([1, 3, 0, 5, 2, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -2.0) ,
([1, 3, 0, 5, 6, 2],) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 6, 2],) ,
('saved value', 2.542136569042521) ,
('Use move gain',) ,
('Original mapping', [1, 3, 0, 5, 2, 6]) ,
('Current mapping', [1, 3, 0, 5, 4, 6]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 5.542136569042521) ,
('Current mapping:', [1, 3, 0, 5, 4, 6]) ,
('Remap node', 0, 'from ', 1, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 3, 0, 5, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Remap node', 1, 'from ', 3, 'to', 2) ,
('Move gain:', 0.45786343095747917) ,
('Computing match for mapping',) ,
([1, 2, 0, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 2, 'from ', 0, 'to', 2) ,
('Move gain:', 0.5421365690425208) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 6],) ,
('saved value', 6.084273138085042) ,
('Remap node', 3, 'from ', 5, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 0, 2, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 2, 6],) ,
('saved value', 4.542136569042521) ,
('Remap node', 5, 'from ', 6, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 4, 2],) ,
('saved value', 3.542136569042521) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 3) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 1) ,
('Swap gain:', -2.247688524294335) ,
([3, 1, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 0, 5, 4, 6],) ,
('saved value', 3.2944480447481856) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 0) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 1, 5, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 3, 0, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 3, 0, 1, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 3, 0, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 1, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([6, 3, 0, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 3, 0, 5, 4, 1],) ,
('saved value', 2.542136569042521) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 0) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 3) ,
('Swap gain:', 0.45786343095747917) ,
([1, 0, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -2.542136569042521) ,
([1, 5, 0, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 0, 3, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 4) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -1.5421365690425208) ,
([1, 4, 0, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 4, 0, 5, 3, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 6) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -1.5421365690425208) ,
([1, 6, 0, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 6, 0, 5, 4, 3],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 5) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 5, 0, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 5, 0, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 4) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 3, 4, 5, 0, 6],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 0, 6],) ,
('saved value', 4.542136569042521) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 6) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 6, 5, 4, 0],) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 4, 0],) ,
('saved value', 3.542136569042521) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 3, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 3, 0, 4, 5, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4.0) ,
([1, 3, 0, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 3, 0, 6, 4, 5],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 3, 0, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 3, 0, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 6, 4],) ,
('saved value', 2.542136569042521) ,
('Use move gain',) ,
('Original mapping', [1, 3, 0, 5, 4, 6]) ,
('Current mapping', [1, 3, 2, 5, 4, 6]) ,
('Gain after the hill-climbing', 0.5421365690425208) ,
('Update triple match number to:', 6.084273138085042) ,
('Current mapping:', [1, 3, 2, 5, 4, 6]) ,
('Remap node', 0, 'from ', 1, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 4, 6],) ,
('saved value', 4.084273138085042) ,
('Remap node', 1, 'from ', 3, 'to', 0) ,
('Move gain:', -0.5421365690425208) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 4, 6],) ,
('saved value', 5.542136569042521) ,
('Remap node', 2, 'from ', 2, 'to', 0) ,
('Move gain:', -0.5421365690425208) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 4, 6],) ,
('saved value', 5.542136569042521) ,
('Remap node', 3, 'from ', 5, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 2, 0, 4, 6],) ,
('saved value', 4.084273138085042) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 0, 6],) ,
('saved value', 5.084273138085042) ,
('Remap node', 5, 'from ', 6, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 0],) ,
('saved value', 4.084273138085042) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 3) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 1) ,
('Swap gain:', -2.247688524294335) ,
([3, 1, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 4, 6],) ,
('saved value', 3.8365846137907065) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 2) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -2.542136569042521) ,
([2, 3, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 3, 1, 5, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 3, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 3, 2, 1, 4, 6],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 3, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 3, 2, 5, 1, 6],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([6, 3, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 3, 2, 5, 4, 1],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', 1.9157268619149583) ,
([1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -2.542136569042521) ,
([1, 5, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 2, 3, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -1.5421365690425208) ,
([1, 4, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 4, 2, 5, 3, 6],) ,
('saved value', 4.542136569042521) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -1.5421365690425208) ,
([1, 6, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 6, 2, 5, 4, 3],) ,
('saved value', 4.542136569042521) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 5) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -2.542136569042521) ,
([1, 3, 5, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 5, 2, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([1, 3, 4, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 2, 6],) ,
('saved value', 4.542136569042521) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -2.542136569042521) ,
([1, 3, 6, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 4, 2],) ,
('saved value', 3.542136569042521) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 4, 5, 6],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4.0) ,
([1, 3, 2, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 3, 2, 6, 4, 5],) ,
('saved value', 2.0842731380850417) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 3, 2, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 6, 4],) ,
('saved value', 3.0842731380850417) ,
('Use swap gain',) ,
('Original mapping', [1, 3, 2, 5, 4, 6]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 1.9157268619149583) ,
('Update triple match number to:', 8.0) ,
('Current mapping:', [1, 2, 3, 5, 4, 6]) ,
('Remap node', 0, 'from ', 1, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 1, 'from ', 2, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 0, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 2, 'from ', 3, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 2, 0, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 3, 'from ', 5, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 0, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 0, 6],) ,
('saved value', 7.0) ,
('Remap node', 5, 'from ', 6, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, 0],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -4.0) ,
([2, 1, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 5, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -3.7055519552518144) ,
([3, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 1, 5, 4, 6],) ,
('saved value', 4.294448044748186) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 2, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 2, 3, 1, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 2, 3, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 1, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([6, 2, 3, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 2, 3, 5, 4, 1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -1.9157268619149583) ,
([1, 3, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 6],) ,
('saved value', 6.084273138085042) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -4.0) ,
([1, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 3, 2, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([1, 4, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 4, 3, 5, 2, 6],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([1, 6, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 6, 3, 5, 4, 2],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -4.0) ,
([1, 2, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 5, 3, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([1, 2, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 3, 6],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([1, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, 6, 5, 4, 3],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 2, 3, 4, 5, 6],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4.0) ,
([1, 2, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 2, 3, 6, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 2, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 6, 4],) ,
('saved value', 5.0) ,
('no move/swap gain found',) ,
('Original mapping', [1, 2, 3, 5, 4, 6]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 5)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [0, 1, 4, 3, 2, 5]) ,
('Triple match number at start:', 0.0) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 1, 4, 3, 2, 5],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 4, 3, 2, 5],) ,
('saved value', 0.0) ,
('Remap node', 2, 'from ', 4, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 5],) ,
('saved value', 0.0) ,
('Remap node', 3, 'from ', 3, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 2, 5],) ,
('saved value', 0.0) ,
('Remap node', 4, 'from ', 2, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 6, 5],) ,
('saved value', 0.0) ,
('Remap node', 5, 'from ', 5, 'to', 6) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 6],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 4, 3, 2, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', 0.0) ,
([1, 0, 4, 3, 2, 5],) ,
('Computing match for mapping',) ,
([1, 0, 4, 3, 2, 5],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 1, 4, 3, 2, 5],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([4, 1, 0, 3, 2, 5],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, 2, 5],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 4, 3, 2, 5],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', 0.29444804474818576) ,
([3, 1, 4, 0, 2, 5],) ,
('Computing match for mapping',) ,
([3, 1, 4, 0, 2, 5],) ,
('saved value', 0.29444804474818576) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, 5],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 1, 4, 3, 0, 5],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 0, 5],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 4, 3, 2, 5],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([5, 1, 4, 3, 2, 0],) ,
('Computing match for mapping',) ,
([5, 1, 4, 3, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([0, 1, 4, 3, 2, 5],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 4, 1, 3, 2, 5],) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 2, 5],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 4, 3, 2, 5],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', 0.5421365690425208) ,
([0, 3, 4, 1, 2, 5],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 2, 5],) ,
('saved value', 0.5421365690425208) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, 5],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', 1.0) ,
([0, 2, 4, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 1, 5],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 4, 3, 2, 5],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 5, 4, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 5, 4, 3, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 3) ,
([0, 1, 4, 3, 2, 5],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 3, 4, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, 5],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, 5],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 1.5421365690425208) ,
([0, 1, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 5) ,
([0, 1, 4, 3, 2, 5],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 1, 5, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 4],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 2) ,
([0, 1, 4, 3, 2, 5],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 1, 4, 2, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, 5],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 4, 3, 2, 5],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', 1.0) ,
([0, 1, 4, 5, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 3],) ,
('saved value', 1.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 5) ,
([0, 1, 4, 3, 2, 5],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 1, 4, 3, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, 2],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 4, 3, 2, 5]) ,
('Current mapping', [0, 1, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 1.5421365690425208) ,
('Update triple match number to:', 1.5421365690425208) ,
('Current mapping:', [0, 1, 2, 3, 4, 5]) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5],) ,
('saved value', 1.5421365690425208) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5],) ,
('saved value', 1.5421365690425208) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -0.5421365690425208) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5],) ,
('saved value', 1.0) ,
('Remap node', 3, 'from ', 3, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5],) ,
('saved value', 1.5421365690425208) ,
('Remap node', 4, 'from ', 4, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5],) ,
('saved value', 0.5421365690425208) ,
('Remap node', 5, 'from ', 5, 'to', 6) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', 0.0) ,
([1, 0, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -0.5421365690425208) ,
([2, 1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', 0.29444804474818576) ,
([3, 1, 2, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5],) ,
('saved value', 1.8365846137907065) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([4, 1, 2, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5],) ,
('saved value', 0.5421365690425208) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([5, 1, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', 0.45786343095747917) ,
([0, 2, 1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', 0.5421365690425208) ,
([0, 3, 2, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5],) ,
('saved value', 2.0842731380850417) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 4, 2, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5],) ,
('saved value', 0.5421365690425208) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 5, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', 0.45786343095747917) ,
([0, 1, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([0, 1, 4, 3, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -0.5421365690425208) ,
([0, 1, 5, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5],) ,
('saved value', 0.5421365690425208) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 2.542136569042521) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4],) ,
('saved value', 0.5421365690425208) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 3, 4, 5]) ,
('Current mapping', [0, 1, 2, 3, 4, 6]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 2.542136569042521) ,
('Current mapping:', [0, 1, 2, 3, 4, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Remap node', 2, 'from ', 2, 'to', 5) ,
('Move gain:', -0.5421365690425208) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 6],) ,
('saved value', 2.0) ,
('Remap node', 3, 'from ', 3, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6],) ,
('saved value', 1.5421365690425208) ,
('Remap node', 5, 'from ', 6, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', 1.0) ,
([1, 0, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -0.5421365690425208) ,
([2, 1, 0, 3, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 6],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', 0.29444804474818564) ,
([3, 1, 2, 0, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 6],) ,
('saved value', 2.8365846137907065) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([4, 1, 2, 3, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 6],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([6, 1, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 0],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', 0.45786343095747917) ,
([0, 2, 1, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', 0.5421365690425208) ,
([0, 3, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 6],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 4, 2, 3, 1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 6],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 6, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 1],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', 0.45786343095747917) ,
([0, 1, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([0, 1, 4, 3, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 6],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([0, 1, 6, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 2],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 6) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 3],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 3, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 4],) ,
('saved value', 0.5421365690425208) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 3, 4, 6]) ,
('Current mapping', [0, 1, 2, 5, 4, 6]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 3.542136569042521) ,
('Current mapping:', [0, 1, 2, 5, 4, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', 0.29444804474818564) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 4, 6],) ,
('saved value', 3.8365846137907065) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', 0.5421365690425208) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 4, 6],) ,
('saved value', 4.084273138085042) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', 0.45786343095747917) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 4, 6],) ,
('saved value', 4.0) ,
('Remap node', 3, 'from ', 5, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Remap node', 4, 'from ', 4, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 6],) ,
('saved value', 2.542136569042521) ,
('Remap node', 5, 'from ', 6, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', 2.0) ,
([1, 0, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 4, 6],) ,
('saved value', 5.542136569042521) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -0.5421365690425208) ,
([2, 1, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 5, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([5, 1, 2, 0, 4, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 0, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([4, 1, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 5, 0, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([6, 1, 2, 5, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 5, 4, 0],) ,
('saved value', 2.542136569042521) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', 0.45786343095747917) ,
([0, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 5, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 5) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 5, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 1, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 4, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 5, 1, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 6, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 5, 4, 1],) ,
('saved value', 2.542136569042521) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 5) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([0, 1, 5, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 4, 6],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([0, 1, 4, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 6],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([0, 1, 6, 5, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 4, 2],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 6, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 5, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 6, 4],) ,
('saved value', 1.5421365690425208) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 5, 4, 6]) ,
('Current mapping', [1, 0, 2, 5, 4, 6]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 5.542136569042521) ,
('Current mapping:', [1, 0, 2, 5, 4, 6]) ,
('Remap node', 0, 'from ', 1, 'to', 3) ,
('Move gain:', -1.7055519552518144) ,
('Computing match for mapping',) ,
([3, 0, 2, 5, 4, 6],) ,
('saved value', 3.8365846137907065) ,
('Remap node', 1, 'from ', 0, 'to', 3) ,
('Move gain:', 0.5421365690425208) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 6],) ,
('saved value', 6.084273138085042) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', 0.45786343095747917) ,
('Computing match for mapping',) ,
([1, 0, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 3, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Remap node', 4, 'from ', 4, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 3, 6],) ,
('saved value', 4.542136569042521) ,
('Remap node', 5, 'from ', 6, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 4, 3],) ,
('saved value', 3.542136569042521) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 2) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -2.542136569042521) ,
([2, 0, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 0, 1, 5, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 0, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 0, 2, 1, 4, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 0, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 0, 2, 5, 1, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([6, 0, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 0, 2, 5, 4, 1],) ,
('saved value', 2.542136569042521) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 2) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', 0.45786343095747917) ,
([1, 2, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 0, 5, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 5) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 5, 2, 0, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 2, 0, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', 4) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 4, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([1, 4, 2, 5, 0, 6],) ,
('saved value', 4.542136569042521) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 0, ',', 5, '-', 6) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 6, 2, 5, 4, 0],) ,
('Computing match for mapping',) ,
([1, 6, 2, 5, 4, 0],) ,
('saved value', 4.542136569042521) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 5) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -2.542136569042521) ,
([1, 0, 5, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 5, 2, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([1, 0, 4, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 0, 4, 5, 2, 6],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -2.542136569042521) ,
([1, 0, 6, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 0, 6, 5, 4, 2],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 0, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 6],) ,
('saved value', 2.542136569042521) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4.0) ,
([1, 0, 2, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 2, 6, 4, 5],) ,
('saved value', 1.5421365690425208) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 0, 2, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 0, 2, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 6, 4],) ,
('saved value', 2.542136569042521) ,
('Use move gain',) ,
('Original mapping', [1, 0, 2, 5, 4, 6]) ,
('Current mapping', [1, 3, 2, 5, 4, 6]) ,
('Gain after the hill-climbing', 0.5421365690425208) ,
('Update triple match number to:', 6.084273138085042) ,
('Current mapping:', [1, 3, 2, 5, 4, 6]) ,
('Remap node', 0, 'from ', 1, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 4, 6],) ,
('saved value', 4.084273138085042) ,
('Remap node', 1, 'from ', 3, 'to', 0) ,
('Move gain:', -0.5421365690425208) ,
('Computing match for mapping',) ,
([1, 0, 2, 5, 4, 6],) ,
('saved value', 5.542136569042521) ,
('Remap node', 2, 'from ', 2, 'to', 0) ,
('Move gain:', -0.5421365690425208) ,
('Computing match for mapping',) ,
([1, 3, 0, 5, 4, 6],) ,
('saved value', 5.542136569042521) ,
('Remap node', 3, 'from ', 5, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 2, 0, 4, 6],) ,
('saved value', 4.084273138085042) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 0, 6],) ,
('saved value', 5.084273138085042) ,
('Remap node', 5, 'from ', 6, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 0],) ,
('saved value', 4.084273138085042) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 3) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 1) ,
('Swap gain:', -2.247688524294335) ,
([3, 1, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 4, 6],) ,
('saved value', 3.8365846137907065) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 2) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -2.542136569042521) ,
([2, 3, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 3, 1, 5, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 3, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 3, 2, 1, 4, 6],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 3, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 3, 2, 5, 1, 6],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([6, 3, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 3, 2, 5, 4, 1],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', 1.9157268619149583) ,
([1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 5) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -2.542136569042521) ,
([1, 5, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 2, 3, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -1.5421365690425208) ,
([1, 4, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 4, 2, 5, 3, 6],) ,
('saved value', 4.542136569042521) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -1.5421365690425208) ,
([1, 6, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 6, 2, 5, 4, 3],) ,
('saved value', 4.542136569042521) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 5) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -2.542136569042521) ,
([1, 3, 5, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 5, 2, 4, 6],) ,
('saved value', 3.542136569042521) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.5421365690425208) ,
([1, 3, 4, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 3, 4, 5, 2, 6],) ,
('saved value', 4.542136569042521) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -2.542136569042521) ,
([1, 3, 6, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 4, 2],) ,
('saved value', 3.542136569042521) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 4, 5, 6],) ,
('saved value', 3.0842731380850417) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4.0) ,
([1, 3, 2, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 3, 2, 6, 4, 5],) ,
('saved value', 2.0842731380850417) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 3, 2, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 3, 2, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 6, 4],) ,
('saved value', 3.0842731380850417) ,
('Use swap gain',) ,
('Original mapping', [1, 3, 2, 5, 4, 6]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 1.9157268619149583) ,
('Update triple match number to:', 8.0) ,
('Current mapping:', [1, 2, 3, 5, 4, 6]) ,
('Remap node', 0, 'from ', 1, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 1, 'from ', 2, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 0, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 2, 'from ', 3, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 2, 0, 5, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 3, 'from ', 5, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 0, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 0, 6],) ,
('saved value', 7.0) ,
('Remap node', 5, 'from ', 6, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 4, 0],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -4.0) ,
([2, 1, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 5, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -3.7055519552518144) ,
([3, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 1, 5, 4, 6],) ,
('saved value', 4.294448044748186) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 2, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 2, 3, 1, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 2, 3, 5, 1, 6],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 1, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([6, 2, 3, 5, 4, 1],) ,
('Computing match for mapping',) ,
([6, 2, 3, 5, 4, 1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -1.9157268619149583) ,
([1, 3, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 5, 4, 6],) ,
('saved value', 6.084273138085042) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 2) ,
('Swap gain:', -4.0) ,
([1, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 5, 3, 2, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([1, 4, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([1, 4, 3, 5, 2, 6],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([1, 6, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 6, 3, 5, 4, 2],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 5) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -4.0) ,
([1, 2, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 5, 3, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([1, 2, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 3, 6],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -4.0) ,
([1, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, 6, 5, 4, 3],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 4) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 2, 3, 4, 5, 6],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -4.0) ,
([1, 2, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 2, 3, 6, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 6) ,
([1, 2, 3, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 2, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, 5, 6, 4],) ,
('saved value', 5.0) ,
('no move/swap gain found',) ,
('Original mapping', [1, 2, 3, 5, 4, 6]) ,
('Current mapping', [1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 8.0) ,
('best node mapping', [1, 2, 3, 5, 4, 6]) ,
('Best node mapping alignment:', 'a0(pump-01)-b1(boost-01) a1(pressure)-b2(pressure) a2(water)-b3(water) a3(i)-b5(i) a4(shower)-b4(shower) a5(amr-unknown)-b6(amr-unknown)') ,
('F-score:', 0.5925925925925926) ,
Smatch score F1 0.593
('AMR pair', 7) ,
('============================================',) ,
('AMR 1 (one-line):', '(p0 / possible-01:ARG1 (a0 / and:op1 (a1 / amr-unknown):op1 (l0 / locate-01:ARG1 (i0 / i):ARG1 (l1 / leak)):op2 (r0 / repair-01:ARG0 i0:ARG1 l1)))') ,
('AMR 2 (one-line):', '(p0 / possible-01:ARG1 (a0 / and:op1 (l0 / locate-01:ARG1 (b0 / break-01:ARG1 (c0 / circuit)):ARG0 (i0 / i)):op2 (r0 / repair-01:ARG0 b0:ARG0 i0)):manner (a1 / amr-unknown))') ,
('Instance triples of AMR 1:', 7) ,
([('instance', 'a0', 'possible-01'), ('instance', 'a1', 'and'), ('instance', 'a2', 'amr-unknown'), ('instance', 'a3', 'locate-01'), ('instance', 'a4', 'i'), ('instance', 'a5', 'leak'), ('instance', 'a6', 'repair-01')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'possible-01')],) ,
('Relation triples of AMR 1:', 8) ,
([('ARG1', 'a0', 'a1'), ('op1', 'a1', 'a2'), ('op1', 'a1', 'a3'), ('op2', 'a1', 'a6'), ('ARG1', 'a3', 'a4'), ('ARG1', 'a3', 'a5'), ('ARG0', 'a6', 'a4'), ('ARG1', 'a6', 'a5')],) ,
('Instance triples of AMR 2:', 8) ,
([('instance', 'b0', 'possible-01'), ('instance', 'b1', 'and'), ('instance', 'b2', 'locate-01'), ('instance', 'b3', 'break-01'), ('instance', 'b4', 'circuit'), ('instance', 'b5', 'i'), ('instance', 'b6', 'repair-01'), ('instance', 'b7', 'amr-unknown')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'possible-01')],) ,
('Relation triples of AMR 2:', 9) ,
([('ARG1', 'b0', 'b1'), ('manner', 'b0', 'b7'), ('op1', 'b1', 'b2'), ('op2', 'b1', 'b6'), ('ARG1', 'b2', 'b3'), ('ARG0', 'b2', 'b5'), ('ARG1', 'b3', 'b4'), ('ARG0', 'b6', 'b3'), ('ARG0', 'b6', 'b5')],) ,
('Similarity', 'possible-01', 'possible-01', 1.0) ,
('Similarity', 'possible-01', 'and', 0.0) ,
('Similarity', 'possible-01', 'locate-01', 0.0) ,
('Similarity', 'possible-01', 'break-01', 0.0) ,
('Similarity', 'possible-01', 'circuit', 0.0) ,
('Similarity', 'possible-01', 'i', 0.0) ,
('Similarity', 'possible-01', 'repair-01', 0.0) ,
('Similarity', 'possible-01', 'amr-unknown', 0.0) ,
('Similarity', 'and', 'and', 1.0) ,
('Similarity', 'and', 'locate-01', 0.0) ,
('Similarity', 'and', 'break-01', 0.25754445520671365) ,
('Similarity', 'and', 'circuit', 0.0) ,
('Similarity', 'and', 'i', 0.6192026449031044) ,
('Similarity', 'and', 'repair-01', 0.0) ,
('Similarity', 'and', 'amr-unknown', 0.0) ,
('Similarity', 'amr-unknown', 'locate-01', 0.0) ,
('Similarity', 'amr-unknown', 'break-01', 0.0) ,
('Similarity', 'amr-unknown', 'circuit', 0.0) ,
('Similarity', 'amr-unknown', 'i', 0.0) ,
('Similarity', 'amr-unknown', 'repair-01', 0.0) ,
('Similarity', 'amr-unknown', 'amr-unknown', 1.0) ,
('Similarity', 'locate-01', 'locate-01', 1.0) ,
('Similarity', 'locate-01', 'break-01', 0.0) ,
('Similarity', 'locate-01', 'circuit', 0.0) ,
('Similarity', 'locate-01', 'i', 0.0) ,
('Similarity', 'locate-01', 'repair-01', 0.0) ,
('Similarity', 'i', 'break-01', 0.0) ,
('Similarity', 'i', 'circuit', 0.0) ,
('Similarity', 'i', 'i', 1.0) ,
('Similarity', 'i', 'repair-01', 0.0) ,
('Similarity', 'leak', 'possible-01', 0.0) ,
('Similarity', 'leak', 'and', 0.0) ,
('Similarity', 'leak', 'locate-01', 0.0) ,
('Similarity', 'leak', 'break-01', 0.0) ,
('Similarity', 'leak', 'circuit', 0.0) ,
('Similarity', 'leak', 'i', 0.0) ,
('Similarity', 'leak', 'repair-01', 0.0) ,
('Similarity', 'leak', 'amr-unknown', 0.0) ,
('Similarity', 'repair-01', 'break-01', 0.0) ,
('Similarity', 'repair-01', 'circuit', 0.0) ,
('Similarity', 'repair-01', 'repair-01', 1.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2.0, (1, 1): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0, (1, 3): 1}, (0, 3): {-1: 0.0, (1, 4): 1}, (0, 4): {-1: 0.0}, (0, 5): {-1: 0.0}, (0, 6): {-1: 0.0}, (0, 7): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 1.0, (0, 0): 1, (2, 2): 1, (3, 2): 1, (6, 6): 1}, (1, 2): {-1: 0.0}, (1, 3): {-1: 0.25754445520671365, (0, 2): 1}, (1, 4): {-1: 0.0, (0, 3): 1}, (1, 5): {-1: 0.6192026449031044}, (1, 6): {-1: 0.0}, (1, 7): {-1: 0.0}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.0}, (2, 2): {-1: 0.0, (1, 1): 1}, (2, 3): {-1: 0.0}, (2, 4): {-1: 0.0}, (2, 5): {-1: 0.0}, (2, 6): {-1: 0.0}, (2, 7): {-1: 1.0}, (3, 0): {-1: 0.0, (4, 1): 1, (5, 1): 1}, (3, 1): {-1: 0.0}, (3, 2): {-1: 1.0, (1, 1): 1, (4, 3): 1, (5, 3): 1}, (3, 3): {-1: 0.0, (4, 4): 1, (5, 4): 1}, (3, 4): {-1: 0.0}, (3, 5): {-1: 0.0}, (3, 6): {-1: 0.0}, (3, 7): {-1: 0.0}, (4, 0): {-1: 0.0}, (4, 1): {-1: 0.6192026449031044, (3, 0): 1}, (4, 2): {-1: 0.0}, (4, 3): {-1: 0.0, (3, 2): 1, (6, 6): 1}, (4, 4): {-1: 0.0, (3, 3): 1}, (4, 5): {-1: 1.0, (6, 2): 1, (6, 6): 1}, (4, 6): {-1: 0.0}, (4, 7): {-1: 0.0}, (5, 0): {-1: 0.0}, (5, 1): {-1: 0.0, (3, 0): 1, (6, 0): 1}, (5, 2): {-1: 0.0}, (5, 3): {-1: 0.0, (3, 2): 1, (6, 2): 1}, (5, 4): {-1: 0.0, (3, 3): 1, (6, 3): 1}, (5, 5): {-1: 0.0}, (5, 6): {-1: 0.0}, (5, 7): {-1: 0.0}, (6, 0): {-1: 0.0, (5, 1): 1}, (6, 1): {-1: 0.0}, (6, 2): {-1: 0.0, (4, 5): 1, (5, 3): 1}, (6, 3): {-1: 0.0, (5, 4): 1}, (6, 4): {-1: 0.0}, (6, 5): {-1: 0.0}, (6, 6): {-1: 1.0, (1, 1): 1, (4, 3): 1, (4, 5): 1}, (6, 7): {-1: 0.0}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2.0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('relation match with', (3, 2), 1) ,
('relation match with', (6, 6), 1) ,
('node_pair', (2, 7)) ,
('instance/attribute match', 1.0) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1.0) ,
('relation match with', (5, 3), 1) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 1.0) ,
('relation match with', (6, 6), 1) ,
('node_pair', (5, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 6)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 12.0) ,
('Node mapping at start', [0, 1, 7, 2, 5, 3, 6]) ,
('Triple match number at start:', 12.0) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([4, 1, 7, 2, 5, 3, 6],) ,
('saved value', 9.0) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('saved value', 8.0) ,
('Remap node', 2, 'from ', 7, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('saved value', 11.0) ,
('Remap node', 3, 'from ', 2, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, 6],) ,
('saved value', 9.0) ,
('Remap node', 4, 'from ', 5, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 3, 6],) ,
('saved value', 10.0) ,
('Remap node', 5, 'from ', 3, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('saved value', 11.0) ,
('Remap node', 6, 'from ', 6, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 7, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 5, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([7, 1, 0, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 5, 3, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 7, 0, 5, 3, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 5, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 7, 2, 0, 3, 6],) ,
('Computing match for mapping',) ,
([5, 1, 7, 2, 0, 3, 6],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 7, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 5, 0, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 7, 2, 5, 3, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 5, 3, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 7, 1, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 5, 3, 6],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 7, 1, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 5, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -4.761594710193791) ,
([0, 5, 7, 2, 1, 3, 6],) ,
('Computing match for mapping',) ,
([0, 5, 7, 2, 1, 3, 6],) ,
('saved value', 7.238405289806209) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -4.742455544793287) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('saved value', 7.257544455206713) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 6, 7, 2, 5, 3, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 5, 3, 1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 7, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 3, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 2, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 7, 3, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 2, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 7, 6],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 1, 6, 2, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 3, 7],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 5, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 2, 3, 6],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, 6],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 5, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 3, 2],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 2, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 5, 6],) ,
('saved value', 11.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 2, 6, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, 3, 5],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 2, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 6, 3],) ,
('saved value', 8.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Current mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('node_pair', (0, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 5)) ,
('instance/attribute match', 0.6192026449031044) ,
('node_pair', (2, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 2)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.6192026449031044) ,
('Node mapping at start', [6, 5, 0, 4, 3, 7, 2]) ,
('Triple match number at start:', 0.6192026449031044) ,
('Remap node', 0, 'from ', 6, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 5, 0, 4, 3, 7, 2],) ,
('saved value', 0.6192026449031044) ,
('Remap node', 1, 'from ', 5, 'to', 1) ,
('Move gain:', 0.3807973550968956) ,
('Computing match for mapping',) ,
([6, 1, 0, 4, 3, 7, 2],) ,
('saved value', 1.0) ,
('Remap node', 2, 'from ', 0, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 5, 1, 4, 3, 7, 2],) ,
('saved value', 0.6192026449031044) ,
('Remap node', 3, 'from ', 4, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 5, 0, 1, 3, 7, 2],) ,
('saved value', 0.6192026449031044) ,
('Remap node', 4, 'from ', 3, 'to', 1) ,
('Move gain:', 0.6192026449031044) ,
('Computing match for mapping',) ,
([6, 5, 0, 4, 1, 7, 2],) ,
('saved value', 1.2384052898062088) ,
('Remap node', 5, 'from ', 7, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 5, 0, 4, 3, 1, 2],) ,
('saved value', 0.6192026449031044) ,
('Remap node', 6, 'from ', 2, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 5, 0, 4, 3, 7, 1],) ,
('saved value', 0.6192026449031044) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 6, ',', 1, '-', 5) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 6) ,
('Swap gain:', -0.6192026449031044) ,
([5, 6, 0, 4, 3, 7, 2],) ,
('Computing match for mapping',) ,
([5, 6, 0, 4, 3, 7, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 6, ',', 2, '-', 0) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 6) ,
('Swap gain:', 2.0) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('Computing match for mapping',) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('saved value', 2.6192026449031043) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 6, ',', 3, '-', 4) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 6) ,
('Swap gain:', 0.0) ,
([4, 5, 0, 6, 3, 7, 2],) ,
('Computing match for mapping',) ,
([4, 5, 0, 6, 3, 7, 2],) ,
('saved value', 0.6192026449031044) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 6, ',', 4, '-', 3) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 6) ,
('Swap gain:', 0.0) ,
([3, 5, 0, 4, 6, 7, 2],) ,
('Computing match for mapping',) ,
([3, 5, 0, 4, 6, 7, 2],) ,
('saved value', 0.6192026449031044) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 6, ',', 5, '-', 7) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([7, 5, 0, 4, 3, 6, 2],) ,
('Computing match for mapping',) ,
([7, 5, 0, 4, 3, 6, 2],) ,
('saved value', 0.6192026449031044) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 6, ',', 6, '-', 2) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 0, '-', 2, ',', 6, '-', 6) ,
('Swap gain:', 2.0) ,
([2, 5, 0, 4, 3, 7, 6],) ,
('Computing match for mapping',) ,
([2, 5, 0, 4, 3, 7, 6],) ,
('saved value', 2.6192026449031043) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 0) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 5) ,
('Swap gain:', -0.6192026449031044) ,
([6, 0, 5, 4, 3, 7, 2],) ,
('Computing match for mapping',) ,
([6, 0, 5, 4, 3, 7, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 4) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', -0.6192026449031044) ,
([6, 4, 0, 5, 3, 7, 2],) ,
('Computing match for mapping',) ,
([6, 4, 0, 5, 3, 7, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 3) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 5) ,
('Swap gain:', 1.6383418103036091) ,
([6, 3, 0, 4, 5, 7, 2],) ,
('Computing match for mapping',) ,
([6, 3, 0, 4, 5, 7, 2],) ,
('saved value', 2.2575444552067134) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 5, ',', 5, '-', 7) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -0.6192026449031044) ,
([6, 7, 0, 4, 3, 5, 2],) ,
('Computing match for mapping',) ,
([6, 7, 0, 4, 3, 5, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 5, ',', 6, '-', 2) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 1, '-', 2, ',', 6, '-', 5) ,
('Swap gain:', -0.6192026449031044) ,
([6, 2, 0, 4, 3, 7, 5],) ,
('Computing match for mapping',) ,
([6, 2, 0, 4, 3, 7, 5],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 4) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([6, 5, 4, 0, 3, 7, 2],) ,
('Computing match for mapping',) ,
([6, 5, 4, 0, 3, 7, 2],) ,
('saved value', 0.6192026449031044) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 3) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([6, 5, 3, 4, 0, 7, 2],) ,
('Computing match for mapping',) ,
([6, 5, 3, 4, 0, 7, 2],) ,
('saved value', 0.6192026449031044) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 7) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', 1.0) ,
([6, 5, 7, 4, 3, 0, 2],) ,
('Computing match for mapping',) ,
([6, 5, 7, 4, 3, 0, 2],) ,
('saved value', 1.6192026449031043) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 2) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 2, '-', 2, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([6, 5, 2, 4, 3, 7, 0],) ,
('Computing match for mapping',) ,
([6, 5, 2, 4, 3, 7, 0],) ,
('saved value', 0.6192026449031044) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([6, 5, 0, 3, 4, 7, 2],) ,
('Computing match for mapping',) ,
([6, 5, 0, 3, 4, 7, 2],) ,
('saved value', 1.6192026449031043) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 7) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([6, 5, 0, 7, 3, 4, 2],) ,
('Computing match for mapping',) ,
([6, 5, 0, 7, 3, 4, 2],) ,
('saved value', 0.6192026449031044) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 2) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 3, '-', 2, ',', 6, '-', 4) ,
('Swap gain:', 2.0) ,
([6, 5, 0, 2, 3, 7, 4],) ,
('Computing match for mapping',) ,
([6, 5, 0, 2, 3, 7, 4],) ,
('saved value', 2.6192026449031043) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 7) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', 1.0) ,
([6, 5, 0, 4, 7, 3, 2],) ,
('Computing match for mapping',) ,
([6, 5, 0, 4, 7, 3, 2],) ,
('saved value', 1.6192026449031043) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 2) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 4, '-', 2, ',', 6, '-', 3) ,
('Swap gain:', 0.0) ,
([6, 5, 0, 4, 2, 7, 3],) ,
('Computing match for mapping',) ,
([6, 5, 0, 4, 2, 7, 3],) ,
('saved value', 0.6192026449031044) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 2) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('After swapping:', 5, '-', 2, ',', 6, '-', 7) ,
('Swap gain:', 0.0) ,
([6, 5, 0, 4, 3, 2, 7],) ,
('Computing match for mapping',) ,
([6, 5, 0, 4, 3, 2, 7],) ,
('saved value', 0.6192026449031044) ,
('Use swap gain',) ,
('Original mapping', [6, 5, 0, 4, 3, 7, 2]) ,
('Current mapping', [0, 5, 6, 4, 3, 7, 2]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 2.6192026449031043) ,
('Current mapping:', [0, 5, 6, 4, 3, 7, 2]) ,
('Remap node', 0, 'from ', 0, 'to', 1) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 5, 6, 4, 3, 7, 2],) ,
('saved value', 0.6192026449031043) ,
('Remap node', 1, 'from ', 5, 'to', 1) ,
('Move gain:', 1.3807973550968957) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 3, 7, 2],) ,
('saved value', 4.0) ,
('Remap node', 2, 'from ', 6, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 3, 7, 2],) ,
('saved value', 2.6192026449031043) ,
('Remap node', 3, 'from ', 4, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 1, 3, 7, 2],) ,
('saved value', 2.6192026449031043) ,
('Remap node', 4, 'from ', 3, 'to', 1) ,
('Move gain:', 0.6192026449031044) ,
('Computing match for mapping',) ,
([0, 5, 6, 4, 1, 7, 2],) ,
('saved value', 3.2384052898062086) ,
('Remap node', 5, 'from ', 7, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 4, 3, 1, 2],) ,
('saved value', 2.6192026449031043) ,
('Remap node', 6, 'from ', 2, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 4, 3, 7, 1],) ,
('saved value', 2.6192026449031043) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 5) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 0) ,
('Swap gain:', -2.6192026449031043) ,
([5, 0, 6, 4, 3, 7, 2],) ,
('Computing match for mapping',) ,
([5, 0, 6, 4, 3, 7, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('Computing match for mapping',) ,
([6, 5, 0, 4, 3, 7, 2],) ,
('saved value', 0.6192026449031044) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 5, 6, 0, 3, 7, 2],) ,
('Computing match for mapping',) ,
([4, 5, 6, 0, 3, 7, 2],) ,
('saved value', 0.6192026449031043) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([3, 5, 6, 4, 0, 7, 2],) ,
('Computing match for mapping',) ,
([3, 5, 6, 4, 0, 7, 2],) ,
('saved value', 0.6192026449031043) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([7, 5, 6, 4, 3, 0, 2],) ,
('Computing match for mapping',) ,
([7, 5, 6, 4, 3, 0, 2],) ,
('saved value', 0.6192026449031043) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 2) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 0, '-', 2, ',', 6, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 5, 6, 4, 3, 7, 0],) ,
('Computing match for mapping',) ,
([2, 5, 6, 4, 3, 7, 0],) ,
('saved value', 0.6192026449031043) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 6) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 5) ,
('Swap gain:', -0.6192026449031044) ,
([0, 6, 5, 4, 3, 7, 2],) ,
('Computing match for mapping',) ,
([0, 6, 5, 4, 3, 7, 2],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 4) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', -0.6192026449031044) ,
([0, 4, 6, 5, 3, 7, 2],) ,
('Computing match for mapping',) ,
([0, 4, 6, 5, 3, 7, 2],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 3) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 5) ,
('Swap gain:', 1.6383418103036091) ,
([0, 3, 6, 4, 5, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 4, 5, 7, 2],) ,
('saved value', 4.257544455206713) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 5, ',', 5, '-', 7) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -0.6192026449031044) ,
([0, 7, 6, 4, 3, 5, 2],) ,
('Computing match for mapping',) ,
([0, 7, 6, 4, 3, 5, 2],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 5, ',', 6, '-', 2) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 1, '-', 2, ',', 6, '-', 5) ,
('Swap gain:', -0.6192026449031044) ,
([0, 2, 6, 4, 3, 7, 5],) ,
('Computing match for mapping',) ,
([0, 2, 6, 4, 3, 7, 5],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 4) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 5, 4, 6, 3, 7, 2],) ,
('Computing match for mapping',) ,
([0, 5, 4, 6, 3, 7, 2],) ,
('saved value', 2.6192026449031043) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 3) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 5, 3, 4, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 6, 7, 2],) ,
('saved value', 2.6192026449031043) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 7) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', 1.0) ,
([0, 5, 7, 4, 3, 6, 2],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 3, 6, 2],) ,
('saved value', 3.6192026449031043) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 2) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 2, '-', 2, ',', 6, '-', 6) ,
('Swap gain:', 2.0) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('saved value', 4.619202644903105) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 5, 6, 3, 4, 7, 2],) ,
('Computing match for mapping',) ,
([0, 5, 6, 3, 4, 7, 2],) ,
('saved value', 3.6192026449031043) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 7) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 5, 6, 7, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 3, 4, 2],) ,
('saved value', 2.6192026449031043) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 2) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 3, '-', 2, ',', 6, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 5, 6, 2, 3, 7, 4],) ,
('Computing match for mapping',) ,
([0, 5, 6, 2, 3, 7, 4],) ,
('saved value', 4.619202644903105) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 7) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', 1.0) ,
([0, 5, 6, 4, 7, 3, 2],) ,
('Computing match for mapping',) ,
([0, 5, 6, 4, 7, 3, 2],) ,
('saved value', 3.6192026449031043) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 2) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 4, '-', 2, ',', 6, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 5, 6, 4, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 5, 6, 4, 2, 7, 3],) ,
('saved value', 2.6192026449031043) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 2) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('After swapping:', 5, '-', 2, ',', 6, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 5, 6, 4, 3, 2, 7],) ,
('Computing match for mapping',) ,
([0, 5, 6, 4, 3, 2, 7],) ,
('saved value', 2.6192026449031043) ,
('Use swap gain',) ,
('Original mapping', [0, 5, 6, 4, 3, 7, 2]) ,
('Current mapping', [0, 5, 2, 4, 3, 7, 6]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 4.619202644903105) ,
('Current mapping:', [0, 5, 2, 4, 3, 7, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 1) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 5, 2, 4, 3, 7, 6],) ,
('saved value', 2.6192026449031047) ,
('Remap node', 1, 'from ', 5, 'to', 1) ,
('Move gain:', 3.3807973550968957) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('saved value', 8.0) ,
('Remap node', 2, 'from ', 2, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 3, 7, 6],) ,
('saved value', 4.619202644903105) ,
('Remap node', 3, 'from ', 4, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 2, 1, 3, 7, 6],) ,
('saved value', 4.619202644903105) ,
('Remap node', 4, 'from ', 3, 'to', 1) ,
('Move gain:', -0.3807973550968956) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 7, 6],) ,
('saved value', 4.2384052898062095) ,
('Remap node', 5, 'from ', 7, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 3, 1, 6],) ,
('saved value', 4.619202644903105) ,
('Remap node', 6, 'from ', 6, 'to', 1) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 3, 7, 1],) ,
('saved value', 2.6192026449031047) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 5) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 0) ,
('Swap gain:', -2.6192026449031043) ,
([5, 0, 2, 4, 3, 7, 6],) ,
('Computing match for mapping',) ,
([5, 0, 2, 4, 3, 7, 6],) ,
('saved value', 2.0000000000000004) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -2.0000000000000004) ,
([2, 5, 0, 4, 3, 7, 6],) ,
('Computing match for mapping',) ,
([2, 5, 0, 4, 3, 7, 6],) ,
('saved value', 2.6192026449031043) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 5, 2, 0, 3, 7, 6],) ,
('Computing match for mapping',) ,
([4, 5, 2, 0, 3, 7, 6],) ,
('saved value', 2.6192026449031047) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 5, 2, 4, 0, 7, 6],) ,
('Computing match for mapping',) ,
([3, 5, 2, 4, 0, 7, 6],) ,
('saved value', 1.6192026449031047) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([7, 5, 2, 4, 3, 0, 6],) ,
('Computing match for mapping',) ,
([7, 5, 2, 4, 3, 0, 6],) ,
('saved value', 2.6192026449031047) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -4.0) ,
([6, 5, 2, 4, 3, 7, 0],) ,
('Computing match for mapping',) ,
([6, 5, 2, 4, 3, 7, 0],) ,
('saved value', 0.6192026449031044) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 2) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 5) ,
('Swap gain:', -0.6192026449031044) ,
([0, 2, 5, 4, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 3, 7, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 4) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', -0.6192026449031044) ,
([0, 4, 2, 5, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 5, 3, 7, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 3) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 5) ,
('Swap gain:', 0.6383418103036091) ,
([0, 3, 2, 4, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 7, 6],) ,
('saved value', 5.257544455206714) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 5, ',', 5, '-', 7) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -0.6192026449031044) ,
([0, 7, 2, 4, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 3, 5, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 5, ',', 6, '-', 6) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -2.6192026449031043) ,
([0, 6, 2, 4, 3, 7, 5],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 3, 7, 5],) ,
('saved value', 2.0000000000000004) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', 2.0) ,
([0, 5, 4, 2, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 5, 4, 2, 3, 7, 6],) ,
('saved value', 6.619202644903105) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 5, 3, 4, 2, 7, 6],) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 2, 7, 6],) ,
('saved value', 3.6192026449031047) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 7) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 5, 7, 4, 3, 2, 6],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 3, 2, 6],) ,
('saved value', 5.619202644903105) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -2.0000000000000004) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('Computing match for mapping',) ,
([0, 5, 6, 4, 3, 7, 2],) ,
('saved value', 2.6192026449031043) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 5, 2, 3, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 7, 6],) ,
('saved value', 4.619202644903105) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 7) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 5, 2, 7, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 7, 3, 4, 6],) ,
('saved value', 4.619202644903105) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 6) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 5, 2, 6, 3, 7, 4],) ,
('Computing match for mapping',) ,
([0, 5, 2, 6, 3, 7, 4],) ,
('saved value', 2.6192026449031047) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 7) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 5, 2, 4, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 7, 3, 6],) ,
('saved value', 3.6192026449031047) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 6) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 5, 2, 4, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 6, 7, 3],) ,
('saved value', 2.6192026449031047) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 6) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 5, 2, 4, 3, 6, 7],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 3, 6, 7],) ,
('saved value', 2.6192026449031047) ,
('Use move gain',) ,
('Original mapping', [0, 5, 2, 4, 3, 7, 6]) ,
('Current mapping', [0, 1, 2, 4, 3, 7, 6]) ,
('Gain after the hill-climbing', 3.3807973550968957) ,
('Update triple match number to:', 8.0) ,
('Current mapping:', [0, 1, 2, 4, 3, 7, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 3, 7, 6],) ,
('saved value', 5.0) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -3.3807973550968953) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 3, 7, 6],) ,
('saved value', 4.619202644903105) ,
('Remap node', 2, 'from ', 2, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 3, 7, 6],) ,
('saved value', 7.0) ,
('Remap node', 3, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 7, 6],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 3, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6],) ,
('saved value', 9.0) ,
('Remap node', 5, 'from ', 7, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('saved value', 8.0) ,
('Remap node', 6, 'from ', 6, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 7, 5],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 4, 3, 7, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 3, 7, 6],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 0, 4, 3, 7, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 3, 7, 6],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 2, 0, 3, 7, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3, 7, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 2, 4, 0, 7, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0, 7, 6],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 1, 2, 4, 3, 0, 6],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 3, 0, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 2, 4, 3, 7, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 3, 7, 0],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 1, 4, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 3, 7, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 2, 1, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3, 7, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -4.123252899890182) ,
([0, 3, 2, 4, 1, 7, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 7, 6],) ,
('saved value', 3.876747100109818) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 7) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 2, 4, 3, 1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 3, 1, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 6, 2, 4, 3, 7, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 3, 7, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', 2.0) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 4, 2, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, 7, 6],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 7) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 1, 7, 4, 3, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 2, 6],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 6, 4, 3, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 3, 7, 2],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 7) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 1, 2, 7, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 3, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 6, 3, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 3, 7, 4],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 7) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 4, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 3, 6],) ,
('saved value', 7.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 4, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 7, 3],) ,
('saved value', 5.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 6) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 4, 3, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6, 7],) ,
('saved value', 5.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, 3, 7, 6]) ,
('Current mapping', [0, 1, 4, 2, 3, 7, 6]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 10.0) ,
('Current mapping:', [0, 1, 4, 2, 3, 7, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 1, 4, 2, 3, 7, 6],) ,
('saved value', 7.0) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -3.3807973550968953) ,
('Computing match for mapping',) ,
([0, 5, 4, 2, 3, 7, 6],) ,
('saved value', 6.619202644903105) ,
('Remap node', 2, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 3, 7, 6],) ,
('saved value', 10.0) ,
('Remap node', 3, 'from ', 2, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 3, 7, 6],) ,
('saved value', 7.0) ,
('Remap node', 4, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 7, 6],) ,
('saved value', 10.0) ,
('Remap node', 5, 'from ', 7, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, 5, 6],) ,
('saved value', 10.0) ,
('Remap node', 6, 'from ', 6, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, 7, 5],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 4, 2, 3, 7, 6],) ,
('Computing match for mapping',) ,
([1, 0, 4, 2, 3, 7, 6],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 0, 2, 3, 7, 6],) ,
('Computing match for mapping',) ,
([4, 1, 0, 2, 3, 7, 6],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 4, 0, 3, 7, 6],) ,
('Computing match for mapping',) ,
([2, 1, 4, 0, 3, 7, 6],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 4, 2, 0, 7, 6],) ,
('Computing match for mapping',) ,
([3, 1, 4, 2, 0, 7, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 1, 4, 2, 3, 0, 6],) ,
('Computing match for mapping',) ,
([7, 1, 4, 2, 3, 0, 6],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 4, 2, 3, 7, 0],) ,
('Computing match for mapping',) ,
([6, 1, 4, 2, 3, 7, 0],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 1, 2, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 3, 7, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 4, 1, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 3, 7, 6],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -5.123252899890182) ,
([0, 3, 4, 2, 1, 7, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 1, 7, 6],) ,
('saved value', 4.876747100109818) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 7) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 4, 2, 3, 1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 4, 2, 3, 1, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 6, 4, 2, 3, 7, 1],) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 3, 7, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 2) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 3) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 2, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 7, 6],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('saved value', 11.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 6) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 6, 2, 3, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 3, 7, 4],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 3) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 7, 6],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 7) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 7, 3, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 3, 2, 6],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 4, 6, 3, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 3, 7, 2],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 7) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('saved value', 9.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 6) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 2, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 7, 3],) ,
('saved value', 6.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 6) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 2, 3, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, 6, 7],) ,
('saved value', 7.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 4, 2, 3, 7, 6]) ,
('Current mapping', [0, 1, 7, 2, 3, 4, 6]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 11.0) ,
('Current mapping:', [0, 1, 7, 2, 3, 4, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 1, 7, 2, 3, 4, 6],) ,
('saved value', 8.0) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -3.3807973550968957) ,
('Computing match for mapping',) ,
([0, 5, 7, 2, 3, 4, 6],) ,
('saved value', 7.619202644903105) ,
('Remap node', 2, 'from ', 7, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 3, 4, 6],) ,
('saved value', 10.0) ,
('Remap node', 3, 'from ', 2, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 3, 4, 6],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('saved value', 11.0) ,
('Remap node', 5, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 5, 6],) ,
('saved value', 11.0) ,
('Remap node', 6, 'from ', 6, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 4, 5],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 7, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 3, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([7, 1, 0, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 3, 4, 6],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 7, 0, 3, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 3, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 7, 2, 0, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 0, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 7, 2, 3, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 7, 2, 3, 0, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 7, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 3, 4, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 7, 1, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 3, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 7, 1, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 3, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -5.123252899890182) ,
([0, 3, 7, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 1, 4, 6],) ,
('saved value', 5.876747100109818) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 7, 2, 3, 1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 3, 1, 6],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 6, 7, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 3, 4, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 7, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 3, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 2, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 7, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 4) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 7) ,
('Swap gain:', -1.0) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 1, 6, 2, 3, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 3, 4, 7],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 4) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 4, 3, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 2, 6],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 6, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 3, 4, 2],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 4) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 2, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 3, 6],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 2, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, 4, 3],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 4, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('saved value', 8.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 2, 3, 4, 6]) ,
('Current mapping', [0, 1, 7, 2, 3, 4, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('node_pair', (0, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 0.25754445520671365) ,
('node_pair', (2, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1.0) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 1.0) ,
('node_pair', (5, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 4)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 2.2575444552067134) ,
('Node mapping at start', [7, 3, 0, 2, 5, 1, 4]) ,
('Triple match number at start:', 2.2575444552067134) ,
('Remap node', 0, 'from ', 7, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 3, 0, 2, 5, 1, 4],) ,
('saved value', 2.2575444552067134) ,
('Remap node', 1, 'from ', 3, 'to', 6) ,
('Move gain:', -0.25754445520671365) ,
('Computing match for mapping',) ,
([7, 6, 0, 2, 5, 1, 4],) ,
('saved value', 1.9999999999999998) ,
('Remap node', 2, 'from ', 0, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 3, 6, 2, 5, 1, 4],) ,
('saved value', 2.2575444552067134) ,
('Remap node', 3, 'from ', 2, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 3, 0, 6, 5, 1, 4],) ,
('saved value', 1.2575444552067134) ,
('Remap node', 4, 'from ', 5, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 3, 0, 2, 6, 1, 4],) ,
('saved value', 1.2575444552067134) ,
('Remap node', 5, 'from ', 1, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 3, 0, 2, 5, 6, 4],) ,
('saved value', 2.2575444552067134) ,
('Remap node', 6, 'from ', 4, 'to', 6) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([7, 3, 0, 2, 5, 1, 6],) ,
('saved value', 4.257544455206713) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 3) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 7) ,
('Swap gain:', -0.25754445520671365) ,
([3, 7, 0, 2, 5, 1, 4],) ,
('Computing match for mapping',) ,
([3, 7, 0, 2, 5, 1, 4],) ,
('saved value', 1.9999999999999998) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 0) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 7) ,
('Swap gain:', 3.0) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('saved value', 5.257544455206713) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 2) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', 0.0) ,
([2, 3, 0, 7, 5, 1, 4],) ,
('Computing match for mapping',) ,
([2, 3, 0, 7, 5, 1, 4],) ,
('saved value', 2.2575444552067134) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 5) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -1.0) ,
([5, 3, 0, 2, 7, 1, 4],) ,
('Computing match for mapping',) ,
([5, 3, 0, 2, 7, 1, 4],) ,
('saved value', 1.2575444552067134) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 1) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 7) ,
('Swap gain:', 0.0) ,
([1, 3, 0, 2, 5, 7, 4],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2, 5, 7, 4],) ,
('saved value', 2.2575444552067134) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', 4) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', 0.0) ,
([4, 3, 0, 2, 5, 1, 7],) ,
('Computing match for mapping',) ,
([4, 3, 0, 2, 5, 1, 7],) ,
('saved value', 2.2575444552067134) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 0) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 3) ,
('Swap gain:', -0.25754445520671365) ,
([7, 0, 3, 2, 5, 1, 4],) ,
('Computing match for mapping',) ,
([7, 0, 3, 2, 5, 1, 4],) ,
('saved value', 1.9999999999999998) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -1.2575444552067137) ,
([7, 2, 0, 3, 5, 1, 4],) ,
('Computing match for mapping',) ,
([7, 2, 0, 3, 5, 1, 4],) ,
('saved value', 0.9999999999999998) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 5) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', 0.36165818969639063) ,
([7, 5, 0, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([7, 5, 0, 2, 3, 1, 4],) ,
('saved value', 2.619202644903104) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 1) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 3) ,
('Swap gain:', 2.7424555447932866) ,
([7, 1, 0, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 5, 3, 4],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 4) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -0.25754445520671365) ,
([7, 4, 0, 2, 5, 1, 3],) ,
('Computing match for mapping',) ,
([7, 4, 0, 2, 5, 1, 3],) ,
('saved value', 1.9999999999999998) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 2) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([7, 3, 2, 0, 5, 1, 4],) ,
('Computing match for mapping',) ,
([7, 3, 2, 0, 5, 1, 4],) ,
('saved value', 2.2575444552067134) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 5) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([7, 3, 5, 2, 0, 1, 4],) ,
('Computing match for mapping',) ,
([7, 3, 5, 2, 0, 1, 4],) ,
('saved value', 1.2575444552067134) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 1) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([7, 3, 1, 2, 5, 0, 4],) ,
('Computing match for mapping',) ,
([7, 3, 1, 2, 5, 0, 4],) ,
('saved value', 2.2575444552067134) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 4) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', 1.0) ,
([7, 3, 4, 2, 5, 1, 0],) ,
('Computing match for mapping',) ,
([7, 3, 4, 2, 5, 1, 0],) ,
('saved value', 3.2575444552067134) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 5) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([7, 3, 0, 5, 2, 1, 4],) ,
('Computing match for mapping',) ,
([7, 3, 0, 5, 2, 1, 4],) ,
('saved value', 0.25754445520671343) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 1) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([7, 3, 0, 1, 5, 2, 4],) ,
('Computing match for mapping',) ,
([7, 3, 0, 1, 5, 2, 4],) ,
('saved value', 1.2575444552067134) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 4) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', 0.0) ,
([7, 3, 0, 4, 5, 1, 2],) ,
('Computing match for mapping',) ,
([7, 3, 0, 4, 5, 1, 2],) ,
('saved value', 2.2575444552067134) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 1) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 5) ,
('Swap gain:', -0.3807973550968956) ,
([7, 3, 0, 2, 1, 5, 4],) ,
('Computing match for mapping',) ,
([7, 3, 0, 2, 1, 5, 4],) ,
('saved value', 1.8767471001098177) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 4) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 5) ,
('Swap gain:', -1.0) ,
([7, 3, 0, 2, 4, 1, 5],) ,
('Computing match for mapping',) ,
([7, 3, 0, 2, 4, 1, 5],) ,
('saved value', 1.2575444552067134) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 1, ',', 6, '-', 4) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', 0.0) ,
([7, 3, 0, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([7, 3, 0, 2, 5, 4, 1],) ,
('saved value', 2.2575444552067134) ,
('Use swap gain',) ,
('Original mapping', [7, 3, 0, 2, 5, 1, 4]) ,
('Current mapping', [0, 3, 7, 2, 5, 1, 4]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 5.257544455206713) ,
('Current mapping:', [0, 3, 7, 2, 5, 1, 4]) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([6, 3, 7, 2, 5, 1, 4],) ,
('saved value', 3.2575444552067134) ,
('Remap node', 1, 'from ', 3, 'to', 6) ,
('Move gain:', -0.25754445520671365) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 5, 1, 4],) ,
('saved value', 5.0) ,
('Remap node', 2, 'from ', 7, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 5, 1, 4],) ,
('saved value', 4.257544455206713) ,
('Remap node', 3, 'from ', 2, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 3, 7, 6, 5, 1, 4],) ,
('saved value', 4.257544455206713) ,
('Remap node', 4, 'from ', 5, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 6, 1, 4],) ,
('saved value', 4.257544455206713) ,
('Remap node', 5, 'from ', 1, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 6, 4],) ,
('saved value', 5.257544455206713) ,
('Remap node', 6, 'from ', 4, 'to', 6) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('saved value', 7.257544455206713) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -2.2575444552067134) ,
([3, 0, 7, 2, 5, 1, 4],) ,
('Computing match for mapping',) ,
([3, 0, 7, 2, 5, 1, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('Computing match for mapping',) ,
([7, 3, 0, 2, 5, 1, 4],) ,
('saved value', 2.2575444552067134) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 3, 7, 0, 5, 1, 4],) ,
('Computing match for mapping',) ,
([2, 3, 7, 0, 5, 1, 4],) ,
('saved value', 4.257544455206713) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 3, 7, 2, 0, 1, 4],) ,
('Computing match for mapping',) ,
([5, 3, 7, 2, 0, 1, 4],) ,
('saved value', 2.2575444552067134) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 1) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 7, 2, 5, 0, 4],) ,
('Computing match for mapping',) ,
([1, 3, 7, 2, 5, 0, 4],) ,
('saved value', 3.2575444552067134) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -1.0) ,
([4, 3, 7, 2, 5, 1, 0],) ,
('Computing match for mapping',) ,
([4, 3, 7, 2, 5, 1, 0],) ,
('saved value', 4.257544455206713) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 7) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 3) ,
('Swap gain:', -1.2575444552067137) ,
([0, 7, 3, 2, 5, 1, 4],) ,
('Computing match for mapping',) ,
([0, 7, 3, 2, 5, 1, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -1.2575444552067137) ,
([0, 2, 7, 3, 5, 1, 4],) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, 5, 1, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 5) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', 0.36165818969639063) ,
([0, 5, 7, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 5, 7, 2, 3, 1, 4],) ,
('saved value', 5.619202644903104) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 1) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 3) ,
('Swap gain:', 3.7424555447932866) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 4) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -0.25754445520671365) ,
([0, 4, 7, 2, 5, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 5, 1, 3],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 3, 2, 7, 5, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 5, 1, 4],) ,
('saved value', 3.2575444552067134) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 3, 5, 2, 7, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 7, 1, 4],) ,
('saved value', 3.2575444552067134) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 1) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 7) ,
('Swap gain:', -1.0) ,
([0, 3, 1, 2, 5, 7, 4],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 5, 7, 4],) ,
('saved value', 4.257544455206713) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 4) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', -1.0) ,
([0, 3, 4, 2, 5, 1, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 5, 1, 7],) ,
('saved value', 4.257544455206713) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 5) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 3, 7, 5, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 7, 5, 2, 1, 4],) ,
('saved value', 3.2575444552067134) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 1) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 3, 7, 1, 5, 2, 4],) ,
('Computing match for mapping',) ,
([0, 3, 7, 1, 5, 2, 4],) ,
('saved value', 4.257544455206713) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 4) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 3, 7, 4, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 5, 1, 2],) ,
('saved value', 5.257544455206713) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 1) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 5) ,
('Swap gain:', -0.3807973550968956) ,
([0, 3, 7, 2, 1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 1, 5, 4],) ,
('saved value', 4.876747100109818) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 4) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 5) ,
('Swap gain:', -1.0) ,
([0, 3, 7, 2, 4, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 4, 1, 5],) ,
('saved value', 4.257544455206713) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 1, ',', 6, '-', 4) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 3, 7, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 4, 1],) ,
('saved value', 5.257544455206713) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 7, 2, 5, 1, 4]) ,
('Current mapping', [0, 1, 7, 2, 5, 3, 4]) ,
('Gain after the hill-climbing', 3.7424555447932866) ,
('Update triple match number to:', 9.0) ,
('Current mapping:', [0, 1, 7, 2, 5, 3, 4]) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 5, 3, 4],) ,
('saved value', 6.0) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 5, 3, 4],) ,
('saved value', 6.0) ,
('Remap node', 2, 'from ', 7, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('saved value', 8.0) ,
('Remap node', 3, 'from ', 2, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 3, 4],) ,
('saved value', 6.0) ,
('Remap node', 4, 'from ', 5, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, 3, 4],) ,
('saved value', 8.0) ,
('Remap node', 5, 'from ', 3, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 6, 4],) ,
('saved value', 8.0) ,
('Remap node', 6, 'from ', 4, 'to', 6) ,
('Move gain:', 3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('saved value', 12.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 7, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 5, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([7, 1, 0, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 5, 3, 4],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 7, 0, 5, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 5, 3, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 7, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([5, 1, 7, 2, 0, 3, 4],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 7, 2, 5, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 5, 0, 4],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 7, 2, 5, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 7, 2, 5, 3, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 1, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 5, 3, 4],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 2, 7, 1, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 5, 3, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2.7615947101937914) ,
([0, 5, 7, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 5, 7, 2, 1, 3, 4],) ,
('saved value', 6.238405289806209) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -3.7424555447932866) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 1, 4],) ,
('saved value', 5.257544455206713) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 4, 7, 2, 5, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 5, 3, 1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 7, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 2, 7, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 7, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 2, 5, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 7, 4],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 4) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', -1.0) ,
([0, 1, 4, 2, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 3, 7],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 5, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 2, 3, 4],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 3, 5, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, 4],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 4) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 4, 5, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, 2],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 5, 4],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 4) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 5) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 3, 5],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 1, 7, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 3],) ,
('saved value', 9.0) ,
('Use move gain',) ,
('Original mapping', [0, 1, 7, 2, 5, 3, 4]) ,
('Current mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 12.0) ,
('Current mapping:', [0, 1, 7, 2, 5, 3, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([4, 1, 7, 2, 5, 3, 6],) ,
('saved value', 9.0) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('saved value', 8.0) ,
('Remap node', 2, 'from ', 7, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('saved value', 11.0) ,
('Remap node', 3, 'from ', 2, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, 6],) ,
('saved value', 9.0) ,
('Remap node', 4, 'from ', 5, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 3, 6],) ,
('saved value', 10.0) ,
('Remap node', 5, 'from ', 3, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('saved value', 11.0) ,
('Remap node', 6, 'from ', 6, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 7, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 5, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([7, 1, 0, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 5, 3, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 7, 0, 5, 3, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 5, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 7, 2, 0, 3, 6],) ,
('Computing match for mapping',) ,
([5, 1, 7, 2, 0, 3, 6],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 7, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 5, 0, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 7, 2, 5, 3, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 5, 3, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 7, 1, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 5, 3, 6],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 7, 1, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 5, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -4.761594710193791) ,
([0, 5, 7, 2, 1, 3, 6],) ,
('Computing match for mapping',) ,
([0, 5, 7, 2, 1, 3, 6],) ,
('saved value', 7.238405289806209) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -4.742455544793287) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('saved value', 7.257544455206713) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 6, 7, 2, 5, 3, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 5, 3, 1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 7, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 3, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 2, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 7, 3, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 2, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 7, 6],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 1, 6, 2, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 3, 7],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 5, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 2, 3, 6],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, 6],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 5, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 3, 2],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 2, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 5, 6],) ,
('saved value', 11.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 2, 6, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, 3, 5],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 2, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 6, 3],) ,
('saved value', 8.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Current mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2.0) ,
('node_pair', (1, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1.0) ,
('node_pair', (4, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 3)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 3.0) ,
('Node mapping at start', [0, 6, 4, 2, 7, 1, 3]) ,
('Triple match number at start:', 3.0) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 6, 4, 2, 7, 1, 3],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 6, 'to', 5) ,
('Move gain:', 0.6192026449031044) ,
('Computing match for mapping',) ,
([0, 5, 4, 2, 7, 1, 3],) ,
('saved value', 3.6192026449031043) ,
('Remap node', 2, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 5, 2, 7, 1, 3],) ,
('saved value', 3.0) ,
('Remap node', 3, 'from ', 2, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 6, 4, 5, 7, 1, 3],) ,
('saved value', 2.0) ,
('Remap node', 4, 'from ', 7, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 5, 1, 3],) ,
('saved value', 4.0) ,
('Remap node', 5, 'from ', 1, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 7, 5, 3],) ,
('saved value', 3.0) ,
('Remap node', 6, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 7, 1, 5],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 6) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([6, 0, 4, 2, 7, 1, 3],) ,
('Computing match for mapping',) ,
([6, 0, 4, 2, 7, 1, 3],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 6, 0, 2, 7, 1, 3],) ,
('Computing match for mapping',) ,
([4, 6, 0, 2, 7, 1, 3],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 6, 4, 0, 7, 1, 3],) ,
('Computing match for mapping',) ,
([2, 6, 4, 0, 7, 1, 3],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 7) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 0, '-', 7, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([7, 6, 4, 2, 0, 1, 3],) ,
('Computing match for mapping',) ,
([7, 6, 4, 2, 0, 1, 3],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 1) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 6, 4, 2, 7, 0, 3],) ,
('Computing match for mapping',) ,
([1, 6, 4, 2, 7, 0, 3],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 3) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 0, '-', 3, ',', 6, '-', 0) ,
('Swap gain:', -1.0) ,
([3, 6, 4, 2, 7, 1, 0],) ,
('Computing match for mapping',) ,
([3, 6, 4, 2, 7, 1, 0],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 4) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 4, 6, 2, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 6, 2, 7, 1, 3],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 2) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 6) ,
('Swap gain:', -1.0) ,
([0, 2, 4, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 6, 7, 1, 3],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 7) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 1, '-', 7, ',', 4, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 7, 4, 2, 6, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 4, 2, 6, 1, 3],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', 1) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 6) ,
('Swap gain:', 3.0) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 3) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 1, '-', 3, ',', 6, '-', 6) ,
('Swap gain:', 1.2575444552067137) ,
([0, 3, 4, 2, 7, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 7, 1, 6],) ,
('saved value', 4.257544455206713) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 2) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 6, 2, 4, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 7, 1, 3],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 7) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 2, '-', 7, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 6, 7, 2, 4, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 4, 1, 3],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 1) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 6, 1, 2, 7, 4, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 2, 7, 4, 3],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 3) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 2, '-', 3, ',', 6, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 6, 3, 2, 7, 1, 4],) ,
('Computing match for mapping',) ,
([0, 6, 3, 2, 7, 1, 4],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 7) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 3, '-', 7, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 6, 4, 7, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 4, 7, 2, 1, 3],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 1) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 6, 4, 1, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 7, 2, 3],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 3) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 3, '-', 3, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 6, 4, 3, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 4, 3, 7, 1, 2],) ,
('saved value', 2.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 7, ',', 5, '-', 1) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 7) ,
('Swap gain:', 0.6192026449031044) ,
([0, 6, 4, 2, 1, 7, 3],) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 1, 7, 3],) ,
('saved value', 3.6192026449031043) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 7, ',', 6, '-', 3) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 4, '-', 3, ',', 6, '-', 7) ,
('Swap gain:', 1.0) ,
([0, 6, 4, 2, 3, 1, 7],) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 3, 1, 7],) ,
('saved value', 4.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 1, ',', 6, '-', 3) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('After swapping:', 5, '-', 3, ',', 6, '-', 1) ,
('Swap gain:', 1.0) ,
([0, 6, 4, 2, 7, 3, 1],) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 7, 3, 1],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 6, 4, 2, 7, 1, 3]) ,
('Current mapping', [0, 1, 4, 2, 7, 6, 3]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 1, 4, 2, 7, 6, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 1, 4, 2, 7, 6, 3],) ,
('saved value', 3.0) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -2.3807973550968957) ,
('Computing match for mapping',) ,
([0, 5, 4, 2, 7, 6, 3],) ,
('saved value', 3.6192026449031043) ,
('Remap node', 2, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 7, 6, 3],) ,
('saved value', 6.0) ,
('Remap node', 3, 'from ', 2, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 7, 6, 3],) ,
('saved value', 4.0) ,
('Remap node', 4, 'from ', 7, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 6, 3],) ,
('saved value', 7.0) ,
('Remap node', 5, 'from ', 6, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 7, 5, 3],) ,
('saved value', 6.0) ,
('Remap node', 6, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 7, 6, 5],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 4, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([1, 0, 4, 2, 7, 6, 3],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 0, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([4, 1, 0, 2, 7, 6, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 4, 0, 7, 6, 3],) ,
('Computing match for mapping',) ,
([2, 1, 4, 0, 7, 6, 3],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 7) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 0, '-', 7, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 1, 4, 2, 0, 6, 3],) ,
('Computing match for mapping',) ,
([7, 1, 4, 2, 0, 6, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 4, 2, 7, 0, 3],) ,
('Computing match for mapping',) ,
([6, 1, 4, 2, 7, 0, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 3) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 0, '-', 3, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 4, 2, 7, 6, 0],) ,
('Computing match for mapping',) ,
([3, 1, 4, 2, 7, 6, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 4, 1, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 7, 6, 3],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 4, 1, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 7, 6, 3],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 7) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 1, '-', 7, ',', 4, '-', 1) ,
('Swap gain:', -2.3807973550968957) ,
([0, 7, 4, 2, 1, 6, 3],) ,
('Computing match for mapping',) ,
([0, 7, 4, 2, 1, 6, 3],) ,
('saved value', 3.6192026449031043) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 7, 1, 3],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 3) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 1, '-', 3, ',', 6, '-', 1) ,
('Swap gain:', -2.7424555447932866) ,
([0, 3, 4, 2, 7, 6, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 7, 6, 1],) ,
('saved value', 3.2575444552067134) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 2) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 6, 3],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 7) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 2, '-', 7, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 7, 2, 4, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 6, 3],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 6) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 6, 2, 7, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 7, 4, 3],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 3) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 2, '-', 3, ',', 6, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 7) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 3, '-', 7, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 7, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 2, 6, 3],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 6) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 6, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 7, 2, 3],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 3) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 3, '-', 3, ',', 6, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 3, 7, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 7, 6, 2],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 7, ',', 5, '-', 6) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 1, 4, 2, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 7, 3],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 7, ',', 6, '-', 3) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 4, '-', 3, ',', 6, '-', 7) ,
('Swap gain:', 1.0) ,
([0, 1, 4, 2, 3, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, 6, 7],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 3) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('After swapping:', 5, '-', 3, ',', 6, '-', 6) ,
('Swap gain:', 3.0) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('saved value', 9.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 4, 2, 7, 6, 3]) ,
('Current mapping', [0, 1, 4, 2, 7, 3, 6]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 9.0) ,
('Current mapping:', [0, 1, 4, 2, 7, 3, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 1, 4, 2, 7, 3, 6],) ,
('saved value', 6.0) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -3.3807973550968957) ,
('Computing match for mapping',) ,
([0, 5, 4, 2, 7, 3, 6],) ,
('saved value', 5.619202644903105) ,
('Remap node', 2, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 7, 3, 6],) ,
('saved value', 9.0) ,
('Remap node', 3, 'from ', 2, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 7, 3, 6],) ,
('saved value', 6.0) ,
('Remap node', 4, 'from ', 7, 'to', 5) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('saved value', 11.0) ,
('Remap node', 5, 'from ', 3, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 7, 5, 6],) ,
('saved value', 8.0) ,
('Remap node', 6, 'from ', 6, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 7, 3, 5],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 4, 2, 7, 3, 6],) ,
('Computing match for mapping',) ,
([1, 0, 4, 2, 7, 3, 6],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 0, 2, 7, 3, 6],) ,
('Computing match for mapping',) ,
([4, 1, 0, 2, 7, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 4, 0, 7, 3, 6],) ,
('Computing match for mapping',) ,
([2, 1, 4, 0, 7, 3, 6],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 7) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 0, '-', 7, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 1, 4, 2, 0, 3, 6],) ,
('Computing match for mapping',) ,
([7, 1, 4, 2, 0, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 4, 2, 7, 0, 6],) ,
('Computing match for mapping',) ,
([3, 1, 4, 2, 7, 0, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 1, 4, 2, 7, 3, 0],) ,
('Computing match for mapping',) ,
([6, 1, 4, 2, 7, 3, 0],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 1, 2, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 7, 3, 6],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 4, 1, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 7, 3, 6],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 7) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 1, '-', 7, ',', 4, '-', 1) ,
('Swap gain:', -3.3807973550968957) ,
([0, 7, 4, 2, 1, 3, 6],) ,
('Computing match for mapping',) ,
([0, 7, 4, 2, 1, 3, 6],) ,
('saved value', 5.619202644903105) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -4.742455544793287) ,
([0, 3, 4, 2, 7, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 7, 1, 6],) ,
('saved value', 4.257544455206713) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 6, 4, 2, 7, 3, 1],) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 7, 3, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 2) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 3, 6],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 7) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 2, '-', 7, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 7, 2, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 3, 6],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 3) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 3, 2, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 7, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 6) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 6, 2, 7, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 7, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 7) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 3, '-', 7, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 7, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 2, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 3, 7, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 7, 2, 6],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 6, 7, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 7, 3, 2],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 7, ',', 5, '-', 3) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', 1.0) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 7, ',', 6, '-', 6) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 2, 6, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 3, 7],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('saved value', 6.0) ,
('Use move gain',) ,
('Original mapping', [0, 1, 4, 2, 7, 3, 6]) ,
('Current mapping', [0, 1, 4, 2, 5, 3, 6]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 11.0) ,
('Current mapping:', [0, 1, 4, 2, 5, 3, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([7, 1, 4, 2, 5, 3, 6],) ,
('saved value', 8.0) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 7, 4, 2, 5, 3, 6],) ,
('saved value', 7.0) ,
('Remap node', 2, 'from ', 4, 'to', 7) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('saved value', 12.0) ,
('Remap node', 3, 'from ', 2, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 3, 6],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 5, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 7, 3, 6],) ,
('saved value', 9.0) ,
('Remap node', 5, 'from ', 3, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 7, 6],) ,
('saved value', 10.0) ,
('Remap node', 6, 'from ', 6, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 3, 7],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 4, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 0, 4, 2, 5, 3, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 0, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([4, 1, 0, 2, 5, 3, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 4, 0, 5, 3, 6],) ,
('Computing match for mapping',) ,
([2, 1, 4, 0, 5, 3, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 4, 2, 0, 3, 6],) ,
('Computing match for mapping',) ,
([5, 1, 4, 2, 0, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 4, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([3, 1, 4, 2, 5, 0, 6],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 4, 2, 5, 3, 0],) ,
('Computing match for mapping',) ,
([6, 1, 4, 2, 5, 3, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 1, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 5, 3, 6],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 4, 1, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 5, 3, 6],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -4.761594710193791) ,
([0, 5, 4, 2, 1, 3, 6],) ,
('Computing match for mapping',) ,
([0, 5, 4, 2, 1, 3, 6],) ,
('saved value', 6.238405289806209) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -4.742455544793287) ,
([0, 3, 4, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 5, 1, 6],) ,
('saved value', 6.257544455206713) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 6, 4, 2, 5, 3, 1],) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 5, 3, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 2) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 5) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 2, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 4, 3, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 3) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 3, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 4, 6],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 6) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 5) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 4, 5, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, 2, 6],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 6, 5, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 5, 3, 2],) ,
('saved value', 7.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -1.0) ,
([0, 1, 4, 2, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, 5, 6],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 2, 6, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 3, 5],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 2, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 6, 3],) ,
('saved value', 7.0) ,
('Use move gain',) ,
('Original mapping', [0, 1, 4, 2, 5, 3, 6]) ,
('Current mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 12.0) ,
('Current mapping:', [0, 1, 7, 2, 5, 3, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([4, 1, 7, 2, 5, 3, 6],) ,
('saved value', 9.0) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 5, 3, 6],) ,
('saved value', 8.0) ,
('Remap node', 2, 'from ', 7, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('saved value', 11.0) ,
('Remap node', 3, 'from ', 2, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 3, 6],) ,
('saved value', 9.0) ,
('Remap node', 4, 'from ', 5, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 3, 6],) ,
('saved value', 10.0) ,
('Remap node', 5, 'from ', 3, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('saved value', 11.0) ,
('Remap node', 6, 'from ', 6, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 7, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 5, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([7, 1, 0, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 5, 3, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 7, 0, 5, 3, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 5, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 7, 2, 0, 3, 6],) ,
('Computing match for mapping',) ,
([5, 1, 7, 2, 0, 3, 6],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 7, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 5, 0, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 7, 2, 5, 3, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 5, 3, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 7, 1, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 5, 3, 6],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 7, 1, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 5, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -4.761594710193791) ,
([0, 5, 7, 2, 1, 3, 6],) ,
('Computing match for mapping',) ,
([0, 5, 7, 2, 1, 3, 6],) ,
('saved value', 7.238405289806209) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -4.742455544793287) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 5, 1, 6],) ,
('saved value', 7.257544455206713) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 6, 7, 2, 5, 3, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 5, 3, 1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 7, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 3, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 2, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 7, 3, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 2, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 7, 6],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 1, 6, 2, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 3, 7],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 5) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 5, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 2, 3, 6],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, 6],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 5, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 3, 2],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 2, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 5, 6],) ,
('saved value', 11.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 2, 6, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, 3, 5],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([0, 1, 7, 2, 5, 3, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 2, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 6, 3],) ,
('saved value', 8.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Current mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('node_pair', (0, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1.0) ,
('node_pair', (4, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 4)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 1.0) ,
('Node mapping at start', [1, 0, 3, 2, 7, 6, 4]) ,
('Triple match number at start:', 1.0) ,
('Remap node', 0, 'from ', 1, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 0, 3, 2, 7, 6, 4],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 0, 'to', 5) ,
('Move gain:', 0.6192026449031044) ,
('Computing match for mapping',) ,
([1, 5, 3, 2, 7, 6, 4],) ,
('saved value', 1.6192026449031043) ,
('Remap node', 2, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 0, 5, 2, 7, 6, 4],) ,
('saved value', 1.0) ,
('Remap node', 3, 'from ', 2, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 0, 3, 5, 7, 6, 4],) ,
('saved value', 0.0) ,
('Remap node', 4, 'from ', 7, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([1, 0, 3, 2, 5, 6, 4],) ,
('saved value', 2.0) ,
('Remap node', 5, 'from ', 6, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 0, 3, 2, 7, 5, 4],) ,
('saved value', 1.0) ,
('Remap node', 6, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 0, 3, 2, 7, 6, 5],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 5.0) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([3, 0, 1, 2, 7, 6, 4],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2, 7, 6, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 2) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([2, 0, 3, 1, 7, 6, 4],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1, 7, 6, 4],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 7) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 0, '-', 7, ',', 4, '-', 1) ,
('Swap gain:', 0.6192026449031044) ,
([7, 0, 3, 2, 1, 6, 4],) ,
('Computing match for mapping',) ,
([7, 0, 3, 2, 1, 6, 4],) ,
('saved value', 1.6192026449031043) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 6) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([6, 0, 3, 2, 7, 1, 4],) ,
('Computing match for mapping',) ,
([6, 0, 3, 2, 7, 1, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 1, ',', 6, '-', 4) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 0, 3, 2, 7, 6, 1],) ,
('Computing match for mapping',) ,
([4, 0, 3, 2, 7, 6, 1],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 3) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', 0.25754445520671365) ,
([1, 3, 0, 2, 7, 6, 4],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2, 7, 6, 4],) ,
('saved value', 1.2575444552067137) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 2) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 2, 3, 0, 7, 6, 4],) ,
('Computing match for mapping',) ,
([1, 2, 3, 0, 7, 6, 4],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', 7) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 1, '-', 7, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([1, 7, 3, 2, 0, 6, 4],) ,
('Computing match for mapping',) ,
([1, 7, 3, 2, 0, 6, 4],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 0, ',', 5, '-', 6) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([1, 6, 3, 2, 7, 0, 4],) ,
('Computing match for mapping',) ,
([1, 6, 3, 2, 7, 0, 4],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 0, ',', 6, '-', 4) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([1, 4, 3, 2, 7, 6, 0],) ,
('Computing match for mapping',) ,
([1, 4, 3, 2, 7, 6, 0],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 2) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -1.0) ,
([1, 0, 2, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 7, 6, 4],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 7) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 2, '-', 7, ',', 4, '-', 3) ,
('Swap gain:', 2.0) ,
([1, 0, 7, 2, 3, 6, 4],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 3, 6, 4],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 6) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', 1.0) ,
([1, 0, 6, 2, 7, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 6, 2, 7, 3, 4],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 3, ',', 6, '-', 4) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', 0.0) ,
([1, 0, 4, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([1, 0, 4, 2, 7, 6, 3],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 7) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 3, '-', 7, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([1, 0, 3, 7, 2, 6, 4],) ,
('Computing match for mapping',) ,
([1, 0, 3, 7, 2, 6, 4],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 6) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([1, 0, 3, 6, 7, 2, 4],) ,
('Computing match for mapping',) ,
([1, 0, 3, 6, 7, 2, 4],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 4) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([1, 0, 3, 4, 7, 6, 2],) ,
('Computing match for mapping',) ,
([1, 0, 3, 4, 7, 6, 2],) ,
('saved value', 0.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 7, ',', 5, '-', 6) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 7) ,
('Swap gain:', 0.0) ,
([1, 0, 3, 2, 6, 7, 4],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2, 6, 7, 4],) ,
('saved value', 1.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 7, ',', 6, '-', 4) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', 0.0) ,
([1, 0, 3, 2, 4, 6, 7],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2, 4, 6, 7],) ,
('saved value', 1.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 4) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', 1.0) ,
([1, 0, 3, 2, 7, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2, 7, 4, 6],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, 3, 2, 7, 6, 4]) ,
('Current mapping', [0, 1, 3, 2, 7, 6, 4]) ,
('Gain after the hill-climbing', 5.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 1, 3, 2, 7, 6, 4]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 1, 3, 2, 7, 6, 4],) ,
('saved value', 3.0) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -2.3807973550968957) ,
('Computing match for mapping',) ,
([0, 5, 3, 2, 7, 6, 4],) ,
('saved value', 3.6192026449031043) ,
('Remap node', 2, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 7, 6, 4],) ,
('saved value', 6.0) ,
('Remap node', 3, 'from ', 2, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 7, 6, 4],) ,
('saved value', 4.0) ,
('Remap node', 4, 'from ', 7, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 6, 4],) ,
('saved value', 7.0) ,
('Remap node', 5, 'from ', 6, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 7, 5, 4],) ,
('saved value', 6.0) ,
('Remap node', 6, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 7, 6, 5],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2, 7, 6, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 0, 2, 7, 6, 4],) ,
('Computing match for mapping',) ,
([3, 1, 0, 2, 7, 6, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 3, 0, 7, 6, 4],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0, 7, 6, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 7) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 0, '-', 7, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 1, 3, 2, 0, 6, 4],) ,
('Computing match for mapping',) ,
([7, 1, 3, 2, 0, 6, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 3, 2, 7, 0, 4],) ,
('Computing match for mapping',) ,
([6, 1, 3, 2, 7, 0, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 3, 2, 7, 6, 0],) ,
('Computing match for mapping',) ,
([4, 1, 3, 2, 7, 6, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -2.7424555447932866) ,
([0, 3, 1, 2, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 7, 6, 4],) ,
('saved value', 3.2575444552067134) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 3, 1, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 7, 6, 4],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 7) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 1, '-', 7, ',', 4, '-', 1) ,
('Swap gain:', -2.3807973550968957) ,
([0, 7, 3, 2, 1, 6, 4],) ,
('Computing match for mapping',) ,
([0, 7, 3, 2, 1, 6, 4],) ,
('saved value', 3.6192026449031043) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 6, 3, 2, 7, 1, 4],) ,
('Computing match for mapping',) ,
([0, 6, 3, 2, 7, 1, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 4, 3, 2, 7, 6, 1],) ,
('Computing match for mapping',) ,
([0, 4, 3, 2, 7, 6, 1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 2) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 3, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 6, 4],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 7) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 2, '-', 7, ',', 4, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 6) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', 1.0) ,
([0, 1, 6, 2, 7, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 7, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 3, ',', 6, '-', 4) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 7, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 7) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 3, '-', 7, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 7, 2, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 2, 6, 4],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 6) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 6, 7, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 6, 7, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 4) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 4, 7, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 7, 6, 2],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 7, ',', 5, '-', 6) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 1, 3, 2, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 6, 7, 4],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 7, ',', 6, '-', 4) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 1, 3, 2, 4, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 6, 7],) ,
('saved value', 6.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 4) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', 2.0) ,
([0, 1, 3, 2, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 7, 4, 6],) ,
('saved value', 8.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 3, 2, 7, 6, 4]) ,
('Current mapping', [0, 1, 7, 2, 3, 6, 4]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 8.0) ,
('Current mapping:', [0, 1, 7, 2, 3, 6, 4]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 1, 7, 2, 3, 6, 4],) ,
('saved value', 5.0) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -2.3807973550968957) ,
('Computing match for mapping',) ,
([0, 5, 7, 2, 3, 6, 4],) ,
('saved value', 5.619202644903105) ,
('Remap node', 2, 'from ', 7, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 3, 6, 4],) ,
('saved value', 7.0) ,
('Remap node', 3, 'from ', 2, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 3, 6, 4],) ,
('saved value', 5.0) ,
('Remap node', 4, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 6, 4],) ,
('saved value', 8.0) ,
('Remap node', 5, 'from ', 6, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 5, 4],) ,
('saved value', 8.0) ,
('Remap node', 6, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 6, 5],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 7, 2, 3, 6, 4],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 3, 6, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([7, 1, 0, 2, 3, 6, 4],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 3, 6, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 7, 0, 3, 6, 4],) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 3, 6, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 7, 2, 0, 6, 4],) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 0, 6, 4],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 7, 2, 3, 0, 4],) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 3, 0, 4],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 7, 2, 3, 6, 0],) ,
('Computing match for mapping',) ,
([4, 1, 7, 2, 3, 6, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 1, 2, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 3, 6, 4],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 2, 7, 1, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 3, 6, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -3.123252899890182) ,
([0, 3, 7, 2, 1, 6, 4],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 1, 6, 4],) ,
('saved value', 4.876747100109818) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 6, 7, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 3, 1, 4],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 4, 7, 2, 3, 6, 1],) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 3, 6, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 7, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 3, 6, 4],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 7, 6, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 6) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 7) ,
('Swap gain:', -1.0) ,
([0, 1, 6, 2, 3, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 3, 7, 4],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 4) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', -1.0) ,
([0, 1, 4, 2, 3, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, 6, 7],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 3, 2, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 6, 4],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 6) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 6, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 3, 2, 4],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 4) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 4, 3, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 6, 2],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 6) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 1, 7, 2, 6, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 4) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 2, 4, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 6, 3],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 4) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', 3.0) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('saved value', 11.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 7, 2, 3, 6, 4]) ,
('Current mapping', [0, 1, 7, 2, 3, 4, 6]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 11.0) ,
('Current mapping:', [0, 1, 7, 2, 3, 4, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 1, 7, 2, 3, 4, 6],) ,
('saved value', 8.0) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -3.3807973550968953) ,
('Computing match for mapping',) ,
([0, 5, 7, 2, 3, 4, 6],) ,
('saved value', 7.619202644903105) ,
('Remap node', 2, 'from ', 7, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 3, 4, 6],) ,
('saved value', 10.0) ,
('Remap node', 3, 'from ', 2, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 3, 4, 6],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 5, 4, 6],) ,
('saved value', 11.0) ,
('Remap node', 5, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 5, 6],) ,
('saved value', 11.0) ,
('Remap node', 6, 'from ', 6, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 4, 5],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 7, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 2, 3, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([7, 1, 0, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 2, 3, 4, 6],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 7, 0, 3, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 0, 3, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 7, 2, 0, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 2, 0, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 7, 2, 3, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 7, 2, 3, 0, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 7, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 3, 4, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 7, 1, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 2, 3, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 7, 1, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 3, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -5.123252899890182) ,
([0, 3, 7, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 1, 4, 6],) ,
('saved value', 5.876747100109818) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 7, 2, 3, 1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 7, 2, 3, 1, 6],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 6, 7, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 2, 3, 4, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 2) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 7, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 3, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 2, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 7, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 4) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 7) ,
('Swap gain:', -1.0) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, 7, 6],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 1, 6, 2, 3, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 3, 4, 7],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 3) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 4) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 4, 3, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 2, 6],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 6, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 3, 4, 2],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 4) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 2, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 4, 3, 6],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 2, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 6, 4, 3],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 4, ',', 6, '-', 6) ,
([0, 1, 7, 2, 3, 4, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 6, 4],) ,
('saved value', 8.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 7, 2, 3, 4, 6]) ,
('Current mapping', [0, 1, 7, 2, 3, 4, 6]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 12.0) ,
('best node mapping', [0, 1, 7, 2, 5, 3, 6]) ,
('Best node mapping alignment:', 'a0(possible-01)-b0(possible-01) a1(and)-b1(and) a2(amr-unknown)-b7(amr-unknown) a3(locate-01)-b2(locate-01) a4(i)-b5(i) a5(leak)-b3(break-01) a6(repair-01)-b6(repair-01)') ,
('F-score:', 0.7058823529411765) ,
Smatch score F1 0.706
('AMR pair', 8) ,
('============================================',) ,
('AMR 1 (one-line):', '(d0 / depend-01:ARG1 (w0 / way:manner-of (d1 / define-01:ARG1 (t0 / term))):ARG1 (a0 / application))') ,
('AMR 2 (one-line):', '(d0 / depend-01:ARG1 (a0 / apply-02):ARG0 (d1 / define-01:ARG1 (t0 / term)))') ,
('Instance triples of AMR 1:', 5) ,
([('instance', 'a0', 'depend-01'), ('instance', 'a1', 'way'), ('instance', 'a2', 'define-01'), ('instance', 'a3', 'term'), ('instance', 'a4', 'application')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'depend-01')],) ,
('Relation triples of AMR 1:', 4) ,
([('ARG1', 'a0', 'a1'), ('ARG1', 'a0', 'a4'), ('manner', 'a2', 'a1'), ('ARG1', 'a2', 'a3')],) ,
('Instance triples of AMR 2:', 4) ,
([('instance', 'b0', 'depend-01'), ('instance', 'b1', 'apply-02'), ('instance', 'b2', 'define-01'), ('instance', 'b3', 'term')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'depend-01')],) ,
('Relation triples of AMR 2:', 3) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b2'), ('ARG1', 'b2', 'b3')],) ,
('Similarity', 'depend-01', 'depend-01', 1.0) ,
('Similarity', 'depend-01', 'apply-02', 0.25922262697573983) ,
('Similarity', 'depend-01', 'define-01', 0.0) ,
('Similarity', 'depend-01', 'term', 0.0) ,
('Similarity', 'way', 'depend-01', 0.26276499605733894) ,
('Similarity', 'way', 'apply-02', 0.2632826307619589) ,
('Similarity', 'way', 'define-01', 0.0) ,
('Similarity', 'way', 'term', 0.5600165714577987) ,
('Similarity', 'define-01', 'apply-02', 0.0) ,
('Similarity', 'define-01', 'define-01', 1.0) ,
('Similarity', 'define-01', 'term', 0.0) ,
('Similarity', 'term', 'apply-02', 0.2557893709837764) ,
('Similarity', 'term', 'term', 1.0) ,
('Similarity', 'application', 'depend-01', 0.0) ,
('Similarity', 'application', 'apply-02', 0.3230901891553901) ,
('Similarity', 'application', 'define-01', 0.0) ,
('Similarity', 'application', 'term', 0.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3}, {0, 1, 2, 3}, {0, 1, 2, 3}, {0, 1, 2, 3}, {0, 1, 2, 3}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2.0, (1, 1): 1, (4, 1): 1}, (0, 1): {-1: 0.25922262697573983}, (0, 2): {-1: 0.0, (1, 3): 1, (4, 3): 1}, (0, 3): {-1: 0.0}, (1, 0): {-1: 0.26276499605733894}, (1, 1): {-1: 0.2632826307619589, (0, 0): 1}, (1, 2): {-1: 0.0}, (1, 3): {-1: 0.5600165714577987, (0, 2): 1}, (2, 0): {-1: 0.0, (3, 1): 1}, (2, 1): {-1: 0.0}, (2, 2): {-1: 1.0, (3, 3): 1}, (2, 3): {-1: 0.0}, (3, 0): {-1: 0.0}, (3, 1): {-1: 0.2557893709837764, (2, 0): 1}, (3, 2): {-1: 0.0}, (3, 3): {-1: 1.0, (2, 2): 1}, (4, 0): {-1: 0.0}, (4, 1): {-1: 0.3230901891553901, (0, 0): 1}, (4, 2): {-1: 0.0}, (4, 3): {-1: 0.0, (0, 2): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2.0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.2632826307619589) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1.0) ,
('relation match with', (3, 3), 1) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 6.2632826307619585) ,
('Node mapping at start', [0, 1, 2, 3, -1]) ,
('Triple match number at start:', 6.2632826307619585) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2.7412950077288802) ,
([1, 0, 2, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, -1],) ,
('saved value', 3.521987623033078) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, -1],) ,
('saved value', 1.2632826307619585) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, -1],) ,
('saved value', 1.2632826307619585) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 0],) ,
('saved value', 3.2632826307619585) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.263282630761959) ,
([0, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, -1],) ,
('saved value', 2.9999999999999996) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.447476688320384) ,
([0, 3, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, -1],) ,
('saved value', 3.8158059424415747) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0.059807558393431215) ,
([0, -1, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 1],) ,
('saved value', 6.32309018915539) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, -1],) ,
('saved value', 3.2632826307619585) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2],) ,
('saved value', 4.2632826307619585) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3],) ,
('saved value', 4.2632826307619585) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 3, -1]) ,
('Current mapping', [0, -1, 2, 3, 1]) ,
('Gain after the hill-climbing', 0.059807558393431215) ,
('Update triple match number to:', 6.32309018915539) ,
('Current mapping:', [0, -1, 2, 3, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', -1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', 0) ,
('Swap gain:', -2.737235003942661) ,
([-1, 0, 2, 3, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 2, 3, 1],) ,
('saved value', 3.5858551852127287) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, -1, 0, 3, 1],) ,
('Computing match for mapping',) ,
([2, -1, 0, 3, 1],) ,
('saved value', 1.3230901891553897) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([3, -1, 2, 0, 1],) ,
('Computing match for mapping',) ,
([3, -1, 2, 0, 1],) ,
('saved value', 1.3230901891553897) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -3.06386756217965) ,
([1, -1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([1, -1, 2, 3, 0],) ,
('saved value', 3.2592226269757396) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', 2) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 3, 1],) ,
('saved value', 4.32309018915539) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', -1, ',', 3, '-', 3) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', -1) ,
('Swap gain:', -1.4399834285422013) ,
([0, 3, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1],) ,
('saved value', 4.883106760613188) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', -1, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', -1) ,
('Swap gain:', -0.059807558393431215) ,
([0, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1],) ,
('saved value', 6.2632826307619585) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, -1, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, -1, 3, 2, 1],) ,
('saved value', 3.3230901891553897) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -3.32309018915539) ,
([0, -1, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 3, 2],) ,
('saved value', 2.9999999999999996) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', -3.0673008181716135) ,
([0, -1, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3],) ,
('saved value', 3.255789370983776) ,
('no move/swap gain found',) ,
('Original mapping', [0, -1, 2, 3, 1]) ,
('Current mapping', [0, -1, 2, 3, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, -1],) ,
('saved value', 2.9999999999999996) ,
('Node mapping at start', [0, 2, 1, 3, -1]) ,
('Triple match number at start:', 2.9999999999999996) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 1, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -1.737235003942661) ,
([2, 0, 1, 3, -1],) ,
('Computing match for mapping',) ,
([2, 0, 1, 3, -1],) ,
('saved value', 1.2627649960573386) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 2, 1, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -1.7407773730242602) ,
([1, 2, 0, 3, -1],) ,
('Computing match for mapping',) ,
([1, 2, 0, 3, -1],) ,
('saved value', 1.2592226269757394) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 2, 1, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 2, 1, 0, -1],) ,
('Computing match for mapping',) ,
([3, 2, 1, 0, -1],) ,
('saved value', -4.440892098500626e-16) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 2, 1, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 2, 1, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 2, 1, 3, 0],) ,
('saved value', 0.9999999999999996) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([0, 2, 1, 3, -1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 3.263282630761959) ,
([0, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1],) ,
('saved value', 6.2632826307619585) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 3) ,
([0, 2, 1, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -0.4399834285422013) ,
([0, 3, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, -1],) ,
('saved value', 2.5600165714577985) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', -1) ,
([0, 2, 1, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([0, -1, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 3, 2],) ,
('saved value', 2.9999999999999996) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 3) ,
([0, 2, 1, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -0.7442106290162236) ,
([0, 2, 3, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, -1],) ,
('saved value', 2.255789370983776) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', -1) ,
([0, 2, 1, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 1.3230901891553901) ,
([0, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 3, 1],) ,
('saved value', 4.32309018915539) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', -1) ,
([0, 2, 1, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 2, 1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, 3],) ,
('saved value', 1.9999999999999996) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 1, 3, -1]) ,
('Current mapping', [0, 1, 2, 3, -1]) ,
('Gain after the hill-climbing', 3.263282630761959) ,
('Update triple match number to:', 6.2632826307619585) ,
('Current mapping:', [0, 1, 2, 3, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2.7412950077288802) ,
([1, 0, 2, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, -1],) ,
('saved value', 3.521987623033078) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, -1],) ,
('saved value', 1.2632826307619585) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, -1],) ,
('saved value', 1.2632826307619585) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 0],) ,
('saved value', 3.2632826307619585) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.263282630761959) ,
([0, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, -1],) ,
('saved value', 2.9999999999999996) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.447476688320384) ,
([0, 3, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, -1],) ,
('saved value', 3.8158059424415747) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0.059807558393431215) ,
([0, -1, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 1],) ,
('saved value', 6.32309018915539) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, -1],) ,
('saved value', 3.2632826307619585) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2],) ,
('saved value', 4.2632826307619585) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3],) ,
('saved value', 4.2632826307619585) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 3, -1]) ,
('Current mapping', [0, -1, 2, 3, 1]) ,
('Gain after the hill-climbing', 0.059807558393431215) ,
('Update triple match number to:', 6.32309018915539) ,
('Current mapping:', [0, -1, 2, 3, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', -1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', 0) ,
('Swap gain:', -2.737235003942661) ,
([-1, 0, 2, 3, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 2, 3, 1],) ,
('saved value', 3.5858551852127287) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, -1, 0, 3, 1],) ,
('Computing match for mapping',) ,
([2, -1, 0, 3, 1],) ,
('saved value', 1.3230901891553897) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([3, -1, 2, 0, 1],) ,
('Computing match for mapping',) ,
([3, -1, 2, 0, 1],) ,
('saved value', 1.3230901891553897) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -3.06386756217965) ,
([1, -1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([1, -1, 2, 3, 0],) ,
('saved value', 3.2592226269757396) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', 2) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 3, 1],) ,
('saved value', 4.32309018915539) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', -1, ',', 3, '-', 3) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', -1) ,
('Swap gain:', -1.4399834285422015) ,
([0, 3, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1],) ,
('saved value', 4.883106760613188) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', -1, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', -1) ,
('Swap gain:', -0.059807558393431215) ,
([0, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1],) ,
('saved value', 6.2632826307619585) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, -1, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, -1, 3, 2, 1],) ,
('saved value', 3.3230901891553897) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -3.32309018915539) ,
([0, -1, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 3, 2],) ,
('saved value', 2.9999999999999996) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', -3.0673008181716135) ,
([0, -1, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3],) ,
('saved value', 3.255789370983776) ,
('no move/swap gain found',) ,
('Original mapping', [0, -1, 2, 3, 1]) ,
('Current mapping', [0, -1, 2, 3, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, -1],) ,
('saved value', 1.2632826307619585) ,
('Node mapping at start', [3, 1, 2, 0, -1]) ,
('Triple match number at start:', 1.2632826307619585) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 1) ,
([3, 1, 2, 0, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 3) ,
('Swap gain:', 0.5559565676715796) ,
([1, 3, 2, 0, -1],) ,
('Computing match for mapping',) ,
([1, 3, 2, 0, -1],) ,
('saved value', 1.819239198433538) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 2) ,
([3, 1, 2, 0, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -1.0) ,
([2, 1, 3, 0, -1],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0, -1],) ,
('saved value', 0.26328263076195846) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 0) ,
([3, 1, 2, 0, -1],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', 5.0) ,
([0, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1],) ,
('saved value', 6.2632826307619585) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', -1) ,
([3, 1, 2, 0, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([-1, 1, 2, 0, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, 3],) ,
('saved value', 1.2632826307619585) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([3, 1, 2, 0, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -1.263282630761959) ,
([3, 2, 1, 0, -1],) ,
('Computing match for mapping',) ,
([3, 2, 1, 0, -1],) ,
('saved value', -4.440892098500626e-16) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 0) ,
([3, 1, 2, 0, -1],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', 0.25527173627915645) ,
([3, 0, 2, 1, -1],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1, -1],) ,
('saved value', 1.5185543670411148) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([3, 1, 2, 0, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0.059807558393431215) ,
([3, -1, 2, 0, 1],) ,
('Computing match for mapping',) ,
([3, -1, 2, 0, 1],) ,
('saved value', 1.3230901891553897) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 0) ,
([3, 1, 2, 0, -1],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([3, 1, 0, 2, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 2, -1],) ,
('saved value', 0.26328263076195846) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([3, 1, 2, 0, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([3, 1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([3, 1, -1, 0, 2],) ,
('saved value', 0.26328263076195846) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', -1) ,
([3, 1, 2, 0, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 1, 2, -1, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, 0],) ,
('saved value', 1.2632826307619585) ,
('Use swap gain',) ,
('Original mapping', [3, 1, 2, 0, -1]) ,
('Current mapping', [0, 1, 2, 3, -1]) ,
('Gain after the hill-climbing', 5.0) ,
('Update triple match number to:', 6.2632826307619585) ,
('Current mapping:', [0, 1, 2, 3, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2.7412950077288802) ,
([1, 0, 2, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, -1],) ,
('saved value', 3.521987623033078) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, -1],) ,
('saved value', 1.2632826307619585) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, -1],) ,
('saved value', 1.2632826307619585) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 0],) ,
('saved value', 3.2632826307619585) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.263282630761959) ,
([0, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, -1],) ,
('saved value', 2.9999999999999996) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.447476688320384) ,
([0, 3, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, -1],) ,
('saved value', 3.8158059424415747) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0.059807558393431215) ,
([0, -1, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 1],) ,
('saved value', 6.32309018915539) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, -1],) ,
('saved value', 3.2632826307619585) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2],) ,
('saved value', 4.2632826307619585) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3],) ,
('saved value', 4.2632826307619585) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 3, -1]) ,
('Current mapping', [0, -1, 2, 3, 1]) ,
('Gain after the hill-climbing', 0.059807558393431215) ,
('Update triple match number to:', 6.32309018915539) ,
('Current mapping:', [0, -1, 2, 3, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', -1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', 0) ,
('Swap gain:', -2.737235003942661) ,
([-1, 0, 2, 3, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 2, 3, 1],) ,
('saved value', 3.5858551852127287) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, -1, 0, 3, 1],) ,
('Computing match for mapping',) ,
([2, -1, 0, 3, 1],) ,
('saved value', 1.3230901891553897) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([3, -1, 2, 0, 1],) ,
('Computing match for mapping',) ,
([3, -1, 2, 0, 1],) ,
('saved value', 1.3230901891553897) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -3.06386756217965) ,
([1, -1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([1, -1, 2, 3, 0],) ,
('saved value', 3.2592226269757396) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', 2) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 3, 1],) ,
('saved value', 4.32309018915539) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', -1, ',', 3, '-', 3) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', -1) ,
('Swap gain:', -1.4399834285422015) ,
([0, 3, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1],) ,
('saved value', 4.883106760613188) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', -1, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', -1) ,
('Swap gain:', -0.059807558393431215) ,
([0, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1],) ,
('saved value', 6.2632826307619585) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, -1, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, -1, 3, 2, 1],) ,
('saved value', 3.3230901891553897) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -3.32309018915539) ,
([0, -1, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 3, 2],) ,
('saved value', 2.9999999999999996) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', -3.0673008181716135) ,
([0, -1, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3],) ,
('saved value', 3.255789370983776) ,
('no move/swap gain found',) ,
('Original mapping', [0, -1, 2, 3, 1]) ,
('Current mapping', [0, -1, 2, 3, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, -1],) ,
('saved value', 3.521987623033078) ,
('Node mapping at start', [1, 0, 2, 3, -1]) ,
('Triple match number at start:', 3.521987623033078) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, 2, 3, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 2.7412950077288802) ,
([0, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1],) ,
('saved value', 6.2632826307619585) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 2) ,
([1, 0, 2, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -2.2592226269757396) ,
([2, 0, 1, 3, -1],) ,
('Computing match for mapping',) ,
([2, 0, 1, 3, -1],) ,
('saved value', 1.2627649960573386) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 3) ,
([1, 0, 2, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.0034332559919634) ,
([3, 0, 2, 1, -1],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1, -1],) ,
('saved value', 1.5185543670411148) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', -1) ,
([1, 0, 2, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0.0638675621796505) ,
([-1, 0, 2, 3, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 2, 3, 1],) ,
('saved value', 3.5858551852127287) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 2) ,
([1, 0, 2, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -2.2627649960573386) ,
([1, 2, 0, 3, -1],) ,
('Computing match for mapping',) ,
([1, 2, 0, 3, -1],) ,
('saved value', 1.2592226269757394) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 3) ,
([1, 0, 2, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -1.7027484245995401) ,
([1, 3, 2, 0, -1],) ,
('Computing match for mapping',) ,
([1, 3, 2, 0, -1],) ,
('saved value', 1.819239198433538) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', -1) ,
([1, 0, 2, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -0.2627649960573386) ,
([1, -1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([1, -1, 2, 3, 0],) ,
('saved value', 3.2592226269757396) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([1, 0, 2, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([1, 0, 3, 2, -1],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2, -1],) ,
('saved value', 0.5219876230330782) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([1, 0, 2, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([1, 0, -1, 3, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, 3, 2],) ,
('saved value', 1.5219876230330782) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', -1) ,
([1, 0, 2, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', -2.0) ,
([1, 0, 2, -1, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, 3],) ,
('saved value', 1.5219876230330782) ,
('Use swap gain',) ,
('Original mapping', [1, 0, 2, 3, -1]) ,
('Current mapping', [0, 1, 2, 3, -1]) ,
('Gain after the hill-climbing', 2.7412950077288802) ,
('Update triple match number to:', 6.2632826307619585) ,
('Current mapping:', [0, 1, 2, 3, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2.7412950077288802) ,
([1, 0, 2, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, -1],) ,
('saved value', 3.521987623033078) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, -1],) ,
('saved value', 1.2632826307619585) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, -1],) ,
('saved value', 1.2632826307619585) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 0],) ,
('saved value', 3.2632826307619585) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.263282630761959) ,
([0, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, -1],) ,
('saved value', 2.9999999999999996) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.447476688320384) ,
([0, 3, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, -1],) ,
('saved value', 3.8158059424415747) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0.059807558393431215) ,
([0, -1, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 1],) ,
('saved value', 6.32309018915539) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, -1],) ,
('saved value', 3.2632826307619585) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2],) ,
('saved value', 4.2632826307619585) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3],) ,
('saved value', 4.2632826307619585) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 3, -1]) ,
('Current mapping', [0, -1, 2, 3, 1]) ,
('Gain after the hill-climbing', 0.059807558393431215) ,
('Update triple match number to:', 6.32309018915539) ,
('Current mapping:', [0, -1, 2, 3, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', -1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', 0) ,
('Swap gain:', -2.737235003942661) ,
([-1, 0, 2, 3, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 2, 3, 1],) ,
('saved value', 3.5858551852127287) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, -1, 0, 3, 1],) ,
('Computing match for mapping',) ,
([2, -1, 0, 3, 1],) ,
('saved value', 1.3230901891553897) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([3, -1, 2, 0, 1],) ,
('Computing match for mapping',) ,
([3, -1, 2, 0, 1],) ,
('saved value', 1.3230901891553897) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -3.06386756217965) ,
([1, -1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([1, -1, 2, 3, 0],) ,
('saved value', 3.2592226269757396) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', 2) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 3, 1],) ,
('saved value', 4.32309018915539) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', -1, ',', 3, '-', 3) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', -1) ,
('Swap gain:', -1.4399834285422015) ,
([0, 3, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1],) ,
('saved value', 4.883106760613188) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', -1, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', -1) ,
('Swap gain:', -0.059807558393431215) ,
([0, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1],) ,
('saved value', 6.2632826307619585) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, -1, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, -1, 3, 2, 1],) ,
('saved value', 3.3230901891553897) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -3.32309018915539) ,
([0, -1, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 3, 2],) ,
('saved value', 2.9999999999999996) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', -3.0673008181716135) ,
([0, -1, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3],) ,
('saved value', 3.255789370983776) ,
('no move/swap gain found',) ,
('Original mapping', [0, -1, 2, 3, 1]) ,
('Current mapping', [0, -1, 2, 3, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([1, 3, 2, 0, -1],) ,
('saved value', 1.819239198433538) ,
('Node mapping at start', [1, 3, 2, 0, -1]) ,
('Triple match number at start:', 1.819239198433538) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 3) ,
([1, 3, 2, 0, -1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 1) ,
('Swap gain:', -0.5559565676715796) ,
([3, 1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, -1],) ,
('saved value', 1.2632826307619585) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 2) ,
([1, 3, 2, 0, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -0.25922262697573983) ,
([2, 3, 1, 0, -1],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0, -1],) ,
('saved value', 1.5600165714577983) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 0) ,
([1, 3, 2, 0, -1],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', 1.9965667440080366) ,
([0, 3, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, -1],) ,
('saved value', 3.8158059424415747) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', -1) ,
([1, 3, 2, 0, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0.06386756217965028) ,
([-1, 3, 2, 0, 1],) ,
('Computing match for mapping',) ,
([-1, 3, 2, 0, 1],) ,
('saved value', 1.8831067606131884) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([1, 3, 2, 0, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -1.5600165714577987) ,
([1, 2, 3, 0, -1],) ,
('Computing match for mapping',) ,
([1, 2, 3, 0, -1],) ,
('saved value', 0.2592226269757394) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 0) ,
([1, 3, 2, 0, -1],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', 1.7027484245995401) ,
([1, 0, 2, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, -1],) ,
('saved value', 3.521987623033078) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', -1) ,
([1, 3, 2, 0, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', -0.5600165714577987) ,
([1, -1, 2, 0, 3],) ,
('Computing match for mapping',) ,
([1, -1, 2, 0, 3],) ,
('saved value', 1.2592226269757394) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 0) ,
([1, 3, 2, 0, -1],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([1, 3, 0, 2, -1],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2, -1],) ,
('saved value', 0.8192391984335381) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([1, 3, 2, 0, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([1, 3, -1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, -1, 0, 2],) ,
('saved value', 0.8192391984335381) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', -1) ,
([1, 3, 2, 0, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([1, 3, 2, -1, 0],) ,
('Computing match for mapping',) ,
([1, 3, 2, -1, 0],) ,
('saved value', 1.819239198433538) ,
('Use swap gain',) ,
('Original mapping', [1, 3, 2, 0, -1]) ,
('Current mapping', [0, 3, 2, 1, -1]) ,
('Gain after the hill-climbing', 1.9965667440080366) ,
('Update triple match number to:', 3.8158059424415747) ,
('Current mapping:', [0, 3, 2, 1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -2.29725157540046) ,
([3, 0, 2, 1, -1],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1, -1],) ,
('saved value', 1.5185543670411148) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 3, 0, 1, -1],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, -1],) ,
('saved value', 2.8158059424415747) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -1.9965667440080366) ,
([1, 3, 2, 0, -1],) ,
('Computing match for mapping',) ,
([1, 3, 2, 0, -1],) ,
('saved value', 1.819239198433538) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 3, 2, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 3, 2, 1, 0],) ,
('saved value', 1.8158059424415747) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -1.5600165714577985) ,
([0, 2, 3, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, -1],) ,
('saved value', 2.255789370983776) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 2.447476688320384) ,
([0, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1],) ,
('saved value', 6.2632826307619585) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', -1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', -0.5600165714577985) ,
([0, -1, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3],) ,
('saved value', 3.255789370983776) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -1.2557893709837762) ,
([0, 3, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, -1],) ,
('saved value', 2.5600165714577985) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 3, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, -1, 1, 2],) ,
('saved value', 2.8158059424415747) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', -1) ,
([0, 3, 2, 1, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 1.0673008181716135) ,
([0, 3, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1],) ,
('saved value', 4.883106760613188) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 2, 1, -1]) ,
('Current mapping', [0, 1, 2, 3, -1]) ,
('Gain after the hill-climbing', 2.447476688320384) ,
('Update triple match number to:', 6.2632826307619585) ,
('Current mapping:', [0, 1, 2, 3, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2.7412950077288802) ,
([1, 0, 2, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, -1],) ,
('saved value', 3.521987623033078) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, -1],) ,
('saved value', 1.2632826307619585) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, -1],) ,
('saved value', 1.2632826307619585) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 3, 0],) ,
('saved value', 3.2632826307619585) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.263282630761959) ,
([0, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, -1],) ,
('saved value', 2.9999999999999996) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.447476688320384) ,
([0, 3, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, -1],) ,
('saved value', 3.8158059424415747) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0.059807558393431215) ,
([0, -1, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 3, 1],) ,
('saved value', 6.32309018915539) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, -1],) ,
('saved value', 3.2632826307619585) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2],) ,
('saved value', 4.2632826307619585) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', -1) ,
([0, 1, 2, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3],) ,
('saved value', 4.2632826307619585) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 3, -1]) ,
('Current mapping', [0, -1, 2, 3, 1]) ,
('Gain after the hill-climbing', 0.059807558393431215) ,
('Update triple match number to:', 6.32309018915539) ,
('Current mapping:', [0, -1, 2, 3, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', -1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', 0) ,
('Swap gain:', -2.737235003942661) ,
([-1, 0, 2, 3, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 2, 3, 1],) ,
('saved value', 3.5858551852127287) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, -1, 0, 3, 1],) ,
('Computing match for mapping',) ,
([2, -1, 0, 3, 1],) ,
('saved value', 1.3230901891553897) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([3, -1, 2, 0, 1],) ,
('Computing match for mapping',) ,
([3, -1, 2, 0, 1],) ,
('saved value', 1.3230901891553897) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -3.06386756217965) ,
([1, -1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([1, -1, 2, 3, 0],) ,
('saved value', 3.2592226269757396) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', 2) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 3, 1],) ,
('saved value', 4.32309018915539) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', -1, ',', 3, '-', 3) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', -1) ,
('Swap gain:', -1.4399834285422015) ,
([0, 3, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, 1],) ,
('saved value', 4.883106760613188) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', -1, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', -1) ,
('Swap gain:', -0.059807558393431215) ,
([0, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1],) ,
('saved value', 6.2632826307619585) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, -1, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, -1, 3, 2, 1],) ,
('saved value', 3.3230901891553897) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -3.32309018915539) ,
([0, -1, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 3, 2],) ,
('saved value', 2.9999999999999996) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 1) ,
([0, -1, 2, 3, 1],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', -3.0673008181716135) ,
([0, -1, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, 3],) ,
('saved value', 3.255789370983776) ,
('no move/swap gain found',) ,
('Original mapping', [0, -1, 2, 3, 1]) ,
('Current mapping', [0, -1, 2, 3, 1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 6.32309018915539) ,
('best node mapping', [0, -1, 2, 3, 1]) ,
('Best node mapping alignment:', 'a0(depend-01)-b0(depend-01) a1(way)-Null a2(define-01)-b2(define-01) a3(term)-b3(term) a4(application)-b1(apply-02)') ,
('F-score:', 0.7025655765728211) ,
Smatch score F1 0.703
('AMR pair', 9) ,
('============================================',) ,
('AMR 1 (one-line):', '(t0 / take-10:ARG1 (t1 / time:ARG1-of (i0 / instead-of-91:ARG2 (m1 / method:mod (n0 / naive))):ARG1-of (h0 / have-quant-91:ARG3 (l0 / less:quant (m2 / much)))):ARG0 (m0 / methodology))') ,
('AMR 2 (one-line):', '(h0 / have-degree-91:ARG1 (m0 / method:mod (t0 / this)):ARG2 (q0 / quick-02:ARG1 m0):ARG3 (m1 / more:quant (m3 / much)):ARG4 (m2 / method:mod (o0 / other):ARG1-of (h1 / have-degree-91:ARG2 (n0 / naive):ARG3 (m4 / more:quant (m5 / much)))))') ,
('Instance triples of AMR 1:', 9) ,
([('instance', 'a0', 'take-10'), ('instance', 'a1', 'time'), ('instance', 'a2', 'instead-of-91'), ('instance', 'a3', 'method'), ('instance', 'a4', 'naive'), ('instance', 'a5', 'have-quant-91'), ('instance', 'a6', 'less'), ('instance', 'a7', 'much'), ('instance', 'a8', 'methodology')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'take-10')],) ,
('Relation triples of AMR 1:', 8) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a8'), ('ARG1', 'a2', 'a1'), ('ARG2', 'a2', 'a3'), ('mod', 'a3', 'a4'), ('ARG1', 'a5', 'a1'), ('ARG3', 'a5', 'a6'), ('quant', 'a6', 'a7')],) ,
('Instance triples of AMR 2:', 12) ,
([('instance', 'b0', 'have-degree-91'), ('instance', 'b1', 'method'), ('instance', 'b2', 'this'), ('instance', 'b3', 'quick-02'), ('instance', 'b4', 'more'), ('instance', 'b5', 'much'), ('instance', 'b6', 'method'), ('instance', 'b7', 'other'), ('instance', 'b8', 'have-degree-91'), ('instance', 'b9', 'naive'), ('instance', 'b10', 'more'), ('instance', 'b11', 'much')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'have-degree-91')],) ,
('Relation triples of AMR 2:', 12) ,
([('ARG1', 'b0', 'b1'), ('ARG2', 'b0', 'b3'), ('ARG3', 'b0', 'b4'), ('ARG4', 'b0', 'b6'), ('mod', 'b1', 'b2'), ('ARG1', 'b3', 'b1'), ('quant', 'b4', 'b5'), ('mod', 'b6', 'b7'), ('ARG1', 'b8', 'b6'), ('ARG2', 'b8', 'b9'), ('ARG3', 'b8', 'b10'), ('quant', 'b10', 'b11')],) ,
('Similarity', 'take-10', 'have-degree-91', 0.0) ,
('Similarity', 'take-10', 'method', 0.0) ,
('Similarity', 'take-10', 'this', 0.3803257317267639) ,
('Similarity', 'take-10', 'quick-02', 0.0) ,
('Similarity', 'take-10', 'more', 0.3394009513403471) ,
('Similarity', 'take-10', 'much', 0.3425675684123289) ,
('Similarity', 'take-10', 'other', 0.2926977722481573) ,
('Similarity', 'take-10', 'naive', 0.0) ,
('Similarity', 'time', 'have-degree-91', 0.0) ,
('Similarity', 'time', 'method', 0.0) ,
('Similarity', 'time', 'this', 0.854023579876701) ,
('Similarity', 'time', 'quick-02', 0.0) ,
('Similarity', 'time', 'more', 0.7489574105585904) ,
('Similarity', 'time', 'much', 0.798230921273087) ,
('Similarity', 'time', 'other', 0.7033576169251505) ,
('Similarity', 'time', 'naive', 0.0) ,
('Similarity', 'instead-of-91', 'have-degree-91', 0.0) ,
('Similarity', 'instead-of-91', 'method', 0.0) ,
('Similarity', 'instead-of-91', 'this', 0.0) ,
('Similarity', 'instead-of-91', 'quick-02', 0.0) ,
('Similarity', 'instead-of-91', 'more', 0.0) ,
('Similarity', 'instead-of-91', 'much', 0.0) ,
('Similarity', 'instead-of-91', 'other', 0.0) ,
('Similarity', 'instead-of-91', 'naive', 0.0) ,
('Similarity', 'method', 'have-degree-91', 0.0) ,
('Similarity', 'method', 'method', 1.0) ,
('Similarity', 'method', 'this', 0.508868583093786) ,
('Similarity', 'method', 'quick-02', 0.0) ,
('Similarity', 'method', 'more', 0.0) ,
('Similarity', 'method', 'much', 0.0) ,
('Similarity', 'method', 'other', 0.0) ,
('Similarity', 'method', 'naive', 0.0) ,
('Similarity', 'naive', 'have-degree-91', 0.0) ,
('Similarity', 'naive', 'this', 0.0) ,
('Similarity', 'naive', 'quick-02', 0.0) ,
('Similarity', 'naive', 'more', 0.0) ,
('Similarity', 'naive', 'much', 0.0) ,
('Similarity', 'naive', 'other', 0.0) ,
('Similarity', 'naive', 'naive', 1.0) ,
('Similarity', 'have-quant-91', 'have-degree-91', 0.0) ,
('Similarity', 'have-quant-91', 'method', 0.0) ,
('Similarity', 'have-quant-91', 'this', 0.0) ,
('Similarity', 'have-quant-91', 'quick-02', 0.0) ,
('Similarity', 'have-quant-91', 'more', 0.0) ,
('Similarity', 'have-quant-91', 'much', 0.0) ,
('Similarity', 'have-quant-91', 'other', 0.0) ,
('Similarity', 'have-quant-91', 'naive', 0.0) ,
('Similarity', 'less', 'have-degree-91', 0.0) ,
('Similarity', 'less', 'method', 0.0) ,
('Similarity', 'less', 'this', 0.7540420845011112) ,
('Similarity', 'less', 'quick-02', 0.0) ,
('Similarity', 'less', 'more', 0.9064050521855679) ,
('Similarity', 'less', 'much', 0.8753514133496337) ,
('Similarity', 'less', 'other', 0.6763590194470055) ,
('Similarity', 'less', 'naive', 0.0) ,
('Similarity', 'much', 'have-degree-91', 0.0) ,
('Similarity', 'much', 'this', 0.8412254335271415) ,
('Similarity', 'much', 'quick-02', 0.0) ,
('Similarity', 'much', 'more', 0.8760280307993291) ,
('Similarity', 'much', 'much', 1.0) ,
('Similarity', 'much', 'other', 0.698639447949128) ,
('Similarity', 'methodology', 'have-degree-91', 0.0) ,
('Similarity', 'methodology', 'method', 0.6948953683606331) ,
('Similarity', 'methodology', 'this', 0.0) ,
('Similarity', 'methodology', 'quick-02', 0.0) ,
('Similarity', 'methodology', 'more', 0.0) ,
('Similarity', 'methodology', 'much', 0.0) ,
('Similarity', 'methodology', 'other', 0.0) ,
('Similarity', 'methodology', 'naive', 0.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.0, (1, 1): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.3803257317267639}, (0, 3): {-1: 0.0, (1, 1): 1}, (0, 4): {-1: 0.3394009513403471}, (0, 5): {-1: 0.3425675684123289}, (0, 6): {-1: 0.0}, (0, 7): {-1: 0.2926977722481573}, (0, 8): {-1: 0.0, (1, 6): 1}, (0, 9): {-1: 0.0}, (0, 10): {-1: 0.3394009513403471}, (0, 11): {-1: 0.3425675684123289}, (1, 0): {-1: 0.0}, (1, 1): {-1: 0.0, (0, 0): 1, (0, 3): 1, (2, 0): 1, (2, 3): 1, (5, 0): 1, (5, 3): 1}, (1, 2): {-1: 0.854023579876701}, (1, 3): {-1: 0.0}, (1, 4): {-1: 0.7489574105585904}, (1, 5): {-1: 0.798230921273087}, (1, 6): {-1: 0.0, (0, 8): 1, (2, 8): 1, (5, 8): 1}, (1, 7): {-1: 0.7033576169251505}, (1, 8): {-1: 0.0}, (1, 9): {-1: 0.0}, (1, 10): {-1: 0.7489574105585904}, (1, 11): {-1: 0.798230921273087}, (2, 0): {-1: 0.0, (1, 1): 1, (3, 3): 1}, (2, 1): {-1: 0.0}, (2, 2): {-1: 0.0}, (2, 3): {-1: 0.0, (1, 1): 1}, (2, 4): {-1: 0.0}, (2, 5): {-1: 0.0}, (2, 6): {-1: 0.0}, (2, 7): {-1: 0.0}, (2, 8): {-1: 0.0, (1, 6): 1, (3, 9): 1}, (2, 9): {-1: 0.0}, (2, 10): {-1: 0.0}, (2, 11): {-1: 0.0}, (3, 0): {-1: 0.0}, (3, 1): {-1: 1.0, (4, 2): 1}, (3, 2): {-1: 0.508868583093786}, (3, 3): {-1: 0.0, (2, 0): 1}, (3, 4): {-1: 0.0}, (3, 5): {-1: 0.0}, (3, 6): {-1: 1.0, (4, 7): 1}, (3, 7): {-1: 0.0}, (3, 8): {-1: 0.0}, (3, 9): {-1: 0.0, (2, 8): 1}, (3, 10): {-1: 0.0}, (3, 11): {-1: 0.0}, (4, 0): {-1: 0.0}, (4, 1): {-1: 0.0}, (4, 2): {-1: 0.0, (3, 1): 1}, (4, 3): {-1: 0.0}, (4, 4): {-1: 0.0}, (4, 5): {-1: 0.0}, (4, 6): {-1: 0.0}, (4, 7): {-1: 0.0, (3, 6): 1}, (4, 8): {-1: 0.0}, (4, 9): {-1: 1.0}, (4, 10): {-1: 0.0}, (4, 11): {-1: 0.0}, (5, 0): {-1: 0.0, (1, 1): 1, (6, 4): 1}, (5, 1): {-1: 0.0}, (5, 2): {-1: 0.0}, (5, 3): {-1: 0.0, (1, 1): 1}, (5, 4): {-1: 0.0}, (5, 5): {-1: 0.0}, (5, 6): {-1: 0.0}, (5, 7): {-1: 0.0}, (5, 8): {-1: 0.0, (1, 6): 1, (6, 10): 1}, (5, 9): {-1: 0.0}, (5, 10): {-1: 0.0}, (5, 11): {-1: 0.0}, (6, 0): {-1: 0.0}, (6, 1): {-1: 0.0}, (6, 2): {-1: 0.7540420845011112}, (6, 3): {-1: 0.0}, (6, 4): {-1: 0.9064050521855679, (5, 0): 1, (7, 5): 1}, (6, 5): {-1: 0.8753514133496337}, (6, 6): {-1: 0.0}, (6, 7): {-1: 0.6763590194470055}, (6, 8): {-1: 0.0}, (6, 9): {-1: 0.0}, (6, 10): {-1: 0.9064050521855679, (5, 8): 1, (7, 11): 1}, (6, 11): {-1: 0.8753514133496337}, (7, 0): {-1: 0.0}, (7, 1): {-1: 0.0}, (7, 2): {-1: 0.8412254335271415}, (7, 3): {-1: 0.0}, (7, 4): {-1: 0.8760280307993291}, (7, 5): {-1: 1.0, (6, 4): 1}, (7, 6): {-1: 0.0}, (7, 7): {-1: 0.698639447949128}, (7, 8): {-1: 0.0}, (7, 9): {-1: 0.0}, (7, 10): {-1: 0.8760280307993291}, (7, 11): {-1: 1.0, (6, 10): 1}, (8, 0): {-1: 0.0}, (8, 1): {-1: 0.6948953683606331}, (8, 2): {-1: 0.0}, (8, 3): {-1: 0.0}, (8, 4): {-1: 0.0}, (8, 5): {-1: 0.0}, (8, 6): {-1: 0.6948953683606331}, (8, 7): {-1: 0.0}, (8, 8): {-1: 0.0}, (8, 9): {-1: 0.0}, (8, 10): {-1: 0.0}, (8, 11): {-1: 0.0}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0.3803257317267639) ,
('node_pair', (1, 7)) ,
('instance/attribute match', 0.7033576169251505) ,
('node_pair', (2, 11)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 1.0) ,
('node_pair', (4, 9)) ,
('instance/attribute match', 1.0) ,
('node_pair', (5, 0)) ,
('instance/attribute match', 0.0) ,
('relation match with', (6, 4), 1) ,
('node_pair', (6, 4)) ,
('instance/attribute match', 0.9064050521855679) ,
('relation match with', (7, 5), 1) ,
('node_pair', (7, 5)) ,
('instance/attribute match', 1.0) ,
('node_pair', (8, 3)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 6.990088400837482) ,
('Node mapping at start', [2, 7, 11, 1, 9, 0, 4, 5, 3]) ,
('Triple match number at start:', 6.990088400837482) ,
('Remap node', 0, 'from ', 2, 'to', 6) ,
('Move gain:', -0.3803257317267639) ,
('Computing match for mapping',) ,
([6, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('saved value', 6.609762669110719) ,
('Remap node', 0, 'from ', 2, 'to', 8) ,
('Move gain:', -0.3803257317267639) ,
('Computing match for mapping',) ,
([8, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('saved value', 6.609762669110719) ,
('Remap node', 0, 'from ', 2, 'to', 10) ,
('Move gain:', -0.04092478038641684) ,
('Computing match for mapping',) ,
([10, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('saved value', 6.949163620451065) ,
('Remap node', 1, 'from ', 7, 'to', 6) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([2, 6, 11, 1, 9, 0, 4, 5, 3],) ,
('saved value', 6.286730783912332) ,
('Remap node', 1, 'from ', 7, 'to', 8) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([2, 8, 11, 1, 9, 0, 4, 5, 3],) ,
('saved value', 6.286730783912332) ,
('Remap node', 1, 'from ', 7, 'to', 10) ,
('Move gain:', 0.04559979363343991) ,
('Computing match for mapping',) ,
([2, 10, 11, 1, 9, 0, 4, 5, 3],) ,
('saved value', 7.035688194470922) ,
('Remap node', 2, 'from ', 11, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 7, 6, 1, 9, 0, 4, 5, 3],) ,
('saved value', 6.990088400837482) ,
('Remap node', 2, 'from ', 11, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 7, 8, 1, 9, 0, 4, 5, 3],) ,
('saved value', 6.990088400837482) ,
('Remap node', 2, 'from ', 11, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 7, 10, 1, 9, 0, 4, 5, 3],) ,
('saved value', 6.990088400837482) ,
('Remap node', 3, 'from ', 1, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 6, 9, 0, 4, 5, 3],) ,
('saved value', 6.990088400837482) ,
('Remap node', 3, 'from ', 1, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 8, 9, 0, 4, 5, 3],) ,
('saved value', 5.990088400837482) ,
('Remap node', 3, 'from ', 1, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 10, 9, 0, 4, 5, 3],) ,
('saved value', 5.990088400837482) ,
('Remap node', 4, 'from ', 9, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 6, 0, 4, 5, 3],) ,
('saved value', 5.990088400837482) ,
('Remap node', 4, 'from ', 9, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 8, 0, 4, 5, 3],) ,
('saved value', 5.990088400837482) ,
('Remap node', 4, 'from ', 9, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 10, 0, 4, 5, 3],) ,
('saved value', 5.990088400837482) ,
('Remap node', 5, 'from ', 0, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 6, 4, 5, 3],) ,
('saved value', 5.990088400837482) ,
('Remap node', 5, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 8, 4, 5, 3],) ,
('saved value', 5.990088400837482) ,
('Remap node', 5, 'from ', 0, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 10, 4, 5, 3],) ,
('saved value', 5.990088400837482) ,
('Remap node', 6, 'from ', 4, 'to', 6) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 6, 5, 3],) ,
('saved value', 4.083683348651915) ,
('Remap node', 6, 'from ', 4, 'to', 8) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 8, 5, 3],) ,
('saved value', 4.083683348651915) ,
('Remap node', 6, 'from ', 4, 'to', 10) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 10, 5, 3],) ,
('saved value', 4.990088400837482) ,
('Remap node', 7, 'from ', 5, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 6, 3],) ,
('saved value', 4.990088400837482) ,
('Remap node', 7, 'from ', 5, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 8, 3],) ,
('saved value', 4.990088400837482) ,
('Remap node', 7, 'from ', 5, 'to', 10) ,
('Move gain:', -1.1239719692006709) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 10, 3],) ,
('saved value', 5.8661164316368115) ,
('Remap node', 8, 'from ', 3, 'to', 6) ,
('Move gain:', 0.6948953683606331) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.684983769198116) ,
('Remap node', 8, 'from ', 3, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 5, 8],) ,
('saved value', 6.990088400837482) ,
('Remap node', 8, 'from ', 3, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 5, 10],) ,
('saved value', 6.990088400837482) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 7) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 2) ,
('Swap gain:', 0.06303800347294386) ,
([7, 2, 11, 1, 9, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([7, 2, 11, 1, 9, 0, 4, 5, 3],) ,
('saved value', 7.053126404310426) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 11) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 0, '-', 11, ',', 2, '-', 2) ,
('Swap gain:', -0.037758163314435045) ,
([11, 7, 2, 1, 9, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([11, 7, 2, 1, 9, 0, 4, 5, 3],) ,
('saved value', 6.952330237523047) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 1) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -0.8714571486329779) ,
([1, 7, 11, 2, 9, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([1, 7, 11, 2, 9, 0, 4, 5, 3],) ,
('saved value', 6.118631252204505) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 9) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -0.38032573172676387) ,
([9, 7, 11, 1, 2, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([9, 7, 11, 1, 2, 0, 4, 5, 3],) ,
('saved value', 6.609762669110719) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 0) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -1.3803257317267639) ,
([0, 7, 11, 1, 9, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 7, 11, 1, 9, 2, 4, 5, 3],) ,
('saved value', 5.609762669110719) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 4) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -2.1932877480708735) ,
([4, 7, 11, 1, 9, 0, 2, 5, 3],) ,
('Computing match for mapping',) ,
([4, 7, 11, 1, 9, 0, 2, 5, 3],) ,
('saved value', 4.796800652766609) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 2, ',', 7, '-', 5) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 0, '-', 5, ',', 7, '-', 2) ,
('Swap gain:', -1.1965327297872934) ,
([5, 7, 11, 1, 9, 0, 4, 2, 3],) ,
('Computing match for mapping',) ,
([5, 7, 11, 1, 9, 0, 4, 2, 3],) ,
('saved value', 5.793555671050189) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 2, ',', 8, '-', 3) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 0, '-', 3, ',', 8, '-', 2) ,
('Swap gain:', -0.3803257317267639) ,
([3, 7, 11, 1, 9, 0, 4, 5, 2],) ,
('Computing match for mapping',) ,
([3, 7, 11, 1, 9, 0, 4, 5, 2],) ,
('saved value', 6.609762669110719) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 11) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 1, '-', 11, ',', 2, '-', 7) ,
('Swap gain:', 0.0948733043479365) ,
([2, 11, 7, 1, 9, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 0, 4, 5, 3],) ,
('saved value', 7.084961705185419) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 1) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 7) ,
('Swap gain:', -0.7033576169251505) ,
([2, 1, 11, 7, 9, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 1, 11, 7, 9, 0, 4, 5, 3],) ,
('saved value', 6.286730783912332) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 9) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 7) ,
('Swap gain:', -1.7033576169251505) ,
([2, 9, 11, 1, 7, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 9, 11, 1, 7, 0, 4, 5, 3],) ,
('saved value', 5.286730783912332) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 0) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 7) ,
('Swap gain:', -1.7033576169251505) ,
([2, 0, 11, 1, 9, 7, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 0, 11, 1, 9, 7, 4, 5, 3],) ,
('saved value', 5.286730783912332) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', 4) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', -2.1844462391051223) ,
([2, 4, 11, 1, 9, 0, 7, 5, 3],) ,
('Computing match for mapping',) ,
([2, 4, 11, 1, 9, 0, 7, 5, 3],) ,
('saved value', 4.80564216173236) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 5) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 1, '-', 5, ',', 7, '-', 7) ,
('Swap gain:', -1.2064872477029356) ,
([2, 5, 11, 1, 9, 0, 4, 7, 3],) ,
('Computing match for mapping',) ,
([2, 5, 11, 1, 9, 0, 4, 7, 3],) ,
('saved value', 5.783601153134547) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 7, ',', 8, '-', 3) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 1, '-', 3, ',', 8, '-', 7) ,
('Swap gain:', -0.7033576169251505) ,
([2, 3, 11, 1, 9, 0, 4, 5, 7],) ,
('Computing match for mapping',) ,
([2, 3, 11, 1, 9, 0, 4, 5, 7],) ,
('saved value', 6.286730783912332) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 11, ',', 3, '-', 1) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 11) ,
('Swap gain:', -1.0) ,
([2, 7, 1, 11, 9, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 7, 1, 11, 9, 0, 4, 5, 3],) ,
('saved value', 5.990088400837482) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 11, ',', 4, '-', 9) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 11) ,
('Swap gain:', -1.0) ,
([2, 7, 9, 1, 11, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 7, 9, 1, 11, 0, 4, 5, 3],) ,
('saved value', 5.990088400837482) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 11, ',', 5, '-', 0) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 11) ,
('Swap gain:', -1.0) ,
([2, 7, 0, 1, 9, 11, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 7, 0, 1, 9, 11, 4, 5, 3],) ,
('saved value', 5.990088400837482) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 11, ',', 6, '-', 4) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 11) ,
('Swap gain:', -2.0310536388359344) ,
([2, 7, 4, 1, 9, 0, 11, 5, 3],) ,
('Computing match for mapping',) ,
([2, 7, 4, 1, 9, 0, 11, 5, 3],) ,
('saved value', 4.959034762001548) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 11, ',', 7, '-', 5) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 2, '-', 5, ',', 7, '-', 11) ,
('Swap gain:', -1.0) ,
([2, 7, 5, 1, 9, 0, 4, 11, 3],) ,
('Computing match for mapping',) ,
([2, 7, 5, 1, 9, 0, 4, 11, 3],) ,
('saved value', 5.990088400837482) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 11, ',', 8, '-', 3) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 2, '-', 3, ',', 8, '-', 11) ,
('Swap gain:', 0.0) ,
([2, 7, 3, 1, 9, 0, 4, 5, 11],) ,
('Computing match for mapping',) ,
([2, 7, 3, 1, 9, 0, 4, 5, 11],) ,
('saved value', 6.990088400837482) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([2, 7, 11, 9, 1, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 7, 11, 9, 1, 0, 4, 5, 3],) ,
('saved value', 4.990088400837482) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 0) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([2, 7, 11, 0, 9, 1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 7, 11, 0, 9, 1, 4, 5, 3],) ,
('saved value', 4.990088400837482) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 4) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -3.9064050521855678) ,
([2, 7, 11, 4, 9, 0, 1, 5, 3],) ,
('Computing match for mapping',) ,
([2, 7, 11, 4, 9, 0, 1, 5, 3],) ,
('saved value', 3.0836833486519146) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 5) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 3, '-', 5, ',', 7, '-', 1) ,
('Swap gain:', -3.0) ,
([2, 7, 11, 5, 9, 0, 4, 1, 3],) ,
('Computing match for mapping',) ,
([2, 7, 11, 5, 9, 0, 4, 1, 3],) ,
('saved value', 3.9900884008374824) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 3) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 3, '-', 3, ',', 8, '-', 1) ,
('Swap gain:', -0.30510463163936685) ,
([2, 7, 11, 3, 9, 0, 4, 5, 1],) ,
('Computing match for mapping',) ,
([2, 7, 11, 3, 9, 0, 4, 5, 1],) ,
('saved value', 6.684983769198116) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 0) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([2, 7, 11, 1, 0, 9, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 0, 9, 4, 5, 3],) ,
('saved value', 4.990088400837482) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 4) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([2, 7, 11, 1, 4, 0, 9, 5, 3],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 4, 0, 9, 5, 3],) ,
('saved value', 3.0836833486519146) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 5) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 4, '-', 5, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([2, 7, 11, 1, 5, 0, 4, 9, 3],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 5, 0, 4, 9, 3],) ,
('saved value', 3.9900884008374824) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 3) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 4, '-', 3, ',', 8, '-', 9) ,
('Swap gain:', -1.0) ,
([2, 7, 11, 1, 3, 0, 4, 5, 9],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 3, 0, 4, 5, 9],) ,
('saved value', 5.990088400837482) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 4) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -2.9064050521855678) ,
([2, 7, 11, 1, 9, 4, 0, 5, 3],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 4, 0, 5, 3],) ,
('saved value', 4.083683348651915) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 5) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 5, '-', 5, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 7, 11, 1, 9, 5, 4, 0, 3],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 5, 4, 0, 3],) ,
('saved value', 3.9900884008374824) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 3) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 5, '-', 3, ',', 8, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 7, 11, 1, 9, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 3, 4, 5, 0],) ,
('saved value', 5.990088400837482) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 5) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 6, '-', 5, ',', 7, '-', 4) ,
('Swap gain:', -2.155025608036605) ,
([2, 7, 11, 1, 9, 0, 5, 4, 3],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 5, 4, 3],) ,
('saved value', 4.835062792800878) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 4, ',', 8, '-', 3) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 6, '-', 3, ',', 8, '-', 4) ,
('Swap gain:', -2.9064050521855678) ,
([2, 7, 11, 1, 9, 0, 3, 5, 4],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 3, 5, 4],) ,
('saved value', 4.083683348651915) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 5, ',', 8, '-', 3) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('After swapping:', 7, '-', 3, ',', 8, '-', 5) ,
('Swap gain:', -2.0) ,
([2, 7, 11, 1, 9, 0, 4, 3, 5],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 3, 5],) ,
('saved value', 4.990088400837482) ,
('Use move gain',) ,
('Original mapping', [2, 7, 11, 1, 9, 0, 4, 5, 3]) ,
('Current mapping', [2, 7, 11, 1, 9, 0, 4, 5, 6]) ,
('Gain after the hill-climbing', 0.6948953683606331) ,
('Update triple match number to:', 7.684983769198116) ,
('Current mapping:', [2, 7, 11, 1, 9, 0, 4, 5, 6]) ,
('Remap node', 0, 'from ', 2, 'to', 3) ,
('Move gain:', -0.3803257317267639) ,
('Computing match for mapping',) ,
([3, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.304658037471352) ,
('Remap node', 0, 'from ', 2, 'to', 8) ,
('Move gain:', -0.3803257317267639) ,
('Computing match for mapping',) ,
([8, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.304658037471352) ,
('Remap node', 0, 'from ', 2, 'to', 10) ,
('Move gain:', -0.04092478038641684) ,
('Computing match for mapping',) ,
([10, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.6440589888116985) ,
('Remap node', 1, 'from ', 7, 'to', 3) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([2, 3, 11, 1, 9, 0, 4, 5, 6],) ,
('saved value', 6.981626152272965) ,
('Remap node', 1, 'from ', 7, 'to', 8) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([2, 8, 11, 1, 9, 0, 4, 5, 6],) ,
('saved value', 6.981626152272965) ,
('Remap node', 1, 'from ', 7, 'to', 10) ,
('Move gain:', 0.04559979363343991) ,
('Computing match for mapping',) ,
([2, 10, 11, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.730583562831556) ,
('Remap node', 2, 'from ', 11, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 7, 3, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.684983769198116) ,
('Remap node', 2, 'from ', 11, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 7, 8, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.684983769198116) ,
('Remap node', 2, 'from ', 11, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 7, 10, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.684983769198116) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 3, 9, 0, 4, 5, 6],) ,
('saved value', 6.684983769198116) ,
('Remap node', 3, 'from ', 1, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 8, 9, 0, 4, 5, 6],) ,
('saved value', 6.684983769198116) ,
('Remap node', 3, 'from ', 1, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 10, 9, 0, 4, 5, 6],) ,
('saved value', 6.684983769198116) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 3, 0, 4, 5, 6],) ,
('saved value', 6.684983769198116) ,
('Remap node', 4, 'from ', 9, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 8, 0, 4, 5, 6],) ,
('saved value', 6.684983769198116) ,
('Remap node', 4, 'from ', 9, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 10, 0, 4, 5, 6],) ,
('saved value', 6.684983769198116) ,
('Remap node', 5, 'from ', 0, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 3, 4, 5, 6],) ,
('saved value', 6.684983769198116) ,
('Remap node', 5, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 8, 4, 5, 6],) ,
('saved value', 6.684983769198116) ,
('Remap node', 5, 'from ', 0, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 10, 4, 5, 6],) ,
('saved value', 6.684983769198116) ,
('Remap node', 6, 'from ', 4, 'to', 3) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 3, 5, 6],) ,
('saved value', 4.778578717012548) ,
('Remap node', 6, 'from ', 4, 'to', 8) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 8, 5, 6],) ,
('saved value', 4.778578717012548) ,
('Remap node', 6, 'from ', 4, 'to', 10) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 10, 5, 6],) ,
('saved value', 5.684983769198116) ,
('Remap node', 7, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 3, 6],) ,
('saved value', 5.684983769198116) ,
('Remap node', 7, 'from ', 5, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 8, 6],) ,
('saved value', 5.684983769198116) ,
('Remap node', 7, 'from ', 5, 'to', 10) ,
('Move gain:', -1.1239719692006709) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 10, 6],) ,
('saved value', 6.561011799997445) ,
('Remap node', 8, 'from ', 6, 'to', 3) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 5, 3],) ,
('saved value', 6.990088400837482) ,
('Remap node', 8, 'from ', 6, 'to', 8) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 5, 8],) ,
('saved value', 6.990088400837482) ,
('Remap node', 8, 'from ', 6, 'to', 10) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 5, 10],) ,
('saved value', 6.990088400837482) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 7) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 2) ,
('Swap gain:', 0.06303800347294386) ,
([7, 2, 11, 1, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 2, 11, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.748021772671059) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 11) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 11, ',', 2, '-', 2) ,
('Swap gain:', -0.037758163314435045) ,
([11, 7, 2, 1, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([11, 7, 2, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.647225605883681) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 1) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -0.8714571486329779) ,
([1, 7, 11, 2, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 7, 11, 2, 9, 0, 4, 5, 6],) ,
('saved value', 6.813526620565138) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 9) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -0.38032573172676387) ,
([9, 7, 11, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([9, 7, 11, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.304658037471352) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 0) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -1.3803257317267639) ,
([0, 7, 11, 1, 9, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 7, 11, 1, 9, 2, 4, 5, 6],) ,
('saved value', 6.304658037471352) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 4) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -2.1932877480708735) ,
([4, 7, 11, 1, 9, 0, 2, 5, 6],) ,
('Computing match for mapping',) ,
([4, 7, 11, 1, 9, 0, 2, 5, 6],) ,
('saved value', 5.491696021127242) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 2, ',', 7, '-', 5) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 7, '-', 2) ,
('Swap gain:', -1.1965327297872934) ,
([5, 7, 11, 1, 9, 0, 4, 2, 6],) ,
('Computing match for mapping',) ,
([5, 7, 11, 1, 9, 0, 4, 2, 6],) ,
('saved value', 6.488451039410823) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 2, ',', 8, '-', 6) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 8, '-', 2) ,
('Swap gain:', -1.075221100087397) ,
([6, 7, 11, 1, 9, 0, 4, 5, 2],) ,
('Computing match for mapping',) ,
([6, 7, 11, 1, 9, 0, 4, 5, 2],) ,
('saved value', 6.609762669110719) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 11) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 11, ',', 2, '-', 7) ,
('Swap gain:', 0.0948733043479365) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.779857073546053) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 1) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 7) ,
('Swap gain:', -0.7033576169251505) ,
([2, 1, 11, 7, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 11, 7, 9, 0, 4, 5, 6],) ,
('saved value', 6.981626152272965) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 9) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 7) ,
('Swap gain:', -1.7033576169251505) ,
([2, 9, 11, 1, 7, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 9, 11, 1, 7, 0, 4, 5, 6],) ,
('saved value', 5.981626152272965) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 0) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 7) ,
('Swap gain:', -1.7033576169251505) ,
([2, 0, 11, 1, 9, 7, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 0, 11, 1, 9, 7, 4, 5, 6],) ,
('saved value', 5.981626152272965) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', 4) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', -2.1844462391051223) ,
([2, 4, 11, 1, 9, 0, 7, 5, 6],) ,
('Computing match for mapping',) ,
([2, 4, 11, 1, 9, 0, 7, 5, 6],) ,
('saved value', 5.500537530092993) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 5) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 7, '-', 7) ,
('Swap gain:', -1.2064872477029356) ,
([2, 5, 11, 1, 9, 0, 4, 7, 6],) ,
('Computing match for mapping',) ,
([2, 5, 11, 1, 9, 0, 4, 7, 6],) ,
('saved value', 6.47849652149518) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 7, ',', 8, '-', 6) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 8, '-', 7) ,
('Swap gain:', -1.3982529852857837) ,
([2, 6, 11, 1, 9, 0, 4, 5, 7],) ,
('Computing match for mapping',) ,
([2, 6, 11, 1, 9, 0, 4, 5, 7],) ,
('saved value', 6.286730783912332) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 11, ',', 3, '-', 1) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 11) ,
('Swap gain:', -1.0) ,
([2, 7, 1, 11, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 7, 1, 11, 9, 0, 4, 5, 6],) ,
('saved value', 6.684983769198116) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 11, ',', 4, '-', 9) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 11) ,
('Swap gain:', -1.0) ,
([2, 7, 9, 1, 11, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 7, 9, 1, 11, 0, 4, 5, 6],) ,
('saved value', 6.684983769198116) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 11, ',', 5, '-', 0) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 11) ,
('Swap gain:', -1.0) ,
([2, 7, 0, 1, 9, 11, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 7, 0, 1, 9, 11, 4, 5, 6],) ,
('saved value', 6.684983769198116) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 11, ',', 6, '-', 4) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 11) ,
('Swap gain:', -2.0310536388359344) ,
([2, 7, 4, 1, 9, 0, 11, 5, 6],) ,
('Computing match for mapping',) ,
([2, 7, 4, 1, 9, 0, 11, 5, 6],) ,
('saved value', 5.653930130362181) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 11, ',', 7, '-', 5) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 7, '-', 11) ,
('Swap gain:', -1.0) ,
([2, 7, 5, 1, 9, 0, 4, 11, 6],) ,
('Computing match for mapping',) ,
([2, 7, 5, 1, 9, 0, 4, 11, 6],) ,
('saved value', 6.684983769198116) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 11, ',', 8, '-', 6) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 8, '-', 11) ,
('Swap gain:', -0.6948953683606331) ,
([2, 7, 6, 1, 9, 0, 4, 5, 11],) ,
('Computing match for mapping',) ,
([2, 7, 6, 1, 9, 0, 4, 5, 11],) ,
('saved value', 6.990088400837482) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([2, 7, 11, 9, 1, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 7, 11, 9, 1, 0, 4, 5, 6],) ,
('saved value', 5.684983769198116) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 0) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([2, 7, 11, 0, 9, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 7, 11, 0, 9, 1, 4, 5, 6],) ,
('saved value', 5.684983769198116) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 4) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -3.9064050521855678) ,
([2, 7, 11, 4, 9, 0, 1, 5, 6],) ,
('Computing match for mapping',) ,
([2, 7, 11, 4, 9, 0, 1, 5, 6],) ,
('saved value', 3.778578717012548) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 5) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 7, '-', 1) ,
('Swap gain:', -3.0) ,
([2, 7, 11, 5, 9, 0, 4, 1, 6],) ,
('Computing match for mapping',) ,
([2, 7, 11, 5, 9, 0, 4, 1, 6],) ,
('saved value', 4.684983769198116) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 6) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 8, '-', 1) ,
('Swap gain:', 0.0) ,
([2, 7, 11, 6, 9, 0, 4, 5, 1],) ,
('Computing match for mapping',) ,
([2, 7, 11, 6, 9, 0, 4, 5, 1],) ,
('saved value', 7.684983769198116) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 0) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([2, 7, 11, 1, 0, 9, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 0, 9, 4, 5, 6],) ,
('saved value', 5.684983769198116) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 4) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([2, 7, 11, 1, 4, 0, 9, 5, 6],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 4, 0, 9, 5, 6],) ,
('saved value', 3.778578717012548) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 5) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([2, 7, 11, 1, 5, 0, 4, 9, 6],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 5, 0, 4, 9, 6],) ,
('saved value', 4.684983769198116) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 6) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 8, '-', 9) ,
('Swap gain:', -1.6948953683606331) ,
([2, 7, 11, 1, 6, 0, 4, 5, 9],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 6, 0, 4, 5, 9],) ,
('saved value', 5.990088400837482) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 4) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -2.9064050521855678) ,
([2, 7, 11, 1, 9, 4, 0, 5, 6],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 4, 0, 5, 6],) ,
('saved value', 4.778578717012548) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 5) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 5, '-', 5, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 7, 11, 1, 9, 5, 4, 0, 6],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 5, 4, 0, 6],) ,
('saved value', 4.684983769198116) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 6) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 8, '-', 0) ,
('Swap gain:', -1.6948953683606331) ,
([2, 7, 11, 1, 9, 6, 4, 5, 0],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 6, 4, 5, 0],) ,
('saved value', 5.990088400837482) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 5) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 6, '-', 5, ',', 7, '-', 4) ,
('Swap gain:', -2.155025608036605) ,
([2, 7, 11, 1, 9, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 5, 4, 6],) ,
('saved value', 5.529958161161511) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 4, ',', 8, '-', 6) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 6, '-', 6, ',', 8, '-', 4) ,
('Swap gain:', -3.6013004205462007) ,
([2, 7, 11, 1, 9, 0, 6, 5, 4],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 6, 5, 4],) ,
('saved value', 4.083683348651915) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 5, ',', 8, '-', 6) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 7, '-', 6, ',', 8, '-', 5) ,
('Swap gain:', -2.6948953683606334) ,
([2, 7, 11, 1, 9, 0, 4, 6, 5],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 6, 5],) ,
('saved value', 4.990088400837482) ,
('Use swap gain',) ,
('Original mapping', [2, 7, 11, 1, 9, 0, 4, 5, 6]) ,
('Current mapping', [2, 11, 7, 1, 9, 0, 4, 5, 6]) ,
('Gain after the hill-climbing', 0.0948733043479365) ,
('Update triple match number to:', 7.779857073546053) ,
('Current mapping:', [2, 11, 7, 1, 9, 0, 4, 5, 6]) ,
('Remap node', 0, 'from ', 2, 'to', 3) ,
('Move gain:', -0.3803257317267639) ,
('Computing match for mapping',) ,
([3, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.399531341819289) ,
('Remap node', 0, 'from ', 2, 'to', 8) ,
('Move gain:', -0.3803257317267639) ,
('Computing match for mapping',) ,
([8, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.399531341819289) ,
('Remap node', 0, 'from ', 2, 'to', 10) ,
('Move gain:', -0.04092478038641684) ,
('Computing match for mapping',) ,
([10, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.738932293159635) ,
('Remap node', 1, 'from ', 11, 'to', 3) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([2, 3, 7, 1, 9, 0, 4, 5, 6],) ,
('saved value', 6.981626152272965) ,
('Remap node', 1, 'from ', 11, 'to', 8) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([2, 8, 7, 1, 9, 0, 4, 5, 6],) ,
('saved value', 6.981626152272965) ,
('Remap node', 1, 'from ', 11, 'to', 10) ,
('Move gain:', -0.04927351071449659) ,
('Computing match for mapping',) ,
([2, 10, 7, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.730583562831556) ,
('Remap node', 2, 'from ', 7, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 11, 3, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.779857073546053) ,
('Remap node', 2, 'from ', 7, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 11, 8, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.779857073546053) ,
('Remap node', 2, 'from ', 7, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 11, 10, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.779857073546053) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 11, 7, 3, 9, 0, 4, 5, 6],) ,
('saved value', 6.779857073546053) ,
('Remap node', 3, 'from ', 1, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 11, 7, 8, 9, 0, 4, 5, 6],) ,
('saved value', 6.779857073546053) ,
('Remap node', 3, 'from ', 1, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 11, 7, 10, 9, 0, 4, 5, 6],) ,
('saved value', 6.779857073546053) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 3, 0, 4, 5, 6],) ,
('saved value', 6.779857073546053) ,
('Remap node', 4, 'from ', 9, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 8, 0, 4, 5, 6],) ,
('saved value', 6.779857073546053) ,
('Remap node', 4, 'from ', 9, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 10, 0, 4, 5, 6],) ,
('saved value', 6.779857073546053) ,
('Remap node', 5, 'from ', 0, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 3, 4, 5, 6],) ,
('saved value', 6.779857073546053) ,
('Remap node', 5, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 8, 4, 5, 6],) ,
('saved value', 6.779857073546053) ,
('Remap node', 5, 'from ', 0, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 10, 4, 5, 6],) ,
('saved value', 6.779857073546053) ,
('Remap node', 6, 'from ', 4, 'to', 3) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 0, 3, 5, 6],) ,
('saved value', 4.873452021360485) ,
('Remap node', 6, 'from ', 4, 'to', 8) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 0, 8, 5, 6],) ,
('saved value', 4.873452021360485) ,
('Remap node', 6, 'from ', 4, 'to', 10) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 0, 10, 5, 6],) ,
('saved value', 5.779857073546053) ,
('Remap node', 7, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 0, 4, 3, 6],) ,
('saved value', 5.779857073546053) ,
('Remap node', 7, 'from ', 5, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 0, 4, 8, 6],) ,
('saved value', 5.779857073546053) ,
('Remap node', 7, 'from ', 5, 'to', 10) ,
('Move gain:', -1.1239719692006709) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 0, 4, 10, 6],) ,
('saved value', 6.655885104345382) ,
('Remap node', 8, 'from ', 6, 'to', 3) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 0, 4, 5, 3],) ,
('saved value', 7.084961705185419) ,
('Remap node', 8, 'from ', 6, 'to', 8) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 0, 4, 5, 8],) ,
('saved value', 7.084961705185419) ,
('Remap node', 8, 'from ', 6, 'to', 10) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 0, 4, 5, 10],) ,
('saved value', 7.084961705185419) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 11) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 11, ',', 1, '-', 2) ,
('Swap gain:', 0.018034495289178998) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.797891568835231) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 7) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 2) ,
('Swap gain:', -0.08762795947860663) ,
([7, 11, 2, 1, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 11, 2, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.692229114067446) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 1) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -0.8714571486329779) ,
([1, 11, 7, 2, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 11, 7, 2, 9, 0, 4, 5, 6],) ,
('saved value', 6.908399924913075) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 9) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -0.38032573172676387) ,
([9, 11, 7, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([9, 11, 7, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.399531341819289) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 0) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -1.3803257317267639) ,
([0, 11, 7, 1, 9, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 11, 7, 1, 9, 2, 4, 5, 6],) ,
('saved value', 6.399531341819289) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 4) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -2.1932877480708735) ,
([4, 11, 7, 1, 9, 0, 2, 5, 6],) ,
('Computing match for mapping',) ,
([4, 11, 7, 1, 9, 0, 2, 5, 6],) ,
('saved value', 5.586569325475179) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 2, ',', 7, '-', 5) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 7, '-', 2) ,
('Swap gain:', -1.1965327297872934) ,
([5, 11, 7, 1, 9, 0, 4, 2, 6],) ,
('Computing match for mapping',) ,
([5, 11, 7, 1, 9, 0, 4, 2, 6],) ,
('saved value', 6.583324343758759) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 2, ',', 8, '-', 6) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 8, '-', 2) ,
('Swap gain:', -1.075221100087397) ,
([6, 11, 7, 1, 9, 0, 4, 5, 2],) ,
('Computing match for mapping',) ,
([6, 11, 7, 1, 9, 0, 4, 5, 2],) ,
('saved value', 6.704635973458656) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 11, ',', 2, '-', 7) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 11) ,
('Swap gain:', -0.09487330434793684) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 7, 11, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.684983769198116) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 11, ',', 3, '-', 1) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 11) ,
('Swap gain:', -0.798230921273087) ,
([2, 1, 7, 11, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 11, 9, 0, 4, 5, 6],) ,
('saved value', 6.981626152272965) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 11, ',', 4, '-', 9) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 11) ,
('Swap gain:', -1.798230921273087) ,
([2, 9, 7, 1, 11, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 9, 7, 1, 11, 0, 4, 5, 6],) ,
('saved value', 5.981626152272966) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 11, ',', 5, '-', 0) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 11) ,
('Swap gain:', -1.798230921273087) ,
([2, 0, 7, 1, 9, 11, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 0, 7, 1, 9, 11, 4, 5, 6],) ,
('saved value', 5.981626152272966) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 11, ',', 6, '-', 4) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 11) ,
('Swap gain:', -2.0803271495504307) ,
([2, 4, 7, 1, 9, 0, 11, 5, 6],) ,
('Computing match for mapping',) ,
([2, 4, 7, 1, 9, 0, 11, 5, 6],) ,
('saved value', 5.699529923995621) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 11, ',', 7, '-', 5) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 7, '-', 11) ,
('Swap gain:', -1.0) ,
([2, 5, 7, 1, 9, 0, 4, 11, 6],) ,
('Computing match for mapping',) ,
([2, 5, 7, 1, 9, 0, 4, 11, 6],) ,
('saved value', 6.779857073546053) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 11, ',', 8, '-', 6) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 8, '-', 11) ,
('Swap gain:', -1.4931262896337203) ,
([2, 6, 7, 1, 9, 0, 4, 5, 11],) ,
('Computing match for mapping',) ,
([2, 6, 7, 1, 9, 0, 4, 5, 11],) ,
('saved value', 6.286730783912333) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 1) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 7) ,
('Swap gain:', -1.0) ,
([2, 11, 1, 7, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 11, 1, 7, 9, 0, 4, 5, 6],) ,
('saved value', 6.779857073546053) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 9) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 7) ,
('Swap gain:', -1.0) ,
([2, 11, 9, 1, 7, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 11, 9, 1, 7, 0, 4, 5, 6],) ,
('saved value', 6.779857073546053) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 0) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 7) ,
('Swap gain:', -1.0) ,
([2, 11, 0, 1, 9, 7, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 11, 0, 1, 9, 7, 4, 5, 6],) ,
('saved value', 6.779857073546053) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 4) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', -2.2300460327385623) ,
([2, 11, 4, 1, 9, 0, 7, 5, 6],) ,
('Computing match for mapping',) ,
([2, 11, 4, 1, 9, 0, 7, 5, 6],) ,
('saved value', 5.549811040807491) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 5) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 7, '-', 7) ,
('Swap gain:', -1.301360552050872) ,
([2, 11, 5, 1, 9, 0, 4, 7, 6],) ,
('Computing match for mapping',) ,
([2, 11, 5, 1, 9, 0, 4, 7, 6],) ,
('saved value', 6.478496521495181) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 7, ',', 8, '-', 6) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 8, '-', 7) ,
('Swap gain:', -0.6948953683606331) ,
([2, 11, 6, 1, 9, 0, 4, 5, 7],) ,
('Computing match for mapping',) ,
([2, 11, 6, 1, 9, 0, 4, 5, 7],) ,
('saved value', 7.084961705185419) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([2, 11, 7, 9, 1, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 11, 7, 9, 1, 0, 4, 5, 6],) ,
('saved value', 5.779857073546053) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 0) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([2, 11, 7, 0, 9, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 11, 7, 0, 9, 1, 4, 5, 6],) ,
('saved value', 5.779857073546053) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 4) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -3.9064050521855678) ,
([2, 11, 7, 4, 9, 0, 1, 5, 6],) ,
('Computing match for mapping',) ,
([2, 11, 7, 4, 9, 0, 1, 5, 6],) ,
('saved value', 3.873452021360485) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 5) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 7, '-', 1) ,
('Swap gain:', -3.0) ,
([2, 11, 7, 5, 9, 0, 4, 1, 6],) ,
('Computing match for mapping',) ,
([2, 11, 7, 5, 9, 0, 4, 1, 6],) ,
('saved value', 4.779857073546053) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 6) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 8, '-', 1) ,
('Swap gain:', 0.0) ,
([2, 11, 7, 6, 9, 0, 4, 5, 1],) ,
('Computing match for mapping',) ,
([2, 11, 7, 6, 9, 0, 4, 5, 1],) ,
('saved value', 7.779857073546053) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 0) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([2, 11, 7, 1, 0, 9, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 0, 9, 4, 5, 6],) ,
('saved value', 5.779857073546053) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 4) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([2, 11, 7, 1, 4, 0, 9, 5, 6],) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 4, 0, 9, 5, 6],) ,
('saved value', 3.873452021360485) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 5) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([2, 11, 7, 1, 5, 0, 4, 9, 6],) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 5, 0, 4, 9, 6],) ,
('saved value', 4.779857073546053) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 6) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 8, '-', 9) ,
('Swap gain:', -1.6948953683606331) ,
([2, 11, 7, 1, 6, 0, 4, 5, 9],) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 6, 0, 4, 5, 9],) ,
('saved value', 6.084961705185419) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 4) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -2.9064050521855678) ,
([2, 11, 7, 1, 9, 4, 0, 5, 6],) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 4, 0, 5, 6],) ,
('saved value', 4.873452021360485) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 5) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 5, '-', 5, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 11, 7, 1, 9, 5, 4, 0, 6],) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 5, 4, 0, 6],) ,
('saved value', 4.779857073546053) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 6) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 8, '-', 0) ,
('Swap gain:', -1.6948953683606331) ,
([2, 11, 7, 1, 9, 6, 4, 5, 0],) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 6, 4, 5, 0],) ,
('saved value', 6.084961705185419) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 5) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 6, '-', 5, ',', 7, '-', 4) ,
('Swap gain:', -2.155025608036605) ,
([2, 11, 7, 1, 9, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 0, 5, 4, 6],) ,
('saved value', 5.624831465509448) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 4, ',', 8, '-', 6) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 6, '-', 6, ',', 8, '-', 4) ,
('Swap gain:', -3.6013004205462007) ,
([2, 11, 7, 1, 9, 0, 6, 5, 4],) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 0, 6, 5, 4],) ,
('saved value', 4.178556652999852) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 5, ',', 8, '-', 6) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 7, '-', 6, ',', 8, '-', 5) ,
('Swap gain:', -2.6948953683606334) ,
([2, 11, 7, 1, 9, 0, 4, 6, 5],) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 0, 4, 6, 5],) ,
('saved value', 5.084961705185419) ,
('Use swap gain',) ,
('Original mapping', [2, 11, 7, 1, 9, 0, 4, 5, 6]) ,
('Current mapping', [11, 2, 7, 1, 9, 0, 4, 5, 6]) ,
('Gain after the hill-climbing', 0.018034495289178998) ,
('Update triple match number to:', 7.797891568835231) ,
('Current mapping:', [11, 2, 7, 1, 9, 0, 4, 5, 6]) ,
('Remap node', 0, 'from ', 11, 'to', 3) ,
('Move gain:', -0.3425675684123289) ,
('Computing match for mapping',) ,
([3, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.455324000422903) ,
('Remap node', 0, 'from ', 11, 'to', 8) ,
('Move gain:', -0.3425675684123289) ,
('Computing match for mapping',) ,
([8, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.455324000422903) ,
('Remap node', 0, 'from ', 11, 'to', 10) ,
('Move gain:', -0.003166617071981792) ,
('Computing match for mapping',) ,
([10, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.794724951763249) ,
('Remap node', 1, 'from ', 2, 'to', 3) ,
('Move gain:', -0.854023579876701) ,
('Computing match for mapping',) ,
([11, 3, 7, 1, 9, 0, 4, 5, 6],) ,
('saved value', 6.94386798895853) ,
('Remap node', 1, 'from ', 2, 'to', 8) ,
('Move gain:', -0.854023579876701) ,
('Computing match for mapping',) ,
([11, 8, 7, 1, 9, 0, 4, 5, 6],) ,
('saved value', 6.94386798895853) ,
('Remap node', 1, 'from ', 2, 'to', 10) ,
('Move gain:', -0.10506616931811052) ,
('Computing match for mapping',) ,
([11, 10, 7, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.692825399517121) ,
('Remap node', 2, 'from ', 7, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([11, 2, 3, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.797891568835231) ,
('Remap node', 2, 'from ', 7, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([11, 2, 8, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.797891568835231) ,
('Remap node', 2, 'from ', 7, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([11, 2, 10, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.797891568835231) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([11, 2, 7, 3, 9, 0, 4, 5, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 3, 'from ', 1, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([11, 2, 7, 8, 9, 0, 4, 5, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 3, 'from ', 1, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([11, 2, 7, 10, 9, 0, 4, 5, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 3, 0, 4, 5, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 4, 'from ', 9, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 8, 0, 4, 5, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 4, 'from ', 9, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 10, 0, 4, 5, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 5, 'from ', 0, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 3, 4, 5, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 5, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 8, 4, 5, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 5, 'from ', 0, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 10, 4, 5, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 6, 'from ', 4, 'to', 3) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 0, 3, 5, 6],) ,
('saved value', 4.891486516649664) ,
('Remap node', 6, 'from ', 4, 'to', 8) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 0, 8, 5, 6],) ,
('saved value', 4.891486516649664) ,
('Remap node', 6, 'from ', 4, 'to', 10) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 0, 10, 5, 6],) ,
('saved value', 5.797891568835231) ,
('Remap node', 7, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 0, 4, 3, 6],) ,
('saved value', 5.797891568835231) ,
('Remap node', 7, 'from ', 5, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 0, 4, 8, 6],) ,
('saved value', 5.797891568835231) ,
('Remap node', 7, 'from ', 5, 'to', 10) ,
('Move gain:', -1.1239719692006709) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 0, 4, 10, 6],) ,
('saved value', 6.67391959963456) ,
('Remap node', 8, 'from ', 6, 'to', 3) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 0, 4, 5, 3],) ,
('saved value', 7.102996200474598) ,
('Remap node', 8, 'from ', 6, 'to', 8) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 0, 4, 5, 8],) ,
('saved value', 7.102996200474598) ,
('Remap node', 8, 'from ', 6, 'to', 10) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 0, 4, 5, 10],) ,
('saved value', 7.102996200474598) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 11, ',', 1, '-', 2) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 11) ,
('Swap gain:', -0.018034495289178665) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 11, 7, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.779857073546053) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 11, ',', 2, '-', 7) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 11) ,
('Swap gain:', -0.04986979616417209) ,
([7, 2, 11, 1, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 2, 11, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.748021772671059) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 11, ',', 3, '-', 1) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 11) ,
('Swap gain:', -1.3425675684123288) ,
([1, 2, 7, 11, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 2, 7, 11, 9, 0, 4, 5, 6],) ,
('saved value', 6.455324000422903) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 11, ',', 4, '-', 9) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 11) ,
('Swap gain:', -1.3425675684123288) ,
([9, 2, 7, 1, 11, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([9, 2, 7, 1, 11, 0, 4, 5, 6],) ,
('saved value', 6.455324000422903) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 11, ',', 5, '-', 0) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 11) ,
('Swap gain:', -1.3425675684123288) ,
([0, 2, 7, 1, 9, 11, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 9, 11, 4, 5, 6],) ,
('saved value', 6.455324000422903) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 11, ',', 6, '-', 4) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 11) ,
('Swap gain:', -2.034220255907916) ,
([4, 2, 7, 1, 9, 0, 11, 5, 6],) ,
('Computing match for mapping',) ,
([4, 2, 7, 1, 9, 0, 11, 5, 6],) ,
('saved value', 5.763671312927315) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 11, ',', 7, '-', 5) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 7, '-', 11) ,
('Swap gain:', -1.0) ,
([5, 2, 7, 1, 9, 0, 4, 11, 6],) ,
('Computing match for mapping',) ,
([5, 2, 7, 1, 9, 0, 4, 11, 6],) ,
('saved value', 6.797891568835231) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 11, ',', 8, '-', 6) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 8, '-', 11) ,
('Swap gain:', -1.037462936772962) ,
([6, 2, 7, 1, 9, 0, 4, 5, 11],) ,
('Computing match for mapping',) ,
([6, 2, 7, 1, 9, 0, 4, 5, 11],) ,
('saved value', 6.760428632062269) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 7) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 2) ,
('Swap gain:', -0.15066596295155055) ,
([11, 7, 2, 1, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([11, 7, 2, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.647225605883681) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 1) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -0.34515499678291495) ,
([11, 1, 7, 2, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([11, 1, 7, 2, 9, 0, 4, 5, 6],) ,
('saved value', 7.452736572052316) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 9) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -0.854023579876701) ,
([11, 9, 7, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([11, 9, 7, 1, 2, 0, 4, 5, 6],) ,
('saved value', 6.94386798895853) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 0) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -1.854023579876701) ,
([11, 0, 7, 1, 9, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([11, 0, 7, 1, 9, 2, 4, 5, 6],) ,
('saved value', 5.94386798895853) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 4) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -2.257429137002567) ,
([11, 4, 7, 1, 9, 0, 2, 5, 6],) ,
('Computing match for mapping',) ,
([11, 4, 7, 1, 9, 0, 2, 5, 6],) ,
('saved value', 5.540462431832664) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 5) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 7, '-', 2) ,
('Swap gain:', -1.2145672250764723) ,
([11, 5, 7, 1, 9, 0, 4, 2, 6],) ,
('Computing match for mapping',) ,
([11, 5, 7, 1, 9, 0, 4, 2, 6],) ,
('saved value', 6.583324343758759) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 2, ',', 8, '-', 6) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 8, '-', 2) ,
('Swap gain:', -1.548918948237334) ,
([11, 6, 7, 1, 9, 0, 4, 5, 2],) ,
('Computing match for mapping',) ,
([11, 6, 7, 1, 9, 0, 4, 5, 2],) ,
('saved value', 6.248972620597897) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 1) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 7) ,
('Swap gain:', -1.0) ,
([11, 2, 1, 7, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([11, 2, 1, 7, 9, 0, 4, 5, 6],) ,
('saved value', 6.797891568835231) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 9) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 7) ,
('Swap gain:', -1.0) ,
([11, 2, 9, 1, 7, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([11, 2, 9, 1, 7, 0, 4, 5, 6],) ,
('saved value', 6.797891568835231) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 0) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 7) ,
('Swap gain:', -1.0) ,
([11, 2, 0, 1, 9, 7, 4, 5, 6],) ,
('Computing match for mapping',) ,
([11, 2, 0, 1, 9, 7, 4, 5, 6],) ,
('saved value', 6.797891568835231) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 4) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', -2.2300460327385623) ,
([11, 2, 4, 1, 9, 0, 7, 5, 6],) ,
('Computing match for mapping',) ,
([11, 2, 4, 1, 9, 0, 7, 5, 6],) ,
('saved value', 5.567845536096669) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 5) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 7, '-', 7) ,
('Swap gain:', -1.301360552050872) ,
([11, 2, 5, 1, 9, 0, 4, 7, 6],) ,
('Computing match for mapping',) ,
([11, 2, 5, 1, 9, 0, 4, 7, 6],) ,
('saved value', 6.49653101678436) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 7, ',', 8, '-', 6) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 8, '-', 7) ,
('Swap gain:', -0.6948953683606331) ,
([11, 2, 6, 1, 9, 0, 4, 5, 7],) ,
('Computing match for mapping',) ,
([11, 2, 6, 1, 9, 0, 4, 5, 7],) ,
('saved value', 7.102996200474598) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([11, 2, 7, 9, 1, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([11, 2, 7, 9, 1, 0, 4, 5, 6],) ,
('saved value', 5.797891568835231) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 0) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([11, 2, 7, 0, 9, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([11, 2, 7, 0, 9, 1, 4, 5, 6],) ,
('saved value', 5.797891568835231) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 4) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -3.9064050521855678) ,
([11, 2, 7, 4, 9, 0, 1, 5, 6],) ,
('Computing match for mapping',) ,
([11, 2, 7, 4, 9, 0, 1, 5, 6],) ,
('saved value', 3.8914865166496635) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 5) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 7, '-', 1) ,
('Swap gain:', -3.0) ,
([11, 2, 7, 5, 9, 0, 4, 1, 6],) ,
('Computing match for mapping',) ,
([11, 2, 7, 5, 9, 0, 4, 1, 6],) ,
('saved value', 4.797891568835231) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 6) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 8, '-', 1) ,
('Swap gain:', 0.0) ,
([11, 2, 7, 6, 9, 0, 4, 5, 1],) ,
('Computing match for mapping',) ,
([11, 2, 7, 6, 9, 0, 4, 5, 1],) ,
('saved value', 7.797891568835231) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 0) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([11, 2, 7, 1, 0, 9, 4, 5, 6],) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 0, 9, 4, 5, 6],) ,
('saved value', 5.797891568835231) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 4) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([11, 2, 7, 1, 4, 0, 9, 5, 6],) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 4, 0, 9, 5, 6],) ,
('saved value', 3.8914865166496635) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 5) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([11, 2, 7, 1, 5, 0, 4, 9, 6],) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 5, 0, 4, 9, 6],) ,
('saved value', 4.797891568835231) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 6) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 8, '-', 9) ,
('Swap gain:', -1.6948953683606331) ,
([11, 2, 7, 1, 6, 0, 4, 5, 9],) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 6, 0, 4, 5, 9],) ,
('saved value', 6.102996200474598) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 4) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -2.9064050521855678) ,
([11, 2, 7, 1, 9, 4, 0, 5, 6],) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 4, 0, 5, 6],) ,
('saved value', 4.891486516649664) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 5) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 5, '-', 5, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([11, 2, 7, 1, 9, 5, 4, 0, 6],) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 5, 4, 0, 6],) ,
('saved value', 4.797891568835231) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 6) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 8, '-', 0) ,
('Swap gain:', -1.6948953683606331) ,
([11, 2, 7, 1, 9, 6, 4, 5, 0],) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 6, 4, 5, 0],) ,
('saved value', 6.102996200474598) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 5) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 6, '-', 5, ',', 7, '-', 4) ,
('Swap gain:', -2.155025608036605) ,
([11, 2, 7, 1, 9, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 0, 5, 4, 6],) ,
('saved value', 5.642865960798627) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 4, ',', 8, '-', 6) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 6, '-', 6, ',', 8, '-', 4) ,
('Swap gain:', -3.6013004205462007) ,
([11, 2, 7, 1, 9, 0, 6, 5, 4],) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 0, 6, 5, 4],) ,
('saved value', 4.196591148289031) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 5, ',', 8, '-', 6) ,
([11, 2, 7, 1, 9, 0, 4, 5, 6],) ,
('After swapping:', 7, '-', 6, ',', 8, '-', 5) ,
('Swap gain:', -2.6948953683606334) ,
([11, 2, 7, 1, 9, 0, 4, 6, 5],) ,
('Computing match for mapping',) ,
([11, 2, 7, 1, 9, 0, 4, 6, 5],) ,
('saved value', 5.102996200474598) ,
('no move/swap gain found',) ,
('Original mapping', [11, 2, 7, 1, 9, 0, 4, 5, 6]) ,
('Current mapping', [11, 2, 7, 1, 9, 0, 4, 5, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0.3394009513403471) ,
('node_pair', (1, 8)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 1.0) ,
('node_pair', (4, 11)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (7, 9)) ,
('instance/attribute match', 0.0) ,
('node_pair', (8, 5)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 1.339400951340347) ,
('Node mapping at start', [4, 8, 2, 1, 11, 6, 0, 9, 5]) ,
('Triple match number at start:', 1.339400951340347) ,
('Remap node', 0, 'from ', 4, 'to', 3) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([3, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('saved value', 1.0) ,
('Remap node', 0, 'from ', 4, 'to', 7) ,
('Move gain:', -0.046703179092189795) ,
('Computing match for mapping',) ,
([7, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('saved value', 1.2926977722481574) ,
('Remap node', 0, 'from ', 4, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([10, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Remap node', 1, 'from ', 8, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 11, 6, 0, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Remap node', 1, 'from ', 8, 'to', 7) ,
('Move gain:', 0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 7, 2, 1, 11, 6, 0, 9, 5],) ,
('saved value', 2.042758568265498) ,
('Remap node', 1, 'from ', 8, 'to', 10) ,
('Move gain:', 0.7489574105585904) ,
('Computing match for mapping',) ,
([4, 10, 2, 1, 11, 6, 0, 9, 5],) ,
('saved value', 2.0883583618989374) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 3, 1, 11, 6, 0, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 7, 1, 11, 6, 0, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Remap node', 2, 'from ', 2, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 10, 1, 11, 6, 0, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 3, 11, 6, 0, 9, 5],) ,
('saved value', 0.3394009513403471) ,
('Remap node', 3, 'from ', 1, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 7, 11, 6, 0, 9, 5],) ,
('saved value', 0.3394009513403471) ,
('Remap node', 3, 'from ', 1, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 10, 11, 6, 0, 9, 5],) ,
('saved value', 0.3394009513403471) ,
('Remap node', 4, 'from ', 11, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 3, 6, 0, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Remap node', 4, 'from ', 11, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 7, 6, 0, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Remap node', 4, 'from ', 11, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 10, 6, 0, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Remap node', 5, 'from ', 6, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 3, 0, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Remap node', 5, 'from ', 6, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 7, 0, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Remap node', 5, 'from ', 6, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 10, 0, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Remap node', 6, 'from ', 0, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 6, 3, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Remap node', 6, 'from ', 0, 'to', 7) ,
('Move gain:', 0.6763590194470055) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 6, 7, 9, 5],) ,
('saved value', 2.015759970787353) ,
('Remap node', 6, 'from ', 0, 'to', 10) ,
('Move gain:', 0.9064050521855679) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 6, 10, 9, 5],) ,
('saved value', 2.245806003525915) ,
('Remap node', 7, 'from ', 9, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 6, 0, 3, 5],) ,
('saved value', 1.339400951340347) ,
('Remap node', 7, 'from ', 9, 'to', 7) ,
('Move gain:', 0.698639447949128) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 6, 0, 7, 5],) ,
('saved value', 2.038040399289475) ,
('Remap node', 7, 'from ', 9, 'to', 10) ,
('Move gain:', 0.8760280307993291) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 6, 0, 10, 5],) ,
('saved value', 2.2154289821396764) ,
('Remap node', 8, 'from ', 5, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 6, 0, 9, 3],) ,
('saved value', 1.339400951340347) ,
('Remap node', 8, 'from ', 5, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 6, 0, 9, 7],) ,
('saved value', 1.339400951340347) ,
('Remap node', 8, 'from ', 5, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 6, 0, 9, 10],) ,
('saved value', 1.339400951340347) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 8) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 0, '-', 8, ',', 1, '-', 4) ,
('Swap gain:', 0.40955645921824335) ,
([8, 4, 2, 1, 11, 6, 0, 9, 5],) ,
('Computing match for mapping',) ,
([8, 4, 2, 1, 11, 6, 0, 9, 5],) ,
('saved value', 1.7489574105585906) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 2) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', 0.04092478038641684) ,
([2, 8, 4, 1, 11, 6, 0, 9, 5],) ,
('Computing match for mapping',) ,
([2, 8, 4, 1, 11, 6, 0, 9, 5],) ,
('saved value', 1.3803257317267639) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 1) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([1, 8, 2, 4, 11, 6, 0, 9, 5],) ,
('Computing match for mapping',) ,
([1, 8, 2, 4, 11, 6, 0, 9, 5],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 11) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 0, '-', 11, ',', 4, '-', 4) ,
('Swap gain:', 0.003166617071981792) ,
([11, 8, 2, 1, 4, 6, 0, 9, 5],) ,
('Computing match for mapping',) ,
([11, 8, 2, 1, 4, 6, 0, 9, 5],) ,
('saved value', 1.3425675684123288) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 6) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -0.3394009513403471) ,
([6, 8, 2, 1, 11, 4, 0, 9, 5],) ,
('Computing match for mapping',) ,
([6, 8, 2, 1, 11, 4, 0, 9, 5],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 0) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 0, '-', 0, ',', 6, '-', 4) ,
('Swap gain:', 0.5670041008452208) ,
([0, 8, 2, 1, 11, 6, 4, 9, 5],) ,
('Computing match for mapping',) ,
([0, 8, 2, 1, 11, 6, 4, 9, 5],) ,
('saved value', 1.9064050521855678) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 9) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 0, '-', 9, ',', 7, '-', 4) ,
('Swap gain:', 0.536627079458982) ,
([9, 8, 2, 1, 11, 6, 0, 4, 5],) ,
('Computing match for mapping',) ,
([9, 8, 2, 1, 11, 6, 0, 4, 5],) ,
('saved value', 1.8760280307993291) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 5) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', 0.003166617071981792) ,
([5, 8, 2, 1, 11, 6, 0, 9, 4],) ,
('Computing match for mapping',) ,
([5, 8, 2, 1, 11, 6, 0, 9, 4],) ,
('saved value', 1.3425675684123288) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 8, ',', 2, '-', 2) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 8) ,
('Swap gain:', 0.854023579876701) ,
([4, 2, 8, 1, 11, 6, 0, 9, 5],) ,
('Computing match for mapping',) ,
([4, 2, 8, 1, 11, 6, 0, 9, 5],) ,
('saved value', 2.193424531217048) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 8, ',', 3, '-', 1) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 8) ,
('Swap gain:', -1.0) ,
([4, 1, 2, 8, 11, 6, 0, 9, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 8, 11, 6, 0, 9, 5],) ,
('saved value', 0.3394009513403471) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 8, ',', 4, '-', 11) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 1, '-', 11, ',', 4, '-', 8) ,
('Swap gain:', 0.798230921273087) ,
([4, 11, 2, 1, 8, 6, 0, 9, 5],) ,
('Computing match for mapping',) ,
([4, 11, 2, 1, 8, 6, 0, 9, 5],) ,
('saved value', 2.1376318726134342) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 8, ',', 5, '-', 6) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 8) ,
('Swap gain:', 1.0) ,
([4, 6, 2, 1, 11, 8, 0, 9, 5],) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 11, 8, 0, 9, 5],) ,
('saved value', 2.3394009513403473) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 8, ',', 6, '-', 0) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 1, '-', 0, ',', 6, '-', 8) ,
('Swap gain:', 0.0) ,
([4, 0, 2, 1, 11, 6, 8, 9, 5],) ,
('Computing match for mapping',) ,
([4, 0, 2, 1, 11, 6, 8, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 8, ',', 7, '-', 9) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 1, '-', 9, ',', 7, '-', 8) ,
('Swap gain:', 0.0) ,
([4, 9, 2, 1, 11, 6, 0, 8, 5],) ,
('Computing match for mapping',) ,
([4, 9, 2, 1, 11, 6, 0, 8, 5],) ,
('saved value', 1.339400951340347) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 8, ',', 8, '-', 5) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', 0.798230921273087) ,
([4, 5, 2, 1, 11, 6, 0, 9, 8],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 11, 6, 0, 9, 8],) ,
('saved value', 2.1376318726134342) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -0.491131416906214) ,
([4, 8, 1, 2, 11, 6, 0, 9, 5],) ,
('Computing match for mapping',) ,
([4, 8, 1, 2, 11, 6, 0, 9, 5],) ,
('saved value', 0.8482695344341331) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 11) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 2, '-', 11, ',', 4, '-', 2) ,
('Swap gain:', 1.0) ,
([4, 8, 11, 1, 2, 6, 0, 9, 5],) ,
('Computing match for mapping',) ,
([4, 8, 11, 1, 2, 6, 0, 9, 5],) ,
('saved value', 2.3394009513403473) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 8, 6, 1, 11, 2, 0, 9, 5],) ,
('Computing match for mapping',) ,
([4, 8, 6, 1, 11, 2, 0, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 0) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 2, '-', 0, ',', 6, '-', 2) ,
('Swap gain:', 0.7540420845011112) ,
([4, 8, 0, 1, 11, 6, 2, 9, 5],) ,
('Computing match for mapping',) ,
([4, 8, 0, 1, 11, 6, 2, 9, 5],) ,
('saved value', 2.0934430358414584) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 9) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 2, '-', 9, ',', 7, '-', 2) ,
('Swap gain:', 0.8412254335271415) ,
([4, 8, 9, 1, 11, 6, 0, 2, 5],) ,
('Computing match for mapping',) ,
([4, 8, 9, 1, 11, 6, 0, 2, 5],) ,
('saved value', 2.1806263848674887) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 2, ',', 8, '-', 5) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 8, 5, 1, 11, 6, 0, 9, 2],) ,
('Computing match for mapping',) ,
([4, 8, 5, 1, 11, 6, 0, 9, 2],) ,
('saved value', 1.339400951340347) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 11) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 3, '-', 11, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([4, 8, 2, 11, 1, 6, 0, 9, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 11, 1, 6, 0, 9, 5],) ,
('saved value', 0.3394009513403471) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 6) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 8, 2, 6, 11, 1, 0, 9, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 6, 11, 1, 0, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 0) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 3, '-', 0, ',', 6, '-', 1) ,
('Swap gain:', -1.0) ,
([4, 8, 2, 0, 11, 6, 1, 9, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 0, 11, 6, 1, 9, 5],) ,
('saved value', 0.3394009513403471) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 9) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 3, '-', 9, ',', 7, '-', 1) ,
('Swap gain:', -1.0) ,
([4, 8, 2, 9, 11, 6, 0, 1, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 9, 11, 6, 0, 1, 5],) ,
('saved value', 0.3394009513403471) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 5) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -0.30510463163936685) ,
([4, 8, 2, 5, 11, 6, 0, 9, 1],) ,
('Computing match for mapping',) ,
([4, 8, 2, 5, 11, 6, 0, 9, 1],) ,
('saved value', 1.0342963197009802) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 11, ',', 5, '-', 6) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 11) ,
('Swap gain:', 0.0) ,
([4, 8, 2, 1, 6, 11, 0, 9, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 6, 11, 0, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 11, ',', 6, '-', 0) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 4, '-', 0, ',', 6, '-', 11) ,
('Swap gain:', 0.8753514133496337) ,
([4, 8, 2, 1, 0, 6, 11, 9, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 0, 6, 11, 9, 5],) ,
('saved value', 2.2147523646899807) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 11, ',', 7, '-', 9) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 4, '-', 9, ',', 7, '-', 11) ,
('Swap gain:', 2.0) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 11, ',', 8, '-', 5) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 11) ,
('Swap gain:', 0.0) ,
([4, 8, 2, 1, 5, 6, 0, 9, 11],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 5, 6, 0, 9, 11],) ,
('saved value', 1.339400951340347) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 0) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 5, '-', 0, ',', 6, '-', 6) ,
('Swap gain:', 0.0) ,
([4, 8, 2, 1, 11, 0, 6, 9, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 0, 6, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 9) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 5, '-', 9, ',', 7, '-', 6) ,
('Swap gain:', 0.0) ,
([4, 8, 2, 1, 11, 9, 0, 6, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 9, 0, 6, 5],) ,
('saved value', 1.339400951340347) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 6, ',', 8, '-', 5) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', 0.6948953683606331) ,
([4, 8, 2, 1, 11, 5, 0, 9, 6],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 5, 0, 9, 6],) ,
('saved value', 2.0342963197009802) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 0, ',', 7, '-', 9) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 6, '-', 9, ',', 7, '-', 0) ,
('Swap gain:', 0.0) ,
([4, 8, 2, 1, 11, 6, 9, 0, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 6, 9, 0, 5],) ,
('saved value', 1.339400951340347) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 0, ',', 8, '-', 5) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 0) ,
('Swap gain:', 0.8753514133496337) ,
([4, 8, 2, 1, 11, 6, 5, 9, 0],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 6, 5, 9, 0],) ,
('saved value', 2.2147523646899807) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 9, ',', 8, '-', 5) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 9) ,
('Swap gain:', 1.0) ,
([4, 8, 2, 1, 11, 6, 0, 5, 9],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 6, 0, 5, 9],) ,
('saved value', 2.3394009513403473) ,
('Use swap gain',) ,
('Original mapping', [4, 8, 2, 1, 11, 6, 0, 9, 5]) ,
('Current mapping', [4, 8, 2, 1, 9, 6, 0, 11, 5]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 3.3394009513403473) ,
('Current mapping:', [4, 8, 2, 1, 9, 6, 0, 11, 5]) ,
('Remap node', 0, 'from ', 4, 'to', 3) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([3, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('saved value', 3.0) ,
('Remap node', 0, 'from ', 4, 'to', 7) ,
('Move gain:', -0.046703179092189795) ,
('Computing match for mapping',) ,
([7, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('saved value', 3.2926977722481574) ,
('Remap node', 0, 'from ', 4, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([10, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Remap node', 1, 'from ', 8, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 9, 6, 0, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Remap node', 1, 'from ', 8, 'to', 7) ,
('Move gain:', 0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 7, 2, 1, 9, 6, 0, 11, 5],) ,
('saved value', 4.042758568265498) ,
('Remap node', 1, 'from ', 8, 'to', 10) ,
('Move gain:', 0.7489574105585904) ,
('Computing match for mapping',) ,
([4, 10, 2, 1, 9, 6, 0, 11, 5],) ,
('saved value', 4.088358361898938) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 3, 1, 9, 6, 0, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 7, 1, 9, 6, 0, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Remap node', 2, 'from ', 2, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 10, 1, 9, 6, 0, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 3, 9, 6, 0, 11, 5],) ,
('saved value', 2.3394009513403473) ,
('Remap node', 3, 'from ', 1, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 7, 9, 6, 0, 11, 5],) ,
('saved value', 2.3394009513403473) ,
('Remap node', 3, 'from ', 1, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 10, 9, 6, 0, 11, 5],) ,
('saved value', 2.3394009513403473) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 3, 6, 0, 11, 5],) ,
('saved value', 2.3394009513403473) ,
('Remap node', 4, 'from ', 9, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 7, 6, 0, 11, 5],) ,
('saved value', 2.3394009513403473) ,
('Remap node', 4, 'from ', 9, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 10, 6, 0, 11, 5],) ,
('saved value', 2.3394009513403473) ,
('Remap node', 5, 'from ', 6, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 3, 0, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Remap node', 5, 'from ', 6, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 7, 0, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Remap node', 5, 'from ', 6, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 10, 0, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Remap node', 6, 'from ', 0, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 3, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Remap node', 6, 'from ', 0, 'to', 7) ,
('Move gain:', 0.6763590194470055) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 7, 11, 5],) ,
('saved value', 4.015759970787353) ,
('Remap node', 6, 'from ', 0, 'to', 10) ,
('Move gain:', 1.9064050521855678) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 7, 'from ', 11, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 0, 3, 5],) ,
('saved value', 2.3394009513403473) ,
('Remap node', 7, 'from ', 11, 'to', 7) ,
('Move gain:', -0.301360552050872) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 0, 7, 5],) ,
('saved value', 3.0380403992894753) ,
('Remap node', 7, 'from ', 11, 'to', 10) ,
('Move gain:', -0.12397196920067088) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 0, 10, 5],) ,
('saved value', 3.2154289821396764) ,
('Remap node', 8, 'from ', 5, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 0, 11, 3],) ,
('saved value', 3.3394009513403473) ,
('Remap node', 8, 'from ', 5, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 0, 11, 7],) ,
('saved value', 3.3394009513403473) ,
('Remap node', 8, 'from ', 5, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 0, 11, 10],) ,
('saved value', 3.3394009513403473) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 8) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 0, '-', 8, ',', 1, '-', 4) ,
('Swap gain:', 0.40955645921824335) ,
([8, 4, 2, 1, 9, 6, 0, 11, 5],) ,
('Computing match for mapping',) ,
([8, 4, 2, 1, 9, 6, 0, 11, 5],) ,
('saved value', 3.7489574105585906) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 2) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', 0.04092478038641684) ,
([2, 8, 4, 1, 9, 6, 0, 11, 5],) ,
('Computing match for mapping',) ,
([2, 8, 4, 1, 9, 6, 0, 11, 5],) ,
('saved value', 3.380325731726764) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 1) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([1, 8, 2, 4, 9, 6, 0, 11, 5],) ,
('Computing match for mapping',) ,
([1, 8, 2, 4, 9, 6, 0, 11, 5],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 9) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([9, 8, 2, 1, 4, 6, 0, 11, 5],) ,
('Computing match for mapping',) ,
([9, 8, 2, 1, 4, 6, 0, 11, 5],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 6) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -0.3394009513403471) ,
([6, 8, 2, 1, 9, 4, 0, 11, 5],) ,
('Computing match for mapping',) ,
([6, 8, 2, 1, 9, 4, 0, 11, 5],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 0) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 0, '-', 0, ',', 6, '-', 4) ,
('Swap gain:', 0.5670041008452208) ,
([0, 8, 2, 1, 9, 6, 4, 11, 5],) ,
('Computing match for mapping',) ,
([0, 8, 2, 1, 9, 6, 4, 11, 5],) ,
('saved value', 3.906405052185568) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 11) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 4) ,
('Swap gain:', -0.12080535212868915) ,
([11, 8, 2, 1, 9, 6, 0, 4, 5],) ,
('Computing match for mapping',) ,
([11, 8, 2, 1, 9, 6, 0, 4, 5],) ,
('saved value', 3.218595599211658) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', 0.003166617071981792) ,
([5, 8, 2, 1, 9, 6, 0, 11, 4],) ,
('Computing match for mapping',) ,
([5, 8, 2, 1, 9, 6, 0, 11, 4],) ,
('saved value', 3.342567568412329) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 8, ',', 2, '-', 2) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 8) ,
('Swap gain:', 0.854023579876701) ,
([4, 2, 8, 1, 9, 6, 0, 11, 5],) ,
('Computing match for mapping',) ,
([4, 2, 8, 1, 9, 6, 0, 11, 5],) ,
('saved value', 4.193424531217048) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 8, ',', 3, '-', 1) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 8) ,
('Swap gain:', -1.0) ,
([4, 1, 2, 8, 9, 6, 0, 11, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 8, 9, 6, 0, 11, 5],) ,
('saved value', 2.3394009513403473) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 8, ',', 4, '-', 9) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 8) ,
('Swap gain:', -1.0) ,
([4, 9, 2, 1, 8, 6, 0, 11, 5],) ,
('Computing match for mapping',) ,
([4, 9, 2, 1, 8, 6, 0, 11, 5],) ,
('saved value', 2.3394009513403473) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 8, ',', 5, '-', 6) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 8) ,
('Swap gain:', 1.0) ,
([4, 6, 2, 1, 9, 8, 0, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 8, 0, 11, 5],) ,
('saved value', 4.339400951340347) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 8, ',', 6, '-', 0) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 1, '-', 0, ',', 6, '-', 8) ,
('Swap gain:', 0.0) ,
([4, 0, 2, 1, 9, 6, 8, 11, 5],) ,
('Computing match for mapping',) ,
([4, 0, 2, 1, 9, 6, 8, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 8, ',', 7, '-', 11) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -0.20176907872691296) ,
([4, 11, 2, 1, 9, 6, 0, 8, 5],) ,
('Computing match for mapping',) ,
([4, 11, 2, 1, 9, 6, 0, 8, 5],) ,
('saved value', 3.1376318726134342) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 8, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', 0.798230921273087) ,
([4, 5, 2, 1, 9, 6, 0, 11, 8],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 6, 0, 11, 8],) ,
('saved value', 4.137631872613435) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -0.491131416906214) ,
([4, 8, 1, 2, 9, 6, 0, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 1, 2, 9, 6, 0, 11, 5],) ,
('saved value', 2.8482695344341336) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 9) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 8, 9, 1, 2, 6, 0, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 9, 1, 2, 6, 0, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 8, 6, 1, 9, 2, 0, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 6, 1, 9, 2, 0, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 0) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 2, '-', 0, ',', 6, '-', 2) ,
('Swap gain:', 0.7540420845011112) ,
([4, 8, 0, 1, 9, 6, 2, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 0, 1, 9, 6, 2, 11, 5],) ,
('saved value', 4.093443035841458) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 11) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -0.15877456647285848) ,
([4, 8, 11, 1, 9, 6, 0, 2, 5],) ,
('Computing match for mapping',) ,
([4, 8, 11, 1, 9, 6, 0, 2, 5],) ,
('saved value', 3.1806263848674887) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 2, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 8, 5, 1, 9, 6, 0, 11, 2],) ,
('Computing match for mapping',) ,
([4, 8, 5, 1, 9, 6, 0, 11, 2],) ,
('saved value', 3.3394009513403473) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 8, 2, 9, 1, 6, 0, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 9, 1, 6, 0, 11, 5],) ,
('saved value', 1.3394009513403473) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 6) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 8, 2, 6, 9, 1, 0, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 6, 9, 1, 0, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 0) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 3, '-', 0, ',', 6, '-', 1) ,
('Swap gain:', -1.0) ,
([4, 8, 2, 0, 9, 6, 1, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 0, 9, 6, 1, 11, 5],) ,
('saved value', 2.3394009513403473) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 8, 2, 11, 9, 6, 0, 1, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 11, 9, 6, 0, 1, 5],) ,
('saved value', 1.3394009513403473) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -0.30510463163936685) ,
([4, 8, 2, 5, 9, 6, 0, 11, 1],) ,
('Computing match for mapping',) ,
([4, 8, 2, 5, 9, 6, 0, 11, 1],) ,
('saved value', 3.0342963197009807) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 6) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 9) ,
('Swap gain:', -1.0) ,
([4, 8, 2, 1, 6, 9, 0, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 6, 9, 0, 11, 5],) ,
('saved value', 2.3394009513403473) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 0) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 4, '-', 0, ',', 6, '-', 9) ,
('Swap gain:', -1.0) ,
([4, 8, 2, 1, 0, 6, 9, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 0, 6, 9, 11, 5],) ,
('saved value', 2.3394009513403473) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -2.0) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 6, 0, 9, 5],) ,
('saved value', 1.339400951340347) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 9) ,
('Swap gain:', -1.0) ,
([4, 8, 2, 1, 5, 6, 0, 11, 9],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 5, 6, 0, 11, 9],) ,
('saved value', 2.3394009513403473) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 0) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 5, '-', 0, ',', 6, '-', 6) ,
('Swap gain:', 0.0) ,
([4, 8, 2, 1, 9, 0, 6, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 0, 6, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 11) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -1.0) ,
([4, 8, 2, 1, 9, 11, 0, 6, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 11, 0, 6, 5],) ,
('saved value', 2.3394009513403473) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 6, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', 0.6948953683606331) ,
([4, 8, 2, 1, 9, 5, 0, 11, 6],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 5, 0, 11, 6],) ,
('saved value', 4.034296319700981) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 0, ',', 7, '-', 11) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 0) ,
('Swap gain:', -0.12464858665036627) ,
([4, 8, 2, 1, 9, 6, 11, 0, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 11, 0, 5],) ,
('saved value', 3.214752364689981) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 0, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 0) ,
('Swap gain:', 0.8753514133496337) ,
([4, 8, 2, 1, 9, 6, 5, 11, 0],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 5, 11, 0],) ,
('saved value', 4.214752364689981) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 11) ,
('Swap gain:', 0.0) ,
([4, 8, 2, 1, 9, 6, 0, 5, 11],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 0, 5, 11],) ,
('saved value', 3.3394009513403473) ,
('Use move gain',) ,
('Original mapping', [4, 8, 2, 1, 9, 6, 0, 11, 5]) ,
('Current mapping', [4, 8, 2, 1, 9, 6, 10, 11, 5]) ,
('Gain after the hill-climbing', 1.9064050521855678) ,
('Update triple match number to:', 5.2458060035259155) ,
('Current mapping:', [4, 8, 2, 1, 9, 6, 10, 11, 5]) ,
('Remap node', 0, 'from ', 4, 'to', 0) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([0, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('saved value', 4.906405052185568) ,
('Remap node', 0, 'from ', 4, 'to', 3) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([3, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('saved value', 4.906405052185568) ,
('Remap node', 0, 'from ', 4, 'to', 7) ,
('Move gain:', -0.046703179092189795) ,
('Computing match for mapping',) ,
([7, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('saved value', 5.199102824433726) ,
('Remap node', 1, 'from ', 8, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 0, 2, 1, 9, 6, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 1, 'from ', 8, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 9, 6, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 1, 'from ', 8, 'to', 7) ,
('Move gain:', 0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 7, 2, 1, 9, 6, 10, 11, 5],) ,
('saved value', 5.949163620451066) ,
('Remap node', 2, 'from ', 2, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 0, 1, 9, 6, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 3, 1, 9, 6, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 7, 1, 9, 6, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 3, 'from ', 1, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 0, 9, 6, 10, 11, 5],) ,
('saved value', 4.2458060035259155) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 3, 9, 6, 10, 11, 5],) ,
('saved value', 4.2458060035259155) ,
('Remap node', 3, 'from ', 1, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 7, 9, 6, 10, 11, 5],) ,
('saved value', 4.2458060035259155) ,
('Remap node', 4, 'from ', 9, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 0, 6, 10, 11, 5],) ,
('saved value', 4.2458060035259155) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 3, 6, 10, 11, 5],) ,
('saved value', 4.2458060035259155) ,
('Remap node', 4, 'from ', 9, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 7, 6, 10, 11, 5],) ,
('saved value', 4.2458060035259155) ,
('Remap node', 5, 'from ', 6, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 0, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 5, 'from ', 6, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 3, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 5, 'from ', 6, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 7, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 6, 'from ', 10, 'to', 0) ,
('Move gain:', -1.9064050521855682) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 0, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Remap node', 6, 'from ', 10, 'to', 3) ,
('Move gain:', -1.9064050521855682) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 3, 11, 5],) ,
('saved value', 3.3394009513403473) ,
('Remap node', 6, 'from ', 10, 'to', 7) ,
('Move gain:', -1.2300460327385627) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 7, 11, 5],) ,
('saved value', 4.015759970787353) ,
('Remap node', 7, 'from ', 11, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 10, 0, 5],) ,
('saved value', 3.2458060035259155) ,
('Remap node', 7, 'from ', 11, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 10, 3, 5],) ,
('saved value', 3.2458060035259155) ,
('Remap node', 7, 'from ', 11, 'to', 7) ,
('Move gain:', -1.301360552050872) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 10, 7, 5],) ,
('saved value', 3.9444454514750436) ,
('Remap node', 8, 'from ', 5, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 10, 11, 0],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 8, 'from ', 5, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 10, 11, 3],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 8, 'from ', 5, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 10, 11, 7],) ,
('saved value', 5.2458060035259155) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 8) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 0, '-', 8, ',', 1, '-', 4) ,
('Swap gain:', 0.40955645921824335) ,
([8, 4, 2, 1, 9, 6, 10, 11, 5],) ,
('Computing match for mapping',) ,
([8, 4, 2, 1, 9, 6, 10, 11, 5],) ,
('saved value', 5.655362462744159) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 2) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', 0.04092478038641684) ,
([2, 8, 4, 1, 9, 6, 10, 11, 5],) ,
('Computing match for mapping',) ,
([2, 8, 4, 1, 9, 6, 10, 11, 5],) ,
('saved value', 5.286730783912333) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 1) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([1, 8, 2, 4, 9, 6, 10, 11, 5],) ,
('Computing match for mapping',) ,
([1, 8, 2, 4, 9, 6, 10, 11, 5],) ,
('saved value', 3.906405052185568) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 9) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([9, 8, 2, 1, 4, 6, 10, 11, 5],) ,
('Computing match for mapping',) ,
([9, 8, 2, 1, 4, 6, 10, 11, 5],) ,
('saved value', 3.906405052185568) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 6) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -0.3394009513403471) ,
([6, 8, 2, 1, 9, 4, 10, 11, 5],) ,
('Computing match for mapping',) ,
([6, 8, 2, 1, 9, 4, 10, 11, 5],) ,
('saved value', 4.906405052185568) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 10) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 4) ,
('Swap gain:', -0.9999999999999999) ,
([10, 8, 2, 1, 9, 6, 4, 11, 5],) ,
('Computing match for mapping',) ,
([10, 8, 2, 1, 9, 6, 4, 11, 5],) ,
('saved value', 4.2458060035259155) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 11) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 4) ,
('Swap gain:', -1.1208053521286891) ,
([11, 8, 2, 1, 9, 6, 10, 4, 5],) ,
('Computing match for mapping',) ,
([11, 8, 2, 1, 9, 6, 10, 4, 5],) ,
('saved value', 4.125000651397226) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', 0.003166617071981792) ,
([5, 8, 2, 1, 9, 6, 10, 11, 4],) ,
('Computing match for mapping',) ,
([5, 8, 2, 1, 9, 6, 10, 11, 4],) ,
('saved value', 5.248972620597898) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 8, ',', 2, '-', 2) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 8) ,
('Swap gain:', 0.854023579876701) ,
([4, 2, 8, 1, 9, 6, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 2, 8, 1, 9, 6, 10, 11, 5],) ,
('saved value', 6.099829583402617) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 8, ',', 3, '-', 1) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 8) ,
('Swap gain:', -1.0) ,
([4, 1, 2, 8, 9, 6, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 8, 9, 6, 10, 11, 5],) ,
('saved value', 4.2458060035259155) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 8, ',', 4, '-', 9) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 8) ,
('Swap gain:', -1.0) ,
([4, 9, 2, 1, 8, 6, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 9, 2, 1, 8, 6, 10, 11, 5],) ,
('saved value', 4.2458060035259155) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 8, ',', 5, '-', 6) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 8) ,
('Swap gain:', 2.0) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('saved value', 7.2458060035259155) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 8, ',', 6, '-', 10) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -1.1574476416269774) ,
([4, 10, 2, 1, 9, 6, 8, 11, 5],) ,
('Computing match for mapping',) ,
([4, 10, 2, 1, 9, 6, 8, 11, 5],) ,
('saved value', 4.088358361898938) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 8, ',', 7, '-', 11) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -1.201769078726913) ,
([4, 11, 2, 1, 9, 6, 10, 8, 5],) ,
('Computing match for mapping',) ,
([4, 11, 2, 1, 9, 6, 10, 8, 5],) ,
('saved value', 4.044036924799002) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 8, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', 0.798230921273087) ,
([4, 5, 2, 1, 9, 6, 10, 11, 8],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 6, 10, 11, 8],) ,
('saved value', 6.044036924799003) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -0.491131416906214) ,
([4, 8, 1, 2, 9, 6, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 1, 2, 9, 6, 10, 11, 5],) ,
('saved value', 4.754674586619702) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 9) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 8, 9, 1, 2, 6, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 9, 1, 2, 6, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 8, 6, 1, 9, 2, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 6, 1, 9, 2, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 10) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -1.1523629676844567) ,
([4, 8, 10, 1, 9, 6, 2, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 10, 1, 9, 6, 2, 11, 5],) ,
('saved value', 4.093443035841458) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 11) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -1.1587745664728586) ,
([4, 8, 11, 1, 9, 6, 10, 2, 5],) ,
('Computing match for mapping',) ,
([4, 8, 11, 1, 9, 6, 10, 2, 5],) ,
('saved value', 4.0870314370530565) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 2, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 8, 5, 1, 9, 6, 10, 11, 2],) ,
('Computing match for mapping',) ,
([4, 8, 5, 1, 9, 6, 10, 11, 2],) ,
('saved value', 5.2458060035259155) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 8, 2, 9, 1, 6, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 9, 1, 6, 10, 11, 5],) ,
('saved value', 3.2458060035259155) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 6) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 8, 2, 6, 9, 1, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 6, 9, 1, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 10) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -2.9064050521855678) ,
([4, 8, 2, 10, 9, 6, 1, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 10, 9, 6, 1, 11, 5],) ,
('saved value', 2.3394009513403478) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 8, 2, 11, 9, 6, 10, 1, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 11, 9, 6, 10, 1, 5],) ,
('saved value', 2.2458060035259155) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -0.30510463163936685) ,
([4, 8, 2, 5, 9, 6, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 8, 2, 5, 9, 6, 10, 11, 1],) ,
('saved value', 4.940701371886549) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 6) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 9) ,
('Swap gain:', -1.0) ,
([4, 8, 2, 1, 6, 9, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 6, 9, 10, 11, 5],) ,
('saved value', 4.2458060035259155) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -2.9064050521855678) ,
([4, 8, 2, 1, 10, 6, 9, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 10, 6, 9, 11, 5],) ,
('saved value', 2.3394009513403478) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3.0000000000000004) ,
([4, 8, 2, 1, 11, 6, 10, 9, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 11, 6, 10, 9, 5],) ,
('saved value', 2.245806003525915) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 9) ,
('Swap gain:', -1.0) ,
([4, 8, 2, 1, 5, 6, 10, 11, 9],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 5, 6, 10, 11, 9],) ,
('saved value', 4.2458060035259155) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 10) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -1.9064050521855678) ,
([4, 8, 2, 1, 9, 10, 6, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 10, 6, 11, 5],) ,
('saved value', 3.3394009513403478) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 11) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -2.0) ,
([4, 8, 2, 1, 9, 11, 10, 6, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 11, 10, 6, 5],) ,
('saved value', 3.2458060035259155) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 6, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', 0.6948953683606331) ,
([4, 8, 2, 1, 9, 5, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 5, 10, 11, 6],) ,
('saved value', 5.940701371886549) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -1.1550256080366048) ,
([4, 8, 2, 1, 9, 6, 11, 10, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 11, 10, 5],) ,
('saved value', 4.090780395489311) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 10) ,
('Swap gain:', -1.0310536388359341) ,
([4, 8, 2, 1, 9, 6, 5, 11, 10],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 5, 11, 10],) ,
('saved value', 4.214752364689981) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 5) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 11) ,
('Swap gain:', -1.0) ,
([4, 8, 2, 1, 9, 6, 10, 5, 11],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 10, 5, 11],) ,
('saved value', 4.2458060035259155) ,
('Use swap gain',) ,
('Original mapping', [4, 8, 2, 1, 9, 6, 10, 11, 5]) ,
('Current mapping', [4, 6, 2, 1, 9, 8, 10, 11, 5]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 7.2458060035259155) ,
('Current mapping:', [4, 6, 2, 1, 9, 8, 10, 11, 5]) ,
('Remap node', 0, 'from ', 4, 'to', 0) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([0, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('saved value', 6.906405052185568) ,
('Remap node', 0, 'from ', 4, 'to', 3) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([3, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('saved value', 6.906405052185568) ,
('Remap node', 0, 'from ', 4, 'to', 7) ,
('Move gain:', -0.046703179092189795) ,
('Computing match for mapping',) ,
([7, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('saved value', 7.199102824433726) ,
('Remap node', 1, 'from ', 6, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 0, 2, 1, 9, 8, 10, 11, 5],) ,
('saved value', 6.2458060035259155) ,
('Remap node', 1, 'from ', 6, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 9, 8, 10, 11, 5],) ,
('saved value', 6.2458060035259155) ,
('Remap node', 1, 'from ', 6, 'to', 7) ,
('Move gain:', -0.29664238307484947) ,
('Computing match for mapping',) ,
([4, 7, 2, 1, 9, 8, 10, 11, 5],) ,
('saved value', 6.949163620451066) ,
('Remap node', 2, 'from ', 2, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 6, 0, 1, 9, 8, 10, 11, 5],) ,
('saved value', 7.2458060035259155) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 6, 3, 1, 9, 8, 10, 11, 5],) ,
('saved value', 7.2458060035259155) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 6, 7, 1, 9, 8, 10, 11, 5],) ,
('saved value', 7.2458060035259155) ,
('Remap node', 3, 'from ', 1, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 6, 2, 0, 9, 8, 10, 11, 5],) ,
('saved value', 6.2458060035259155) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 6, 2, 3, 9, 8, 10, 11, 5],) ,
('saved value', 6.2458060035259155) ,
('Remap node', 3, 'from ', 1, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 6, 2, 7, 9, 8, 10, 11, 5],) ,
('saved value', 6.2458060035259155) ,
('Remap node', 4, 'from ', 9, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 0, 8, 10, 11, 5],) ,
('saved value', 6.2458060035259155) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 3, 8, 10, 11, 5],) ,
('saved value', 6.2458060035259155) ,
('Remap node', 4, 'from ', 9, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 7, 8, 10, 11, 5],) ,
('saved value', 6.2458060035259155) ,
('Remap node', 5, 'from ', 8, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 0, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 5, 'from ', 8, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 3, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 5, 'from ', 8, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 7, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 6, 'from ', 10, 'to', 0) ,
('Move gain:', -2.906405052185568) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 8, 0, 11, 5],) ,
('saved value', 4.339400951340347) ,
('Remap node', 6, 'from ', 10, 'to', 3) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 8, 3, 11, 5],) ,
('saved value', 4.339400951340348) ,
('Remap node', 6, 'from ', 10, 'to', 7) ,
('Move gain:', -2.2300460327385623) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 8, 7, 11, 5],) ,
('saved value', 5.015759970787354) ,
('Remap node', 7, 'from ', 11, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 8, 10, 0, 5],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 7, 'from ', 11, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 8, 10, 3, 5],) ,
('saved value', 5.2458060035259155) ,
('Remap node', 7, 'from ', 11, 'to', 7) ,
('Move gain:', -1.301360552050872) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 8, 10, 7, 5],) ,
('saved value', 5.944445451475044) ,
('Remap node', 8, 'from ', 5, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 8, 10, 11, 0],) ,
('saved value', 7.2458060035259155) ,
('Remap node', 8, 'from ', 5, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 8, 10, 11, 3],) ,
('saved value', 7.2458060035259155) ,
('Remap node', 8, 'from ', 5, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 8, 10, 11, 7],) ,
('saved value', 7.2458060035259155) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 6) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 4) ,
('Swap gain:', -0.5904435407817566) ,
([6, 4, 2, 1, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([6, 4, 2, 1, 9, 8, 10, 11, 5],) ,
('saved value', 6.655362462744159) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 2) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', 0.04092478038641684) ,
([2, 6, 4, 1, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([2, 6, 4, 1, 9, 8, 10, 11, 5],) ,
('saved value', 7.286730783912333) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 1) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([1, 6, 2, 4, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([1, 6, 2, 4, 9, 8, 10, 11, 5],) ,
('saved value', 5.906405052185568) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 9) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([9, 6, 2, 1, 4, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([9, 6, 2, 1, 4, 8, 10, 11, 5],) ,
('saved value', 5.906405052185568) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 8) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([8, 6, 2, 1, 9, 4, 10, 11, 5],) ,
('Computing match for mapping',) ,
([8, 6, 2, 1, 9, 4, 10, 11, 5],) ,
('saved value', 5.906405052185568) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 10) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([10, 6, 2, 1, 9, 8, 4, 11, 5],) ,
('Computing match for mapping',) ,
([10, 6, 2, 1, 9, 8, 4, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 11) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 4) ,
('Swap gain:', -1.1208053521286891) ,
([11, 6, 2, 1, 9, 8, 10, 4, 5],) ,
('Computing match for mapping',) ,
([11, 6, 2, 1, 9, 8, 10, 4, 5],) ,
('saved value', 6.125000651397226) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 5) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', 0.003166617071981792) ,
([5, 6, 2, 1, 9, 8, 10, 11, 4],) ,
('Computing match for mapping',) ,
([5, 6, 2, 1, 9, 8, 10, 11, 4],) ,
('saved value', 7.248972620597898) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 2) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 6) ,
('Swap gain:', -0.14597642012329903) ,
([4, 2, 6, 1, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 2, 6, 1, 9, 8, 10, 11, 5],) ,
('saved value', 7.099829583402617) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 1) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 6) ,
('Swap gain:', -1.0) ,
([4, 1, 2, 6, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 6, 9, 8, 10, 11, 5],) ,
('saved value', 6.2458060035259155) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 9) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 6) ,
('Swap gain:', -2.0) ,
([4, 9, 2, 1, 6, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 9, 2, 1, 6, 8, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', 8) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 6) ,
('Swap gain:', -2.0) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 6, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 10) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -3.1574476416269777) ,
([4, 10, 2, 1, 9, 8, 6, 11, 5],) ,
('Computing match for mapping',) ,
([4, 10, 2, 1, 9, 8, 6, 11, 5],) ,
('saved value', 4.088358361898938) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 6, ',', 7, '-', 11) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -2.201769078726913) ,
([4, 11, 2, 1, 9, 8, 10, 6, 5],) ,
('Computing match for mapping',) ,
([4, 11, 2, 1, 9, 8, 10, 6, 5],) ,
('saved value', 5.044036924799002) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 6, ',', 8, '-', 5) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', 0.4931262896337203) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.738932293159635) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -0.491131416906214) ,
([4, 6, 1, 2, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 1, 2, 9, 8, 10, 11, 5],) ,
('saved value', 6.754674586619702) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 9) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 6, 9, 1, 2, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 9, 1, 2, 8, 10, 11, 5],) ,
('saved value', 7.2458060035259155) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 8) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([4, 6, 8, 1, 9, 2, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 8, 1, 9, 2, 10, 11, 5],) ,
('saved value', 6.2458060035259155) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 10) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -2.1523629676844567) ,
([4, 6, 10, 1, 9, 8, 2, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 10, 1, 9, 8, 2, 11, 5],) ,
('saved value', 5.093443035841458) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 11) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -1.1587745664728586) ,
([4, 6, 11, 1, 9, 8, 10, 2, 5],) ,
('Computing match for mapping',) ,
([4, 6, 11, 1, 9, 8, 10, 2, 5],) ,
('saved value', 6.0870314370530565) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 2, ',', 8, '-', 5) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 6, 5, 1, 9, 8, 10, 11, 2],) ,
('Computing match for mapping',) ,
([4, 6, 5, 1, 9, 8, 10, 11, 2],) ,
('saved value', 7.2458060035259155) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 6, 2, 9, 1, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 2, 9, 1, 8, 10, 11, 5],) ,
('saved value', 5.2458060035259155) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 8) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 6, 2, 8, 9, 1, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 2, 8, 9, 1, 10, 11, 5],) ,
('saved value', 4.2458060035259155) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 10) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -3.9064050521855678) ,
([4, 6, 2, 10, 9, 8, 1, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 2, 10, 9, 8, 1, 11, 5],) ,
('saved value', 3.3394009513403478) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 6, 2, 11, 9, 8, 10, 1, 5],) ,
('Computing match for mapping',) ,
([4, 6, 2, 11, 9, 8, 10, 1, 5],) ,
('saved value', 4.2458060035259155) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 5) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', -0.30510463163936685) ,
([4, 6, 2, 5, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 6, 2, 5, 9, 8, 10, 11, 1],) ,
('saved value', 6.940701371886549) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -3.0) ,
([4, 6, 2, 1, 8, 9, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 8, 9, 10, 11, 5],) ,
('saved value', 4.2458060035259155) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([4, 6, 2, 1, 10, 8, 9, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 10, 8, 9, 11, 5],) ,
('saved value', 3.3394009513403478) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([4, 6, 2, 1, 11, 8, 10, 9, 5],) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 11, 8, 10, 9, 5],) ,
('saved value', 4.2458060035259155) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 5) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 9) ,
('Swap gain:', -1.0) ,
([4, 6, 2, 1, 5, 8, 10, 11, 9],) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 5, 8, 10, 11, 9],) ,
('saved value', 6.2458060035259155) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -3.9064050521855678) ,
([4, 6, 2, 1, 9, 10, 8, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 10, 8, 11, 5],) ,
('saved value', 3.3394009513403478) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -4.0) ,
([4, 6, 2, 1, 9, 11, 10, 8, 5],) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 11, 10, 8, 5],) ,
('saved value', 3.2458060035259155) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', 5) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -2.0) ,
([4, 6, 2, 1, 9, 5, 10, 11, 8],) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 5, 10, 11, 8],) ,
('saved value', 5.2458060035259155) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -2.155025608036605) ,
([4, 6, 2, 1, 9, 8, 11, 10, 5],) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 8, 11, 10, 5],) ,
('saved value', 5.090780395489311) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', 5) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 10) ,
('Swap gain:', -2.0310536388359344) ,
([4, 6, 2, 1, 9, 8, 5, 11, 10],) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 8, 5, 11, 10],) ,
('saved value', 5.214752364689981) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 5) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 11) ,
('Swap gain:', -1.0) ,
([4, 6, 2, 1, 9, 8, 10, 5, 11],) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 8, 10, 5, 11],) ,
('saved value', 6.2458060035259155) ,
('Use swap gain',) ,
('Original mapping', [4, 6, 2, 1, 9, 8, 10, 11, 5]) ,
('Current mapping', [4, 5, 2, 1, 9, 8, 10, 11, 6]) ,
('Gain after the hill-climbing', 0.4931262896337203) ,
('Update triple match number to:', 7.738932293159635) ,
('Current mapping:', [4, 5, 2, 1, 9, 8, 10, 11, 6]) ,
('Remap node', 0, 'from ', 4, 'to', 0) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([0, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.399531341819288) ,
('Remap node', 0, 'from ', 4, 'to', 3) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([3, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.399531341819288) ,
('Remap node', 0, 'from ', 4, 'to', 7) ,
('Move gain:', -0.046703179092189795) ,
('Computing match for mapping',) ,
([7, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.6922291140674455) ,
('Remap node', 1, 'from ', 5, 'to', 0) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([4, 0, 2, 1, 9, 8, 10, 11, 6],) ,
('saved value', 6.940701371886548) ,
('Remap node', 1, 'from ', 5, 'to', 3) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 9, 8, 10, 11, 6],) ,
('saved value', 6.940701371886548) ,
('Remap node', 1, 'from ', 5, 'to', 7) ,
('Move gain:', -0.0948733043479365) ,
('Computing match for mapping',) ,
([4, 7, 2, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.6440589888116985) ,
('Remap node', 2, 'from ', 2, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 5, 0, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.738932293159635) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 5, 3, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.738932293159635) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 5, 7, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.738932293159635) ,
('Remap node', 3, 'from ', 1, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 5, 2, 0, 9, 8, 10, 11, 6],) ,
('saved value', 6.738932293159635) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 5, 2, 3, 9, 8, 10, 11, 6],) ,
('saved value', 6.738932293159635) ,
('Remap node', 3, 'from ', 1, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 5, 2, 7, 9, 8, 10, 11, 6],) ,
('saved value', 6.738932293159635) ,
('Remap node', 4, 'from ', 9, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 0, 8, 10, 11, 6],) ,
('saved value', 6.738932293159635) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 3, 8, 10, 11, 6],) ,
('saved value', 6.738932293159635) ,
('Remap node', 4, 'from ', 9, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 7, 8, 10, 11, 6],) ,
('saved value', 6.738932293159635) ,
('Remap node', 5, 'from ', 8, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 0, 10, 11, 6],) ,
('saved value', 6.738932293159635) ,
('Remap node', 5, 'from ', 8, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 3, 10, 11, 6],) ,
('saved value', 6.738932293159635) ,
('Remap node', 5, 'from ', 8, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 7, 10, 11, 6],) ,
('saved value', 6.738932293159635) ,
('Remap node', 6, 'from ', 10, 'to', 0) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 8, 0, 11, 6],) ,
('saved value', 4.832527240974068) ,
('Remap node', 6, 'from ', 10, 'to', 3) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 8, 3, 11, 6],) ,
('saved value', 4.832527240974068) ,
('Remap node', 6, 'from ', 10, 'to', 7) ,
('Move gain:', -2.2300460327385623) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 8, 7, 11, 6],) ,
('saved value', 5.5088862604210735) ,
('Remap node', 7, 'from ', 11, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 8, 10, 0, 6],) ,
('saved value', 5.738932293159635) ,
('Remap node', 7, 'from ', 11, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 8, 10, 3, 6],) ,
('saved value', 5.738932293159635) ,
('Remap node', 7, 'from ', 11, 'to', 7) ,
('Move gain:', -1.301360552050872) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 8, 10, 7, 6],) ,
('saved value', 6.437571741108764) ,
('Remap node', 8, 'from ', 6, 'to', 0) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 8, 10, 11, 0],) ,
('saved value', 7.044036924799002) ,
('Remap node', 8, 'from ', 6, 'to', 3) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 8, 10, 11, 3],) ,
('saved value', 7.044036924799002) ,
('Remap node', 8, 'from ', 6, 'to', 7) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 8, 10, 11, 7],) ,
('saved value', 7.044036924799002) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 5) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 4) ,
('Swap gain:', -0.046106893642514746) ,
([5, 4, 2, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([5, 4, 2, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.692825399517121) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 2) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', 0.04092478038641684) ,
([2, 5, 4, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([2, 5, 4, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.779857073546053) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 1) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([1, 5, 2, 4, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([1, 5, 2, 4, 9, 8, 10, 11, 6],) ,
('saved value', 6.399531341819288) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 9) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([9, 5, 2, 1, 4, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([9, 5, 2, 1, 4, 8, 10, 11, 6],) ,
('saved value', 6.399531341819288) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 8) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([8, 5, 2, 1, 9, 4, 10, 11, 6],) ,
('Computing match for mapping',) ,
([8, 5, 2, 1, 9, 4, 10, 11, 6],) ,
('saved value', 6.399531341819288) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 10) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([10, 5, 2, 1, 9, 8, 4, 11, 6],) ,
('Computing match for mapping',) ,
([10, 5, 2, 1, 9, 8, 4, 11, 6],) ,
('saved value', 5.738932293159635) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 11) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 4) ,
('Swap gain:', -1.1208053521286891) ,
([11, 5, 2, 1, 9, 8, 10, 4, 6],) ,
('Computing match for mapping',) ,
([11, 5, 2, 1, 9, 8, 10, 4, 6],) ,
('saved value', 6.618126941030946) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 6) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 6, ',', 8, '-', 4) ,
('Swap gain:', -1.0342963197009802) ,
([6, 5, 2, 1, 9, 8, 10, 11, 4],) ,
('Computing match for mapping',) ,
([6, 5, 2, 1, 9, 8, 10, 11, 4],) ,
('saved value', 6.704635973458656) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 2) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 5) ,
('Swap gain:', 0.05579265860361393) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.794724951763249) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 1) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 5) ,
('Swap gain:', -1.798230921273087) ,
([4, 1, 2, 5, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 5, 9, 8, 10, 11, 6],) ,
('saved value', 5.940701371886549) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 9) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 5) ,
('Swap gain:', -1.798230921273087) ,
([4, 9, 2, 1, 5, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 9, 2, 1, 5, 8, 10, 11, 6],) ,
('saved value', 5.940701371886549) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 5, ',', 5, '-', 8) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 5) ,
('Swap gain:', -1.7982309212730865) ,
([4, 8, 2, 1, 9, 5, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 8, 2, 1, 9, 5, 10, 11, 6],) ,
('saved value', 5.940701371886549) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 5, ',', 6, '-', 10) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 5) ,
('Swap gain:', -2.0803271495504307) ,
([4, 10, 2, 1, 9, 8, 5, 11, 6],) ,
('Computing match for mapping',) ,
([4, 10, 2, 1, 9, 8, 5, 11, 6],) ,
('saved value', 5.658605143609204) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 5, ',', 7, '-', 11) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 5) ,
('Swap gain:', -1.0) ,
([4, 11, 2, 1, 9, 8, 10, 5, 6],) ,
('Computing match for mapping',) ,
([4, 11, 2, 1, 9, 8, 10, 5, 6],) ,
('saved value', 6.738932293159635) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 5, ',', 8, '-', 6) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 6, ',', 8, '-', 5) ,
('Swap gain:', -0.49312628963371985) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 2, 1, 9, 8, 10, 11, 5],) ,
('saved value', 7.2458060035259155) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -0.491131416906214) ,
([4, 5, 1, 2, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 5, 1, 2, 9, 8, 10, 11, 6],) ,
('saved value', 7.247800876253422) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 9) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 5, 9, 1, 2, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 5, 9, 1, 2, 8, 10, 11, 6],) ,
('saved value', 7.738932293159635) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 8) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([4, 5, 8, 1, 9, 2, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 5, 8, 1, 9, 2, 10, 11, 6],) ,
('saved value', 6.738932293159635) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 10) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -2.1523629676844567) ,
([4, 5, 10, 1, 9, 8, 2, 11, 6],) ,
('Computing match for mapping',) ,
([4, 5, 10, 1, 9, 8, 2, 11, 6],) ,
('saved value', 5.586569325475178) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 11) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -1.1587745664728586) ,
([4, 5, 11, 1, 9, 8, 10, 2, 6],) ,
('Computing match for mapping',) ,
([4, 5, 11, 1, 9, 8, 10, 2, 6],) ,
('saved value', 6.580157726686776) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 2, ',', 8, '-', 6) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 6, ',', 8, '-', 2) ,
('Swap gain:', -0.6948953683606331) ,
([4, 5, 6, 1, 9, 8, 10, 11, 2],) ,
('Computing match for mapping',) ,
([4, 5, 6, 1, 9, 8, 10, 11, 2],) ,
('saved value', 7.044036924799002) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 5, 2, 9, 1, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 5, 2, 9, 1, 8, 10, 11, 6],) ,
('saved value', 5.738932293159635) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 8) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 5, 2, 8, 9, 1, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 5, 2, 8, 9, 1, 10, 11, 6],) ,
('saved value', 5.738932293159635) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 10) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -3.9064050521855678) ,
([4, 5, 2, 10, 9, 8, 1, 11, 6],) ,
('Computing match for mapping',) ,
([4, 5, 2, 10, 9, 8, 1, 11, 6],) ,
('saved value', 3.8325272409740676) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 5, 2, 11, 9, 8, 10, 1, 6],) ,
('Computing match for mapping',) ,
([4, 5, 2, 11, 9, 8, 10, 1, 6],) ,
('saved value', 4.738932293159635) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 6) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 6, ',', 8, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 5, 2, 6, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 5, 2, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.738932293159635) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([4, 5, 2, 1, 8, 9, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 8, 9, 10, 11, 6],) ,
('saved value', 5.738932293159635) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([4, 5, 2, 1, 10, 8, 9, 11, 6],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 10, 8, 9, 11, 6],) ,
('saved value', 3.8325272409740676) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([4, 5, 2, 1, 11, 8, 10, 9, 6],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 11, 8, 10, 9, 6],) ,
('saved value', 4.738932293159635) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 6) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 6, ',', 8, '-', 9) ,
('Swap gain:', -1.6948953683606331) ,
([4, 5, 2, 1, 6, 8, 10, 11, 9],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 6, 8, 10, 11, 9],) ,
('saved value', 6.044036924799002) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2.9064050521855678) ,
([4, 5, 2, 1, 9, 10, 8, 11, 6],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 10, 8, 11, 6],) ,
('saved value', 4.832527240974068) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -3.0) ,
([4, 5, 2, 1, 9, 11, 10, 8, 6],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 11, 10, 8, 6],) ,
('saved value', 4.738932293159635) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', 6) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 5, '-', 6, ',', 8, '-', 8) ,
('Swap gain:', -1.6948953683606325) ,
([4, 5, 2, 1, 9, 6, 10, 11, 8],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 6, 10, 11, 8],) ,
('saved value', 6.044036924799003) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -2.155025608036605) ,
([4, 5, 2, 1, 9, 8, 11, 10, 6],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 8, 11, 10, 6],) ,
('saved value', 5.583906685123031) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', 6) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 6, '-', 6, ',', 8, '-', 10) ,
('Swap gain:', -3.6013004205462007) ,
([4, 5, 2, 1, 9, 8, 6, 11, 10],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 8, 6, 11, 10],) ,
('saved value', 4.137631872613435) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 6) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 7, '-', 6, ',', 8, '-', 11) ,
('Swap gain:', -2.6948953683606334) ,
([4, 5, 2, 1, 9, 8, 10, 6, 11],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 8, 10, 6, 11],) ,
('saved value', 5.044036924799002) ,
('Use swap gain',) ,
('Original mapping', [4, 5, 2, 1, 9, 8, 10, 11, 6]) ,
('Current mapping', [4, 2, 5, 1, 9, 8, 10, 11, 6]) ,
('Gain after the hill-climbing', 0.05579265860361393) ,
('Update triple match number to:', 7.794724951763249) ,
('Current mapping:', [4, 2, 5, 1, 9, 8, 10, 11, 6]) ,
('Remap node', 0, 'from ', 4, 'to', 0) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([0, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.455324000422902) ,
('Remap node', 0, 'from ', 4, 'to', 3) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([3, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.455324000422902) ,
('Remap node', 0, 'from ', 4, 'to', 7) ,
('Move gain:', -0.046703179092189795) ,
('Computing match for mapping',) ,
([7, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.748021772671059) ,
('Remap node', 1, 'from ', 2, 'to', 0) ,
('Move gain:', -0.854023579876701) ,
('Computing match for mapping',) ,
([4, 0, 5, 1, 9, 8, 10, 11, 6],) ,
('saved value', 6.940701371886548) ,
('Remap node', 1, 'from ', 2, 'to', 3) ,
('Move gain:', -0.854023579876701) ,
('Computing match for mapping',) ,
([4, 3, 5, 1, 9, 8, 10, 11, 6],) ,
('saved value', 6.940701371886548) ,
('Remap node', 1, 'from ', 2, 'to', 7) ,
('Move gain:', -0.15066596295155044) ,
('Computing match for mapping',) ,
([4, 7, 5, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.6440589888116985) ,
('Remap node', 2, 'from ', 5, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 2, 0, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.794724951763249) ,
('Remap node', 2, 'from ', 5, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.794724951763249) ,
('Remap node', 2, 'from ', 5, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 2, 7, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.794724951763249) ,
('Remap node', 3, 'from ', 1, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 5, 0, 9, 8, 10, 11, 6],) ,
('saved value', 6.794724951763249) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 5, 3, 9, 8, 10, 11, 6],) ,
('saved value', 6.794724951763249) ,
('Remap node', 3, 'from ', 1, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 5, 7, 9, 8, 10, 11, 6],) ,
('saved value', 6.794724951763249) ,
('Remap node', 4, 'from ', 9, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 0, 8, 10, 11, 6],) ,
('saved value', 6.794724951763249) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 3, 8, 10, 11, 6],) ,
('saved value', 6.794724951763249) ,
('Remap node', 4, 'from ', 9, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 7, 8, 10, 11, 6],) ,
('saved value', 6.794724951763249) ,
('Remap node', 5, 'from ', 8, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 0, 10, 11, 6],) ,
('saved value', 6.794724951763249) ,
('Remap node', 5, 'from ', 8, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 3, 10, 11, 6],) ,
('saved value', 6.794724951763249) ,
('Remap node', 5, 'from ', 8, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 7, 10, 11, 6],) ,
('saved value', 6.794724951763249) ,
('Remap node', 6, 'from ', 10, 'to', 0) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 8, 0, 11, 6],) ,
('saved value', 4.888319899577681) ,
('Remap node', 6, 'from ', 10, 'to', 3) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 8, 3, 11, 6],) ,
('saved value', 4.888319899577681) ,
('Remap node', 6, 'from ', 10, 'to', 7) ,
('Move gain:', -2.2300460327385623) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 8, 7, 11, 6],) ,
('saved value', 5.564678919024686) ,
('Remap node', 7, 'from ', 11, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 8, 10, 0, 6],) ,
('saved value', 5.794724951763249) ,
('Remap node', 7, 'from ', 11, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 8, 10, 3, 6],) ,
('saved value', 5.794724951763249) ,
('Remap node', 7, 'from ', 11, 'to', 7) ,
('Move gain:', -1.301360552050872) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 8, 10, 7, 6],) ,
('saved value', 6.493364399712377) ,
('Remap node', 8, 'from ', 6, 'to', 0) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 8, 10, 11, 0],) ,
('saved value', 7.099829583402616) ,
('Remap node', 8, 'from ', 6, 'to', 3) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 8, 10, 11, 3],) ,
('saved value', 7.099829583402616) ,
('Remap node', 8, 'from ', 6, 'to', 7) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 8, 10, 11, 7],) ,
('saved value', 7.099829583402616) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 2) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 4) ,
('Swap gain:', -0.06414138893169363) ,
([2, 4, 5, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([2, 4, 5, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.730583562831556) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 5) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 4) ,
('Swap gain:', 0.003166617071981792) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.797891568835231) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 1) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([1, 2, 5, 4, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([1, 2, 5, 4, 9, 8, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 9) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([9, 2, 5, 1, 4, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([9, 2, 5, 1, 4, 8, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 8) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([8, 2, 5, 1, 9, 4, 10, 11, 6],) ,
('Computing match for mapping',) ,
([8, 2, 5, 1, 9, 4, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 10) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([10, 2, 5, 1, 9, 8, 4, 11, 6],) ,
('Computing match for mapping',) ,
([10, 2, 5, 1, 9, 8, 4, 11, 6],) ,
('saved value', 5.794724951763249) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 11) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 4) ,
('Swap gain:', -1.1208053521286891) ,
([11, 2, 5, 1, 9, 8, 10, 4, 6],) ,
('Computing match for mapping',) ,
([11, 2, 5, 1, 9, 8, 10, 4, 6],) ,
('saved value', 6.67391959963456) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 6) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 6, ',', 8, '-', 4) ,
('Swap gain:', -1.0342963197009802) ,
([6, 2, 5, 1, 9, 8, 10, 11, 4],) ,
('Computing match for mapping',) ,
([6, 2, 5, 1, 9, 8, 10, 11, 4],) ,
('saved value', 6.760428632062268) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 5) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 2) ,
('Swap gain:', -0.05579265860361371) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.738932293159635) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 1) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -1.3451549967829148) ,
([4, 1, 5, 2, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 1, 5, 2, 9, 8, 10, 11, 6],) ,
('saved value', 6.449569954980334) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 9) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -0.854023579876701) ,
([4, 9, 5, 1, 2, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 9, 5, 1, 2, 8, 10, 11, 6],) ,
('saved value', 6.940701371886548) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 8) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1.854023579876701) ,
([4, 8, 5, 1, 9, 2, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 8, 5, 1, 9, 2, 10, 11, 6],) ,
('saved value', 5.940701371886548) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 10) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -2.257429137002567) ,
([4, 10, 5, 1, 9, 8, 2, 11, 6],) ,
('Computing match for mapping',) ,
([4, 10, 5, 1, 9, 8, 2, 11, 6],) ,
('saved value', 5.537295814760682) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 11) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -1.2145672250764723) ,
([4, 11, 5, 1, 9, 8, 10, 2, 6],) ,
('Computing match for mapping',) ,
([4, 11, 5, 1, 9, 8, 10, 2, 6],) ,
('saved value', 6.580157726686776) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 2, ',', 8, '-', 6) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 6, ',', 8, '-', 2) ,
('Swap gain:', -0.5489189482373336) ,
([4, 6, 5, 1, 9, 8, 10, 11, 2],) ,
('Computing match for mapping',) ,
([4, 6, 5, 1, 9, 8, 10, 11, 2],) ,
('saved value', 7.2458060035259155) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 1) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 5) ,
('Swap gain:', -1.0) ,
([4, 2, 1, 5, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 2, 1, 5, 9, 8, 10, 11, 6],) ,
('saved value', 6.794724951763249) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 9) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 5) ,
('Swap gain:', -1.0) ,
([4, 2, 9, 1, 5, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 2, 9, 1, 5, 8, 10, 11, 6],) ,
('saved value', 6.794724951763249) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 8) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 5) ,
('Swap gain:', -1.0) ,
([4, 2, 8, 1, 9, 5, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 2, 8, 1, 9, 5, 10, 11, 6],) ,
('saved value', 6.794724951763249) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 10) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 5) ,
('Swap gain:', -2.0310536388359344) ,
([4, 2, 10, 1, 9, 8, 5, 11, 6],) ,
('Computing match for mapping',) ,
([4, 2, 10, 1, 9, 8, 5, 11, 6],) ,
('saved value', 5.763671312927315) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 11) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 5) ,
('Swap gain:', -1.0) ,
([4, 2, 11, 1, 9, 8, 10, 5, 6],) ,
('Computing match for mapping',) ,
([4, 2, 11, 1, 9, 8, 10, 5, 6],) ,
('saved value', 6.794724951763249) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 5, ',', 8, '-', 6) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 6, ',', 8, '-', 5) ,
('Swap gain:', -0.6948953683606325) ,
([4, 2, 6, 1, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 2, 6, 1, 9, 8, 10, 11, 5],) ,
('saved value', 7.099829583402617) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 2, 5, 9, 1, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 2, 5, 9, 1, 8, 10, 11, 6],) ,
('saved value', 5.794724951763249) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 8) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 2, 5, 8, 9, 1, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 2, 5, 8, 9, 1, 10, 11, 6],) ,
('saved value', 5.794724951763249) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 10) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -3.9064050521855678) ,
([4, 2, 5, 10, 9, 8, 1, 11, 6],) ,
('Computing match for mapping',) ,
([4, 2, 5, 10, 9, 8, 1, 11, 6],) ,
('saved value', 3.8883198995776813) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -3.0) ,
([4, 2, 5, 11, 9, 8, 10, 1, 6],) ,
('Computing match for mapping',) ,
([4, 2, 5, 11, 9, 8, 10, 1, 6],) ,
('saved value', 4.794724951763249) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 6) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 6, ',', 8, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 2, 5, 6, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 2, 5, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.794724951763249) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([4, 2, 5, 1, 8, 9, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 8, 9, 10, 11, 6],) ,
('saved value', 5.794724951763249) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([4, 2, 5, 1, 10, 8, 9, 11, 6],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 10, 8, 9, 11, 6],) ,
('saved value', 3.8883198995776813) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([4, 2, 5, 1, 11, 8, 10, 9, 6],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 11, 8, 10, 9, 6],) ,
('saved value', 4.794724951763249) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 6) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 6, ',', 8, '-', 9) ,
('Swap gain:', -1.6948953683606331) ,
([4, 2, 5, 1, 6, 8, 10, 11, 9],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 6, 8, 10, 11, 9],) ,
('saved value', 6.099829583402616) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2.9064050521855678) ,
([4, 2, 5, 1, 9, 10, 8, 11, 6],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 10, 8, 11, 6],) ,
('saved value', 4.888319899577681) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -3.0) ,
([4, 2, 5, 1, 9, 11, 10, 8, 6],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 11, 10, 8, 6],) ,
('saved value', 4.794724951763249) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', 6) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 5, '-', 6, ',', 8, '-', 8) ,
('Swap gain:', -1.6948953683606331) ,
([4, 2, 5, 1, 9, 6, 10, 11, 8],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 6, 10, 11, 8],) ,
('saved value', 6.099829583402616) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -2.155025608036605) ,
([4, 2, 5, 1, 9, 8, 11, 10, 6],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 8, 11, 10, 6],) ,
('saved value', 5.639699343726644) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', 6) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 6, '-', 6, ',', 8, '-', 10) ,
('Swap gain:', -3.6013004205462007) ,
([4, 2, 5, 1, 9, 8, 6, 11, 10],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 8, 6, 11, 10],) ,
('saved value', 4.193424531217048) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 6) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 7, '-', 6, ',', 8, '-', 11) ,
('Swap gain:', -2.6948953683606334) ,
([4, 2, 5, 1, 9, 8, 10, 6, 11],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 8, 10, 6, 11],) ,
('saved value', 5.099829583402616) ,
('Use swap gain',) ,
('Original mapping', [4, 2, 5, 1, 9, 8, 10, 11, 6]) ,
('Current mapping', [5, 2, 4, 1, 9, 8, 10, 11, 6]) ,
('Gain after the hill-climbing', 0.003166617071981792) ,
('Update triple match number to:', 7.797891568835231) ,
('Current mapping:', [5, 2, 4, 1, 9, 8, 10, 11, 6]) ,
('Remap node', 0, 'from ', 5, 'to', 0) ,
('Move gain:', -0.3425675684123289) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.455324000422903) ,
('Remap node', 0, 'from ', 5, 'to', 3) ,
('Move gain:', -0.3425675684123289) ,
('Computing match for mapping',) ,
([3, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.455324000422903) ,
('Remap node', 0, 'from ', 5, 'to', 7) ,
('Move gain:', -0.04986979616417159) ,
('Computing match for mapping',) ,
([7, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.74802177267106) ,
('Remap node', 1, 'from ', 2, 'to', 0) ,
('Move gain:', -0.854023579876701) ,
('Computing match for mapping',) ,
([5, 0, 4, 1, 9, 8, 10, 11, 6],) ,
('saved value', 6.94386798895853) ,
('Remap node', 1, 'from ', 2, 'to', 3) ,
('Move gain:', -0.854023579876701) ,
('Computing match for mapping',) ,
([5, 3, 4, 1, 9, 8, 10, 11, 6],) ,
('saved value', 6.94386798895853) ,
('Remap node', 1, 'from ', 2, 'to', 7) ,
('Move gain:', -0.15066596295155044) ,
('Computing match for mapping',) ,
([5, 7, 4, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.647225605883681) ,
('Remap node', 2, 'from ', 4, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 2, 0, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.797891568835231) ,
('Remap node', 2, 'from ', 4, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.797891568835231) ,
('Remap node', 2, 'from ', 4, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 2, 7, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.797891568835231) ,
('Remap node', 3, 'from ', 1, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 4, 0, 9, 8, 10, 11, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 4, 3, 9, 8, 10, 11, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 3, 'from ', 1, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 4, 7, 9, 8, 10, 11, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 4, 'from ', 9, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 0, 8, 10, 11, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 3, 8, 10, 11, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 4, 'from ', 9, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 7, 8, 10, 11, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 5, 'from ', 8, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 0, 10, 11, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 5, 'from ', 8, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 3, 10, 11, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 5, 'from ', 8, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 7, 10, 11, 6],) ,
('saved value', 6.797891568835231) ,
('Remap node', 6, 'from ', 10, 'to', 0) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 8, 0, 11, 6],) ,
('saved value', 4.891486516649664) ,
('Remap node', 6, 'from ', 10, 'to', 3) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 8, 3, 11, 6],) ,
('saved value', 4.891486516649664) ,
('Remap node', 6, 'from ', 10, 'to', 7) ,
('Move gain:', -2.2300460327385623) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 8, 7, 11, 6],) ,
('saved value', 5.567845536096669) ,
('Remap node', 7, 'from ', 11, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 8, 10, 0, 6],) ,
('saved value', 5.797891568835231) ,
('Remap node', 7, 'from ', 11, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 8, 10, 3, 6],) ,
('saved value', 5.797891568835231) ,
('Remap node', 7, 'from ', 11, 'to', 7) ,
('Move gain:', -1.301360552050872) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 8, 10, 7, 6],) ,
('saved value', 6.49653101678436) ,
('Remap node', 8, 'from ', 6, 'to', 0) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 8, 10, 11, 0],) ,
('saved value', 7.102996200474598) ,
('Remap node', 8, 'from ', 6, 'to', 3) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 8, 10, 11, 3],) ,
('saved value', 7.102996200474598) ,
('Remap node', 8, 'from ', 6, 'to', 7) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 8, 10, 11, 7],) ,
('saved value', 7.102996200474598) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 5, ',', 1, '-', 2) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 5) ,
('Swap gain:', -0.018034495289178665) ,
([2, 5, 4, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([2, 5, 4, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.779857073546053) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 5, ',', 2, '-', 4) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 5) ,
('Swap gain:', -0.0031666170719821807) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.794724951763249) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 5, ',', 3, '-', 1) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 5) ,
('Swap gain:', -1.3425675684123288) ,
([1, 2, 4, 5, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([1, 2, 4, 5, 9, 8, 10, 11, 6],) ,
('saved value', 6.455324000422903) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 5, ',', 4, '-', 9) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 5) ,
('Swap gain:', -1.3425675684123288) ,
([9, 2, 4, 1, 5, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([9, 2, 4, 1, 5, 8, 10, 11, 6],) ,
('saved value', 6.455324000422903) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 5, ',', 5, '-', 8) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 5) ,
('Swap gain:', -1.3425675684123288) ,
([8, 2, 4, 1, 9, 5, 10, 11, 6],) ,
('Computing match for mapping',) ,
([8, 2, 4, 1, 9, 5, 10, 11, 6],) ,
('saved value', 6.455324000422903) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 5, ',', 6, '-', 10) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 5) ,
('Swap gain:', -2.034220255907916) ,
([10, 2, 4, 1, 9, 8, 5, 11, 6],) ,
('Computing match for mapping',) ,
([10, 2, 4, 1, 9, 8, 5, 11, 6],) ,
('saved value', 5.763671312927315) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 5, ',', 7, '-', 11) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 5) ,
('Swap gain:', -1.0) ,
([11, 2, 4, 1, 9, 8, 10, 5, 6],) ,
('Computing match for mapping',) ,
([11, 2, 4, 1, 9, 8, 10, 5, 6],) ,
('saved value', 6.797891568835231) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 5, ',', 8, '-', 6) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 6, ',', 8, '-', 5) ,
('Swap gain:', -1.037462936772962) ,
([6, 2, 4, 1, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([6, 2, 4, 1, 9, 8, 10, 11, 5],) ,
('saved value', 6.760428632062269) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 4) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 2) ,
('Swap gain:', -0.10506616931811052) ,
([5, 4, 2, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([5, 4, 2, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.692825399517121) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 1) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -1.3451549967829148) ,
([5, 1, 4, 2, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([5, 1, 4, 2, 9, 8, 10, 11, 6],) ,
('saved value', 6.452736572052316) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 9) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -0.854023579876701) ,
([5, 9, 4, 1, 2, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([5, 9, 4, 1, 2, 8, 10, 11, 6],) ,
('saved value', 6.94386798895853) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 8) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1.854023579876701) ,
([5, 8, 4, 1, 9, 2, 10, 11, 6],) ,
('Computing match for mapping',) ,
([5, 8, 4, 1, 9, 2, 10, 11, 6],) ,
('saved value', 5.94386798895853) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 10) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -2.257429137002567) ,
([5, 10, 4, 1, 9, 8, 2, 11, 6],) ,
('Computing match for mapping',) ,
([5, 10, 4, 1, 9, 8, 2, 11, 6],) ,
('saved value', 5.540462431832664) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 11) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -1.2145672250764723) ,
([5, 11, 4, 1, 9, 8, 10, 2, 6],) ,
('Computing match for mapping',) ,
([5, 11, 4, 1, 9, 8, 10, 2, 6],) ,
('saved value', 6.583324343758759) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 2, ',', 8, '-', 6) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 6, ',', 8, '-', 2) ,
('Swap gain:', -0.5489189482373341) ,
([5, 6, 4, 1, 9, 8, 10, 11, 2],) ,
('Computing match for mapping',) ,
([5, 6, 4, 1, 9, 8, 10, 11, 2],) ,
('saved value', 7.248972620597897) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 1) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', -1.0) ,
([5, 2, 1, 4, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([5, 2, 1, 4, 9, 8, 10, 11, 6],) ,
('saved value', 6.797891568835231) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 9) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 4) ,
('Swap gain:', -1.0) ,
([5, 2, 9, 1, 4, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([5, 2, 9, 1, 4, 8, 10, 11, 6],) ,
('saved value', 6.797891568835231) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 8) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([5, 2, 8, 1, 9, 4, 10, 11, 6],) ,
('Computing match for mapping',) ,
([5, 2, 8, 1, 9, 4, 10, 11, 6],) ,
('saved value', 6.797891568835231) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 10) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([5, 2, 10, 1, 9, 8, 4, 11, 6],) ,
('Computing match for mapping',) ,
([5, 2, 10, 1, 9, 8, 4, 11, 6],) ,
('saved value', 5.797891568835231) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 4, ',', 7, '-', 11) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 4) ,
('Swap gain:', -1.1239719692006709) ,
([5, 2, 11, 1, 9, 8, 10, 4, 6],) ,
('Computing match for mapping',) ,
([5, 2, 11, 1, 9, 8, 10, 4, 6],) ,
('saved value', 6.67391959963456) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 4, ',', 8, '-', 6) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 6, ',', 8, '-', 4) ,
('Swap gain:', -0.6948953683606331) ,
([5, 2, 6, 1, 9, 8, 10, 11, 4],) ,
('Computing match for mapping',) ,
([5, 2, 6, 1, 9, 8, 10, 11, 4],) ,
('saved value', 7.102996200474598) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([5, 2, 4, 9, 1, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([5, 2, 4, 9, 1, 8, 10, 11, 6],) ,
('saved value', 5.797891568835231) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 8) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([5, 2, 4, 8, 9, 1, 10, 11, 6],) ,
('Computing match for mapping',) ,
([5, 2, 4, 8, 9, 1, 10, 11, 6],) ,
('saved value', 5.797891568835231) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 10) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -3.9064050521855678) ,
([5, 2, 4, 10, 9, 8, 1, 11, 6],) ,
('Computing match for mapping',) ,
([5, 2, 4, 10, 9, 8, 1, 11, 6],) ,
('saved value', 3.8914865166496635) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 2, 4, 11, 9, 8, 10, 1, 6],) ,
('Computing match for mapping',) ,
([5, 2, 4, 11, 9, 8, 10, 1, 6],) ,
('saved value', 4.797891568835231) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 6) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 6, ',', 8, '-', 1) ,
('Swap gain:', 0.0) ,
([5, 2, 4, 6, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([5, 2, 4, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.797891568835231) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([5, 2, 4, 1, 8, 9, 10, 11, 6],) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 8, 9, 10, 11, 6],) ,
('saved value', 5.797891568835231) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([5, 2, 4, 1, 10, 8, 9, 11, 6],) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 10, 8, 9, 11, 6],) ,
('saved value', 3.8914865166496635) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([5, 2, 4, 1, 11, 8, 10, 9, 6],) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 11, 8, 10, 9, 6],) ,
('saved value', 4.797891568835231) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 6) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 6, ',', 8, '-', 9) ,
('Swap gain:', -1.6948953683606331) ,
([5, 2, 4, 1, 6, 8, 10, 11, 9],) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 6, 8, 10, 11, 9],) ,
('saved value', 6.102996200474598) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2.9064050521855678) ,
([5, 2, 4, 1, 9, 10, 8, 11, 6],) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 10, 8, 11, 6],) ,
('saved value', 4.891486516649664) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -3.0) ,
([5, 2, 4, 1, 9, 11, 10, 8, 6],) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 11, 10, 8, 6],) ,
('saved value', 4.797891568835231) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', 6) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 5, '-', 6, ',', 8, '-', 8) ,
('Swap gain:', -1.6948953683606331) ,
([5, 2, 4, 1, 9, 6, 10, 11, 8],) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 6, 10, 11, 8],) ,
('saved value', 6.102996200474598) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -2.155025608036605) ,
([5, 2, 4, 1, 9, 8, 11, 10, 6],) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 8, 11, 10, 6],) ,
('saved value', 5.642865960798627) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', 6) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 6, '-', 6, ',', 8, '-', 10) ,
('Swap gain:', -3.6013004205462007) ,
([5, 2, 4, 1, 9, 8, 6, 11, 10],) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 8, 6, 11, 10],) ,
('saved value', 4.196591148289031) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 6) ,
([5, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 7, '-', 6, ',', 8, '-', 11) ,
('Swap gain:', -2.6948953683606334) ,
([5, 2, 4, 1, 9, 8, 10, 6, 11],) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 9, 8, 10, 6, 11],) ,
('saved value', 5.102996200474598) ,
('no move/swap gain found',) ,
('Original mapping', [5, 2, 4, 1, 9, 8, 10, 11, 6]) ,
('Current mapping', [5, 2, 4, 1, 9, 8, 10, 11, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('node_pair', (0, 5)) ,
('instance/attribute match', 0.3425675684123289) ,
('node_pair', (1, 11)) ,
('instance/attribute match', 0.798230921273087) ,
('node_pair', (2, 9)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (7, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (8, 10)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 1.140798489685416) ,
('Node mapping at start', [5, 11, 9, 7, 2, 0, 6, 1, 10]) ,
('Triple match number at start:', 1.140798489685416) ,
('Remap node', 0, 'from ', 5, 'to', 3) ,
('Move gain:', -0.3425675684123289) ,
('Computing match for mapping',) ,
([3, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('saved value', 0.7982309212730871) ,
('Remap node', 0, 'from ', 5, 'to', 4) ,
('Move gain:', -0.003166617071981792) ,
('Computing match for mapping',) ,
([4, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('saved value', 1.1376318726134342) ,
('Remap node', 0, 'from ', 5, 'to', 8) ,
('Move gain:', -0.3425675684123289) ,
('Computing match for mapping',) ,
([8, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('saved value', 0.7982309212730871) ,
('Remap node', 1, 'from ', 11, 'to', 3) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([5, 3, 9, 7, 2, 0, 6, 1, 10],) ,
('saved value', 0.34256756841232894) ,
('Remap node', 1, 'from ', 11, 'to', 4) ,
('Move gain:', -0.04927351071449659) ,
('Computing match for mapping',) ,
([5, 4, 9, 7, 2, 0, 6, 1, 10],) ,
('saved value', 1.0915249789709194) ,
('Remap node', 1, 'from ', 11, 'to', 8) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([5, 8, 9, 7, 2, 0, 6, 1, 10],) ,
('saved value', 0.34256756841232894) ,
('Remap node', 2, 'from ', 9, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 3, 7, 2, 0, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 2, 'from ', 9, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 4, 7, 2, 0, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 2, 'from ', 9, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 8, 7, 2, 0, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 3, 'from ', 7, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 3, 2, 0, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 3, 'from ', 7, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 4, 2, 0, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 3, 'from ', 7, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 8, 2, 0, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 4, 'from ', 2, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 3, 0, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 4, 'from ', 2, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 4, 0, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 4, 'from ', 2, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 8, 0, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 5, 'from ', 0, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 3, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 5, 'from ', 0, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 4, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 5, 'from ', 0, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 8, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 6, 'from ', 6, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 0, 3, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 6, 'from ', 6, 'to', 4) ,
('Move gain:', 1.9064050521855678) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 0, 4, 1, 10],) ,
('saved value', 3.0472035418709837) ,
('Remap node', 6, 'from ', 6, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 0, 8, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 7, 'from ', 1, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 0, 6, 3, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 7, 'from ', 1, 'to', 4) ,
('Move gain:', 0.8760280307993291) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 0, 6, 4, 10],) ,
('saved value', 2.016826520484745) ,
('Remap node', 7, 'from ', 1, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 0, 6, 8, 10],) ,
('saved value', 1.140798489685416) ,
('Remap node', 8, 'from ', 10, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 0, 6, 1, 3],) ,
('saved value', 1.140798489685416) ,
('Remap node', 8, 'from ', 10, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 0, 6, 1, 4],) ,
('saved value', 1.140798489685416) ,
('Remap node', 8, 'from ', 10, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 0, 6, 1, 8],) ,
('saved value', 1.140798489685416) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 5, ',', 1, '-', 11) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 0, '-', 11, ',', 1, '-', 5) ,
('Swap gain:', 1.1102230246251565e-16) ,
([11, 5, 9, 7, 2, 0, 6, 1, 10],) ,
('Computing match for mapping',) ,
([11, 5, 9, 7, 2, 0, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 5, ',', 2, '-', 9) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 0, '-', 9, ',', 2, '-', 5) ,
('Swap gain:', -0.3425675684123289) ,
([9, 11, 5, 7, 2, 0, 6, 1, 10],) ,
('Computing match for mapping',) ,
([9, 11, 5, 7, 2, 0, 6, 1, 10],) ,
('saved value', 0.7982309212730871) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 5, ',', 3, '-', 7) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 5) ,
('Swap gain:', -0.04986979616417159) ,
([7, 11, 9, 5, 2, 0, 6, 1, 10],) ,
('Computing match for mapping',) ,
([7, 11, 9, 5, 2, 0, 6, 1, 10],) ,
('saved value', 1.0909286935212443) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 5, ',', 4, '-', 2) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 0.037758163314435045) ,
([2, 11, 9, 7, 5, 0, 6, 1, 10],) ,
('Computing match for mapping',) ,
([2, 11, 9, 7, 5, 0, 6, 1, 10],) ,
('saved value', 1.178556652999851) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 5, ',', 5, '-', 0) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', -0.3425675684123289) ,
([0, 11, 9, 7, 2, 5, 6, 1, 10],) ,
('Computing match for mapping',) ,
([0, 11, 9, 7, 2, 5, 6, 1, 10],) ,
('saved value', 0.7982309212730871) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 5, ',', 6, '-', 6) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', 0.5327838449373048) ,
([6, 11, 9, 7, 2, 0, 5, 1, 10],) ,
('Computing match for mapping',) ,
([6, 11, 9, 7, 2, 0, 5, 1, 10],) ,
('saved value', 1.6735823346227208) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 5, ',', 7, '-', 1) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 5) ,
('Swap gain:', 0.6574324315876712) ,
([1, 11, 9, 7, 2, 0, 6, 5, 10],) ,
('Computing match for mapping',) ,
([1, 11, 9, 7, 2, 0, 6, 5, 10],) ,
('saved value', 1.7982309212730871) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 5, ',', 8, '-', 10) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 0, '-', 10, ',', 8, '-', 5) ,
('Swap gain:', -0.003166617071981792) ,
([10, 11, 9, 7, 2, 0, 6, 1, 5],) ,
('Computing match for mapping',) ,
([10, 11, 9, 7, 2, 0, 6, 1, 5],) ,
('saved value', 1.1376318726134342) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 11, ',', 2, '-', 9) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 1, '-', 9, ',', 2, '-', 11) ,
('Swap gain:', -0.798230921273087) ,
([5, 9, 11, 7, 2, 0, 6, 1, 10],) ,
('Computing match for mapping',) ,
([5, 9, 11, 7, 2, 0, 6, 1, 10],) ,
('saved value', 0.34256756841232894) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 11, ',', 3, '-', 7) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 11) ,
('Swap gain:', -0.0948733043479365) ,
([5, 7, 9, 11, 2, 0, 6, 1, 10],) ,
('Computing match for mapping',) ,
([5, 7, 9, 11, 2, 0, 6, 1, 10],) ,
('saved value', 1.0459251853374796) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 11, ',', 4, '-', 2) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 11) ,
('Swap gain:', 0.05579265860361393) ,
([5, 2, 9, 7, 11, 0, 6, 1, 10],) ,
('Computing match for mapping',) ,
([5, 2, 9, 7, 11, 0, 6, 1, 10],) ,
('saved value', 1.19659114828903) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 11, ',', 5, '-', 0) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 11) ,
('Swap gain:', -0.798230921273087) ,
([5, 0, 9, 7, 2, 11, 6, 1, 10],) ,
('Computing match for mapping',) ,
([5, 0, 9, 7, 2, 11, 6, 1, 10],) ,
('saved value', 0.34256756841232894) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 11, ',', 6, '-', 6) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 11) ,
('Swap gain:', 0.0771204920765467) ,
([5, 6, 9, 7, 2, 0, 11, 1, 10],) ,
('Computing match for mapping',) ,
([5, 6, 9, 7, 2, 0, 11, 1, 10],) ,
('saved value', 1.2179189817619627) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 11, ',', 7, '-', 1) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 11) ,
('Swap gain:', 1.201769078726913) ,
([5, 1, 9, 7, 2, 0, 6, 11, 10],) ,
('Computing match for mapping',) ,
([5, 1, 9, 7, 2, 0, 6, 11, 10],) ,
('saved value', 2.342567568412329) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 11, ',', 8, '-', 10) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 1, '-', 10, ',', 8, '-', 11) ,
('Swap gain:', -0.04927351071449659) ,
([5, 10, 9, 7, 2, 0, 6, 1, 11],) ,
('Computing match for mapping',) ,
([5, 10, 9, 7, 2, 0, 6, 1, 11],) ,
('saved value', 1.0915249789709194) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 9, ',', 3, '-', 7) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 9) ,
('Swap gain:', 0.0) ,
([5, 11, 7, 9, 2, 0, 6, 1, 10],) ,
('Computing match for mapping',) ,
([5, 11, 7, 9, 2, 0, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 9, ',', 4, '-', 2) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 9) ,
('Swap gain:', 1.0) ,
([5, 11, 2, 7, 9, 0, 6, 1, 10],) ,
('Computing match for mapping',) ,
([5, 11, 2, 7, 9, 0, 6, 1, 10],) ,
('saved value', 2.140798489685416) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 9, ',', 5, '-', 0) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 9) ,
('Swap gain:', 0.0) ,
([5, 11, 0, 7, 2, 9, 6, 1, 10],) ,
('Computing match for mapping',) ,
([5, 11, 0, 7, 2, 9, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 9, ',', 6, '-', 6) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 9) ,
('Swap gain:', 0.0) ,
([5, 11, 6, 7, 2, 0, 9, 1, 10],) ,
('Computing match for mapping',) ,
([5, 11, 6, 7, 2, 0, 9, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 9, ',', 7, '-', 1) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 9) ,
('Swap gain:', 0.0) ,
([5, 11, 1, 7, 2, 0, 6, 9, 10],) ,
('Computing match for mapping',) ,
([5, 11, 1, 7, 2, 0, 6, 9, 10],) ,
('saved value', 1.140798489685416) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 9, ',', 8, '-', 10) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 2, '-', 10, ',', 8, '-', 9) ,
('Swap gain:', 0.0) ,
([5, 11, 10, 7, 2, 0, 6, 1, 9],) ,
('Computing match for mapping',) ,
([5, 11, 10, 7, 2, 0, 6, 1, 9],) ,
('saved value', 1.140798489685416) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 2) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 7) ,
('Swap gain:', 0.508868583093786) ,
([5, 11, 9, 2, 7, 0, 6, 1, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 2, 7, 0, 6, 1, 10],) ,
('saved value', 1.649667072779202) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 0) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 7) ,
('Swap gain:', 0.0) ,
([5, 11, 9, 0, 2, 7, 6, 1, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 0, 2, 7, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 7, ',', 6, '-', 6) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', 1.6763590194470055) ,
([5, 11, 9, 6, 2, 0, 7, 1, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 6, 2, 0, 7, 1, 10],) ,
('saved value', 2.8171575091324215) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 7, ',', 7, '-', 1) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 7) ,
('Swap gain:', 2.698639447949128) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 7, ',', 8, '-', 10) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 3, '-', 10, ',', 8, '-', 7) ,
('Swap gain:', 0.0) ,
([5, 11, 9, 10, 2, 0, 6, 1, 7],) ,
('Computing match for mapping',) ,
([5, 11, 9, 10, 2, 0, 6, 1, 7],) ,
('saved value', 1.140798489685416) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 0) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([5, 11, 9, 7, 0, 2, 6, 1, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 0, 2, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 6) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', 0.7540420845011112) ,
([5, 11, 9, 7, 6, 0, 2, 1, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 6, 0, 2, 1, 10],) ,
('saved value', 1.894840574186527) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 1) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 2) ,
('Swap gain:', 0.8412254335271415) ,
([5, 11, 9, 7, 1, 0, 6, 2, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 1, 0, 6, 2, 10],) ,
('saved value', 1.9820239232125574) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', 10) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 4, '-', 10, ',', 8, '-', 2) ,
('Swap gain:', 0.0) ,
([5, 11, 9, 7, 10, 0, 6, 1, 2],) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 10, 0, 6, 1, 2],) ,
('saved value', 1.140798489685416) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 6) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([5, 11, 9, 7, 2, 6, 0, 1, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 6, 0, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 1) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', 0.0) ,
([5, 11, 9, 7, 2, 1, 6, 0, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 1, 6, 0, 10],) ,
('saved value', 1.140798489685416) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 10) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 5, '-', 10, ',', 8, '-', 0) ,
('Swap gain:', 0.0) ,
([5, 11, 9, 7, 2, 10, 6, 1, 0],) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 10, 6, 1, 0],) ,
('saved value', 1.140798489685416) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 1) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', 0.0) ,
([5, 11, 9, 7, 2, 0, 1, 6, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 0, 1, 6, 10],) ,
('saved value', 1.140798489685416) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 6, ',', 8, '-', 10) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 6, '-', 10, ',', 8, '-', 6) ,
('Swap gain:', 1.6013004205462011) ,
([5, 11, 9, 7, 2, 0, 10, 1, 6],) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 0, 10, 1, 6],) ,
('saved value', 2.742098910231617) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 1, ',', 8, '-', 10) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('After swapping:', 7, '-', 10, ',', 8, '-', 1) ,
('Swap gain:', 1.5709233991599623) ,
([5, 11, 9, 7, 2, 0, 6, 10, 1],) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 0, 6, 10, 1],) ,
('saved value', 2.7117218888453785) ,
('Use swap gain',) ,
('Original mapping', [5, 11, 9, 7, 2, 0, 6, 1, 10]) ,
('Current mapping', [5, 11, 9, 1, 2, 0, 6, 7, 10]) ,
('Gain after the hill-climbing', 2.698639447949128) ,
('Update triple match number to:', 3.839437937634544) ,
('Current mapping:', [5, 11, 9, 1, 2, 0, 6, 7, 10]) ,
('Remap node', 0, 'from ', 5, 'to', 3) ,
('Move gain:', -0.3425675684123289) ,
('Computing match for mapping',) ,
([3, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('saved value', 3.496870369222215) ,
('Remap node', 0, 'from ', 5, 'to', 4) ,
('Move gain:', -0.003166617071981792) ,
('Computing match for mapping',) ,
([4, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('saved value', 3.8362713205625623) ,
('Remap node', 0, 'from ', 5, 'to', 8) ,
('Move gain:', -0.3425675684123289) ,
('Computing match for mapping',) ,
([8, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('saved value', 3.496870369222215) ,
('Remap node', 1, 'from ', 11, 'to', 3) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([5, 3, 9, 1, 2, 0, 6, 7, 10],) ,
('saved value', 3.041207016361457) ,
('Remap node', 1, 'from ', 11, 'to', 4) ,
('Move gain:', -0.04927351071449659) ,
('Computing match for mapping',) ,
([5, 4, 9, 1, 2, 0, 6, 7, 10],) ,
('saved value', 3.7901644269200476) ,
('Remap node', 1, 'from ', 11, 'to', 8) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([5, 8, 9, 1, 2, 0, 6, 7, 10],) ,
('saved value', 3.041207016361457) ,
('Remap node', 2, 'from ', 9, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 3, 1, 2, 0, 6, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Remap node', 2, 'from ', 9, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 4, 1, 2, 0, 6, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Remap node', 2, 'from ', 9, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 8, 1, 2, 0, 6, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 3, 2, 0, 6, 7, 10],) ,
('saved value', 1.839437937634544) ,
('Remap node', 3, 'from ', 1, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 4, 2, 0, 6, 7, 10],) ,
('saved value', 1.839437937634544) ,
('Remap node', 3, 'from ', 1, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 8, 2, 0, 6, 7, 10],) ,
('saved value', 1.839437937634544) ,
('Remap node', 4, 'from ', 2, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 3, 0, 6, 7, 10],) ,
('saved value', 2.839437937634544) ,
('Remap node', 4, 'from ', 2, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 4, 0, 6, 7, 10],) ,
('saved value', 2.839437937634544) ,
('Remap node', 4, 'from ', 2, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 8, 0, 6, 7, 10],) ,
('saved value', 2.839437937634544) ,
('Remap node', 5, 'from ', 0, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 3, 6, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Remap node', 5, 'from ', 0, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 4, 6, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Remap node', 5, 'from ', 0, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 8, 6, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Remap node', 6, 'from ', 6, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 3, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Remap node', 6, 'from ', 6, 'to', 4) ,
('Move gain:', 1.9064050521855678) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('saved value', 5.745842989820112) ,
('Remap node', 6, 'from ', 6, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 8, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Remap node', 7, 'from ', 7, 'to', 3) ,
('Move gain:', -0.698639447949128) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 6, 3, 10],) ,
('saved value', 3.140798489685416) ,
('Remap node', 7, 'from ', 7, 'to', 4) ,
('Move gain:', 0.1773885828502011) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 6, 4, 10],) ,
('saved value', 4.016826520484745) ,
('Remap node', 7, 'from ', 7, 'to', 8) ,
('Move gain:', -0.698639447949128) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 6, 8, 10],) ,
('saved value', 3.140798489685416) ,
('Remap node', 8, 'from ', 10, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 6, 7, 3],) ,
('saved value', 3.839437937634544) ,
('Remap node', 8, 'from ', 10, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 6, 7, 4],) ,
('saved value', 3.839437937634544) ,
('Remap node', 8, 'from ', 10, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 6, 7, 8],) ,
('saved value', 3.839437937634544) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 5, ',', 1, '-', 11) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 0, '-', 11, ',', 1, '-', 5) ,
('Swap gain:', 1.1102230246251565e-16) ,
([11, 5, 9, 1, 2, 0, 6, 7, 10],) ,
('Computing match for mapping',) ,
([11, 5, 9, 1, 2, 0, 6, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 5, ',', 2, '-', 9) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 0, '-', 9, ',', 2, '-', 5) ,
('Swap gain:', -0.3425675684123289) ,
([9, 11, 5, 1, 2, 0, 6, 7, 10],) ,
('Computing match for mapping',) ,
([9, 11, 5, 1, 2, 0, 6, 7, 10],) ,
('saved value', 3.496870369222215) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 5, ',', 3, '-', 1) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 5) ,
('Swap gain:', -2.3425675684123286) ,
([1, 11, 9, 5, 2, 0, 6, 7, 10],) ,
('Computing match for mapping',) ,
([1, 11, 9, 5, 2, 0, 6, 7, 10],) ,
('saved value', 1.4968703692222154) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 5, ',', 4, '-', 2) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', -0.962241836685565) ,
([2, 11, 9, 1, 5, 0, 6, 7, 10],) ,
('Computing match for mapping',) ,
([2, 11, 9, 1, 5, 0, 6, 7, 10],) ,
('saved value', 2.877196100948979) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 5, ',', 5, '-', 0) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', -0.3425675684123289) ,
([0, 11, 9, 1, 2, 5, 6, 7, 10],) ,
('Computing match for mapping',) ,
([0, 11, 9, 1, 2, 5, 6, 7, 10],) ,
('saved value', 3.496870369222215) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 5, ',', 6, '-', 6) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', 0.5327838449373048) ,
([6, 11, 9, 1, 2, 0, 5, 7, 10],) ,
('Computing match for mapping',) ,
([6, 11, 9, 1, 2, 0, 5, 7, 10],) ,
('saved value', 4.372221782571849) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 5, ',', 7, '-', 7) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 0, '-', 7, ',', 7, '-', 5) ,
('Swap gain:', 0.25149075588670056) ,
([7, 11, 9, 1, 2, 0, 6, 5, 10],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 6, 5, 10],) ,
('saved value', 4.090928693521245) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 5, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 0, '-', 10, ',', 8, '-', 5) ,
('Swap gain:', -0.003166617071981792) ,
([10, 11, 9, 1, 2, 0, 6, 7, 5],) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 6, 7, 5],) ,
('saved value', 3.8362713205625623) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 11, ',', 2, '-', 9) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 1, '-', 9, ',', 2, '-', 11) ,
('Swap gain:', -0.798230921273087) ,
([5, 9, 11, 1, 2, 0, 6, 7, 10],) ,
('Computing match for mapping',) ,
([5, 9, 11, 1, 2, 0, 6, 7, 10],) ,
('saved value', 3.041207016361457) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 11, ',', 3, '-', 1) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 11) ,
('Swap gain:', -1.798230921273087) ,
([5, 1, 9, 11, 2, 0, 6, 7, 10],) ,
('Computing match for mapping',) ,
([5, 1, 9, 11, 2, 0, 6, 7, 10],) ,
('saved value', 2.041207016361457) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 11, ',', 4, '-', 2) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 11) ,
('Swap gain:', -0.9442073413963861) ,
([5, 2, 9, 1, 11, 0, 6, 7, 10],) ,
('Computing match for mapping',) ,
([5, 2, 9, 1, 11, 0, 6, 7, 10],) ,
('saved value', 2.895230596238158) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 11, ',', 5, '-', 0) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 11) ,
('Swap gain:', -0.798230921273087) ,
([5, 0, 9, 1, 2, 11, 6, 7, 10],) ,
('Computing match for mapping',) ,
([5, 0, 9, 1, 2, 11, 6, 7, 10],) ,
('saved value', 3.041207016361457) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 11, ',', 6, '-', 6) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 11) ,
('Swap gain:', 0.0771204920765467) ,
([5, 6, 9, 1, 2, 0, 11, 7, 10],) ,
('Computing match for mapping',) ,
([5, 6, 9, 1, 2, 0, 11, 7, 10],) ,
('saved value', 3.916558429711091) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 11, ',', 7, '-', 7) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 1, '-', 7, ',', 7, '-', 11) ,
('Swap gain:', 0.20648724770293547) ,
([5, 7, 9, 1, 2, 0, 6, 11, 10],) ,
('Computing match for mapping',) ,
([5, 7, 9, 1, 2, 0, 6, 11, 10],) ,
('saved value', 4.045925185337479) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 11, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 1, '-', 10, ',', 8, '-', 11) ,
('Swap gain:', -0.04927351071449659) ,
([5, 10, 9, 1, 2, 0, 6, 7, 11],) ,
('Computing match for mapping',) ,
([5, 10, 9, 1, 2, 0, 6, 7, 11],) ,
('saved value', 3.7901644269200476) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 9, ',', 3, '-', 1) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 9) ,
('Swap gain:', -2.0) ,
([5, 11, 1, 9, 2, 0, 6, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 1, 9, 2, 0, 6, 7, 10],) ,
('saved value', 1.839437937634544) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 9, ',', 4, '-', 2) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 9) ,
('Swap gain:', 0.0) ,
([5, 11, 2, 1, 9, 0, 6, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 2, 1, 9, 0, 6, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 9, ',', 5, '-', 0) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 9) ,
('Swap gain:', 0.0) ,
([5, 11, 0, 1, 2, 9, 6, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 0, 1, 2, 9, 6, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 9, ',', 6, '-', 6) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 9) ,
('Swap gain:', 0.0) ,
([5, 11, 6, 1, 2, 0, 9, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 6, 1, 2, 0, 9, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 9, ',', 7, '-', 7) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 2, '-', 7, ',', 7, '-', 9) ,
('Swap gain:', -0.698639447949128) ,
([5, 11, 7, 1, 2, 0, 6, 9, 10],) ,
('Computing match for mapping',) ,
([5, 11, 7, 1, 2, 0, 6, 9, 10],) ,
('saved value', 3.140798489685416) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 9, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 2, '-', 10, ',', 8, '-', 9) ,
('Swap gain:', 0.0) ,
([5, 11, 10, 1, 2, 0, 6, 7, 9],) ,
('Computing match for mapping',) ,
([5, 11, 10, 1, 2, 0, 6, 7, 9],) ,
('saved value', 3.839437937634544) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 2) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -1.491131416906214) ,
([5, 11, 9, 2, 1, 0, 6, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 2, 1, 0, 6, 7, 10],) ,
('saved value', 2.34830652072833) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 0) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([5, 11, 9, 0, 2, 1, 6, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 0, 2, 1, 6, 7, 10],) ,
('saved value', 1.839437937634544) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 6) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -1.0) ,
([5, 11, 9, 6, 2, 0, 1, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 6, 2, 0, 1, 7, 10],) ,
('saved value', 2.839437937634544) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 7) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 3, '-', 7, ',', 7, '-', 1) ,
('Swap gain:', -2.698639447949128) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 0, 6, 1, 10],) ,
('saved value', 1.140798489685416) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 3, '-', 10, ',', 8, '-', 1) ,
('Swap gain:', -1.3051046316393669) ,
([5, 11, 9, 10, 2, 0, 6, 7, 1],) ,
('Computing match for mapping',) ,
([5, 11, 9, 10, 2, 0, 6, 7, 1],) ,
('saved value', 2.534333305995177) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 0) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([5, 11, 9, 1, 0, 2, 6, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 0, 2, 6, 7, 10],) ,
('saved value', 2.839437937634544) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 6) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -0.2459579154988888) ,
([5, 11, 9, 1, 6, 0, 2, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 6, 0, 2, 7, 10],) ,
('saved value', 3.593480022135655) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 7) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 4, '-', 7, ',', 7, '-', 2) ,
('Swap gain:', -0.8574140144219865) ,
([5, 11, 9, 1, 7, 0, 6, 2, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 7, 0, 6, 2, 10],) ,
('saved value', 2.9820239232125574) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 4, '-', 10, ',', 8, '-', 2) ,
('Swap gain:', -1.0) ,
([5, 11, 9, 1, 10, 0, 6, 7, 2],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 10, 0, 6, 7, 2],) ,
('saved value', 2.839437937634544) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 6) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([5, 11, 9, 1, 2, 6, 0, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 6, 0, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 7) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 5, '-', 7, ',', 7, '-', 0) ,
('Swap gain:', -0.698639447949128) ,
([5, 11, 9, 1, 2, 7, 6, 0, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 7, 6, 0, 10],) ,
('saved value', 3.140798489685416) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 5, '-', 10, ',', 8, '-', 0) ,
('Swap gain:', 0.0) ,
([5, 11, 9, 1, 2, 10, 6, 7, 0],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 10, 6, 7, 0],) ,
('saved value', 3.839437937634544) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 7) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 6, '-', 7, ',', 7, '-', 6) ,
('Swap gain:', -0.02228042850212253) ,
([5, 11, 9, 1, 2, 0, 7, 6, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 7, 6, 10],) ,
('saved value', 3.8171575091324215) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 6, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 6, '-', 10, ',', 8, '-', 6) ,
('Swap gain:', 1.6013004205462011) ,
([5, 11, 9, 1, 2, 0, 10, 7, 6],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 10, 7, 6],) ,
('saved value', 5.440738358180745) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 7, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('After swapping:', 7, '-', 10, ',', 8, '-', 7) ,
('Swap gain:', 0.1773885828502011) ,
([5, 11, 9, 1, 2, 0, 6, 10, 7],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 6, 10, 7],) ,
('saved value', 4.016826520484745) ,
('Use move gain',) ,
('Original mapping', [5, 11, 9, 1, 2, 0, 6, 7, 10]) ,
('Current mapping', [5, 11, 9, 1, 2, 0, 4, 7, 10]) ,
('Gain after the hill-climbing', 1.9064050521855678) ,
('Update triple match number to:', 5.745842989820112) ,
('Current mapping:', [5, 11, 9, 1, 2, 0, 4, 7, 10]) ,
('Remap node', 0, 'from ', 5, 'to', 3) ,
('Move gain:', -0.3425675684123289) ,
('Computing match for mapping',) ,
([3, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('saved value', 5.403275421407783) ,
('Remap node', 0, 'from ', 5, 'to', 6) ,
('Move gain:', -0.3425675684123289) ,
('Computing match for mapping',) ,
([6, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('saved value', 5.403275421407783) ,
('Remap node', 0, 'from ', 5, 'to', 8) ,
('Move gain:', -0.3425675684123289) ,
('Computing match for mapping',) ,
([8, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('saved value', 5.403275421407783) ,
('Remap node', 1, 'from ', 11, 'to', 3) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([5, 3, 9, 1, 2, 0, 4, 7, 10],) ,
('saved value', 4.947612068547024) ,
('Remap node', 1, 'from ', 11, 'to', 6) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([5, 6, 9, 1, 2, 0, 4, 7, 10],) ,
('saved value', 4.947612068547024) ,
('Remap node', 1, 'from ', 11, 'to', 8) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([5, 8, 9, 1, 2, 0, 4, 7, 10],) ,
('saved value', 4.947612068547024) ,
('Remap node', 2, 'from ', 9, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 3, 1, 2, 0, 4, 7, 10],) ,
('saved value', 5.745842989820112) ,
('Remap node', 2, 'from ', 9, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 6, 1, 2, 0, 4, 7, 10],) ,
('saved value', 5.745842989820112) ,
('Remap node', 2, 'from ', 9, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 8, 1, 2, 0, 4, 7, 10],) ,
('saved value', 5.745842989820112) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 3, 2, 0, 4, 7, 10],) ,
('saved value', 3.7458429898201118) ,
('Remap node', 3, 'from ', 1, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 6, 2, 0, 4, 7, 10],) ,
('saved value', 4.745842989820112) ,
('Remap node', 3, 'from ', 1, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 8, 2, 0, 4, 7, 10],) ,
('saved value', 3.7458429898201118) ,
('Remap node', 4, 'from ', 2, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 3, 0, 4, 7, 10],) ,
('saved value', 4.745842989820112) ,
('Remap node', 4, 'from ', 2, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 6, 0, 4, 7, 10],) ,
('saved value', 4.745842989820112) ,
('Remap node', 4, 'from ', 2, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 8, 0, 4, 7, 10],) ,
('saved value', 4.745842989820112) ,
('Remap node', 5, 'from ', 0, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 3, 4, 7, 10],) ,
('saved value', 4.745842989820112) ,
('Remap node', 5, 'from ', 0, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 6, 4, 7, 10],) ,
('saved value', 4.745842989820112) ,
('Remap node', 5, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 8, 4, 7, 10],) ,
('saved value', 4.745842989820112) ,
('Remap node', 6, 'from ', 4, 'to', 3) ,
('Move gain:', -1.9064050521855678) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 3, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Remap node', 6, 'from ', 4, 'to', 6) ,
('Move gain:', -1.9064050521855678) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 6, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Remap node', 6, 'from ', 4, 'to', 8) ,
('Move gain:', -1.9064050521855678) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 8, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Remap node', 7, 'from ', 7, 'to', 3) ,
('Move gain:', -0.698639447949128) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 4, 3, 10],) ,
('saved value', 5.047203541870983) ,
('Remap node', 7, 'from ', 7, 'to', 6) ,
('Move gain:', -0.698639447949128) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 4, 6, 10],) ,
('saved value', 5.047203541870983) ,
('Remap node', 7, 'from ', 7, 'to', 8) ,
('Move gain:', -0.698639447949128) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 4, 8, 10],) ,
('saved value', 5.047203541870983) ,
('Remap node', 8, 'from ', 10, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 4, 7, 3],) ,
('saved value', 5.745842989820112) ,
('Remap node', 8, 'from ', 10, 'to', 6) ,
('Move gain:', 0.6948953683606331) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 4, 7, 6],) ,
('saved value', 6.440738358180745) ,
('Remap node', 8, 'from ', 10, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 4, 7, 8],) ,
('saved value', 5.745842989820112) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 5, ',', 1, '-', 11) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 0, '-', 11, ',', 1, '-', 5) ,
('Swap gain:', 1.1102230246251565e-16) ,
([11, 5, 9, 1, 2, 0, 4, 7, 10],) ,
('Computing match for mapping',) ,
([11, 5, 9, 1, 2, 0, 4, 7, 10],) ,
('saved value', 5.745842989820112) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 5, ',', 2, '-', 9) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 0, '-', 9, ',', 2, '-', 5) ,
('Swap gain:', -0.3425675684123289) ,
([9, 11, 5, 1, 2, 0, 4, 7, 10],) ,
('Computing match for mapping',) ,
([9, 11, 5, 1, 2, 0, 4, 7, 10],) ,
('saved value', 5.403275421407783) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 5, ',', 3, '-', 1) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 5) ,
('Swap gain:', -2.3425675684123286) ,
([1, 11, 9, 5, 2, 0, 4, 7, 10],) ,
('Computing match for mapping',) ,
([1, 11, 9, 5, 2, 0, 4, 7, 10],) ,
('saved value', 3.403275421407783) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 5, ',', 4, '-', 2) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', -0.962241836685565) ,
([2, 11, 9, 1, 5, 0, 4, 7, 10],) ,
('Computing match for mapping',) ,
([2, 11, 9, 1, 5, 0, 4, 7, 10],) ,
('saved value', 4.783601153134547) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 5, ',', 5, '-', 0) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', -1.3425675684123288) ,
([0, 11, 9, 1, 2, 5, 4, 7, 10],) ,
('Computing match for mapping',) ,
([0, 11, 9, 1, 2, 5, 4, 7, 10],) ,
('saved value', 4.403275421407783) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 5, ',', 6, '-', 4) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 5) ,
('Swap gain:', -1.034220255907916) ,
([4, 11, 9, 1, 2, 0, 5, 7, 10],) ,
('Computing match for mapping',) ,
([4, 11, 9, 1, 2, 0, 5, 7, 10],) ,
('saved value', 4.711622733912195) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 5, ',', 7, '-', 7) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 0, '-', 7, ',', 7, '-', 5) ,
('Swap gain:', 1.2514907558867006) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('saved value', 6.997333745706812) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 5, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 0, '-', 10, ',', 8, '-', 5) ,
('Swap gain:', -0.003166617071981792) ,
([10, 11, 9, 1, 2, 0, 4, 7, 5],) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 4, 7, 5],) ,
('saved value', 5.74267637274813) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 11, ',', 2, '-', 9) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 1, '-', 9, ',', 2, '-', 11) ,
('Swap gain:', -0.798230921273087) ,
([5, 9, 11, 1, 2, 0, 4, 7, 10],) ,
('Computing match for mapping',) ,
([5, 9, 11, 1, 2, 0, 4, 7, 10],) ,
('saved value', 4.947612068547024) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 11, ',', 3, '-', 1) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 11) ,
('Swap gain:', -1.798230921273087) ,
([5, 1, 9, 11, 2, 0, 4, 7, 10],) ,
('Computing match for mapping',) ,
([5, 1, 9, 11, 2, 0, 4, 7, 10],) ,
('saved value', 3.947612068547025) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 11, ',', 4, '-', 2) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 11) ,
('Swap gain:', -0.9442073413963861) ,
([5, 2, 9, 1, 11, 0, 4, 7, 10],) ,
('Computing match for mapping',) ,
([5, 2, 9, 1, 11, 0, 4, 7, 10],) ,
('saved value', 4.8016356484237255) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 11, ',', 5, '-', 0) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 11) ,
('Swap gain:', -1.798230921273087) ,
([5, 0, 9, 1, 2, 11, 4, 7, 10],) ,
('Computing match for mapping',) ,
([5, 0, 9, 1, 2, 11, 4, 7, 10],) ,
('saved value', 3.947612068547025) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 11, ',', 6, '-', 4) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 11) ,
('Swap gain:', -1.0803271495504307) ,
([5, 4, 9, 1, 2, 0, 11, 7, 10],) ,
('Computing match for mapping',) ,
([5, 4, 9, 1, 2, 0, 11, 7, 10],) ,
('saved value', 4.665515840269681) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 11, ',', 7, '-', 7) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 1, '-', 7, ',', 7, '-', 11) ,
('Swap gain:', 0.20648724770293547) ,
([5, 7, 9, 1, 2, 0, 4, 11, 10],) ,
('Computing match for mapping',) ,
([5, 7, 9, 1, 2, 0, 4, 11, 10],) ,
('saved value', 5.952330237523047) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 11, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 1, '-', 10, ',', 8, '-', 11) ,
('Swap gain:', -0.04927351071449659) ,
([5, 10, 9, 1, 2, 0, 4, 7, 11],) ,
('Computing match for mapping',) ,
([5, 10, 9, 1, 2, 0, 4, 7, 11],) ,
('saved value', 5.696569479105615) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 9, ',', 3, '-', 1) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 9) ,
('Swap gain:', -2.0) ,
([5, 11, 1, 9, 2, 0, 4, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 1, 9, 2, 0, 4, 7, 10],) ,
('saved value', 3.7458429898201118) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 9, ',', 4, '-', 2) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 9) ,
('Swap gain:', 0.0) ,
([5, 11, 2, 1, 9, 0, 4, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 2, 1, 9, 0, 4, 7, 10],) ,
('saved value', 5.745842989820112) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 9, ',', 5, '-', 0) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 9) ,
('Swap gain:', -1.0) ,
([5, 11, 0, 1, 2, 9, 4, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 0, 1, 2, 9, 4, 7, 10],) ,
('saved value', 4.745842989820112) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 9, ',', 6, '-', 4) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 9) ,
('Swap gain:', -1.9064050521855678) ,
([5, 11, 4, 1, 2, 0, 9, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 4, 1, 2, 0, 9, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 9, ',', 7, '-', 7) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 2, '-', 7, ',', 7, '-', 9) ,
('Swap gain:', -0.698639447949128) ,
([5, 11, 7, 1, 2, 0, 4, 9, 10],) ,
('Computing match for mapping',) ,
([5, 11, 7, 1, 2, 0, 4, 9, 10],) ,
('saved value', 5.047203541870983) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 9, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 2, '-', 10, ',', 8, '-', 9) ,
('Swap gain:', 0.0) ,
([5, 11, 10, 1, 2, 0, 4, 7, 9],) ,
('Computing match for mapping',) ,
([5, 11, 10, 1, 2, 0, 4, 7, 9],) ,
('saved value', 5.745842989820112) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 2) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -1.491131416906214) ,
([5, 11, 9, 2, 1, 0, 4, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 2, 1, 0, 4, 7, 10],) ,
('saved value', 4.254711572913898) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 0) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 11, 9, 0, 2, 1, 4, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 0, 2, 1, 4, 7, 10],) ,
('saved value', 2.7458429898201118) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 4) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -3.9064050521855678) ,
([5, 11, 9, 4, 2, 0, 1, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 4, 2, 0, 1, 7, 10],) ,
('saved value', 1.839437937634544) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 7) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 3, '-', 7, ',', 7, '-', 1) ,
('Swap gain:', -2.698639447949128) ,
([5, 11, 9, 7, 2, 0, 4, 1, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 7, 2, 0, 4, 1, 10],) ,
('saved value', 3.0472035418709837) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 3, '-', 10, ',', 8, '-', 1) ,
('Swap gain:', -1.3051046316393669) ,
([5, 11, 9, 10, 2, 0, 4, 7, 1],) ,
('Computing match for mapping',) ,
([5, 11, 9, 10, 2, 0, 4, 7, 1],) ,
('saved value', 4.440738358180745) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 0) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -2.0) ,
([5, 11, 9, 1, 0, 2, 4, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 0, 2, 4, 7, 10],) ,
('saved value', 3.7458429898201118) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 4) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -2.1523629676844567) ,
([5, 11, 9, 1, 4, 0, 2, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 4, 0, 2, 7, 10],) ,
('saved value', 3.593480022135655) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 7) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 4, '-', 7, ',', 7, '-', 2) ,
('Swap gain:', -0.8574140144219865) ,
([5, 11, 9, 1, 7, 0, 4, 2, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 7, 0, 4, 2, 10],) ,
('saved value', 4.888428975398125) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 4, '-', 10, ',', 8, '-', 2) ,
('Swap gain:', -1.0) ,
([5, 11, 9, 1, 10, 0, 4, 7, 2],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 10, 0, 4, 7, 2],) ,
('saved value', 4.745842989820112) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 4) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -1.9064050521855678) ,
([5, 11, 9, 1, 2, 4, 0, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 4, 0, 7, 10],) ,
('saved value', 3.839437937634544) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 7) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 5, '-', 7, ',', 7, '-', 0) ,
('Swap gain:', -1.698639447949128) ,
([5, 11, 9, 1, 2, 7, 4, 0, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 7, 4, 0, 10],) ,
('saved value', 4.047203541870983) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 5, '-', 10, ',', 8, '-', 0) ,
('Swap gain:', -1.0) ,
([5, 11, 9, 1, 2, 10, 4, 7, 0],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 10, 4, 7, 0],) ,
('saved value', 4.745842989820112) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 7) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 6, '-', 7, ',', 7, '-', 4) ,
('Swap gain:', -1.0526574498883612) ,
([5, 11, 9, 1, 2, 0, 7, 4, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 7, 4, 10],) ,
('saved value', 4.693185539931751) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 4, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 6, '-', 10, ',', 8, '-', 4) ,
('Swap gain:', -1.0) ,
([5, 11, 9, 1, 2, 0, 10, 7, 4],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 10, 7, 4],) ,
('saved value', 4.745842989820112) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 7, ',', 8, '-', 10) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('After swapping:', 7, '-', 10, ',', 8, '-', 7) ,
('Swap gain:', 0.1773885828502011) ,
([5, 11, 9, 1, 2, 0, 4, 10, 7],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 4, 10, 7],) ,
('saved value', 5.923231572670312) ,
('Use swap gain',) ,
('Original mapping', [5, 11, 9, 1, 2, 0, 4, 7, 10]) ,
('Current mapping', [7, 11, 9, 1, 2, 0, 4, 5, 10]) ,
('Gain after the hill-climbing', 1.2514907558867006) ,
('Update triple match number to:', 6.997333745706812) ,
('Current mapping:', [7, 11, 9, 1, 2, 0, 4, 5, 10]) ,
('Remap node', 0, 'from ', 7, 'to', 3) ,
('Move gain:', -0.2926977722481573) ,
('Computing match for mapping',) ,
([3, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('saved value', 6.704635973458655) ,
('Remap node', 0, 'from ', 7, 'to', 6) ,
('Move gain:', -0.2926977722481573) ,
('Computing match for mapping',) ,
([6, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('saved value', 6.704635973458655) ,
('Remap node', 0, 'from ', 7, 'to', 8) ,
('Move gain:', -0.2926977722481573) ,
('Computing match for mapping',) ,
([8, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('saved value', 6.704635973458655) ,
('Remap node', 1, 'from ', 11, 'to', 3) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([7, 3, 9, 1, 2, 0, 4, 5, 10],) ,
('saved value', 6.199102824433725) ,
('Remap node', 1, 'from ', 11, 'to', 6) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([7, 6, 9, 1, 2, 0, 4, 5, 10],) ,
('saved value', 6.199102824433725) ,
('Remap node', 1, 'from ', 11, 'to', 8) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([7, 8, 9, 1, 2, 0, 4, 5, 10],) ,
('saved value', 6.199102824433725) ,
('Remap node', 2, 'from ', 9, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 11, 3, 1, 2, 0, 4, 5, 10],) ,
('saved value', 6.997333745706812) ,
('Remap node', 2, 'from ', 9, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 11, 6, 1, 2, 0, 4, 5, 10],) ,
('saved value', 6.997333745706812) ,
('Remap node', 2, 'from ', 9, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 11, 8, 1, 2, 0, 4, 5, 10],) ,
('saved value', 6.997333745706812) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 3, 2, 0, 4, 5, 10],) ,
('saved value', 4.997333745706812) ,
('Remap node', 3, 'from ', 1, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 6, 2, 0, 4, 5, 10],) ,
('saved value', 5.997333745706812) ,
('Remap node', 3, 'from ', 1, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 8, 2, 0, 4, 5, 10],) ,
('saved value', 4.997333745706812) ,
('Remap node', 4, 'from ', 2, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 3, 0, 4, 5, 10],) ,
('saved value', 5.997333745706812) ,
('Remap node', 4, 'from ', 2, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 6, 0, 4, 5, 10],) ,
('saved value', 5.997333745706812) ,
('Remap node', 4, 'from ', 2, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 8, 0, 4, 5, 10],) ,
('saved value', 5.997333745706812) ,
('Remap node', 5, 'from ', 0, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 3, 4, 5, 10],) ,
('saved value', 5.997333745706812) ,
('Remap node', 5, 'from ', 0, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 6, 4, 5, 10],) ,
('saved value', 5.997333745706812) ,
('Remap node', 5, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 8, 4, 5, 10],) ,
('saved value', 5.997333745706812) ,
('Remap node', 6, 'from ', 4, 'to', 3) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 3, 5, 10],) ,
('saved value', 4.090928693521244) ,
('Remap node', 6, 'from ', 4, 'to', 6) ,
('Move gain:', -2.9064050521855673) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 6, 5, 10],) ,
('saved value', 4.090928693521245) ,
('Remap node', 6, 'from ', 4, 'to', 8) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 8, 5, 10],) ,
('saved value', 4.090928693521244) ,
('Remap node', 7, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 3, 10],) ,
('saved value', 4.997333745706812) ,
('Remap node', 7, 'from ', 5, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 6, 10],) ,
('saved value', 4.997333745706812) ,
('Remap node', 7, 'from ', 5, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 8, 10],) ,
('saved value', 4.997333745706812) ,
('Remap node', 8, 'from ', 10, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 5, 3],) ,
('saved value', 6.997333745706812) ,
('Remap node', 8, 'from ', 10, 'to', 6) ,
('Move gain:', 0.6948953683606331) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.6922291140674455) ,
('Remap node', 8, 'from ', 10, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 5, 8],) ,
('saved value', 6.997333745706812) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 11) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 0, '-', 11, ',', 1, '-', 7) ,
('Swap gain:', -0.04500350818376497) ,
([11, 7, 9, 1, 2, 0, 4, 5, 10],) ,
('Computing match for mapping',) ,
([11, 7, 9, 1, 2, 0, 4, 5, 10],) ,
('saved value', 6.952330237523047) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 9) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 0, '-', 9, ',', 2, '-', 7) ,
('Swap gain:', -0.2926977722481573) ,
([9, 11, 7, 1, 2, 0, 4, 5, 10],) ,
('Computing match for mapping',) ,
([9, 11, 7, 1, 2, 0, 4, 5, 10],) ,
('saved value', 6.704635973458655) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 1) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 7) ,
('Swap gain:', -2.2926977722481574) ,
([1, 11, 9, 7, 2, 0, 4, 5, 10],) ,
('Computing match for mapping',) ,
([1, 11, 9, 7, 2, 0, 4, 5, 10],) ,
('saved value', 4.704635973458655) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 2) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 7) ,
('Swap gain:', -0.9123720405213933) ,
([2, 11, 9, 1, 7, 0, 4, 5, 10],) ,
('Computing match for mapping',) ,
([2, 11, 9, 1, 7, 0, 4, 5, 10],) ,
('saved value', 6.084961705185419) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 0) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 7) ,
('Swap gain:', -1.2926977722481574) ,
([0, 11, 9, 1, 2, 7, 4, 5, 10],) ,
('Computing match for mapping',) ,
([0, 11, 9, 1, 2, 7, 4, 5, 10],) ,
('saved value', 5.704635973458655) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', 4) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', -2.183342853646373) ,
([4, 11, 9, 1, 2, 0, 7, 5, 10],) ,
('Computing match for mapping',) ,
([4, 11, 9, 1, 2, 0, 7, 5, 10],) ,
('saved value', 4.813990892060439) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 7, ',', 7, '-', 5) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 0, '-', 5, ',', 7, '-', 7) ,
('Swap gain:', -1.2514907558867003) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 4, 7, 10],) ,
('saved value', 5.745842989820112) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 7, ',', 8, '-', 10) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 0, '-', 10, ',', 8, '-', 7) ,
('Swap gain:', 0.046703179092189795) ,
([10, 11, 9, 1, 2, 0, 4, 5, 7],) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 4, 5, 7],) ,
('saved value', 7.044036924799002) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 11, ',', 2, '-', 9) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 1, '-', 9, ',', 2, '-', 11) ,
('Swap gain:', -0.798230921273087) ,
([7, 9, 11, 1, 2, 0, 4, 5, 10],) ,
('Computing match for mapping',) ,
([7, 9, 11, 1, 2, 0, 4, 5, 10],) ,
('saved value', 6.199102824433725) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 11, ',', 3, '-', 1) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 11) ,
('Swap gain:', -1.798230921273087) ,
([7, 1, 9, 11, 2, 0, 4, 5, 10],) ,
('Computing match for mapping',) ,
([7, 1, 9, 11, 2, 0, 4, 5, 10],) ,
('saved value', 5.199102824433725) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 11, ',', 4, '-', 2) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 11) ,
('Swap gain:', -0.9442073413963861) ,
([7, 2, 9, 1, 11, 0, 4, 5, 10],) ,
('Computing match for mapping',) ,
([7, 2, 9, 1, 11, 0, 4, 5, 10],) ,
('saved value', 6.053126404310426) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 11, ',', 5, '-', 0) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 11) ,
('Swap gain:', -1.798230921273087) ,
([7, 0, 9, 1, 2, 11, 4, 5, 10],) ,
('Computing match for mapping',) ,
([7, 0, 9, 1, 2, 11, 4, 5, 10],) ,
('saved value', 5.199102824433725) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 11, ',', 6, '-', 4) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 11) ,
('Swap gain:', -2.0803271495504307) ,
([7, 4, 9, 1, 2, 0, 11, 5, 10],) ,
('Computing match for mapping',) ,
([7, 4, 9, 1, 2, 0, 11, 5, 10],) ,
('saved value', 4.917006596156382) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 11, ',', 7, '-', 5) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 1, '-', 5, ',', 7, '-', 11) ,
('Swap gain:', -1.0) ,
([7, 5, 9, 1, 2, 0, 4, 11, 10],) ,
('Computing match for mapping',) ,
([7, 5, 9, 1, 2, 0, 4, 11, 10],) ,
('saved value', 5.997333745706812) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 11, ',', 8, '-', 10) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 1, '-', 10, ',', 8, '-', 11) ,
('Swap gain:', -0.04927351071449659) ,
([7, 10, 9, 1, 2, 0, 4, 5, 11],) ,
('Computing match for mapping',) ,
([7, 10, 9, 1, 2, 0, 4, 5, 11],) ,
('saved value', 6.948060234992315) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 9, ',', 3, '-', 1) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 9) ,
('Swap gain:', -2.0) ,
([7, 11, 1, 9, 2, 0, 4, 5, 10],) ,
('Computing match for mapping',) ,
([7, 11, 1, 9, 2, 0, 4, 5, 10],) ,
('saved value', 4.997333745706812) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 9, ',', 4, '-', 2) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 9) ,
('Swap gain:', 0.0) ,
([7, 11, 2, 1, 9, 0, 4, 5, 10],) ,
('Computing match for mapping',) ,
([7, 11, 2, 1, 9, 0, 4, 5, 10],) ,
('saved value', 6.997333745706812) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 9, ',', 5, '-', 0) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 9) ,
('Swap gain:', -1.0) ,
([7, 11, 0, 1, 2, 9, 4, 5, 10],) ,
('Computing match for mapping',) ,
([7, 11, 0, 1, 2, 9, 4, 5, 10],) ,
('saved value', 5.997333745706812) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 9, ',', 6, '-', 4) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 9) ,
('Swap gain:', -2.9064050521855678) ,
([7, 11, 4, 1, 2, 0, 9, 5, 10],) ,
('Computing match for mapping',) ,
([7, 11, 4, 1, 2, 0, 9, 5, 10],) ,
('saved value', 4.090928693521244) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 9, ',', 7, '-', 5) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 2, '-', 5, ',', 7, '-', 9) ,
('Swap gain:', -2.0) ,
([7, 11, 5, 1, 2, 0, 4, 9, 10],) ,
('Computing match for mapping',) ,
([7, 11, 5, 1, 2, 0, 4, 9, 10],) ,
('saved value', 4.997333745706812) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 9, ',', 8, '-', 10) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 2, '-', 10, ',', 8, '-', 9) ,
('Swap gain:', 0.0) ,
([7, 11, 10, 1, 2, 0, 4, 5, 9],) ,
('Computing match for mapping',) ,
([7, 11, 10, 1, 2, 0, 4, 5, 9],) ,
('saved value', 6.997333745706812) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 2) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -1.491131416906214) ,
([7, 11, 9, 2, 1, 0, 4, 5, 10],) ,
('Computing match for mapping',) ,
([7, 11, 9, 2, 1, 0, 4, 5, 10],) ,
('saved value', 5.506202328800598) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 0) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([7, 11, 9, 0, 2, 1, 4, 5, 10],) ,
('Computing match for mapping',) ,
([7, 11, 9, 0, 2, 1, 4, 5, 10],) ,
('saved value', 3.997333745706812) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 4) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -4.906405052185567) ,
([7, 11, 9, 4, 2, 0, 1, 5, 10],) ,
('Computing match for mapping',) ,
([7, 11, 9, 4, 2, 0, 1, 5, 10],) ,
('saved value', 2.0909286935212448) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 5) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 3, '-', 5, ',', 7, '-', 1) ,
('Swap gain:', -4.0) ,
([7, 11, 9, 5, 2, 0, 4, 1, 10],) ,
('Computing match for mapping',) ,
([7, 11, 9, 5, 2, 0, 4, 1, 10],) ,
('saved value', 2.997333745706812) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 10) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 3, '-', 10, ',', 8, '-', 1) ,
('Swap gain:', -1.3051046316393669) ,
([7, 11, 9, 10, 2, 0, 4, 5, 1],) ,
('Computing match for mapping',) ,
([7, 11, 9, 10, 2, 0, 4, 5, 1],) ,
('saved value', 5.6922291140674455) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 0) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -2.0) ,
([7, 11, 9, 1, 0, 2, 4, 5, 10],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 0, 2, 4, 5, 10],) ,
('saved value', 4.997333745706812) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 4) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -3.1523629676844567) ,
([7, 11, 9, 1, 4, 0, 2, 5, 10],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 4, 0, 2, 5, 10],) ,
('saved value', 3.8449707780223554) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 5) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 4, '-', 5, ',', 7, '-', 2) ,
('Swap gain:', -2.1587745664728586) ,
([7, 11, 9, 1, 5, 0, 4, 2, 10],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 5, 0, 4, 2, 10],) ,
('saved value', 4.838559179233954) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', 10) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 4, '-', 10, ',', 8, '-', 2) ,
('Swap gain:', -1.0) ,
([7, 11, 9, 1, 10, 0, 4, 5, 2],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 10, 0, 4, 5, 2],) ,
('saved value', 5.997333745706812) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 4) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -2.9064050521855678) ,
([7, 11, 9, 1, 2, 4, 0, 5, 10],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 4, 0, 5, 10],) ,
('saved value', 4.090928693521244) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 5) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 5, '-', 5, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 11, 9, 1, 2, 5, 4, 0, 10],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 5, 4, 0, 10],) ,
('saved value', 3.997333745706812) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 10) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 5, '-', 10, ',', 8, '-', 0) ,
('Swap gain:', -1.0) ,
([7, 11, 9, 1, 2, 10, 4, 5, 0],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 10, 4, 5, 0],) ,
('saved value', 5.997333745706812) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 5) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 6, '-', 5, ',', 7, '-', 4) ,
('Swap gain:', -2.155025608036605) ,
([7, 11, 9, 1, 2, 0, 5, 4, 10],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 5, 4, 10],) ,
('saved value', 4.842308137670207) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 4, ',', 8, '-', 10) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 6, '-', 10, ',', 8, '-', 4) ,
('Swap gain:', -2.0) ,
([7, 11, 9, 1, 2, 0, 10, 5, 4],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 10, 5, 4],) ,
('saved value', 4.997333745706812) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 5, ',', 8, '-', 10) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('After swapping:', 7, '-', 10, ',', 8, '-', 5) ,
('Swap gain:', -1.1239719692006709) ,
([7, 11, 9, 1, 2, 0, 4, 10, 5],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 10, 5],) ,
('saved value', 5.873361776506141) ,
('Use move gain',) ,
('Original mapping', [7, 11, 9, 1, 2, 0, 4, 5, 10]) ,
('Current mapping', [7, 11, 9, 1, 2, 0, 4, 5, 6]) ,
('Gain after the hill-climbing', 0.6948953683606331) ,
('Update triple match number to:', 7.6922291140674455) ,
('Current mapping:', [7, 11, 9, 1, 2, 0, 4, 5, 6]) ,
('Remap node', 0, 'from ', 7, 'to', 3) ,
('Move gain:', -0.2926977722481573) ,
('Computing match for mapping',) ,
([3, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.399531341819288) ,
('Remap node', 0, 'from ', 7, 'to', 8) ,
('Move gain:', -0.2926977722481573) ,
('Computing match for mapping',) ,
([8, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.399531341819288) ,
('Remap node', 0, 'from ', 7, 'to', 10) ,
('Move gain:', 0.046703179092189795) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.738932293159635) ,
('Remap node', 1, 'from ', 11, 'to', 3) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([7, 3, 9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 6.893998192794358) ,
('Remap node', 1, 'from ', 11, 'to', 8) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([7, 8, 9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 6.893998192794358) ,
('Remap node', 1, 'from ', 11, 'to', 10) ,
('Move gain:', -0.04927351071449659) ,
('Computing match for mapping',) ,
([7, 10, 9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.642955603352949) ,
('Remap node', 2, 'from ', 9, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 11, 3, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.6922291140674455) ,
('Remap node', 2, 'from ', 9, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 11, 8, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.6922291140674455) ,
('Remap node', 2, 'from ', 9, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 11, 10, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.6922291140674455) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 3, 2, 0, 4, 5, 6],) ,
('saved value', 5.6922291140674455) ,
('Remap node', 3, 'from ', 1, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 8, 2, 0, 4, 5, 6],) ,
('saved value', 5.6922291140674455) ,
('Remap node', 3, 'from ', 1, 'to', 10) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 10, 2, 0, 4, 5, 6],) ,
('saved value', 5.6922291140674455) ,
('Remap node', 4, 'from ', 2, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 3, 0, 4, 5, 6],) ,
('saved value', 6.6922291140674455) ,
('Remap node', 4, 'from ', 2, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 8, 0, 4, 5, 6],) ,
('saved value', 6.6922291140674455) ,
('Remap node', 4, 'from ', 2, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 10, 0, 4, 5, 6],) ,
('saved value', 6.6922291140674455) ,
('Remap node', 5, 'from ', 0, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 3, 4, 5, 6],) ,
('saved value', 6.6922291140674455) ,
('Remap node', 5, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 8, 4, 5, 6],) ,
('saved value', 6.6922291140674455) ,
('Remap node', 5, 'from ', 0, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 10, 4, 5, 6],) ,
('saved value', 6.6922291140674455) ,
('Remap node', 6, 'from ', 4, 'to', 3) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 3, 5, 6],) ,
('saved value', 4.785824061881877) ,
('Remap node', 6, 'from ', 4, 'to', 8) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 8, 5, 6],) ,
('saved value', 4.785824061881877) ,
('Remap node', 6, 'from ', 4, 'to', 10) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 10, 5, 6],) ,
('saved value', 5.6922291140674455) ,
('Remap node', 7, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 3, 6],) ,
('saved value', 5.6922291140674455) ,
('Remap node', 7, 'from ', 5, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 8, 6],) ,
('saved value', 5.6922291140674455) ,
('Remap node', 7, 'from ', 5, 'to', 10) ,
('Move gain:', -1.1239719692006709) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 10, 6],) ,
('saved value', 6.568257144866775) ,
('Remap node', 8, 'from ', 6, 'to', 3) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 5, 3],) ,
('saved value', 6.997333745706812) ,
('Remap node', 8, 'from ', 6, 'to', 8) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 5, 8],) ,
('saved value', 6.997333745706812) ,
('Remap node', 8, 'from ', 6, 'to', 10) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('saved value', 6.997333745706812) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 11) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 11, ',', 1, '-', 7) ,
('Swap gain:', -0.04500350818376497) ,
([11, 7, 9, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([11, 7, 9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.647225605883681) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 9) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 9, ',', 2, '-', 7) ,
('Swap gain:', -0.2926977722481565) ,
([9, 11, 7, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([9, 11, 7, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.399531341819289) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 1) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 7) ,
('Swap gain:', -2.2926977722481574) ,
([1, 11, 9, 7, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 11, 9, 7, 2, 0, 4, 5, 6],) ,
('saved value', 5.399531341819288) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 2) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 7) ,
('Swap gain:', -0.9123720405213929) ,
([2, 11, 9, 1, 7, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 11, 9, 1, 7, 0, 4, 5, 6],) ,
('saved value', 6.779857073546053) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 0) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 7) ,
('Swap gain:', -1.2926977722481574) ,
([0, 11, 9, 1, 2, 7, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 11, 9, 1, 2, 7, 4, 5, 6],) ,
('saved value', 6.399531341819288) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', 4) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', -2.183342853646373) ,
([4, 11, 9, 1, 2, 0, 7, 5, 6],) ,
('Computing match for mapping',) ,
([4, 11, 9, 1, 2, 0, 7, 5, 6],) ,
('saved value', 5.508886260421073) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 7, ',', 7, '-', 5) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 7, '-', 7) ,
('Swap gain:', -1.2514907558867003) ,
([5, 11, 9, 1, 2, 0, 4, 7, 6],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 4, 7, 6],) ,
('saved value', 6.440738358180745) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 7, ',', 8, '-', 6) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 8, '-', 7) ,
('Swap gain:', -0.9875931406087904) ,
([6, 11, 9, 1, 2, 0, 4, 5, 7],) ,
('Computing match for mapping',) ,
([6, 11, 9, 1, 2, 0, 4, 5, 7],) ,
('saved value', 6.704635973458655) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 11, ',', 2, '-', 9) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 9, ',', 2, '-', 11) ,
('Swap gain:', -0.798230921273087) ,
([7, 9, 11, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 9, 11, 1, 2, 0, 4, 5, 6],) ,
('saved value', 6.893998192794358) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 11, ',', 3, '-', 1) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 11) ,
('Swap gain:', -1.798230921273087) ,
([7, 1, 9, 11, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 1, 9, 11, 2, 0, 4, 5, 6],) ,
('saved value', 5.893998192794358) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 11, ',', 4, '-', 2) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 11) ,
('Swap gain:', -0.9442073413963861) ,
([7, 2, 9, 1, 11, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 2, 9, 1, 11, 0, 4, 5, 6],) ,
('saved value', 6.748021772671059) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 11, ',', 5, '-', 0) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 11) ,
('Swap gain:', -1.798230921273087) ,
([7, 0, 9, 1, 2, 11, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 0, 9, 1, 2, 11, 4, 5, 6],) ,
('saved value', 5.893998192794358) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 11, ',', 6, '-', 4) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 11) ,
('Swap gain:', -2.0803271495504307) ,
([7, 4, 9, 1, 2, 0, 11, 5, 6],) ,
('Computing match for mapping',) ,
([7, 4, 9, 1, 2, 0, 11, 5, 6],) ,
('saved value', 5.611901964517015) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 11, ',', 7, '-', 5) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 7, '-', 11) ,
('Swap gain:', -1.0) ,
([7, 5, 9, 1, 2, 0, 4, 11, 6],) ,
('Computing match for mapping',) ,
([7, 5, 9, 1, 2, 0, 4, 11, 6],) ,
('saved value', 6.6922291140674455) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 11, ',', 8, '-', 6) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 8, '-', 11) ,
('Swap gain:', -1.4931262896337203) ,
([7, 6, 9, 1, 2, 0, 4, 5, 11],) ,
('Computing match for mapping',) ,
([7, 6, 9, 1, 2, 0, 4, 5, 11],) ,
('saved value', 6.199102824433725) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 9, ',', 3, '-', 1) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 9) ,
('Swap gain:', -2.0) ,
([7, 11, 1, 9, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 11, 1, 9, 2, 0, 4, 5, 6],) ,
('saved value', 5.6922291140674455) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 9, ',', 4, '-', 2) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 9) ,
('Swap gain:', 8.881784197001252e-16) ,
([7, 11, 2, 1, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 11, 2, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.692229114067446) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 9, ',', 5, '-', 0) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 9) ,
('Swap gain:', -1.0) ,
([7, 11, 0, 1, 2, 9, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 11, 0, 1, 2, 9, 4, 5, 6],) ,
('saved value', 6.6922291140674455) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 9, ',', 6, '-', 4) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 9) ,
('Swap gain:', -2.9064050521855678) ,
([7, 11, 4, 1, 2, 0, 9, 5, 6],) ,
('Computing match for mapping',) ,
([7, 11, 4, 1, 2, 0, 9, 5, 6],) ,
('saved value', 4.785824061881877) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 9, ',', 7, '-', 5) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 7, '-', 9) ,
('Swap gain:', -2.0) ,
([7, 11, 5, 1, 2, 0, 4, 9, 6],) ,
('Computing match for mapping',) ,
([7, 11, 5, 1, 2, 0, 4, 9, 6],) ,
('saved value', 5.6922291140674455) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 9, ',', 8, '-', 6) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 8, '-', 9) ,
('Swap gain:', -0.6948953683606331) ,
([7, 11, 6, 1, 2, 0, 4, 5, 9],) ,
('Computing match for mapping',) ,
([7, 11, 6, 1, 2, 0, 4, 5, 9],) ,
('saved value', 6.997333745706812) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 2) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -1.491131416906214) ,
([7, 11, 9, 2, 1, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 11, 9, 2, 1, 0, 4, 5, 6],) ,
('saved value', 6.201097697161232) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 0) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([7, 11, 9, 0, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 11, 9, 0, 2, 1, 4, 5, 6],) ,
('saved value', 4.6922291140674455) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 4) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -4.906405052185567) ,
([7, 11, 9, 4, 2, 0, 1, 5, 6],) ,
('Computing match for mapping',) ,
([7, 11, 9, 4, 2, 0, 1, 5, 6],) ,
('saved value', 2.785824061881878) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 5) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 7, '-', 1) ,
('Swap gain:', -4.0) ,
([7, 11, 9, 5, 2, 0, 4, 1, 6],) ,
('Computing match for mapping',) ,
([7, 11, 9, 5, 2, 0, 4, 1, 6],) ,
('saved value', 3.6922291140674455) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 6) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 8, '-', 1) ,
('Swap gain:', -1.0) ,
([7, 11, 9, 6, 2, 0, 4, 5, 1],) ,
('Computing match for mapping',) ,
([7, 11, 9, 6, 2, 0, 4, 5, 1],) ,
('saved value', 6.6922291140674455) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 0) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -2.0) ,
([7, 11, 9, 1, 0, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 0, 2, 4, 5, 6],) ,
('saved value', 5.6922291140674455) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 4) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -3.1523629676844567) ,
([7, 11, 9, 1, 4, 0, 2, 5, 6],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 4, 0, 2, 5, 6],) ,
('saved value', 4.539866146382989) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 5) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 7, '-', 2) ,
('Swap gain:', -2.1587745664728586) ,
([7, 11, 9, 1, 5, 0, 4, 2, 6],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 5, 0, 4, 2, 6],) ,
('saved value', 5.533454547594587) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', 6) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 8, '-', 2) ,
('Swap gain:', -1.6948953683606331) ,
([7, 11, 9, 1, 6, 0, 4, 5, 2],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 6, 0, 4, 5, 2],) ,
('saved value', 5.997333745706812) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 4) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -2.9064050521855678) ,
([7, 11, 9, 1, 2, 4, 0, 5, 6],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 4, 0, 5, 6],) ,
('saved value', 4.785824061881877) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 5) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 5, '-', 5, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 11, 9, 1, 2, 5, 4, 0, 6],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 5, 4, 0, 6],) ,
('saved value', 4.6922291140674455) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 6) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 8, '-', 0) ,
('Swap gain:', -1.6948953683606331) ,
([7, 11, 9, 1, 2, 6, 4, 5, 0],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 6, 4, 5, 0],) ,
('saved value', 5.997333745706812) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 5) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 6, '-', 5, ',', 7, '-', 4) ,
('Swap gain:', -2.155025608036605) ,
([7, 11, 9, 1, 2, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 5, 4, 6],) ,
('saved value', 5.53720350603084) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 4, ',', 8, '-', 6) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 6, '-', 6, ',', 8, '-', 4) ,
('Swap gain:', -3.6013004205462007) ,
([7, 11, 9, 1, 2, 0, 6, 5, 4],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 6, 5, 4],) ,
('saved value', 4.090928693521245) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 5, ',', 8, '-', 6) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 7, '-', 6, ',', 8, '-', 5) ,
('Swap gain:', -2.6948953683606334) ,
([7, 11, 9, 1, 2, 0, 4, 6, 5],) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 6, 5],) ,
('saved value', 4.997333745706812) ,
('Use move gain',) ,
('Original mapping', [7, 11, 9, 1, 2, 0, 4, 5, 6]) ,
('Current mapping', [10, 11, 9, 1, 2, 0, 4, 5, 6]) ,
('Gain after the hill-climbing', 0.046703179092189795) ,
('Update triple match number to:', 7.738932293159635) ,
('Current mapping:', [10, 11, 9, 1, 2, 0, 4, 5, 6]) ,
('Remap node', 0, 'from ', 10, 'to', 3) ,
('Move gain:', -0.3394009513403473) ,
('Computing match for mapping',) ,
([3, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.399531341819288) ,
('Remap node', 0, 'from ', 10, 'to', 7) ,
('Move gain:', -0.046703179092189906) ,
('Computing match for mapping',) ,
([7, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.6922291140674455) ,
('Remap node', 0, 'from ', 10, 'to', 8) ,
('Move gain:', -0.3394009513403473) ,
('Computing match for mapping',) ,
([8, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.399531341819288) ,
('Remap node', 1, 'from ', 11, 'to', 3) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([10, 3, 9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 6.940701371886548) ,
('Remap node', 1, 'from ', 11, 'to', 7) ,
('Move gain:', -0.0948733043479365) ,
('Computing match for mapping',) ,
([10, 7, 9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.6440589888116985) ,
('Remap node', 1, 'from ', 11, 'to', 8) ,
('Move gain:', -0.798230921273087) ,
('Computing match for mapping',) ,
([10, 8, 9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 6.940701371886548) ,
('Remap node', 2, 'from ', 9, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([10, 11, 3, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.738932293159635) ,
('Remap node', 2, 'from ', 9, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([10, 11, 7, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.738932293159635) ,
('Remap node', 2, 'from ', 9, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([10, 11, 8, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.738932293159635) ,
('Remap node', 3, 'from ', 1, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([10, 11, 9, 3, 2, 0, 4, 5, 6],) ,
('saved value', 5.738932293159635) ,
('Remap node', 3, 'from ', 1, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([10, 11, 9, 7, 2, 0, 4, 5, 6],) ,
('saved value', 5.738932293159635) ,
('Remap node', 3, 'from ', 1, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([10, 11, 9, 8, 2, 0, 4, 5, 6],) ,
('saved value', 5.738932293159635) ,
('Remap node', 4, 'from ', 2, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 3, 0, 4, 5, 6],) ,
('saved value', 6.738932293159635) ,
('Remap node', 4, 'from ', 2, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 7, 0, 4, 5, 6],) ,
('saved value', 6.738932293159635) ,
('Remap node', 4, 'from ', 2, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 8, 0, 4, 5, 6],) ,
('saved value', 6.738932293159635) ,
('Remap node', 5, 'from ', 0, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 3, 4, 5, 6],) ,
('saved value', 6.738932293159635) ,
('Remap node', 5, 'from ', 0, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 7, 4, 5, 6],) ,
('saved value', 6.738932293159635) ,
('Remap node', 5, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 8, 4, 5, 6],) ,
('saved value', 6.738932293159635) ,
('Remap node', 6, 'from ', 4, 'to', 3) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 3, 5, 6],) ,
('saved value', 4.832527240974068) ,
('Remap node', 6, 'from ', 4, 'to', 7) ,
('Move gain:', -2.2300460327385623) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 7, 5, 6],) ,
('saved value', 5.5088862604210735) ,
('Remap node', 6, 'from ', 4, 'to', 8) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 8, 5, 6],) ,
('saved value', 4.832527240974068) ,
('Remap node', 7, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 4, 3, 6],) ,
('saved value', 5.738932293159635) ,
('Remap node', 7, 'from ', 5, 'to', 7) ,
('Move gain:', -1.301360552050872) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 4, 7, 6],) ,
('saved value', 6.437571741108764) ,
('Remap node', 7, 'from ', 5, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 4, 8, 6],) ,
('saved value', 5.738932293159635) ,
('Remap node', 8, 'from ', 6, 'to', 3) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 4, 5, 3],) ,
('saved value', 7.044036924799002) ,
('Remap node', 8, 'from ', 6, 'to', 7) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 4, 5, 7],) ,
('saved value', 7.044036924799002) ,
('Remap node', 8, 'from ', 6, 'to', 8) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 4, 5, 8],) ,
('saved value', 7.044036924799002) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 10, ',', 1, '-', 11) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 11, ',', 1, '-', 10) ,
('Swap gain:', -0.046106893642514746) ,
([11, 10, 9, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([11, 10, 9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.692825399517121) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 10, ',', 2, '-', 9) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 9, ',', 2, '-', 10) ,
('Swap gain:', -0.3394009513403471) ,
([9, 11, 10, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([9, 11, 10, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.399531341819288) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 10, ',', 3, '-', 1) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 10) ,
('Swap gain:', -2.3394009513403473) ,
([1, 11, 9, 10, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 11, 9, 10, 2, 0, 4, 5, 6],) ,
('saved value', 5.399531341819288) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 10, ',', 4, '-', 2) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 10) ,
('Swap gain:', -0.9590752196135832) ,
([2, 11, 9, 1, 10, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 11, 9, 1, 10, 0, 4, 5, 6],) ,
('saved value', 6.779857073546053) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 10, ',', 5, '-', 0) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 10) ,
('Swap gain:', -1.339400951340347) ,
([0, 11, 9, 1, 2, 10, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 11, 9, 1, 2, 10, 4, 5, 6],) ,
('saved value', 6.399531341819288) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 10, ',', 6, '-', 4) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 10) ,
('Swap gain:', -2.0) ,
([4, 11, 9, 1, 2, 0, 10, 5, 6],) ,
('Computing match for mapping',) ,
([4, 11, 9, 1, 2, 0, 10, 5, 6],) ,
('saved value', 5.738932293159635) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 10, ',', 7, '-', 5) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 7, '-', 10) ,
('Swap gain:', -1.1208053521286891) ,
([5, 11, 9, 1, 2, 0, 4, 10, 6],) ,
('Computing match for mapping',) ,
([5, 11, 9, 1, 2, 0, 4, 10, 6],) ,
('saved value', 6.618126941030946) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 10, ',', 8, '-', 6) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 8, '-', 10) ,
('Swap gain:', -1.0342963197009807) ,
([6, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('Computing match for mapping',) ,
([6, 11, 9, 1, 2, 0, 4, 5, 10],) ,
('saved value', 6.704635973458655) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 11, ',', 2, '-', 9) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 9, ',', 2, '-', 11) ,
('Swap gain:', -0.798230921273087) ,
([10, 9, 11, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([10, 9, 11, 1, 2, 0, 4, 5, 6],) ,
('saved value', 6.940701371886548) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 11, ',', 3, '-', 1) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 11) ,
('Swap gain:', -1.798230921273087) ,
([10, 1, 9, 11, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([10, 1, 9, 11, 2, 0, 4, 5, 6],) ,
('saved value', 5.940701371886549) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 11, ',', 4, '-', 2) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 11) ,
('Swap gain:', -0.9442073413963861) ,
([10, 2, 9, 1, 11, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([10, 2, 9, 1, 11, 0, 4, 5, 6],) ,
('saved value', 6.794724951763249) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 11, ',', 5, '-', 0) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 11) ,
('Swap gain:', -1.798230921273087) ,
([10, 0, 9, 1, 2, 11, 4, 5, 6],) ,
('Computing match for mapping',) ,
([10, 0, 9, 1, 2, 11, 4, 5, 6],) ,
('saved value', 5.940701371886549) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 11, ',', 6, '-', 4) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 11) ,
('Swap gain:', -2.0803271495504307) ,
([10, 4, 9, 1, 2, 0, 11, 5, 6],) ,
('Computing match for mapping',) ,
([10, 4, 9, 1, 2, 0, 11, 5, 6],) ,
('saved value', 5.658605143609204) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 11, ',', 7, '-', 5) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 7, '-', 11) ,
('Swap gain:', -1.0) ,
([10, 5, 9, 1, 2, 0, 4, 11, 6],) ,
('Computing match for mapping',) ,
([10, 5, 9, 1, 2, 0, 4, 11, 6],) ,
('saved value', 6.738932293159635) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 11, ',', 8, '-', 6) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 8, '-', 11) ,
('Swap gain:', -1.4931262896337203) ,
([10, 6, 9, 1, 2, 0, 4, 5, 11],) ,
('Computing match for mapping',) ,
([10, 6, 9, 1, 2, 0, 4, 5, 11],) ,
('saved value', 6.2458060035259155) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 9, ',', 3, '-', 1) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 9) ,
('Swap gain:', -2.0) ,
([10, 11, 1, 9, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([10, 11, 1, 9, 2, 0, 4, 5, 6],) ,
('saved value', 5.738932293159635) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 9, ',', 4, '-', 2) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 9) ,
('Swap gain:', 0.0) ,
([10, 11, 2, 1, 9, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([10, 11, 2, 1, 9, 0, 4, 5, 6],) ,
('saved value', 7.738932293159635) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 9, ',', 5, '-', 0) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 9) ,
('Swap gain:', -1.0) ,
([10, 11, 0, 1, 2, 9, 4, 5, 6],) ,
('Computing match for mapping',) ,
([10, 11, 0, 1, 2, 9, 4, 5, 6],) ,
('saved value', 6.738932293159635) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 9, ',', 6, '-', 4) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 9) ,
('Swap gain:', -2.9064050521855678) ,
([10, 11, 4, 1, 2, 0, 9, 5, 6],) ,
('Computing match for mapping',) ,
([10, 11, 4, 1, 2, 0, 9, 5, 6],) ,
('saved value', 4.832527240974068) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 9, ',', 7, '-', 5) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 7, '-', 9) ,
('Swap gain:', -2.0) ,
([10, 11, 5, 1, 2, 0, 4, 9, 6],) ,
('Computing match for mapping',) ,
([10, 11, 5, 1, 2, 0, 4, 9, 6],) ,
('saved value', 5.738932293159635) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 9, ',', 8, '-', 6) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 8, '-', 9) ,
('Swap gain:', -0.6948953683606331) ,
([10, 11, 6, 1, 2, 0, 4, 5, 9],) ,
('Computing match for mapping',) ,
([10, 11, 6, 1, 2, 0, 4, 5, 9],) ,
('saved value', 7.044036924799002) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 2) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -1.491131416906214) ,
([10, 11, 9, 2, 1, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([10, 11, 9, 2, 1, 0, 4, 5, 6],) ,
('saved value', 6.247800876253422) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 0) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([10, 11, 9, 0, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([10, 11, 9, 0, 2, 1, 4, 5, 6],) ,
('saved value', 4.738932293159635) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 4) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -4.906405052185567) ,
([10, 11, 9, 4, 2, 0, 1, 5, 6],) ,
('Computing match for mapping',) ,
([10, 11, 9, 4, 2, 0, 1, 5, 6],) ,
('saved value', 2.832527240974068) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 5) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 7, '-', 1) ,
('Swap gain:', -4.0) ,
([10, 11, 9, 5, 2, 0, 4, 1, 6],) ,
('Computing match for mapping',) ,
([10, 11, 9, 5, 2, 0, 4, 1, 6],) ,
('saved value', 3.7389322931596354) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 6) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 8, '-', 1) ,
('Swap gain:', -1.0) ,
([10, 11, 9, 6, 2, 0, 4, 5, 1],) ,
('Computing match for mapping',) ,
([10, 11, 9, 6, 2, 0, 4, 5, 1],) ,
('saved value', 6.738932293159635) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 0) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -2.0) ,
([10, 11, 9, 1, 0, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 0, 2, 4, 5, 6],) ,
('saved value', 5.738932293159635) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 4) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -3.1523629676844567) ,
([10, 11, 9, 1, 4, 0, 2, 5, 6],) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 4, 0, 2, 5, 6],) ,
('saved value', 4.586569325475178) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 5) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 7, '-', 2) ,
('Swap gain:', -2.1587745664728586) ,
([10, 11, 9, 1, 5, 0, 4, 2, 6],) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 5, 0, 4, 2, 6],) ,
('saved value', 5.580157726686776) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 2, ',', 8, '-', 6) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 8, '-', 2) ,
('Swap gain:', -1.6948953683606331) ,
([10, 11, 9, 1, 6, 0, 4, 5, 2],) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 6, 0, 4, 5, 2],) ,
('saved value', 6.044036924799002) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 4) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -2.9064050521855678) ,
([10, 11, 9, 1, 2, 4, 0, 5, 6],) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 4, 0, 5, 6],) ,
('saved value', 4.832527240974068) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 5) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 5, '-', 5, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([10, 11, 9, 1, 2, 5, 4, 0, 6],) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 5, 4, 0, 6],) ,
('saved value', 4.738932293159635) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 0, ',', 8, '-', 6) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 8, '-', 0) ,
('Swap gain:', -1.6948953683606331) ,
([10, 11, 9, 1, 2, 6, 4, 5, 0],) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 6, 4, 5, 0],) ,
('saved value', 6.044036924799002) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 5) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 6, '-', 5, ',', 7, '-', 4) ,
('Swap gain:', -2.155025608036605) ,
([10, 11, 9, 1, 2, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 5, 4, 6],) ,
('saved value', 5.583906685123031) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 4, ',', 8, '-', 6) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 6, '-', 6, ',', 8, '-', 4) ,
('Swap gain:', -3.6013004205462007) ,
([10, 11, 9, 1, 2, 0, 6, 5, 4],) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 6, 5, 4],) ,
('saved value', 4.137631872613435) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 5, ',', 8, '-', 6) ,
([10, 11, 9, 1, 2, 0, 4, 5, 6],) ,
('After swapping:', 7, '-', 6, ',', 8, '-', 5) ,
('Swap gain:', -2.6948953683606334) ,
([10, 11, 9, 1, 2, 0, 4, 6, 5],) ,
('Computing match for mapping',) ,
([10, 11, 9, 1, 2, 0, 4, 6, 5],) ,
('saved value', 5.044036924799002) ,
('no move/swap gain found',) ,
('Original mapping', [10, 11, 9, 1, 2, 0, 4, 5, 6]) ,
('Current mapping', [10, 11, 9, 1, 2, 0, 4, 5, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('node_pair', (0, 9)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 7)) ,
('instance/attribute match', 0.7033576169251505) ,
('node_pair', (2, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 10)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 2)) ,
('instance/attribute match', 0.7540420845011112) ,
('node_pair', (7, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (8, 5)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 1.4573997014262616) ,
('Node mapping at start', [9, 7, 6, 10, 4, 1, 2, 3, 5]) ,
('Triple match number at start:', 1.4573997014262616) ,
('Remap node', 0, 'from ', 9, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 0, 'from ', 9, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 0, 'from ', 9, 'to', 11) ,
('Move gain:', 0.3425675684123289) ,
('Computing match for mapping',) ,
([11, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('saved value', 1.7999672698385905) ,
('Remap node', 1, 'from ', 7, 'to', 0) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([9, 0, 6, 10, 4, 1, 2, 3, 5],) ,
('saved value', 0.7540420845011111) ,
('Remap node', 1, 'from ', 7, 'to', 8) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([9, 8, 6, 10, 4, 1, 2, 3, 5],) ,
('saved value', 0.7540420845011111) ,
('Remap node', 1, 'from ', 7, 'to', 11) ,
('Move gain:', 0.0948733043479365) ,
('Computing match for mapping',) ,
([9, 11, 6, 10, 4, 1, 2, 3, 5],) ,
('saved value', 1.552273005774198) ,
('Remap node', 2, 'from ', 6, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 0, 10, 4, 1, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 2, 'from ', 6, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 8, 10, 4, 1, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 2, 'from ', 6, 'to', 11) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 11, 10, 4, 1, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 3, 'from ', 10, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 6, 0, 4, 1, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 3, 'from ', 10, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 6, 8, 4, 1, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 3, 'from ', 10, 'to', 11) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 6, 11, 4, 1, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 0, 1, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 4, 'from ', 4, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 8, 1, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 4, 'from ', 4, 'to', 11) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 11, 1, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 5, 'from ', 1, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 0, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 5, 'from ', 1, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 8, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 5, 'from ', 1, 'to', 11) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 11, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 6, 'from ', 2, 'to', 0) ,
('Move gain:', -0.7540420845011112) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 1, 0, 3, 5],) ,
('saved value', 0.7033576169251504) ,
('Remap node', 6, 'from ', 2, 'to', 8) ,
('Move gain:', -0.7540420845011112) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 1, 8, 3, 5],) ,
('saved value', 0.7033576169251504) ,
('Remap node', 6, 'from ', 2, 'to', 11) ,
('Move gain:', 0.12130932884852252) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 1, 11, 3, 5],) ,
('saved value', 1.5787090302747842) ,
('Remap node', 7, 'from ', 3, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 1, 2, 0, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 7, 'from ', 3, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 1, 2, 8, 5],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 7, 'from ', 3, 'to', 11) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 1, 2, 11, 5],) ,
('saved value', 2.4573997014262616) ,
('Remap node', 8, 'from ', 5, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 1, 2, 3, 0],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 8, 'from ', 5, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 1, 2, 3, 8],) ,
('saved value', 1.4573997014262616) ,
('Remap node', 8, 'from ', 5, 'to', 11) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 1, 2, 3, 11],) ,
('saved value', 1.4573997014262616) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 9, ',', 1, '-', 7) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 9) ,
('Swap gain:', -0.41065984467699324) ,
([7, 9, 6, 10, 4, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([7, 9, 6, 10, 4, 1, 2, 3, 5],) ,
('saved value', 1.0467398567492685) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 9, ',', 2, '-', 6) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 9) ,
('Swap gain:', 0.0) ,
([6, 7, 9, 10, 4, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([6, 7, 9, 10, 4, 1, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 9, ',', 3, '-', 10) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 10, ',', 3, '-', 9) ,
('Swap gain:', 0.3394009513403471) ,
([10, 7, 6, 9, 4, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([10, 7, 6, 9, 4, 1, 2, 3, 5],) ,
('saved value', 1.7968006527666087) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 9, ',', 4, '-', 4) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 9) ,
('Swap gain:', 1.339400951340347) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('saved value', 2.796800652766609) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 9, ',', 5, '-', 1) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 9) ,
('Swap gain:', 0.0) ,
([1, 7, 6, 10, 4, 9, 2, 3, 5],) ,
('Computing match for mapping',) ,
([1, 7, 6, 10, 4, 9, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 9, ',', 6, '-', 2) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 2, ',', 6, '-', 9) ,
('Swap gain:', -0.3737163527743473) ,
([2, 7, 6, 10, 4, 1, 9, 3, 5],) ,
('Computing match for mapping',) ,
([2, 7, 6, 10, 4, 1, 9, 3, 5],) ,
('saved value', 1.0836833486519144) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 9, ',', 7, '-', 3) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 9) ,
('Swap gain:', 0.0) ,
([3, 7, 6, 10, 4, 1, 2, 9, 5],) ,
('Computing match for mapping',) ,
([3, 7, 6, 10, 4, 1, 2, 9, 5],) ,
('saved value', 1.4573997014262616) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 9, ',', 8, '-', 5) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 9) ,
('Swap gain:', 0.3425675684123289) ,
([5, 7, 6, 10, 4, 1, 2, 3, 9],) ,
('Computing match for mapping',) ,
([5, 7, 6, 10, 4, 1, 2, 3, 9],) ,
('saved value', 1.7999672698385905) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 6) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 7) ,
('Swap gain:', -0.7033576169251505) ,
([9, 6, 7, 10, 4, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([9, 6, 7, 10, 4, 1, 2, 3, 5],) ,
('saved value', 0.7540420845011111) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 10) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 1, '-', 10, ',', 3, '-', 7) ,
('Swap gain:', 0.04559979363343991) ,
([9, 10, 6, 7, 4, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([9, 10, 6, 7, 4, 1, 2, 3, 5],) ,
('saved value', 1.5029994950597017) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 4) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', 0.04559979363343991) ,
([9, 4, 6, 10, 7, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([9, 4, 6, 10, 7, 1, 2, 3, 5],) ,
('saved value', 1.5029994950597017) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 1) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 7) ,
('Swap gain:', -0.7033576169251505) ,
([9, 1, 6, 10, 4, 7, 2, 3, 5],) ,
('Computing match for mapping',) ,
([9, 1, 6, 10, 4, 7, 2, 3, 5],) ,
('saved value', 0.7540420845011111) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', 2) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 1, '-', 2, ',', 6, '-', 7) ,
('Swap gain:', 0.07298289789744483) ,
([9, 2, 6, 10, 4, 1, 7, 3, 5],) ,
('Computing match for mapping',) ,
([9, 2, 6, 10, 4, 1, 7, 3, 5],) ,
('saved value', 1.5303825993237066) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 3) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -0.004718168976022508) ,
([9, 3, 6, 10, 4, 1, 2, 7, 5],) ,
('Computing match for mapping',) ,
([9, 3, 6, 10, 4, 1, 2, 7, 5],) ,
('saved value', 1.4526815324502391) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 7, ',', 8, '-', 5) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', 0.0948733043479365) ,
([9, 5, 6, 10, 4, 1, 2, 3, 7],) ,
('Computing match for mapping',) ,
([9, 5, 6, 10, 4, 1, 2, 3, 7],) ,
('saved value', 1.552273005774198) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 10) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 2, '-', 10, ',', 3, '-', 6) ,
('Swap gain:', 1.0) ,
([9, 7, 10, 6, 4, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([9, 7, 10, 6, 4, 1, 2, 3, 5],) ,
('saved value', 2.4573997014262616) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', 0.0) ,
([9, 7, 4, 10, 6, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([9, 7, 4, 10, 6, 1, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 1) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([9, 7, 1, 10, 4, 6, 2, 3, 5],) ,
('Computing match for mapping',) ,
([9, 7, 1, 10, 4, 6, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 2) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 2, '-', 2, ',', 6, '-', 6) ,
('Swap gain:', -0.7540420845011112) ,
([9, 7, 2, 10, 4, 1, 6, 3, 5],) ,
('Computing match for mapping',) ,
([9, 7, 2, 10, 4, 1, 6, 3, 5],) ,
('saved value', 0.7033576169251504) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 6, ',', 7, '-', 3) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', 0.0) ,
([9, 7, 3, 10, 4, 1, 2, 6, 5],) ,
('Computing match for mapping',) ,
([9, 7, 3, 10, 4, 1, 2, 6, 5],) ,
('saved value', 1.4573997014262616) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 6, ',', 8, '-', 5) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', 0.6948953683606331) ,
([9, 7, 5, 10, 4, 1, 2, 3, 6],) ,
('Computing match for mapping',) ,
([9, 7, 5, 10, 4, 1, 2, 3, 6],) ,
('saved value', 2.152295069786895) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 10, ',', 4, '-', 4) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 10) ,
('Swap gain:', 0.0) ,
([9, 7, 6, 4, 10, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([9, 7, 6, 4, 10, 1, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 10, ',', 5, '-', 1) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 10) ,
('Swap gain:', 1.0) ,
([9, 7, 6, 1, 4, 10, 2, 3, 5],) ,
('Computing match for mapping',) ,
([9, 7, 6, 1, 4, 10, 2, 3, 5],) ,
('saved value', 2.4573997014262616) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 10, ',', 6, '-', 2) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 3, '-', 2, ',', 6, '-', 10) ,
('Swap gain:', 0.6612315507782428) ,
([9, 7, 6, 2, 4, 1, 10, 3, 5],) ,
('Computing match for mapping',) ,
([9, 7, 6, 2, 4, 1, 10, 3, 5],) ,
('saved value', 2.1186312522045045) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 10, ',', 7, '-', 3) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 10) ,
('Swap gain:', 0.8760280307993291) ,
([9, 7, 6, 3, 4, 1, 2, 10, 5],) ,
('Computing match for mapping',) ,
([9, 7, 6, 3, 4, 1, 2, 10, 5],) ,
('saved value', 2.3334277322255907) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 10, ',', 8, '-', 5) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 10) ,
('Swap gain:', 0.0) ,
([9, 7, 6, 5, 4, 1, 2, 3, 10],) ,
('Computing match for mapping',) ,
([9, 7, 6, 5, 4, 1, 2, 3, 10],) ,
('saved value', 1.4573997014262616) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 1) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([9, 7, 6, 10, 1, 4, 2, 3, 5],) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 1, 4, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 2) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 4, '-', 2, ',', 6, '-', 4) ,
('Swap gain:', 0.15236296768445667) ,
([9, 7, 6, 10, 2, 1, 4, 3, 5],) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 2, 1, 4, 3, 5],) ,
('saved value', 1.6097626691107183) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 4, ',', 7, '-', 3) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', 0.8760280307993291) ,
([9, 7, 6, 10, 3, 1, 2, 4, 5],) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 3, 1, 2, 4, 5],) ,
('saved value', 2.3334277322255907) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 4, ',', 8, '-', 5) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', 0.0) ,
([9, 7, 6, 10, 5, 1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 5, 1, 2, 3, 4],) ,
('saved value', 1.4573997014262616) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 1, ',', 6, '-', 2) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 5, '-', 2, ',', 6, '-', 1) ,
('Swap gain:', -0.7540420845011112) ,
([9, 7, 6, 10, 4, 2, 1, 3, 5],) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 2, 1, 3, 5],) ,
('saved value', 0.7033576169251504) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 1, ',', 7, '-', 3) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', 0.0) ,
([9, 7, 6, 10, 4, 3, 2, 1, 5],) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 3, 2, 1, 5],) ,
('saved value', 1.4573997014262616) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 1, ',', 8, '-', 5) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', 0.6948953683606331) ,
([9, 7, 6, 10, 4, 5, 2, 3, 1],) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 5, 2, 3, 1],) ,
('saved value', 2.152295069786895) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 2, ',', 7, '-', 3) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', 0.08718334902603031) ,
([9, 7, 6, 10, 4, 1, 3, 2, 5],) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 1, 3, 2, 5],) ,
('saved value', 1.544583050452292) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 2, ',', 8, '-', 5) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 0.12130932884852252) ,
([9, 7, 6, 10, 4, 1, 5, 3, 2],) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 1, 5, 3, 2],) ,
('saved value', 1.5787090302747842) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 3, ',', 8, '-', 5) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', 1.0) ,
([9, 7, 6, 10, 4, 1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 1, 2, 5, 3],) ,
('saved value', 2.4573997014262616) ,
('Use swap gain',) ,
('Original mapping', [9, 7, 6, 10, 4, 1, 2, 3, 5]) ,
('Current mapping', [4, 7, 6, 10, 9, 1, 2, 3, 5]) ,
('Gain after the hill-climbing', 1.339400951340347) ,
('Update triple match number to:', 2.796800652766609) ,
('Current mapping:', [4, 7, 6, 10, 9, 1, 2, 3, 5]) ,
('Remap node', 0, 'from ', 4, 'to', 0) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([0, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('saved value', 2.4573997014262616) ,
('Remap node', 0, 'from ', 4, 'to', 8) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([8, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('saved value', 2.4573997014262616) ,
('Remap node', 0, 'from ', 4, 'to', 11) ,
('Move gain:', 0.003166617071981792) ,
('Computing match for mapping',) ,
([11, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('saved value', 2.7999672698385907) ,
('Remap node', 1, 'from ', 7, 'to', 0) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 0, 6, 10, 9, 1, 2, 3, 5],) ,
('saved value', 2.0934430358414584) ,
('Remap node', 1, 'from ', 7, 'to', 8) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 8, 6, 10, 9, 1, 2, 3, 5],) ,
('saved value', 2.0934430358414584) ,
('Remap node', 1, 'from ', 7, 'to', 11) ,
('Move gain:', 0.0948733043479365) ,
('Computing match for mapping',) ,
([4, 11, 6, 10, 9, 1, 2, 3, 5],) ,
('saved value', 2.8916739571145453) ,
('Remap node', 2, 'from ', 6, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 0, 10, 9, 1, 2, 3, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 2, 'from ', 6, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 8, 10, 9, 1, 2, 3, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 2, 'from ', 6, 'to', 11) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 11, 10, 9, 1, 2, 3, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 3, 'from ', 10, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 0, 9, 1, 2, 3, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 3, 'from ', 10, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 8, 9, 1, 2, 3, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 3, 'from ', 10, 'to', 11) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 11, 9, 1, 2, 3, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 4, 'from ', 9, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 0, 1, 2, 3, 5],) ,
('saved value', 1.796800652766609) ,
('Remap node', 4, 'from ', 9, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 8, 1, 2, 3, 5],) ,
('saved value', 1.796800652766609) ,
('Remap node', 4, 'from ', 9, 'to', 11) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 11, 1, 2, 3, 5],) ,
('saved value', 1.796800652766609) ,
('Remap node', 5, 'from ', 1, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 0, 2, 3, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 5, 'from ', 1, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 8, 2, 3, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 5, 'from ', 1, 'to', 11) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 11, 2, 3, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 6, 'from ', 2, 'to', 0) ,
('Move gain:', -0.7540420845011112) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 0, 3, 5],) ,
('saved value', 2.042758568265498) ,
('Remap node', 6, 'from ', 2, 'to', 8) ,
('Move gain:', -0.7540420845011112) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 8, 3, 5],) ,
('saved value', 2.042758568265498) ,
('Remap node', 6, 'from ', 2, 'to', 11) ,
('Move gain:', 0.12130932884852252) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 11, 3, 5],) ,
('saved value', 2.9181099816151317) ,
('Remap node', 7, 'from ', 3, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 0, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 7, 'from ', 3, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 8, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 7, 'from ', 3, 'to', 11) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('saved value', 3.796800652766609) ,
('Remap node', 8, 'from ', 5, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 3, 0],) ,
('saved value', 2.796800652766609) ,
('Remap node', 8, 'from ', 5, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 3, 8],) ,
('saved value', 2.796800652766609) ,
('Remap node', 8, 'from ', 5, 'to', 11) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 3, 11],) ,
('saved value', 2.796800652766609) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 7) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 4) ,
('Swap gain:', -0.0011033854587498837) ,
([7, 4, 6, 10, 9, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([7, 4, 6, 10, 9, 1, 2, 3, 5],) ,
('saved value', 2.795697267307859) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 6) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 4) ,
('Swap gain:', -0.3394009513403471) ,
([6, 7, 4, 10, 9, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([6, 7, 4, 10, 9, 1, 2, 3, 5],) ,
('saved value', 2.4573997014262616) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 10) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 10, ',', 3, '-', 4) ,
('Swap gain:', 0.0) ,
([10, 7, 6, 4, 9, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([10, 7, 6, 4, 9, 1, 2, 3, 5],) ,
('saved value', 2.796800652766609) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 9) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 4) ,
('Swap gain:', -1.3394009513403473) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 1, 2, 3, 5],) ,
('saved value', 1.4573997014262616) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 1) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', -0.3394009513403471) ,
([1, 7, 6, 10, 9, 4, 2, 3, 5],) ,
('Computing match for mapping',) ,
([1, 7, 6, 10, 9, 4, 2, 3, 5],) ,
('saved value', 2.4573997014262616) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 2) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 2, ',', 6, '-', 4) ,
('Swap gain:', 0.19328774807087357) ,
([2, 7, 6, 10, 9, 1, 4, 3, 5],) ,
('Computing match for mapping',) ,
([2, 7, 6, 10, 9, 1, 4, 3, 5],) ,
('saved value', 2.9900884008374824) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 3) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 4) ,
('Swap gain:', 0.536627079458982) ,
([3, 7, 6, 10, 9, 1, 2, 4, 5],) ,
('Computing match for mapping',) ,
([3, 7, 6, 10, 9, 1, 2, 4, 5],) ,
('saved value', 3.3334277322255907) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', 0.003166617071981792) ,
([5, 7, 6, 10, 9, 1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([5, 7, 6, 10, 9, 1, 2, 3, 4],) ,
('saved value', 2.7999672698385907) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 6) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 7) ,
('Swap gain:', -0.7033576169251505) ,
([4, 6, 7, 10, 9, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([4, 6, 7, 10, 9, 1, 2, 3, 5],) ,
('saved value', 2.0934430358414584) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 10) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 1, '-', 10, ',', 3, '-', 7) ,
('Swap gain:', 0.04559979363343991) ,
([4, 10, 6, 7, 9, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([4, 10, 6, 7, 9, 1, 2, 3, 5],) ,
('saved value', 2.842400446400049) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 9) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 7) ,
('Swap gain:', -1.7033576169251505) ,
([4, 9, 6, 10, 7, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([4, 9, 6, 10, 7, 1, 2, 3, 5],) ,
('saved value', 1.0934430358414584) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 1) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 7) ,
('Swap gain:', -0.7033576169251505) ,
([4, 1, 6, 10, 9, 7, 2, 3, 5],) ,
('Computing match for mapping',) ,
([4, 1, 6, 10, 9, 7, 2, 3, 5],) ,
('saved value', 2.0934430358414584) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', 2) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 1, '-', 2, ',', 6, '-', 7) ,
('Swap gain:', 0.07298289789744483) ,
([4, 2, 6, 10, 9, 1, 7, 3, 5],) ,
('Computing match for mapping',) ,
([4, 2, 6, 10, 9, 1, 7, 3, 5],) ,
('saved value', 2.869783550664054) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 3) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', -0.004718168976022508) ,
([4, 3, 6, 10, 9, 1, 2, 7, 5],) ,
('Computing match for mapping',) ,
([4, 3, 6, 10, 9, 1, 2, 7, 5],) ,
('saved value', 2.7920824837905864) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 7, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', 0.0948733043479365) ,
([4, 5, 6, 10, 9, 1, 2, 3, 7],) ,
('Computing match for mapping',) ,
([4, 5, 6, 10, 9, 1, 2, 3, 7],) ,
('saved value', 2.8916739571145453) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 10) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 2, '-', 10, ',', 3, '-', 6) ,
('Swap gain:', 1.0) ,
([4, 7, 10, 6, 9, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([4, 7, 10, 6, 9, 1, 2, 3, 5],) ,
('saved value', 3.796800652766609) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 9) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 6) ,
('Swap gain:', -1.0) ,
([4, 7, 9, 10, 6, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([4, 7, 9, 10, 6, 1, 2, 3, 5],) ,
('saved value', 1.796800652766609) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 1) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([4, 7, 1, 10, 9, 6, 2, 3, 5],) ,
('Computing match for mapping',) ,
([4, 7, 1, 10, 9, 6, 2, 3, 5],) ,
('saved value', 2.796800652766609) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 2) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 2, '-', 2, ',', 6, '-', 6) ,
('Swap gain:', -0.7540420845011112) ,
([4, 7, 2, 10, 9, 1, 6, 3, 5],) ,
('Computing match for mapping',) ,
([4, 7, 2, 10, 9, 1, 6, 3, 5],) ,
('saved value', 2.042758568265498) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 6, ',', 7, '-', 3) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 6) ,
('Swap gain:', 0.0) ,
([4, 7, 3, 10, 9, 1, 2, 6, 5],) ,
('Computing match for mapping',) ,
([4, 7, 3, 10, 9, 1, 2, 6, 5],) ,
('saved value', 2.796800652766609) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 6, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', 0.6948953683606331) ,
([4, 7, 5, 10, 9, 1, 2, 3, 6],) ,
('Computing match for mapping',) ,
([4, 7, 5, 10, 9, 1, 2, 3, 6],) ,
('saved value', 3.4916960211272423) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 10, ',', 4, '-', 9) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 10) ,
('Swap gain:', -1.0) ,
([4, 7, 6, 9, 10, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 10, 1, 2, 3, 5],) ,
('saved value', 1.796800652766609) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 10, ',', 5, '-', 1) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 10) ,
('Swap gain:', 1.0) ,
([4, 7, 6, 1, 9, 10, 2, 3, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 1, 9, 10, 2, 3, 5],) ,
('saved value', 3.796800652766609) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 10, ',', 6, '-', 2) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 3, '-', 2, ',', 6, '-', 10) ,
('Swap gain:', 0.6612315507782428) ,
([4, 7, 6, 2, 9, 1, 10, 3, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 10, 3, 5],) ,
('saved value', 3.458032203544852) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 10, ',', 7, '-', 3) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 10) ,
('Swap gain:', 0.8760280307993291) ,
([4, 7, 6, 3, 9, 1, 2, 10, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 3, 9, 1, 2, 10, 5],) ,
('saved value', 3.672828683565938) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 10, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 10) ,
('Swap gain:', 0.0) ,
([4, 7, 6, 5, 9, 1, 2, 3, 10],) ,
('Computing match for mapping',) ,
([4, 7, 6, 5, 9, 1, 2, 3, 10],) ,
('saved value', 2.796800652766609) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 1) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 9) ,
('Swap gain:', -1.0) ,
([4, 7, 6, 10, 1, 9, 2, 3, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 1, 9, 2, 3, 5],) ,
('saved value', 1.796800652766609) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 2) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 4, '-', 2, ',', 6, '-', 9) ,
('Swap gain:', -1.754042084501111) ,
([4, 7, 6, 10, 2, 1, 9, 3, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 2, 1, 9, 3, 5],) ,
('saved value', 1.0427585682654978) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 3) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 9) ,
('Swap gain:', -1.0) ,
([4, 7, 6, 10, 3, 1, 2, 9, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 3, 1, 2, 9, 5],) ,
('saved value', 1.796800652766609) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 9) ,
('Swap gain:', -1.0) ,
([4, 7, 6, 10, 5, 1, 2, 3, 9],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 5, 1, 2, 3, 9],) ,
('saved value', 1.796800652766609) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 1, ',', 6, '-', 2) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 5, '-', 2, ',', 6, '-', 1) ,
('Swap gain:', -0.7540420845011112) ,
([4, 7, 6, 10, 9, 2, 1, 3, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 2, 1, 3, 5],) ,
('saved value', 2.042758568265498) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 1, ',', 7, '-', 3) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 7, 6, 10, 9, 3, 2, 1, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 3, 2, 1, 5],) ,
('saved value', 2.796800652766609) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 1, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', 0.6948953683606331) ,
([4, 7, 6, 10, 9, 5, 2, 3, 1],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 5, 2, 3, 1],) ,
('saved value', 3.4916960211272423) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 2, ',', 7, '-', 3) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', 0.08718334902603031) ,
([4, 7, 6, 10, 9, 1, 3, 2, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 3, 2, 5],) ,
('saved value', 2.8839840017926393) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 2, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 0.12130932884852252) ,
([4, 7, 6, 10, 9, 1, 5, 3, 2],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 5, 3, 2],) ,
('saved value', 2.9181099816151317) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 3, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 3) ,
('Swap gain:', 1.0) ,
([4, 7, 6, 10, 9, 1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 5, 3],) ,
('saved value', 3.796800652766609) ,
('Use move gain',) ,
('Original mapping', [4, 7, 6, 10, 9, 1, 2, 3, 5]) ,
('Current mapping', [4, 7, 6, 10, 9, 1, 2, 11, 5]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 3.796800652766609) ,
('Current mapping:', [4, 7, 6, 10, 9, 1, 2, 11, 5]) ,
('Remap node', 0, 'from ', 4, 'to', 0) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([0, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('saved value', 3.4573997014262616) ,
('Remap node', 0, 'from ', 4, 'to', 3) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([3, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('saved value', 3.4573997014262616) ,
('Remap node', 0, 'from ', 4, 'to', 8) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([8, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('saved value', 3.4573997014262616) ,
('Remap node', 1, 'from ', 7, 'to', 0) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 0, 6, 10, 9, 1, 2, 11, 5],) ,
('saved value', 3.0934430358414584) ,
('Remap node', 1, 'from ', 7, 'to', 3) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 3, 6, 10, 9, 1, 2, 11, 5],) ,
('saved value', 3.0934430358414584) ,
('Remap node', 1, 'from ', 7, 'to', 8) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 8, 6, 10, 9, 1, 2, 11, 5],) ,
('saved value', 3.0934430358414584) ,
('Remap node', 2, 'from ', 6, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 0, 10, 9, 1, 2, 11, 5],) ,
('saved value', 3.796800652766609) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 3, 10, 9, 1, 2, 11, 5],) ,
('saved value', 3.796800652766609) ,
('Remap node', 2, 'from ', 6, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 8, 10, 9, 1, 2, 11, 5],) ,
('saved value', 3.796800652766609) ,
('Remap node', 3, 'from ', 10, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 0, 9, 1, 2, 11, 5],) ,
('saved value', 3.796800652766609) ,
('Remap node', 3, 'from ', 10, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 3, 9, 1, 2, 11, 5],) ,
('saved value', 3.796800652766609) ,
('Remap node', 3, 'from ', 10, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 8, 9, 1, 2, 11, 5],) ,
('saved value', 3.796800652766609) ,
('Remap node', 4, 'from ', 9, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 0, 1, 2, 11, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 3, 1, 2, 11, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 4, 'from ', 9, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 8, 1, 2, 11, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 5, 'from ', 1, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 0, 2, 11, 5],) ,
('saved value', 3.796800652766609) ,
('Remap node', 5, 'from ', 1, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 3, 2, 11, 5],) ,
('saved value', 3.796800652766609) ,
('Remap node', 5, 'from ', 1, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 8, 2, 11, 5],) ,
('saved value', 3.796800652766609) ,
('Remap node', 6, 'from ', 2, 'to', 0) ,
('Move gain:', -0.7540420845011112) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 0, 11, 5],) ,
('saved value', 3.042758568265498) ,
('Remap node', 6, 'from ', 2, 'to', 3) ,
('Move gain:', -0.7540420845011112) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 3, 11, 5],) ,
('saved value', 3.042758568265498) ,
('Remap node', 6, 'from ', 2, 'to', 8) ,
('Move gain:', -0.7540420845011112) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 8, 11, 5],) ,
('saved value', 3.042758568265498) ,
('Remap node', 7, 'from ', 11, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 0, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 7, 'from ', 11, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 3, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 7, 'from ', 11, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 8, 5],) ,
('saved value', 2.796800652766609) ,
('Remap node', 8, 'from ', 5, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 11, 0],) ,
('saved value', 3.796800652766609) ,
('Remap node', 8, 'from ', 5, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 11, 3],) ,
('saved value', 3.796800652766609) ,
('Remap node', 8, 'from ', 5, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 11, 8],) ,
('saved value', 3.796800652766609) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 7) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 4) ,
('Swap gain:', -0.0011033854587498837) ,
([7, 4, 6, 10, 9, 1, 2, 11, 5],) ,
('Computing match for mapping',) ,
([7, 4, 6, 10, 9, 1, 2, 11, 5],) ,
('saved value', 3.795697267307859) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 6) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 4) ,
('Swap gain:', -0.3394009513403471) ,
([6, 7, 4, 10, 9, 1, 2, 11, 5],) ,
('Computing match for mapping',) ,
([6, 7, 4, 10, 9, 1, 2, 11, 5],) ,
('saved value', 3.4573997014262616) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 10) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 0, '-', 10, ',', 3, '-', 4) ,
('Swap gain:', 0.0) ,
([10, 7, 6, 4, 9, 1, 2, 11, 5],) ,
('Computing match for mapping',) ,
([10, 7, 6, 4, 9, 1, 2, 11, 5],) ,
('saved value', 3.796800652766609) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 9) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 4) ,
('Swap gain:', -1.3394009513403473) ,
([9, 7, 6, 10, 4, 1, 2, 11, 5],) ,
('Computing match for mapping',) ,
([9, 7, 6, 10, 4, 1, 2, 11, 5],) ,
('saved value', 2.4573997014262616) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 1) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', -0.3394009513403471) ,
([1, 7, 6, 10, 9, 4, 2, 11, 5],) ,
('Computing match for mapping',) ,
([1, 7, 6, 10, 9, 4, 2, 11, 5],) ,
('saved value', 3.4573997014262616) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 2) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 0, '-', 2, ',', 6, '-', 4) ,
('Swap gain:', 0.19328774807087357) ,
([2, 7, 6, 10, 9, 1, 4, 11, 5],) ,
('Computing match for mapping',) ,
([2, 7, 6, 10, 9, 1, 4, 11, 5],) ,
('saved value', 3.9900884008374824) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 11) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 4) ,
('Swap gain:', -0.12080535212868915) ,
([11, 7, 6, 10, 9, 1, 2, 4, 5],) ,
('Computing match for mapping',) ,
([11, 7, 6, 10, 9, 1, 2, 4, 5],) ,
('saved value', 3.67599530063792) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', 0.003166617071981792) ,
([5, 7, 6, 10, 9, 1, 2, 11, 4],) ,
('Computing match for mapping',) ,
([5, 7, 6, 10, 9, 1, 2, 11, 4],) ,
('saved value', 3.7999672698385907) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 6) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 7) ,
('Swap gain:', -0.7033576169251505) ,
([4, 6, 7, 10, 9, 1, 2, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 7, 10, 9, 1, 2, 11, 5],) ,
('saved value', 3.0934430358414584) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 10) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 1, '-', 10, ',', 3, '-', 7) ,
('Swap gain:', 0.04559979363343991) ,
([4, 10, 6, 7, 9, 1, 2, 11, 5],) ,
('Computing match for mapping',) ,
([4, 10, 6, 7, 9, 1, 2, 11, 5],) ,
('saved value', 3.842400446400049) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 9) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 7) ,
('Swap gain:', -1.7033576169251505) ,
([4, 9, 6, 10, 7, 1, 2, 11, 5],) ,
('Computing match for mapping',) ,
([4, 9, 6, 10, 7, 1, 2, 11, 5],) ,
('saved value', 2.0934430358414584) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 1) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 7) ,
('Swap gain:', -0.7033576169251505) ,
([4, 1, 6, 10, 9, 7, 2, 11, 5],) ,
('Computing match for mapping',) ,
([4, 1, 6, 10, 9, 7, 2, 11, 5],) ,
('saved value', 3.0934430358414584) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', 2) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 1, '-', 2, ',', 6, '-', 7) ,
('Swap gain:', 0.07298289789744483) ,
([4, 2, 6, 10, 9, 1, 7, 11, 5],) ,
('Computing match for mapping',) ,
([4, 2, 6, 10, 9, 1, 7, 11, 5],) ,
('saved value', 3.869783550664054) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 11) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 7) ,
('Swap gain:', -0.20648724770293558) ,
([4, 11, 6, 10, 9, 1, 2, 7, 5],) ,
('Computing match for mapping',) ,
([4, 11, 6, 10, 9, 1, 2, 7, 5],) ,
('saved value', 3.5903134050636734) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 7, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', 0.0948733043479365) ,
([4, 5, 6, 10, 9, 1, 2, 11, 7],) ,
('Computing match for mapping',) ,
([4, 5, 6, 10, 9, 1, 2, 11, 7],) ,
('saved value', 3.8916739571145453) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 10) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 2, '-', 10, ',', 3, '-', 6) ,
('Swap gain:', 1.0) ,
([4, 7, 10, 6, 9, 1, 2, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 10, 6, 9, 1, 2, 11, 5],) ,
('saved value', 4.796800652766609) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 9) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 6) ,
('Swap gain:', -1.0) ,
([4, 7, 9, 10, 6, 1, 2, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 9, 10, 6, 1, 2, 11, 5],) ,
('saved value', 2.796800652766609) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 1) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([4, 7, 1, 10, 9, 6, 2, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 1, 10, 9, 6, 2, 11, 5],) ,
('saved value', 3.796800652766609) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 2) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 2, '-', 2, ',', 6, '-', 6) ,
('Swap gain:', -0.7540420845011112) ,
([4, 7, 2, 10, 9, 1, 6, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 2, 10, 9, 1, 6, 11, 5],) ,
('saved value', 3.042758568265498) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 6, ',', 7, '-', 11) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -1.0) ,
([4, 7, 11, 10, 9, 1, 2, 6, 5],) ,
('Computing match for mapping',) ,
([4, 7, 11, 10, 9, 1, 2, 6, 5],) ,
('saved value', 2.796800652766609) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 6, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', 0.6948953683606331) ,
([4, 7, 5, 10, 9, 1, 2, 11, 6],) ,
('Computing match for mapping',) ,
([4, 7, 5, 10, 9, 1, 2, 11, 6],) ,
('saved value', 4.491696021127242) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 10, ',', 4, '-', 9) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 10) ,
('Swap gain:', -1.0) ,
([4, 7, 6, 9, 10, 1, 2, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 10, 1, 2, 11, 5],) ,
('saved value', 2.796800652766609) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 10, ',', 5, '-', 1) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 10) ,
('Swap gain:', 1.0) ,
([4, 7, 6, 1, 9, 10, 2, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 1, 9, 10, 2, 11, 5],) ,
('saved value', 4.796800652766609) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 10, ',', 6, '-', 2) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 3, '-', 2, ',', 6, '-', 10) ,
('Swap gain:', 1.661231550778243) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('saved value', 5.458032203544851) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 10, ',', 7, '-', 11) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -0.12397196920067088) ,
([4, 7, 6, 11, 9, 1, 2, 10, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 11, 9, 1, 2, 10, 5],) ,
('saved value', 3.672828683565938) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 10, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 10) ,
('Swap gain:', 0.0) ,
([4, 7, 6, 5, 9, 1, 2, 11, 10],) ,
('Computing match for mapping',) ,
([4, 7, 6, 5, 9, 1, 2, 11, 10],) ,
('saved value', 3.796800652766609) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 1) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 9) ,
('Swap gain:', -1.0) ,
([4, 7, 6, 10, 1, 9, 2, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 1, 9, 2, 11, 5],) ,
('saved value', 2.796800652766609) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 2) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 4, '-', 2, ',', 6, '-', 9) ,
('Swap gain:', -1.754042084501111) ,
([4, 7, 6, 10, 2, 1, 9, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 2, 1, 9, 11, 5],) ,
('saved value', 2.042758568265498) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -2.0) ,
([4, 7, 6, 10, 11, 1, 2, 9, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 11, 1, 2, 9, 5],) ,
('saved value', 1.796800652766609) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 9) ,
('Swap gain:', -1.0) ,
([4, 7, 6, 10, 5, 1, 2, 11, 9],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 5, 1, 2, 11, 9],) ,
('saved value', 2.796800652766609) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 1, ',', 6, '-', 2) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 5, '-', 2, ',', 6, '-', 1) ,
('Swap gain:', -0.7540420845011112) ,
([4, 7, 6, 10, 9, 2, 1, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 2, 1, 11, 5],) ,
('saved value', 3.042758568265498) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 1, ',', 7, '-', 11) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -1.0) ,
([4, 7, 6, 10, 9, 11, 2, 1, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 11, 2, 1, 5],) ,
('saved value', 2.796800652766609) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 1, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', 0.6948953683606331) ,
([4, 7, 6, 10, 9, 5, 2, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 5, 2, 11, 1],) ,
('saved value', 4.491696021127242) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 2, ',', 7, '-', 11) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -0.037465237624335956) ,
([4, 7, 6, 10, 9, 1, 11, 2, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 11, 2, 5],) ,
('saved value', 3.759335415142273) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 2, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', 0.12130932884852252) ,
([4, 7, 6, 10, 9, 1, 5, 11, 2],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 5, 11, 2],) ,
('saved value', 3.9181099816151317) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 5) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 11) ,
('Swap gain:', 0.0) ,
([4, 7, 6, 10, 9, 1, 2, 5, 11],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 5, 11],) ,
('saved value', 3.796800652766609) ,
('Use swap gain',) ,
('Original mapping', [4, 7, 6, 10, 9, 1, 2, 11, 5]) ,
('Current mapping', [4, 7, 6, 2, 9, 1, 10, 11, 5]) ,
('Gain after the hill-climbing', 1.661231550778243) ,
('Update triple match number to:', 5.458032203544851) ,
('Current mapping:', [4, 7, 6, 2, 9, 1, 10, 11, 5]) ,
('Remap node', 0, 'from ', 4, 'to', 0) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([0, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('saved value', 5.118631252204504) ,
('Remap node', 0, 'from ', 4, 'to', 3) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([3, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('saved value', 5.118631252204504) ,
('Remap node', 0, 'from ', 4, 'to', 8) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([8, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('saved value', 5.118631252204504) ,
('Remap node', 1, 'from ', 7, 'to', 0) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 0, 6, 2, 9, 1, 10, 11, 5],) ,
('saved value', 4.754674586619701) ,
('Remap node', 1, 'from ', 7, 'to', 3) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 3, 6, 2, 9, 1, 10, 11, 5],) ,
('saved value', 4.754674586619701) ,
('Remap node', 1, 'from ', 7, 'to', 8) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 8, 6, 2, 9, 1, 10, 11, 5],) ,
('saved value', 4.754674586619701) ,
('Remap node', 2, 'from ', 6, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 0, 2, 9, 1, 10, 11, 5],) ,
('saved value', 5.458032203544851) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 3, 2, 9, 1, 10, 11, 5],) ,
('saved value', 5.458032203544851) ,
('Remap node', 2, 'from ', 6, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 8, 2, 9, 1, 10, 11, 5],) ,
('saved value', 5.458032203544851) ,
('Remap node', 3, 'from ', 2, 'to', 0) ,
('Move gain:', -0.508868583093786) ,
('Computing match for mapping',) ,
([4, 7, 6, 0, 9, 1, 10, 11, 5],) ,
('saved value', 4.949163620451065) ,
('Remap node', 3, 'from ', 2, 'to', 3) ,
('Move gain:', -0.508868583093786) ,
('Computing match for mapping',) ,
([4, 7, 6, 3, 9, 1, 10, 11, 5],) ,
('saved value', 4.949163620451065) ,
('Remap node', 3, 'from ', 2, 'to', 8) ,
('Move gain:', -0.508868583093786) ,
('Computing match for mapping',) ,
([4, 7, 6, 8, 9, 1, 10, 11, 5],) ,
('saved value', 4.949163620451065) ,
('Remap node', 4, 'from ', 9, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 0, 1, 10, 11, 5],) ,
('saved value', 4.458032203544851) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 3, 1, 10, 11, 5],) ,
('saved value', 4.458032203544851) ,
('Remap node', 4, 'from ', 9, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 8, 1, 10, 11, 5],) ,
('saved value', 4.458032203544851) ,
('Remap node', 5, 'from ', 1, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 0, 10, 11, 5],) ,
('saved value', 5.458032203544851) ,
('Remap node', 5, 'from ', 1, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 3, 10, 11, 5],) ,
('saved value', 5.458032203544851) ,
('Remap node', 5, 'from ', 1, 'to', 8) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('saved value', 6.458032203544851) ,
('Remap node', 6, 'from ', 10, 'to', 0) ,
('Move gain:', -1.9064050521855678) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 0, 11, 5],) ,
('saved value', 3.5516271513592836) ,
('Remap node', 6, 'from ', 10, 'to', 3) ,
('Move gain:', -1.9064050521855678) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 3, 11, 5],) ,
('saved value', 3.5516271513592836) ,
('Remap node', 6, 'from ', 10, 'to', 8) ,
('Move gain:', -1.9064050521855678) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 8, 11, 5],) ,
('saved value', 3.5516271513592836) ,
('Remap node', 7, 'from ', 11, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 10, 0, 5],) ,
('saved value', 3.4580322035448514) ,
('Remap node', 7, 'from ', 11, 'to', 3) ,
('Move gain:', -1.9999999999999996) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 10, 3, 5],) ,
('saved value', 3.458032203544852) ,
('Remap node', 7, 'from ', 11, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 10, 8, 5],) ,
('saved value', 3.4580322035448514) ,
('Remap node', 8, 'from ', 5, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 10, 11, 0],) ,
('saved value', 5.458032203544851) ,
('Remap node', 8, 'from ', 5, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 10, 11, 3],) ,
('saved value', 5.458032203544851) ,
('Remap node', 8, 'from ', 5, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 10, 11, 8],) ,
('saved value', 5.458032203544851) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 7) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 4) ,
('Swap gain:', -0.0011033854587498837) ,
([7, 4, 6, 2, 9, 1, 10, 11, 5],) ,
('Computing match for mapping',) ,
([7, 4, 6, 2, 9, 1, 10, 11, 5],) ,
('saved value', 5.4569288180861015) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 6) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 4) ,
('Swap gain:', -0.3394009513403471) ,
([6, 7, 4, 2, 9, 1, 10, 11, 5],) ,
('Computing match for mapping',) ,
([6, 7, 4, 2, 9, 1, 10, 11, 5],) ,
('saved value', 5.118631252204504) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 2) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -0.4679438027073692) ,
([2, 7, 6, 4, 9, 1, 10, 11, 5],) ,
('Computing match for mapping',) ,
([2, 7, 6, 4, 9, 1, 10, 11, 5],) ,
('saved value', 4.990088400837482) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 9) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([9, 7, 6, 2, 4, 1, 10, 11, 5],) ,
('Computing match for mapping',) ,
([9, 7, 6, 2, 4, 1, 10, 11, 5],) ,
('saved value', 4.118631252204504) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 1) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', -0.3394009513403471) ,
([1, 7, 6, 2, 9, 4, 10, 11, 5],) ,
('Computing match for mapping',) ,
([1, 7, 6, 2, 9, 4, 10, 11, 5],) ,
('saved value', 5.118631252204504) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 4) ,
('Swap gain:', -0.9999999999999999) ,
([10, 7, 6, 2, 9, 1, 4, 11, 5],) ,
('Computing match for mapping',) ,
([10, 7, 6, 2, 9, 1, 4, 11, 5],) ,
('saved value', 4.458032203544851) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 4) ,
('Swap gain:', -1.1208053521286891) ,
([11, 7, 6, 2, 9, 1, 10, 4, 5],) ,
('Computing match for mapping',) ,
([11, 7, 6, 2, 9, 1, 10, 4, 5],) ,
('saved value', 4.337226851416162) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', 0.003166617071981792) ,
([5, 7, 6, 2, 9, 1, 10, 11, 4],) ,
('Computing match for mapping',) ,
([5, 7, 6, 2, 9, 1, 10, 11, 4],) ,
('saved value', 5.461198820616834) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 6) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 7) ,
('Swap gain:', -0.7033576169251505) ,
([4, 6, 7, 2, 9, 1, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 7, 2, 9, 1, 10, 11, 5],) ,
('saved value', 4.754674586619701) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 2) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -0.3582026201422356) ,
([4, 2, 6, 7, 9, 1, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 2, 6, 7, 9, 1, 10, 11, 5],) ,
('saved value', 5.099829583402616) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 9) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 7) ,
('Swap gain:', -1.7033576169251505) ,
([4, 9, 6, 2, 7, 1, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 9, 6, 2, 7, 1, 10, 11, 5],) ,
('saved value', 3.754674586619701) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 1) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 7) ,
('Swap gain:', -0.7033576169251505) ,
([4, 1, 6, 2, 9, 7, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 1, 6, 2, 9, 7, 10, 11, 5],) ,
('saved value', 4.754674586619701) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 7) ,
('Swap gain:', -1.1844462391051223) ,
([4, 10, 6, 2, 9, 1, 7, 11, 5],) ,
('Computing match for mapping',) ,
([4, 10, 6, 2, 9, 1, 7, 11, 5],) ,
('saved value', 4.273585964439729) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 7) ,
('Swap gain:', -1.2064872477029356) ,
([4, 11, 6, 2, 9, 1, 10, 7, 5],) ,
('Computing match for mapping',) ,
([4, 11, 6, 2, 9, 1, 10, 7, 5],) ,
('saved value', 4.251544955841916) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 7, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', 0.0948733043479365) ,
([4, 5, 6, 2, 9, 1, 10, 11, 7],) ,
('Computing match for mapping',) ,
([4, 5, 6, 2, 9, 1, 10, 11, 7],) ,
('saved value', 5.552905507892788) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 2) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 6) ,
('Swap gain:', 0.491131416906214) ,
([4, 7, 2, 6, 9, 1, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 1, 10, 11, 5],) ,
('saved value', 5.949163620451065) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 9) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 6) ,
('Swap gain:', -1.0) ,
([4, 7, 9, 2, 6, 1, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 9, 2, 6, 1, 10, 11, 5],) ,
('saved value', 4.458032203544851) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 1) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([4, 7, 1, 2, 9, 6, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 1, 2, 9, 6, 10, 11, 5],) ,
('saved value', 5.458032203544851) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -1.9064050521855678) ,
([4, 7, 10, 2, 9, 1, 6, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 10, 2, 9, 1, 6, 11, 5],) ,
('saved value', 3.5516271513592836) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 6, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -2.0) ,
([4, 7, 11, 2, 9, 1, 10, 6, 5],) ,
('Computing match for mapping',) ,
([4, 7, 11, 2, 9, 1, 10, 6, 5],) ,
('saved value', 3.4580322035448514) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 6, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', 0.6948953683606331) ,
([4, 7, 5, 2, 9, 1, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 7, 5, 2, 9, 1, 10, 11, 6],) ,
('saved value', 6.152927571905485) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 9) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -1.508868583093786) ,
([4, 7, 6, 9, 2, 1, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 2, 1, 10, 11, 5],) ,
('saved value', 3.949163620451065) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 1) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 2) ,
('Swap gain:', 0.491131416906214) ,
([4, 7, 6, 1, 9, 2, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 1, 9, 2, 10, 11, 5],) ,
('saved value', 5.949163620451065) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -1.6612315507782425) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 1, 2, 11, 5],) ,
('saved value', 3.796800652766609) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -1.6676431495666444) ,
([4, 7, 6, 11, 9, 1, 10, 2, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 11, 9, 1, 10, 2, 5],) ,
('saved value', 3.790389053978207) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', -0.508868583093786) ,
([4, 7, 6, 5, 9, 1, 10, 11, 2],) ,
('Computing match for mapping',) ,
([4, 7, 6, 5, 9, 1, 10, 11, 2],) ,
('saved value', 4.949163620451065) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 1) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 9) ,
('Swap gain:', -1.0) ,
([4, 7, 6, 2, 1, 9, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 1, 9, 10, 11, 5],) ,
('saved value', 4.458032203544851) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -2.9064050521855678) ,
([4, 7, 6, 2, 10, 1, 9, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 10, 1, 9, 11, 5],) ,
('saved value', 2.5516271513592836) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([4, 7, 6, 2, 11, 1, 10, 9, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 11, 1, 10, 9, 5],) ,
('saved value', 2.4580322035448514) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 9) ,
('Swap gain:', -1.0) ,
([4, 7, 6, 2, 5, 1, 10, 11, 9],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 5, 1, 10, 11, 9],) ,
('saved value', 4.458032203544851) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 1, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -1.9064050521855678) ,
([4, 7, 6, 2, 9, 10, 1, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 10, 1, 11, 5],) ,
('saved value', 3.5516271513592836) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 1, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 7, 6, 2, 9, 11, 10, 1, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 11, 10, 1, 5],) ,
('saved value', 3.4580322035448514) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 1, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 1) ,
('Swap gain:', 0.6948953683606331) ,
([4, 7, 6, 2, 9, 5, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 5, 10, 11, 1],) ,
('saved value', 6.152927571905485) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -1.1550256080366048) ,
([4, 7, 6, 2, 9, 1, 11, 10, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 11, 10, 5],) ,
('saved value', 4.303006595508247) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 10) ,
('Swap gain:', -1.0310536388359341) ,
([4, 7, 6, 2, 9, 1, 5, 11, 10],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 5, 11, 10],) ,
('saved value', 4.426978564708917) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 11) ,
('Swap gain:', -1.0) ,
([4, 7, 6, 2, 9, 1, 10, 5, 11],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 10, 5, 11],) ,
('saved value', 4.458032203544851) ,
('Use move gain',) ,
('Original mapping', [4, 7, 6, 2, 9, 1, 10, 11, 5]) ,
('Current mapping', [4, 7, 6, 2, 9, 8, 10, 11, 5]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 6.458032203544851) ,
('Current mapping:', [4, 7, 6, 2, 9, 8, 10, 11, 5]) ,
('Remap node', 0, 'from ', 4, 'to', 0) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([0, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('saved value', 6.118631252204504) ,
('Remap node', 0, 'from ', 4, 'to', 1) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([1, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('saved value', 6.118631252204504) ,
('Remap node', 0, 'from ', 4, 'to', 3) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([3, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('saved value', 6.118631252204504) ,
('Remap node', 1, 'from ', 7, 'to', 0) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 0, 6, 2, 9, 8, 10, 11, 5],) ,
('saved value', 5.754674586619701) ,
('Remap node', 1, 'from ', 7, 'to', 1) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 1, 6, 2, 9, 8, 10, 11, 5],) ,
('saved value', 5.754674586619701) ,
('Remap node', 1, 'from ', 7, 'to', 3) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 3, 6, 2, 9, 8, 10, 11, 5],) ,
('saved value', 5.754674586619701) ,
('Remap node', 2, 'from ', 6, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 0, 2, 9, 8, 10, 11, 5],) ,
('saved value', 6.458032203544851) ,
('Remap node', 2, 'from ', 6, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 1, 2, 9, 8, 10, 11, 5],) ,
('saved value', 6.458032203544851) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 3, 2, 9, 8, 10, 11, 5],) ,
('saved value', 6.458032203544851) ,
('Remap node', 3, 'from ', 2, 'to', 0) ,
('Move gain:', -0.508868583093786) ,
('Computing match for mapping',) ,
([4, 7, 6, 0, 9, 8, 10, 11, 5],) ,
('saved value', 5.949163620451065) ,
('Remap node', 3, 'from ', 2, 'to', 1) ,
('Move gain:', 0.491131416906214) ,
('Computing match for mapping',) ,
([4, 7, 6, 1, 9, 8, 10, 11, 5],) ,
('saved value', 6.949163620451065) ,
('Remap node', 3, 'from ', 2, 'to', 3) ,
('Move gain:', -0.508868583093786) ,
('Computing match for mapping',) ,
([4, 7, 6, 3, 9, 8, 10, 11, 5],) ,
('saved value', 5.949163620451065) ,
('Remap node', 4, 'from ', 9, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 0, 8, 10, 11, 5],) ,
('saved value', 5.458032203544851) ,
('Remap node', 4, 'from ', 9, 'to', 1) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 1, 8, 10, 11, 5],) ,
('saved value', 5.458032203544851) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 3, 8, 10, 11, 5],) ,
('saved value', 5.458032203544851) ,
('Remap node', 5, 'from ', 8, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 0, 10, 11, 5],) ,
('saved value', 5.458032203544851) ,
('Remap node', 5, 'from ', 8, 'to', 1) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 10, 11, 5],) ,
('saved value', 5.458032203544851) ,
('Remap node', 5, 'from ', 8, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 3, 10, 11, 5],) ,
('saved value', 5.458032203544851) ,
('Remap node', 6, 'from ', 10, 'to', 0) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 0, 11, 5],) ,
('saved value', 3.5516271513592836) ,
('Remap node', 6, 'from ', 10, 'to', 1) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 1, 11, 5],) ,
('saved value', 3.5516271513592836) ,
('Remap node', 6, 'from ', 10, 'to', 3) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 3, 11, 5],) ,
('saved value', 3.5516271513592836) ,
('Remap node', 7, 'from ', 11, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 0, 5],) ,
('saved value', 4.458032203544851) ,
('Remap node', 7, 'from ', 11, 'to', 1) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 1, 5],) ,
('saved value', 4.458032203544851) ,
('Remap node', 7, 'from ', 11, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 3, 5],) ,
('saved value', 4.458032203544851) ,
('Remap node', 8, 'from ', 5, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 11, 0],) ,
('saved value', 6.458032203544851) ,
('Remap node', 8, 'from ', 5, 'to', 1) ,
('Move gain:', 0.6948953683606331) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('saved value', 7.152927571905485) ,
('Remap node', 8, 'from ', 5, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 11, 3],) ,
('saved value', 6.458032203544851) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 7) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 4) ,
('Swap gain:', -0.0011033854587498837) ,
([7, 4, 6, 2, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([7, 4, 6, 2, 9, 8, 10, 11, 5],) ,
('saved value', 6.4569288180861015) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 6) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 4) ,
('Swap gain:', -0.3394009513403471) ,
([6, 7, 4, 2, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([6, 7, 4, 2, 9, 8, 10, 11, 5],) ,
('saved value', 6.118631252204504) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 2) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -0.4679438027073692) ,
([2, 7, 6, 4, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([2, 7, 6, 4, 9, 8, 10, 11, 5],) ,
('saved value', 5.990088400837482) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 9) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([9, 7, 6, 2, 4, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([9, 7, 6, 2, 4, 8, 10, 11, 5],) ,
('saved value', 5.118631252204504) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 8) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([8, 7, 6, 2, 9, 4, 10, 11, 5],) ,
('Computing match for mapping',) ,
([8, 7, 6, 2, 9, 4, 10, 11, 5],) ,
('saved value', 5.118631252204504) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([10, 7, 6, 2, 9, 8, 4, 11, 5],) ,
('Computing match for mapping',) ,
([10, 7, 6, 2, 9, 8, 4, 11, 5],) ,
('saved value', 4.458032203544851) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 4) ,
('Swap gain:', -1.1208053521286891) ,
([11, 7, 6, 2, 9, 8, 10, 4, 5],) ,
('Computing match for mapping',) ,
([11, 7, 6, 2, 9, 8, 10, 4, 5],) ,
('saved value', 5.337226851416162) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 0, '-', 5, ',', 8, '-', 4) ,
('Swap gain:', 0.003166617071981792) ,
([5, 7, 6, 2, 9, 8, 10, 11, 4],) ,
('Computing match for mapping',) ,
([5, 7, 6, 2, 9, 8, 10, 11, 4],) ,
('saved value', 6.461198820616834) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 6) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 7) ,
('Swap gain:', 0.29664238307484947) ,
([4, 6, 7, 2, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 6, 7, 2, 9, 8, 10, 11, 5],) ,
('saved value', 6.754674586619701) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 2) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -0.3582026201422356) ,
([4, 2, 6, 7, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 2, 6, 7, 9, 8, 10, 11, 5],) ,
('saved value', 6.099829583402616) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 9) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 7) ,
('Swap gain:', -1.7033576169251505) ,
([4, 9, 6, 2, 7, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 9, 6, 2, 7, 8, 10, 11, 5],) ,
('saved value', 4.754674586619701) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 8) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 7) ,
('Swap gain:', -1.7033576169251505) ,
([4, 8, 6, 2, 9, 7, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 8, 6, 2, 9, 7, 10, 11, 5],) ,
('saved value', 4.754674586619701) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 7) ,
('Swap gain:', -2.1844462391051223) ,
([4, 10, 6, 2, 9, 8, 7, 11, 5],) ,
('Computing match for mapping',) ,
([4, 10, 6, 2, 9, 8, 7, 11, 5],) ,
('saved value', 4.273585964439729) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 7) ,
('Swap gain:', -1.2064872477029356) ,
([4, 11, 6, 2, 9, 8, 10, 7, 5],) ,
('Computing match for mapping',) ,
([4, 11, 6, 2, 9, 8, 10, 7, 5],) ,
('saved value', 5.251544955841916) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 7, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 1, '-', 5, ',', 8, '-', 7) ,
('Swap gain:', 0.0948733043479365) ,
([4, 5, 6, 2, 9, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([4, 5, 6, 2, 9, 8, 10, 11, 7],) ,
('saved value', 6.552905507892788) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 2) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 6) ,
('Swap gain:', 0.491131416906214) ,
([4, 7, 2, 6, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 8, 10, 11, 5],) ,
('saved value', 6.949163620451065) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 9) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 6) ,
('Swap gain:', -1.0) ,
([4, 7, 9, 2, 6, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 9, 2, 6, 8, 10, 11, 5],) ,
('saved value', 5.458032203544851) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 8) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 6) ,
('Swap gain:', -1.0) ,
([4, 7, 8, 2, 9, 6, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 8, 2, 9, 6, 10, 11, 5],) ,
('saved value', 5.458032203544851) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -2.9064050521855678) ,
([4, 7, 10, 2, 9, 8, 6, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 10, 2, 9, 8, 6, 11, 5],) ,
('saved value', 3.5516271513592836) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 6, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -2.0) ,
([4, 7, 11, 2, 9, 8, 10, 6, 5],) ,
('Computing match for mapping',) ,
([4, 7, 11, 2, 9, 8, 10, 6, 5],) ,
('saved value', 4.458032203544851) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 6, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 2, '-', 5, ',', 8, '-', 6) ,
('Swap gain:', 0.6948953683606331) ,
([4, 7, 5, 2, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 7, 5, 2, 9, 8, 10, 11, 6],) ,
('saved value', 7.152927571905485) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 9) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -1.508868583093786) ,
([4, 7, 6, 9, 2, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 2, 8, 10, 11, 5],) ,
('saved value', 4.949163620451065) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 8) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1.508868583093786) ,
([4, 7, 6, 8, 9, 2, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 8, 9, 2, 10, 11, 5],) ,
('saved value', 4.949163620451065) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -2.6612315507782425) ,
([4, 7, 6, 10, 9, 8, 2, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 8, 2, 11, 5],) ,
('saved value', 3.796800652766609) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -1.6676431495666444) ,
([4, 7, 6, 11, 9, 8, 10, 2, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 11, 9, 8, 10, 2, 5],) ,
('saved value', 4.790389053978207) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 3, '-', 5, ',', 8, '-', 2) ,
('Swap gain:', -0.508868583093786) ,
([4, 7, 6, 5, 9, 8, 10, 11, 2],) ,
('Computing match for mapping',) ,
([4, 7, 6, 5, 9, 8, 10, 11, 2],) ,
('saved value', 5.949163620451065) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([4, 7, 6, 2, 8, 9, 10, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 8, 9, 10, 11, 5],) ,
('saved value', 4.458032203544851) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([4, 7, 6, 2, 10, 8, 9, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 10, 8, 9, 11, 5],) ,
('saved value', 2.5516271513592836) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([4, 7, 6, 2, 11, 8, 10, 9, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 11, 8, 10, 9, 5],) ,
('saved value', 3.4580322035448514) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 4, '-', 5, ',', 8, '-', 9) ,
('Swap gain:', -1.0) ,
([4, 7, 6, 2, 5, 8, 10, 11, 9],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 5, 8, 10, 11, 9],) ,
('saved value', 5.458032203544851) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2.9064050521855678) ,
([4, 7, 6, 2, 9, 10, 8, 11, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 10, 8, 11, 5],) ,
('saved value', 3.5516271513592836) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -3.0) ,
([4, 7, 6, 2, 9, 11, 10, 8, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 11, 10, 8, 5],) ,
('saved value', 3.4580322035448514) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 5, '-', 5, ',', 8, '-', 8) ,
('Swap gain:', -1.0) ,
([4, 7, 6, 2, 9, 5, 10, 11, 8],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 5, 10, 11, 8],) ,
('saved value', 5.458032203544851) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -2.155025608036605) ,
([4, 7, 6, 2, 9, 8, 11, 10, 5],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 11, 10, 5],) ,
('saved value', 4.303006595508247) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 6, '-', 5, ',', 8, '-', 10) ,
('Swap gain:', -2.0310536388359344) ,
([4, 7, 6, 2, 9, 8, 5, 11, 10],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 5, 11, 10],) ,
('saved value', 4.426978564708917) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 5) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('After swapping:', 7, '-', 5, ',', 8, '-', 11) ,
('Swap gain:', -1.0) ,
([4, 7, 6, 2, 9, 8, 10, 5, 11],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 5, 11],) ,
('saved value', 5.458032203544851) ,
('Use move gain',) ,
('Original mapping', [4, 7, 6, 2, 9, 8, 10, 11, 5]) ,
('Current mapping', [4, 7, 6, 2, 9, 8, 10, 11, 1]) ,
('Gain after the hill-climbing', 0.6948953683606331) ,
('Update triple match number to:', 7.152927571905485) ,
('Current mapping:', [4, 7, 6, 2, 9, 8, 10, 11, 1]) ,
('Remap node', 0, 'from ', 4, 'to', 0) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([0, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('saved value', 6.8135266205651375) ,
('Remap node', 0, 'from ', 4, 'to', 3) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([3, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('saved value', 6.8135266205651375) ,
('Remap node', 0, 'from ', 4, 'to', 5) ,
('Move gain:', 0.003166617071981792) ,
('Computing match for mapping',) ,
([5, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('saved value', 7.156094188977467) ,
('Remap node', 1, 'from ', 7, 'to', 0) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 0, 6, 2, 9, 8, 10, 11, 1],) ,
('saved value', 6.449569954980334) ,
('Remap node', 1, 'from ', 7, 'to', 3) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 3, 6, 2, 9, 8, 10, 11, 1],) ,
('saved value', 6.449569954980334) ,
('Remap node', 1, 'from ', 7, 'to', 5) ,
('Move gain:', 0.0948733043479365) ,
('Computing match for mapping',) ,
([4, 5, 6, 2, 9, 8, 10, 11, 1],) ,
('saved value', 7.247800876253422) ,
('Remap node', 2, 'from ', 6, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 0, 2, 9, 8, 10, 11, 1],) ,
('saved value', 7.152927571905485) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 3, 2, 9, 8, 10, 11, 1],) ,
('saved value', 7.152927571905485) ,
('Remap node', 2, 'from ', 6, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 5, 2, 9, 8, 10, 11, 1],) ,
('saved value', 7.152927571905485) ,
('Remap node', 3, 'from ', 2, 'to', 0) ,
('Move gain:', -0.508868583093786) ,
('Computing match for mapping',) ,
([4, 7, 6, 0, 9, 8, 10, 11, 1],) ,
('saved value', 6.6440589888116985) ,
('Remap node', 3, 'from ', 2, 'to', 3) ,
('Move gain:', -0.508868583093786) ,
('Computing match for mapping',) ,
([4, 7, 6, 3, 9, 8, 10, 11, 1],) ,
('saved value', 6.6440589888116985) ,
('Remap node', 3, 'from ', 2, 'to', 5) ,
('Move gain:', -0.508868583093786) ,
('Computing match for mapping',) ,
([4, 7, 6, 5, 9, 8, 10, 11, 1],) ,
('saved value', 6.6440589888116985) ,
('Remap node', 4, 'from ', 9, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 0, 8, 10, 11, 1],) ,
('saved value', 6.152927571905485) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 3, 8, 10, 11, 1],) ,
('saved value', 6.152927571905485) ,
('Remap node', 4, 'from ', 9, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 5, 8, 10, 11, 1],) ,
('saved value', 6.152927571905485) ,
('Remap node', 5, 'from ', 8, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 0, 10, 11, 1],) ,
('saved value', 6.152927571905485) ,
('Remap node', 5, 'from ', 8, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 3, 10, 11, 1],) ,
('saved value', 6.152927571905485) ,
('Remap node', 5, 'from ', 8, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 5, 10, 11, 1],) ,
('saved value', 6.152927571905485) ,
('Remap node', 6, 'from ', 10, 'to', 0) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 0, 11, 1],) ,
('saved value', 4.2465225197199175) ,
('Remap node', 6, 'from ', 10, 'to', 3) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 3, 11, 1],) ,
('saved value', 4.2465225197199175) ,
('Remap node', 6, 'from ', 10, 'to', 5) ,
('Move gain:', -2.0310536388359344) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 5, 11, 1],) ,
('saved value', 5.12187393306955) ,
('Remap node', 7, 'from ', 11, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 0, 1],) ,
('saved value', 5.152927571905485) ,
('Remap node', 7, 'from ', 11, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 3, 1],) ,
('saved value', 5.152927571905485) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 5, 1],) ,
('saved value', 6.152927571905485) ,
('Remap node', 8, 'from ', 1, 'to', 0) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 11, 0],) ,
('saved value', 6.458032203544851) ,
('Remap node', 8, 'from ', 1, 'to', 3) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 11, 3],) ,
('saved value', 6.458032203544851) ,
('Remap node', 8, 'from ', 1, 'to', 5) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 11, 5],) ,
('saved value', 6.458032203544851) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 7) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 4) ,
('Swap gain:', -0.0011033854587498837) ,
([7, 4, 6, 2, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([7, 4, 6, 2, 9, 8, 10, 11, 1],) ,
('saved value', 7.151824186446735) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 6) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 4) ,
('Swap gain:', -0.3394009513403471) ,
([6, 7, 4, 2, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([6, 7, 4, 2, 9, 8, 10, 11, 1],) ,
('saved value', 6.8135266205651375) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 2) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -0.4679438027073692) ,
([2, 7, 6, 4, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([2, 7, 6, 4, 9, 8, 10, 11, 1],) ,
('saved value', 6.684983769198116) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 9) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([9, 7, 6, 2, 4, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([9, 7, 6, 2, 4, 8, 10, 11, 1],) ,
('saved value', 5.8135266205651375) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 8) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([8, 7, 6, 2, 9, 4, 10, 11, 1],) ,
('Computing match for mapping',) ,
([8, 7, 6, 2, 9, 4, 10, 11, 1],) ,
('saved value', 5.8135266205651375) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([10, 7, 6, 2, 9, 8, 4, 11, 1],) ,
('Computing match for mapping',) ,
([10, 7, 6, 2, 9, 8, 4, 11, 1],) ,
('saved value', 5.152927571905485) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 4) ,
('Swap gain:', -1.1208053521286891) ,
([11, 7, 6, 2, 9, 8, 10, 4, 1],) ,
('Computing match for mapping',) ,
([11, 7, 6, 2, 9, 8, 10, 4, 1],) ,
('saved value', 6.032122219776795) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 1) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 1, ',', 8, '-', 4) ,
('Swap gain:', -1.0342963197009802) ,
([1, 7, 6, 2, 9, 8, 10, 11, 4],) ,
('Computing match for mapping',) ,
([1, 7, 6, 2, 9, 8, 10, 11, 4],) ,
('saved value', 6.118631252204505) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 6) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 7) ,
('Swap gain:', 0.29664238307484947) ,
([4, 6, 7, 2, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 6, 7, 2, 9, 8, 10, 11, 1],) ,
('saved value', 7.449569954980334) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 2) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 7) ,
('Swap gain:', -0.3582026201422356) ,
([4, 2, 6, 7, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 2, 6, 7, 9, 8, 10, 11, 1],) ,
('saved value', 6.794724951763249) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 9) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 7) ,
('Swap gain:', -1.7033576169251505) ,
([4, 9, 6, 2, 7, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 9, 6, 2, 7, 8, 10, 11, 1],) ,
('saved value', 5.449569954980334) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 8) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 7) ,
('Swap gain:', -1.7033576169251505) ,
([4, 8, 6, 2, 9, 7, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 8, 6, 2, 9, 7, 10, 11, 1],) ,
('saved value', 5.449569954980334) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 7) ,
('Swap gain:', -2.1844462391051223) ,
([4, 10, 6, 2, 9, 8, 7, 11, 1],) ,
('Computing match for mapping',) ,
([4, 10, 6, 2, 9, 8, 7, 11, 1],) ,
('saved value', 4.968481332800362) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 7) ,
('Swap gain:', -1.2064872477029356) ,
([4, 11, 6, 2, 9, 8, 10, 7, 1],) ,
('Computing match for mapping',) ,
([4, 11, 6, 2, 9, 8, 10, 7, 1],) ,
('saved value', 5.946440324202549) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 7, ',', 8, '-', 1) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 1, ',', 8, '-', 7) ,
('Swap gain:', -1.3982529852857837) ,
([4, 1, 6, 2, 9, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([4, 1, 6, 2, 9, 8, 10, 11, 7],) ,
('saved value', 5.754674586619701) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 2) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 6) ,
('Swap gain:', 0.491131416906214) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.6440589888116985) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 9) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 6) ,
('Swap gain:', -1.0) ,
([4, 7, 9, 2, 6, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 9, 2, 6, 8, 10, 11, 1],) ,
('saved value', 6.152927571905485) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 8) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 6) ,
('Swap gain:', -1.0) ,
([4, 7, 8, 2, 9, 6, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 8, 2, 9, 6, 10, 11, 1],) ,
('saved value', 6.152927571905485) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -2.9064050521855678) ,
([4, 7, 10, 2, 9, 8, 6, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 10, 2, 9, 8, 6, 11, 1],) ,
('saved value', 4.2465225197199175) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 6, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -2.0) ,
([4, 7, 11, 2, 9, 8, 10, 6, 1],) ,
('Computing match for mapping',) ,
([4, 7, 11, 2, 9, 8, 10, 6, 1],) ,
('saved value', 5.152927571905485) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 6, ',', 8, '-', 1) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 1, ',', 8, '-', 6) ,
('Swap gain:', 0.0) ,
([4, 7, 1, 2, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 7, 1, 2, 9, 8, 10, 11, 6],) ,
('saved value', 7.152927571905485) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 9) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -1.508868583093786) ,
([4, 7, 6, 9, 2, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 2, 8, 10, 11, 1],) ,
('saved value', 5.6440589888116985) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 8) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1.508868583093786) ,
([4, 7, 6, 8, 9, 2, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 6, 8, 9, 2, 10, 11, 1],) ,
('saved value', 5.6440589888116985) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -2.6612315507782425) ,
([4, 7, 6, 10, 9, 8, 2, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 6, 10, 9, 8, 2, 11, 1],) ,
('saved value', 4.491696021127242) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -1.6676431495666444) ,
([4, 7, 6, 11, 9, 8, 10, 2, 1],) ,
('Computing match for mapping',) ,
([4, 7, 6, 11, 9, 8, 10, 2, 1],) ,
('saved value', 5.48528442233884) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 1) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 1, ',', 8, '-', 2) ,
('Swap gain:', -0.20376395145441917) ,
([4, 7, 6, 1, 9, 8, 10, 11, 2],) ,
('Computing match for mapping',) ,
([4, 7, 6, 1, 9, 8, 10, 11, 2],) ,
('saved value', 6.949163620451065) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([4, 7, 6, 2, 8, 9, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 8, 9, 10, 11, 1],) ,
('saved value', 5.152927571905485) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([4, 7, 6, 2, 10, 8, 9, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 10, 8, 9, 11, 1],) ,
('saved value', 3.246522519719917) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([4, 7, 6, 2, 11, 8, 10, 9, 1],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 11, 8, 10, 9, 1],) ,
('saved value', 4.152927571905485) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 1) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 1, ',', 8, '-', 9) ,
('Swap gain:', -1.6948953683606331) ,
([4, 7, 6, 2, 1, 8, 10, 11, 9],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 1, 8, 10, 11, 9],) ,
('saved value', 5.458032203544851) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2.9064050521855678) ,
([4, 7, 6, 2, 9, 10, 8, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 10, 8, 11, 1],) ,
('saved value', 4.2465225197199175) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -3.0) ,
([4, 7, 6, 2, 9, 11, 10, 8, 1],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 11, 10, 8, 1],) ,
('saved value', 4.152927571905485) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', 1) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 5, '-', 1, ',', 8, '-', 8) ,
('Swap gain:', -1.6948953683606334) ,
([4, 7, 6, 2, 9, 1, 10, 11, 8],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 1, 10, 11, 8],) ,
('saved value', 5.458032203544851) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -2.155025608036605) ,
([4, 7, 6, 2, 9, 8, 11, 10, 1],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 11, 10, 1],) ,
('saved value', 4.99790196386888) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', 1) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 6, '-', 1, ',', 8, '-', 10) ,
('Swap gain:', -3.6013004205462007) ,
([4, 7, 6, 2, 9, 8, 1, 11, 10],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 1, 11, 10],) ,
('saved value', 3.551627151359284) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 1) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('After swapping:', 7, '-', 1, ',', 8, '-', 11) ,
('Swap gain:', -2.6948953683606334) ,
([4, 7, 6, 2, 9, 8, 10, 1, 11],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 1, 11],) ,
('saved value', 4.458032203544851) ,
('Use swap gain',) ,
('Original mapping', [4, 7, 6, 2, 9, 8, 10, 11, 1]) ,
('Current mapping', [4, 7, 2, 6, 9, 8, 10, 11, 1]) ,
('Gain after the hill-climbing', 0.491131416906214) ,
('Update triple match number to:', 7.6440589888116985) ,
('Current mapping:', [4, 7, 2, 6, 9, 8, 10, 11, 1]) ,
('Remap node', 0, 'from ', 4, 'to', 0) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([0, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.304658037471351) ,
('Remap node', 0, 'from ', 4, 'to', 3) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([3, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.304658037471351) ,
('Remap node', 0, 'from ', 4, 'to', 5) ,
('Move gain:', 0.003166617071981792) ,
('Computing match for mapping',) ,
([5, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.647225605883681) ,
('Remap node', 1, 'from ', 7, 'to', 0) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 0, 2, 6, 9, 8, 10, 11, 1],) ,
('saved value', 6.940701371886548) ,
('Remap node', 1, 'from ', 7, 'to', 3) ,
('Move gain:', -0.7033576169251505) ,
('Computing match for mapping',) ,
([4, 3, 2, 6, 9, 8, 10, 11, 1],) ,
('saved value', 6.940701371886548) ,
('Remap node', 1, 'from ', 7, 'to', 5) ,
('Move gain:', 0.09487330434793684) ,
('Computing match for mapping',) ,
([4, 5, 2, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.738932293159635) ,
('Remap node', 2, 'from ', 2, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 0, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.6440589888116985) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 3, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.6440589888116985) ,
('Remap node', 2, 'from ', 2, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 5, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.6440589888116985) ,
('Remap node', 3, 'from ', 6, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 2, 0, 9, 8, 10, 11, 1],) ,
('saved value', 6.6440589888116985) ,
('Remap node', 3, 'from ', 6, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 2, 3, 9, 8, 10, 11, 1],) ,
('saved value', 6.6440589888116985) ,
('Remap node', 3, 'from ', 6, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 2, 5, 9, 8, 10, 11, 1],) ,
('saved value', 6.6440589888116985) ,
('Remap node', 4, 'from ', 9, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 0, 8, 10, 11, 1],) ,
('saved value', 6.6440589888116985) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 3, 8, 10, 11, 1],) ,
('saved value', 6.6440589888116985) ,
('Remap node', 4, 'from ', 9, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 5, 8, 10, 11, 1],) ,
('saved value', 6.6440589888116985) ,
('Remap node', 5, 'from ', 8, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 0, 10, 11, 1],) ,
('saved value', 6.6440589888116985) ,
('Remap node', 5, 'from ', 8, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 3, 10, 11, 1],) ,
('saved value', 6.6440589888116985) ,
('Remap node', 5, 'from ', 8, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 5, 10, 11, 1],) ,
('saved value', 6.6440589888116985) ,
('Remap node', 6, 'from ', 10, 'to', 0) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 8, 0, 11, 1],) ,
('saved value', 4.737653936626131) ,
('Remap node', 6, 'from ', 10, 'to', 3) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 8, 3, 11, 1],) ,
('saved value', 4.737653936626131) ,
('Remap node', 6, 'from ', 10, 'to', 5) ,
('Move gain:', -2.0310536388359344) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 8, 5, 11, 1],) ,
('saved value', 5.613005349975764) ,
('Remap node', 7, 'from ', 11, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 8, 10, 0, 1],) ,
('saved value', 5.6440589888116985) ,
('Remap node', 7, 'from ', 11, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 8, 10, 3, 1],) ,
('saved value', 5.6440589888116985) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 8, 10, 5, 1],) ,
('saved value', 6.6440589888116985) ,
('Remap node', 8, 'from ', 1, 'to', 0) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 8, 10, 11, 0],) ,
('saved value', 6.949163620451065) ,
('Remap node', 8, 'from ', 1, 'to', 3) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 8, 10, 11, 3],) ,
('saved value', 6.949163620451065) ,
('Remap node', 8, 'from ', 1, 'to', 5) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 8, 10, 11, 5],) ,
('saved value', 6.949163620451065) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 7) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 4) ,
('Swap gain:', -0.0011033854587498837) ,
([7, 4, 2, 6, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([7, 4, 2, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.642955603352949) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 2) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', 0.04092478038641684) ,
([2, 7, 4, 6, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([2, 7, 4, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.684983769198116) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 6) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 6, ',', 3, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([6, 7, 2, 4, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([6, 7, 2, 4, 9, 8, 10, 11, 1],) ,
('saved value', 6.304658037471351) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 9) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([9, 7, 2, 6, 4, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([9, 7, 2, 6, 4, 8, 10, 11, 1],) ,
('saved value', 6.304658037471351) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 8) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([8, 7, 2, 6, 9, 4, 10, 11, 1],) ,
('Computing match for mapping',) ,
([8, 7, 2, 6, 9, 4, 10, 11, 1],) ,
('saved value', 6.304658037471351) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 10) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([10, 7, 2, 6, 9, 8, 4, 11, 1],) ,
('Computing match for mapping',) ,
([10, 7, 2, 6, 9, 8, 4, 11, 1],) ,
('saved value', 5.6440589888116985) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 11) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 4) ,
('Swap gain:', -1.1208053521286891) ,
([11, 7, 2, 6, 9, 8, 10, 4, 1],) ,
('Computing match for mapping',) ,
([11, 7, 2, 6, 9, 8, 10, 4, 1],) ,
('saved value', 6.523253636683009) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 1) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 1, ',', 8, '-', 4) ,
('Swap gain:', -1.0342963197009802) ,
([1, 7, 2, 6, 9, 8, 10, 11, 4],) ,
('Computing match for mapping',) ,
([1, 7, 2, 6, 9, 8, 10, 11, 4],) ,
('saved value', 6.609762669110719) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 2) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 7) ,
('Swap gain:', 0.15066596295155044) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.794724951763249) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 6) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 6, ',', 3, '-', 7) ,
('Swap gain:', -0.7033576169251505) ,
([4, 6, 2, 7, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 6, 2, 7, 9, 8, 10, 11, 1],) ,
('saved value', 6.940701371886548) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 9) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 7) ,
('Swap gain:', -0.7033576169251505) ,
([4, 9, 2, 6, 7, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 9, 2, 6, 7, 8, 10, 11, 1],) ,
('saved value', 6.940701371886548) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 8) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 7) ,
('Swap gain:', -1.7033576169251505) ,
([4, 8, 2, 6, 9, 7, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 8, 2, 6, 9, 7, 10, 11, 1],) ,
('saved value', 5.940701371886548) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', 10) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 7) ,
('Swap gain:', -2.1844462391051223) ,
([4, 10, 2, 6, 9, 8, 7, 11, 1],) ,
('Computing match for mapping',) ,
([4, 10, 2, 6, 9, 8, 7, 11, 1],) ,
('saved value', 5.459612749706576) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 11) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 7) ,
('Swap gain:', -1.2064872477029356) ,
([4, 11, 2, 6, 9, 8, 10, 7, 1],) ,
('Computing match for mapping',) ,
([4, 11, 2, 6, 9, 8, 10, 7, 1],) ,
('saved value', 6.437571741108763) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 7, ',', 8, '-', 1) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 1, ',', 8, '-', 7) ,
('Swap gain:', -1.3982529852857837) ,
([4, 1, 2, 6, 9, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([4, 1, 2, 6, 9, 8, 10, 11, 7],) ,
('saved value', 6.245806003525915) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 6) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 6, ',', 3, '-', 2) ,
('Swap gain:', -0.49113141690621376) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 9, 8, 10, 11, 1],) ,
('saved value', 7.152927571905485) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 9) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([4, 7, 9, 6, 2, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 9, 6, 2, 8, 10, 11, 1],) ,
('saved value', 6.6440589888116985) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 8) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([4, 7, 8, 6, 9, 2, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 8, 6, 9, 2, 10, 11, 1],) ,
('saved value', 6.6440589888116985) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 10) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -2.1523629676844567) ,
([4, 7, 10, 6, 9, 8, 2, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 10, 6, 9, 8, 2, 11, 1],) ,
('saved value', 5.491696021127241) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 11) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -1.1587745664728586) ,
([4, 7, 11, 6, 9, 8, 10, 2, 1],) ,
('Computing match for mapping',) ,
([4, 7, 11, 6, 9, 8, 10, 2, 1],) ,
('saved value', 6.4852844223388395) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 2, ',', 8, '-', 1) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 1, ',', 8, '-', 2) ,
('Swap gain:', -0.6948953683606331) ,
([4, 7, 1, 6, 9, 8, 10, 11, 2],) ,
('Computing match for mapping',) ,
([4, 7, 1, 6, 9, 8, 10, 11, 2],) ,
('saved value', 6.949163620451065) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 6, ',', 4, '-', 9) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 6) ,
('Swap gain:', -2.0) ,
([4, 7, 2, 9, 6, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 2, 9, 6, 8, 10, 11, 1],) ,
('saved value', 5.6440589888116985) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 6, ',', 5, '-', 8) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 6) ,
('Swap gain:', -2.0) ,
([4, 7, 2, 8, 9, 6, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 2, 8, 9, 6, 10, 11, 1],) ,
('saved value', 5.6440589888116985) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 6, ',', 6, '-', 10) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -3.9064050521855678) ,
([4, 7, 2, 10, 9, 8, 6, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 2, 10, 9, 8, 6, 11, 1],) ,
('saved value', 3.7376539366261308) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 6, ',', 7, '-', 11) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -3.0) ,
([4, 7, 2, 11, 9, 8, 10, 6, 1],) ,
('Computing match for mapping',) ,
([4, 7, 2, 11, 9, 8, 10, 6, 1],) ,
('saved value', 4.6440589888116985) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 6, ',', 8, '-', 1) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 1, ',', 8, '-', 6) ,
('Swap gain:', 0.0) ,
([4, 7, 2, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 7, 2, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.6440589888116985) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([4, 7, 2, 6, 8, 9, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 8, 9, 10, 11, 1],) ,
('saved value', 5.6440589888116985) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([4, 7, 2, 6, 10, 8, 9, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 10, 8, 9, 11, 1],) ,
('saved value', 3.7376539366261308) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([4, 7, 2, 6, 11, 8, 10, 9, 1],) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 11, 8, 10, 9, 1],) ,
('saved value', 4.6440589888116985) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 1) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 1, ',', 8, '-', 9) ,
('Swap gain:', -1.6948953683606331) ,
([4, 7, 2, 6, 1, 8, 10, 11, 9],) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 1, 8, 10, 11, 9],) ,
('saved value', 5.949163620451065) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2.9064050521855678) ,
([4, 7, 2, 6, 9, 10, 8, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 10, 8, 11, 1],) ,
('saved value', 4.737653936626131) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -3.0) ,
([4, 7, 2, 6, 9, 11, 10, 8, 1],) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 11, 10, 8, 1],) ,
('saved value', 4.6440589888116985) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', 1) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 5, '-', 1, ',', 8, '-', 8) ,
('Swap gain:', -1.6948953683606331) ,
([4, 7, 2, 6, 9, 1, 10, 11, 8],) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 1, 10, 11, 8],) ,
('saved value', 5.949163620451065) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -2.155025608036605) ,
([4, 7, 2, 6, 9, 8, 11, 10, 1],) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 8, 11, 10, 1],) ,
('saved value', 5.489033380775094) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', 1) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 6, '-', 1, ',', 8, '-', 10) ,
('Swap gain:', -3.6013004205462007) ,
([4, 7, 2, 6, 9, 8, 1, 11, 10],) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 8, 1, 11, 10],) ,
('saved value', 4.042758568265498) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 1) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 7, '-', 1, ',', 8, '-', 11) ,
('Swap gain:', -2.6948953683606334) ,
([4, 7, 2, 6, 9, 8, 10, 1, 11],) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 8, 10, 1, 11],) ,
('saved value', 4.949163620451065) ,
('Use swap gain',) ,
('Original mapping', [4, 7, 2, 6, 9, 8, 10, 11, 1]) ,
('Current mapping', [4, 2, 7, 6, 9, 8, 10, 11, 1]) ,
('Gain after the hill-climbing', 0.15066596295155044) ,
('Update triple match number to:', 7.794724951763249) ,
('Current mapping:', [4, 2, 7, 6, 9, 8, 10, 11, 1]) ,
('Remap node', 0, 'from ', 4, 'to', 0) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([0, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.455324000422902) ,
('Remap node', 0, 'from ', 4, 'to', 3) ,
('Move gain:', -0.3394009513403471) ,
('Computing match for mapping',) ,
([3, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.455324000422902) ,
('Remap node', 0, 'from ', 4, 'to', 5) ,
('Move gain:', 0.003166617071981792) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.797891568835231) ,
('Remap node', 1, 'from ', 2, 'to', 0) ,
('Move gain:', -0.854023579876701) ,
('Computing match for mapping',) ,
([4, 0, 7, 6, 9, 8, 10, 11, 1],) ,
('saved value', 6.940701371886548) ,
('Remap node', 1, 'from ', 2, 'to', 3) ,
('Move gain:', -0.854023579876701) ,
('Computing match for mapping',) ,
([4, 3, 7, 6, 9, 8, 10, 11, 1],) ,
('saved value', 6.940701371886548) ,
('Remap node', 1, 'from ', 2, 'to', 5) ,
('Move gain:', -0.05579265860361393) ,
('Computing match for mapping',) ,
([4, 5, 7, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.738932293159635) ,
('Remap node', 2, 'from ', 7, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 2, 0, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.794724951763249) ,
('Remap node', 2, 'from ', 7, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 2, 3, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.794724951763249) ,
('Remap node', 2, 'from ', 7, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 2, 5, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.794724951763249) ,
('Remap node', 3, 'from ', 6, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 7, 0, 9, 8, 10, 11, 1],) ,
('saved value', 6.794724951763249) ,
('Remap node', 3, 'from ', 6, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 7, 3, 9, 8, 10, 11, 1],) ,
('saved value', 6.794724951763249) ,
('Remap node', 3, 'from ', 6, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 7, 5, 9, 8, 10, 11, 1],) ,
('saved value', 6.794724951763249) ,
('Remap node', 4, 'from ', 9, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 0, 8, 10, 11, 1],) ,
('saved value', 6.794724951763249) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 3, 8, 10, 11, 1],) ,
('saved value', 6.794724951763249) ,
('Remap node', 4, 'from ', 9, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 5, 8, 10, 11, 1],) ,
('saved value', 6.794724951763249) ,
('Remap node', 5, 'from ', 8, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 0, 10, 11, 1],) ,
('saved value', 6.794724951763249) ,
('Remap node', 5, 'from ', 8, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 3, 10, 11, 1],) ,
('saved value', 6.794724951763249) ,
('Remap node', 5, 'from ', 8, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 5, 10, 11, 1],) ,
('saved value', 6.794724951763249) ,
('Remap node', 6, 'from ', 10, 'to', 0) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 8, 0, 11, 1],) ,
('saved value', 4.888319899577681) ,
('Remap node', 6, 'from ', 10, 'to', 3) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 8, 3, 11, 1],) ,
('saved value', 4.888319899577681) ,
('Remap node', 6, 'from ', 10, 'to', 5) ,
('Move gain:', -2.0310536388359344) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 8, 5, 11, 1],) ,
('saved value', 5.763671312927315) ,
('Remap node', 7, 'from ', 11, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 8, 10, 0, 1],) ,
('saved value', 5.794724951763249) ,
('Remap node', 7, 'from ', 11, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 8, 10, 3, 1],) ,
('saved value', 5.794724951763249) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 8, 10, 5, 1],) ,
('saved value', 6.794724951763249) ,
('Remap node', 8, 'from ', 1, 'to', 0) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 8, 10, 11, 0],) ,
('saved value', 7.099829583402616) ,
('Remap node', 8, 'from ', 1, 'to', 3) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 8, 10, 11, 3],) ,
('saved value', 7.099829583402616) ,
('Remap node', 8, 'from ', 1, 'to', 5) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 8, 10, 11, 5],) ,
('saved value', 7.099829583402616) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 2) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 4) ,
('Swap gain:', -0.06414138893169363) ,
([2, 4, 7, 6, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([2, 4, 7, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.730583562831556) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 7) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 4) ,
('Swap gain:', -0.046703179092189795) ,
([7, 2, 4, 6, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([7, 2, 4, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.748021772671059) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 6) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 6, ',', 3, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([6, 2, 7, 4, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([6, 2, 7, 4, 9, 8, 10, 11, 1],) ,
('saved value', 6.455324000422902) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 9) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([9, 2, 7, 6, 4, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([9, 2, 7, 6, 4, 8, 10, 11, 1],) ,
('saved value', 6.455324000422902) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 8) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 4) ,
('Swap gain:', -1.339400951340347) ,
([8, 2, 7, 6, 9, 4, 10, 11, 1],) ,
('Computing match for mapping',) ,
([8, 2, 7, 6, 9, 4, 10, 11, 1],) ,
('saved value', 6.455324000422902) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 10) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([10, 2, 7, 6, 9, 8, 4, 11, 1],) ,
('Computing match for mapping',) ,
([10, 2, 7, 6, 9, 8, 4, 11, 1],) ,
('saved value', 5.794724951763249) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 11) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 4) ,
('Swap gain:', -1.1208053521286891) ,
([11, 2, 7, 6, 9, 8, 10, 4, 1],) ,
('Computing match for mapping',) ,
([11, 2, 7, 6, 9, 8, 10, 4, 1],) ,
('saved value', 6.67391959963456) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 4, ',', 8, '-', 1) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 1, ',', 8, '-', 4) ,
('Swap gain:', -1.0342963197009802) ,
([1, 2, 7, 6, 9, 8, 10, 11, 4],) ,
('Computing match for mapping',) ,
([1, 2, 7, 6, 9, 8, 10, 11, 4],) ,
('saved value', 6.760428632062268) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 7) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 2) ,
('Swap gain:', -0.15066596295155055) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.6440589888116985) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 6) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 6, ',', 3, '-', 2) ,
('Swap gain:', -0.34515499678291484) ,
([4, 6, 7, 2, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 6, 7, 2, 9, 8, 10, 11, 1],) ,
('saved value', 7.449569954980334) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 9) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -1.854023579876701) ,
([4, 9, 7, 6, 2, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 9, 7, 6, 2, 8, 10, 11, 1],) ,
('saved value', 5.940701371886548) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 8) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1.854023579876701) ,
([4, 8, 7, 6, 9, 2, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 8, 7, 6, 9, 2, 10, 11, 1],) ,
('saved value', 5.940701371886548) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 10) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -2.257429137002567) ,
([4, 10, 7, 6, 9, 8, 2, 11, 1],) ,
('Computing match for mapping',) ,
([4, 10, 7, 6, 9, 8, 2, 11, 1],) ,
('saved value', 5.537295814760682) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 11) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -1.2145672250764723) ,
([4, 11, 7, 6, 9, 8, 10, 2, 1],) ,
('Computing match for mapping',) ,
([4, 11, 7, 6, 9, 8, 10, 2, 1],) ,
('saved value', 6.580157726686776) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 2, ',', 8, '-', 1) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 1, ',', 8, '-', 2) ,
('Swap gain:', -1.548918948237334) ,
([4, 1, 7, 6, 9, 8, 10, 11, 2],) ,
('Computing match for mapping',) ,
([4, 1, 7, 6, 9, 8, 10, 11, 2],) ,
('saved value', 6.2458060035259155) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 6) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 6, ',', 3, '-', 7) ,
('Swap gain:', -1.0) ,
([4, 2, 6, 7, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 2, 6, 7, 9, 8, 10, 11, 1],) ,
('saved value', 6.794724951763249) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 9) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 7) ,
('Swap gain:', 0.0) ,
([4, 2, 9, 6, 7, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 2, 9, 6, 7, 8, 10, 11, 1],) ,
('saved value', 7.794724951763249) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 8) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 7) ,
('Swap gain:', -1.0) ,
([4, 2, 8, 6, 9, 7, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 2, 8, 6, 9, 7, 10, 11, 1],) ,
('saved value', 6.794724951763249) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 10) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 7) ,
('Swap gain:', -2.2300460327385623) ,
([4, 2, 10, 6, 9, 8, 7, 11, 1],) ,
('Computing match for mapping',) ,
([4, 2, 10, 6, 9, 8, 7, 11, 1],) ,
('saved value', 5.564678919024686) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 11) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 7) ,
('Swap gain:', -1.301360552050872) ,
([4, 2, 11, 6, 9, 8, 10, 7, 1],) ,
('Computing match for mapping',) ,
([4, 2, 11, 6, 9, 8, 10, 7, 1],) ,
('saved value', 6.493364399712377) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 7, ',', 8, '-', 1) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 1, ',', 8, '-', 7) ,
('Swap gain:', -0.6948953683606331) ,
([4, 2, 1, 6, 9, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([4, 2, 1, 6, 9, 8, 10, 11, 7],) ,
('saved value', 7.099829583402616) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 6, ',', 4, '-', 9) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 6) ,
('Swap gain:', -2.0) ,
([4, 2, 7, 9, 6, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 2, 7, 9, 6, 8, 10, 11, 1],) ,
('saved value', 5.794724951763249) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 6, ',', 5, '-', 8) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 6) ,
('Swap gain:', -2.0) ,
([4, 2, 7, 8, 9, 6, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 2, 7, 8, 9, 6, 10, 11, 1],) ,
('saved value', 5.794724951763249) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 6, ',', 6, '-', 10) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -3.9064050521855678) ,
([4, 2, 7, 10, 9, 8, 6, 11, 1],) ,
('Computing match for mapping',) ,
([4, 2, 7, 10, 9, 8, 6, 11, 1],) ,
('saved value', 3.8883198995776813) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 6, ',', 7, '-', 11) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -3.0) ,
([4, 2, 7, 11, 9, 8, 10, 6, 1],) ,
('Computing match for mapping',) ,
([4, 2, 7, 11, 9, 8, 10, 6, 1],) ,
('saved value', 4.794724951763249) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 6, ',', 8, '-', 1) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 1, ',', 8, '-', 6) ,
('Swap gain:', 0.0) ,
([4, 2, 7, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([4, 2, 7, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.794724951763249) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([4, 2, 7, 6, 8, 9, 10, 11, 1],) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 8, 9, 10, 11, 1],) ,
('saved value', 5.794724951763249) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([4, 2, 7, 6, 10, 8, 9, 11, 1],) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 10, 8, 9, 11, 1],) ,
('saved value', 3.8883198995776813) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([4, 2, 7, 6, 11, 8, 10, 9, 1],) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 11, 8, 10, 9, 1],) ,
('saved value', 4.794724951763249) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 1) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 1, ',', 8, '-', 9) ,
('Swap gain:', -1.6948953683606331) ,
([4, 2, 7, 6, 1, 8, 10, 11, 9],) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 1, 8, 10, 11, 9],) ,
('saved value', 6.099829583402616) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2.9064050521855678) ,
([4, 2, 7, 6, 9, 10, 8, 11, 1],) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 10, 8, 11, 1],) ,
('saved value', 4.888319899577681) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -3.0) ,
([4, 2, 7, 6, 9, 11, 10, 8, 1],) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 11, 10, 8, 1],) ,
('saved value', 4.794724951763249) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', 1) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 5, '-', 1, ',', 8, '-', 8) ,
('Swap gain:', -1.6948953683606331) ,
([4, 2, 7, 6, 9, 1, 10, 11, 8],) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 1, 10, 11, 8],) ,
('saved value', 6.099829583402616) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -2.155025608036605) ,
([4, 2, 7, 6, 9, 8, 11, 10, 1],) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 8, 11, 10, 1],) ,
('saved value', 5.639699343726644) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', 1) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 6, '-', 1, ',', 8, '-', 10) ,
('Swap gain:', -3.6013004205462007) ,
([4, 2, 7, 6, 9, 8, 1, 11, 10],) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 8, 1, 11, 10],) ,
('saved value', 4.193424531217048) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 1) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 7, '-', 1, ',', 8, '-', 11) ,
('Swap gain:', -2.6948953683606334) ,
([4, 2, 7, 6, 9, 8, 10, 1, 11],) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 8, 10, 1, 11],) ,
('saved value', 5.099829583402616) ,
('Use move gain',) ,
('Original mapping', [4, 2, 7, 6, 9, 8, 10, 11, 1]) ,
('Current mapping', [5, 2, 7, 6, 9, 8, 10, 11, 1]) ,
('Gain after the hill-climbing', 0.003166617071981792) ,
('Update triple match number to:', 7.797891568835231) ,
('Current mapping:', [5, 2, 7, 6, 9, 8, 10, 11, 1]) ,
('Remap node', 0, 'from ', 5, 'to', 0) ,
('Move gain:', -0.3425675684123295) ,
('Computing match for mapping',) ,
([0, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.455324000422902) ,
('Remap node', 0, 'from ', 5, 'to', 3) ,
('Move gain:', -0.3425675684123295) ,
('Computing match for mapping',) ,
([3, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.455324000422902) ,
('Remap node', 0, 'from ', 5, 'to', 4) ,
('Move gain:', -0.0031666170719821807) ,
('Computing match for mapping',) ,
([4, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.794724951763249) ,
('Remap node', 1, 'from ', 2, 'to', 0) ,
('Move gain:', -0.854023579876701) ,
('Computing match for mapping',) ,
([5, 0, 7, 6, 9, 8, 10, 11, 1],) ,
('saved value', 6.94386798895853) ,
('Remap node', 1, 'from ', 2, 'to', 3) ,
('Move gain:', -0.854023579876701) ,
('Computing match for mapping',) ,
([5, 3, 7, 6, 9, 8, 10, 11, 1],) ,
('saved value', 6.94386798895853) ,
('Remap node', 1, 'from ', 2, 'to', 4) ,
('Move gain:', -0.10506616931811052) ,
('Computing match for mapping',) ,
([5, 4, 7, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.692825399517121) ,
('Remap node', 2, 'from ', 7, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 2, 0, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.797891568835231) ,
('Remap node', 2, 'from ', 7, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 2, 3, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.797891568835231) ,
('Remap node', 2, 'from ', 7, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 2, 4, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.797891568835231) ,
('Remap node', 3, 'from ', 6, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 7, 0, 9, 8, 10, 11, 1],) ,
('saved value', 6.797891568835231) ,
('Remap node', 3, 'from ', 6, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 7, 3, 9, 8, 10, 11, 1],) ,
('saved value', 6.797891568835231) ,
('Remap node', 3, 'from ', 6, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 7, 4, 9, 8, 10, 11, 1],) ,
('saved value', 6.797891568835231) ,
('Remap node', 4, 'from ', 9, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 0, 8, 10, 11, 1],) ,
('saved value', 6.797891568835231) ,
('Remap node', 4, 'from ', 9, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 3, 8, 10, 11, 1],) ,
('saved value', 6.797891568835231) ,
('Remap node', 4, 'from ', 9, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 4, 8, 10, 11, 1],) ,
('saved value', 6.797891568835231) ,
('Remap node', 5, 'from ', 8, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 0, 10, 11, 1],) ,
('saved value', 6.797891568835231) ,
('Remap node', 5, 'from ', 8, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 3, 10, 11, 1],) ,
('saved value', 6.797891568835231) ,
('Remap node', 5, 'from ', 8, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 4, 10, 11, 1],) ,
('saved value', 6.797891568835231) ,
('Remap node', 6, 'from ', 10, 'to', 0) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 8, 0, 11, 1],) ,
('saved value', 4.891486516649664) ,
('Remap node', 6, 'from ', 10, 'to', 3) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 8, 3, 11, 1],) ,
('saved value', 4.891486516649664) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 8, 4, 11, 1],) ,
('saved value', 5.797891568835231) ,
('Remap node', 7, 'from ', 11, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 8, 10, 0, 1],) ,
('saved value', 5.797891568835231) ,
('Remap node', 7, 'from ', 11, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 8, 10, 3, 1],) ,
('saved value', 5.797891568835231) ,
('Remap node', 7, 'from ', 11, 'to', 4) ,
('Move gain:', -1.1239719692006709) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 8, 10, 4, 1],) ,
('saved value', 6.67391959963456) ,
('Remap node', 8, 'from ', 1, 'to', 0) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 8, 10, 11, 0],) ,
('saved value', 7.102996200474598) ,
('Remap node', 8, 'from ', 1, 'to', 3) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 8, 10, 11, 3],) ,
('saved value', 7.102996200474598) ,
('Remap node', 8, 'from ', 1, 'to', 4) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 8, 10, 11, 4],) ,
('saved value', 7.102996200474598) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 5, ',', 1, '-', 2) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 5) ,
('Swap gain:', -0.018034495289178776) ,
([2, 5, 7, 6, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([2, 5, 7, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.779857073546053) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 5, ',', 2, '-', 7) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 5) ,
('Swap gain:', -0.04986979616417159) ,
([7, 2, 5, 6, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([7, 2, 5, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.74802177267106) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 5, ',', 3, '-', 6) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 6, ',', 3, '-', 5) ,
('Swap gain:', -1.3425675684123288) ,
([6, 2, 7, 5, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([6, 2, 7, 5, 9, 8, 10, 11, 1],) ,
('saved value', 6.455324000422903) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 5, ',', 4, '-', 9) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 5) ,
('Swap gain:', -1.3425675684123288) ,
([9, 2, 7, 6, 5, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([9, 2, 7, 6, 5, 8, 10, 11, 1],) ,
('saved value', 6.455324000422903) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 5, ',', 5, '-', 8) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 5) ,
('Swap gain:', -1.3425675684123288) ,
([8, 2, 7, 6, 9, 5, 10, 11, 1],) ,
('Computing match for mapping',) ,
([8, 2, 7, 6, 9, 5, 10, 11, 1],) ,
('saved value', 6.455324000422903) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 5, ',', 6, '-', 10) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 5) ,
('Swap gain:', -2.034220255907916) ,
([10, 2, 7, 6, 9, 8, 5, 11, 1],) ,
('Computing match for mapping',) ,
([10, 2, 7, 6, 9, 8, 5, 11, 1],) ,
('saved value', 5.763671312927315) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 5, ',', 7, '-', 11) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 5) ,
('Swap gain:', -1.0) ,
([11, 2, 7, 6, 9, 8, 10, 5, 1],) ,
('Computing match for mapping',) ,
([11, 2, 7, 6, 9, 8, 10, 5, 1],) ,
('saved value', 6.797891568835231) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 5, ',', 8, '-', 1) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 0, '-', 1, ',', 8, '-', 5) ,
('Swap gain:', -1.037462936772962) ,
([1, 2, 7, 6, 9, 8, 10, 11, 5],) ,
('Computing match for mapping',) ,
([1, 2, 7, 6, 9, 8, 10, 11, 5],) ,
('saved value', 6.760428632062269) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 7) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 2) ,
('Swap gain:', -0.15066596295155055) ,
([5, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([5, 7, 2, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.647225605883681) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 6) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 6, ',', 3, '-', 2) ,
('Swap gain:', -0.34515499678291495) ,
([5, 6, 7, 2, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([5, 6, 7, 2, 9, 8, 10, 11, 1],) ,
('saved value', 7.452736572052316) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 9) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -1.854023579876701) ,
([5, 9, 7, 6, 2, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([5, 9, 7, 6, 2, 8, 10, 11, 1],) ,
('saved value', 5.94386798895853) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 8) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1.854023579876701) ,
([5, 8, 7, 6, 9, 2, 10, 11, 1],) ,
('Computing match for mapping',) ,
([5, 8, 7, 6, 9, 2, 10, 11, 1],) ,
('saved value', 5.94386798895853) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 10) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -2.257429137002567) ,
([5, 10, 7, 6, 9, 8, 2, 11, 1],) ,
('Computing match for mapping',) ,
([5, 10, 7, 6, 9, 8, 2, 11, 1],) ,
('saved value', 5.540462431832664) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 11) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -1.2145672250764723) ,
([5, 11, 7, 6, 9, 8, 10, 2, 1],) ,
('Computing match for mapping',) ,
([5, 11, 7, 6, 9, 8, 10, 2, 1],) ,
('saved value', 6.583324343758759) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 2, ',', 8, '-', 1) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 1, '-', 1, ',', 8, '-', 2) ,
('Swap gain:', -1.548918948237334) ,
([5, 1, 7, 6, 9, 8, 10, 11, 2],) ,
('Computing match for mapping',) ,
([5, 1, 7, 6, 9, 8, 10, 11, 2],) ,
('saved value', 6.248972620597897) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 6) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 6, ',', 3, '-', 7) ,
('Swap gain:', -1.0) ,
([5, 2, 6, 7, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([5, 2, 6, 7, 9, 8, 10, 11, 1],) ,
('saved value', 6.797891568835231) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 9) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 7) ,
('Swap gain:', 0.0) ,
([5, 2, 9, 6, 7, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([5, 2, 9, 6, 7, 8, 10, 11, 1],) ,
('saved value', 7.797891568835231) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 8) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 7) ,
('Swap gain:', -1.0) ,
([5, 2, 8, 6, 9, 7, 10, 11, 1],) ,
('Computing match for mapping',) ,
([5, 2, 8, 6, 9, 7, 10, 11, 1],) ,
('saved value', 6.797891568835231) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 10) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 7) ,
('Swap gain:', -2.2300460327385623) ,
([5, 2, 10, 6, 9, 8, 7, 11, 1],) ,
('Computing match for mapping',) ,
([5, 2, 10, 6, 9, 8, 7, 11, 1],) ,
('saved value', 5.567845536096669) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 11) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 7) ,
('Swap gain:', -1.301360552050872) ,
([5, 2, 11, 6, 9, 8, 10, 7, 1],) ,
('Computing match for mapping',) ,
([5, 2, 11, 6, 9, 8, 10, 7, 1],) ,
('saved value', 6.49653101678436) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 7, ',', 8, '-', 1) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 2, '-', 1, ',', 8, '-', 7) ,
('Swap gain:', -0.6948953683606331) ,
([5, 2, 1, 6, 9, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([5, 2, 1, 6, 9, 8, 10, 11, 7],) ,
('saved value', 7.102996200474598) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 6, ',', 4, '-', 9) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 6) ,
('Swap gain:', -2.0) ,
([5, 2, 7, 9, 6, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([5, 2, 7, 9, 6, 8, 10, 11, 1],) ,
('saved value', 5.797891568835231) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 6, ',', 5, '-', 8) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 6) ,
('Swap gain:', -2.0) ,
([5, 2, 7, 8, 9, 6, 10, 11, 1],) ,
('Computing match for mapping',) ,
([5, 2, 7, 8, 9, 6, 10, 11, 1],) ,
('saved value', 5.797891568835231) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 6, ',', 6, '-', 10) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 6) ,
('Swap gain:', -3.9064050521855678) ,
([5, 2, 7, 10, 9, 8, 6, 11, 1],) ,
('Computing match for mapping',) ,
([5, 2, 7, 10, 9, 8, 6, 11, 1],) ,
('saved value', 3.8914865166496635) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 6, ',', 7, '-', 11) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 6) ,
('Swap gain:', -3.0) ,
([5, 2, 7, 11, 9, 8, 10, 6, 1],) ,
('Computing match for mapping',) ,
([5, 2, 7, 11, 9, 8, 10, 6, 1],) ,
('saved value', 4.797891568835231) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 6, ',', 8, '-', 1) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 3, '-', 1, ',', 8, '-', 6) ,
('Swap gain:', 0.0) ,
([5, 2, 7, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([5, 2, 7, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.797891568835231) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([5, 2, 7, 6, 8, 9, 10, 11, 1],) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 8, 9, 10, 11, 1],) ,
('saved value', 5.797891568835231) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([5, 2, 7, 6, 10, 8, 9, 11, 1],) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 10, 8, 9, 11, 1],) ,
('saved value', 3.8914865166496635) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([5, 2, 7, 6, 11, 8, 10, 9, 1],) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 11, 8, 10, 9, 1],) ,
('saved value', 4.797891568835231) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 1) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 4, '-', 1, ',', 8, '-', 9) ,
('Swap gain:', -1.6948953683606331) ,
([5, 2, 7, 6, 1, 8, 10, 11, 9],) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 1, 8, 10, 11, 9],) ,
('saved value', 6.102996200474598) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2.9064050521855678) ,
([5, 2, 7, 6, 9, 10, 8, 11, 1],) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 10, 8, 11, 1],) ,
('saved value', 4.891486516649664) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -3.0) ,
([5, 2, 7, 6, 9, 11, 10, 8, 1],) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 11, 10, 8, 1],) ,
('saved value', 4.797891568835231) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', 1) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 5, '-', 1, ',', 8, '-', 8) ,
('Swap gain:', -1.6948953683606331) ,
([5, 2, 7, 6, 9, 1, 10, 11, 8],) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 1, 10, 11, 8],) ,
('saved value', 6.102996200474598) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -2.155025608036605) ,
([5, 2, 7, 6, 9, 8, 11, 10, 1],) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 8, 11, 10, 1],) ,
('saved value', 5.642865960798627) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', 1) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 6, '-', 1, ',', 8, '-', 10) ,
('Swap gain:', -3.6013004205462007) ,
([5, 2, 7, 6, 9, 8, 1, 11, 10],) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 8, 1, 11, 10],) ,
('saved value', 4.196591148289031) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 1) ,
([5, 2, 7, 6, 9, 8, 10, 11, 1],) ,
('After swapping:', 7, '-', 1, ',', 8, '-', 11) ,
('Swap gain:', -2.6948953683606334) ,
([5, 2, 7, 6, 9, 8, 10, 1, 11],) ,
('Computing match for mapping',) ,
([5, 2, 7, 6, 9, 8, 10, 1, 11],) ,
('saved value', 5.102996200474598) ,
('no move/swap gain found',) ,
('Original mapping', [5, 2, 7, 6, 9, 8, 10, 11, 1]) ,
('Current mapping', [5, 2, 7, 6, 9, 8, 10, 11, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0.854023579876701) ,
('node_pair', (2, 11)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 1.0) ,
('node_pair', (4, 9)) ,
('instance/attribute match', 1.0) ,
('node_pair', (5, 8)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 5)) ,
('instance/attribute match', 0.8753514133496337) ,
('node_pair', (7, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (8, 7)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 3.729374993226335) ,
('Node mapping at start', [0, 2, 11, 1, 9, 8, 5, 3, 7]) ,
('Triple match number at start:', 3.729374993226335) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', 0.3394009513403471) ,
('Computing match for mapping',) ,
([4, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('saved value', 4.068775944566682) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('saved value', 3.729374993226335) ,
('Remap node', 0, 'from ', 0, 'to', 10) ,
('Move gain:', 0.3394009513403471) ,
('Computing match for mapping',) ,
([10, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('saved value', 4.068775944566682) ,
('Remap node', 1, 'from ', 2, 'to', 4) ,
('Move gain:', -0.10506616931811052) ,
('Computing match for mapping',) ,
([0, 4, 11, 1, 9, 8, 5, 3, 7],) ,
('saved value', 3.6243088239082244) ,
('Remap node', 1, 'from ', 2, 'to', 6) ,
('Move gain:', 0.14597642012329903) ,
('Computing match for mapping',) ,
([0, 6, 11, 1, 9, 8, 5, 3, 7],) ,
('saved value', 3.875351413349634) ,
('Remap node', 1, 'from ', 2, 'to', 10) ,
('Move gain:', -0.10506616931811052) ,
('Computing match for mapping',) ,
([0, 10, 11, 1, 9, 8, 5, 3, 7],) ,
('saved value', 3.6243088239082244) ,
('Remap node', 2, 'from ', 11, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 9, 8, 5, 3, 7],) ,
('saved value', 3.729374993226335) ,
('Remap node', 2, 'from ', 11, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 6, 1, 9, 8, 5, 3, 7],) ,
('saved value', 3.729374993226335) ,
('Remap node', 2, 'from ', 11, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 10, 1, 9, 8, 5, 3, 7],) ,
('saved value', 3.729374993226335) ,
('Remap node', 3, 'from ', 1, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 4, 9, 8, 5, 3, 7],) ,
('saved value', 2.729374993226335) ,
('Remap node', 3, 'from ', 1, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 6, 9, 8, 5, 3, 7],) ,
('saved value', 3.729374993226335) ,
('Remap node', 3, 'from ', 1, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 10, 9, 8, 5, 3, 7],) ,
('saved value', 2.729374993226335) ,
('Remap node', 4, 'from ', 9, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 4, 8, 5, 3, 7],) ,
('saved value', 2.729374993226335) ,
('Remap node', 4, 'from ', 9, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 6, 8, 5, 3, 7],) ,
('saved value', 2.729374993226335) ,
('Remap node', 4, 'from ', 9, 'to', 10) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 10, 8, 5, 3, 7],) ,
('saved value', 2.729374993226335) ,
('Remap node', 5, 'from ', 8, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 4, 5, 3, 7],) ,
('saved value', 3.729374993226335) ,
('Remap node', 5, 'from ', 8, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 6, 5, 3, 7],) ,
('saved value', 3.729374993226335) ,
('Remap node', 5, 'from ', 8, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 10, 5, 3, 7],) ,
('saved value', 3.729374993226335) ,
('Remap node', 6, 'from ', 5, 'to', 4) ,
('Move gain:', 0.03105363883593415) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 4, 3, 7],) ,
('saved value', 3.7604286320622693) ,
('Remap node', 6, 'from ', 5, 'to', 6) ,
('Move gain:', -0.8753514133496337) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 6, 3, 7],) ,
('saved value', 2.854023579876701) ,
('Remap node', 6, 'from ', 5, 'to', 10) ,
('Move gain:', 1.031053638835934) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('saved value', 4.760428632062268) ,
('Remap node', 7, 'from ', 3, 'to', 4) ,
('Move gain:', 0.8760280307993291) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 5, 4, 7],) ,
('saved value', 4.605403024025664) ,
('Remap node', 7, 'from ', 3, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 5, 6, 7],) ,
('saved value', 3.729374993226335) ,
('Remap node', 7, 'from ', 3, 'to', 10) ,
('Move gain:', 0.8760280307993291) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 5, 10, 7],) ,
('saved value', 4.605403024025664) ,
('Remap node', 8, 'from ', 7, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 5, 3, 4],) ,
('saved value', 3.729374993226335) ,
('Remap node', 8, 'from ', 7, 'to', 6) ,
('Move gain:', 0.6948953683606331) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 5, 3, 6],) ,
('saved value', 4.424270361586968) ,
('Remap node', 8, 'from ', 7, 'to', 10) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 5, 3, 10],) ,
('saved value', 3.729374993226335) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -0.47369784814993704) ,
([2, 0, 11, 1, 9, 8, 5, 3, 7],) ,
('Computing match for mapping',) ,
([2, 0, 11, 1, 9, 8, 5, 3, 7],) ,
('saved value', 3.255677145076398) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 11) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 0, '-', 11, ',', 2, '-', 0) ,
('Swap gain:', 0.3425675684123289) ,
([11, 2, 0, 1, 9, 8, 5, 3, 7],) ,
('Computing match for mapping',) ,
([11, 2, 0, 1, 9, 8, 5, 3, 7],) ,
('saved value', 4.0719425616386635) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 2, 11, 0, 9, 8, 5, 3, 7],) ,
('Computing match for mapping',) ,
([1, 2, 11, 0, 9, 8, 5, 3, 7],) ,
('saved value', 2.729374993226335) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 9) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([9, 2, 11, 1, 0, 8, 5, 3, 7],) ,
('Computing match for mapping',) ,
([9, 2, 11, 1, 0, 8, 5, 3, 7],) ,
('saved value', 2.729374993226335) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([8, 2, 11, 1, 9, 0, 5, 3, 7],) ,
('Computing match for mapping',) ,
([8, 2, 11, 1, 9, 0, 5, 3, 7],) ,
('saved value', 3.729374993226335) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 5) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 0, '-', 5, ',', 6, '-', 0) ,
('Swap gain:', -0.5327838449373048) ,
([5, 2, 11, 1, 9, 8, 0, 3, 7],) ,
('Computing match for mapping',) ,
([5, 2, 11, 1, 9, 8, 0, 3, 7],) ,
('saved value', 3.19659114828903) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 2, 11, 1, 9, 8, 5, 0, 7],) ,
('Computing match for mapping',) ,
([3, 2, 11, 1, 9, 8, 5, 0, 7],) ,
('saved value', 3.729374993226335) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 0, '-', 7, ',', 8, '-', 0) ,
('Swap gain:', 0.2926977722481573) ,
([7, 2, 11, 1, 9, 8, 5, 3, 0],) ,
('Computing match for mapping',) ,
([7, 2, 11, 1, 9, 8, 5, 3, 0],) ,
('saved value', 4.022072765474492) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 11) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 1, '-', 11, ',', 2, '-', 2) ,
('Swap gain:', -0.05579265860361393) ,
([0, 11, 2, 1, 9, 8, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 11, 2, 1, 9, 8, 5, 3, 7],) ,
('saved value', 3.673582334622721) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 1) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -0.34515499678291495) ,
([0, 1, 11, 2, 9, 8, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 11, 2, 9, 8, 5, 3, 7],) ,
('saved value', 3.38421999644342) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 9) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -0.854023579876701) ,
([0, 9, 11, 1, 2, 8, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 9, 11, 1, 2, 8, 5, 3, 7],) ,
('saved value', 2.875351413349634) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 8) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -0.854023579876701) ,
([0, 8, 11, 1, 9, 2, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 8, 11, 1, 9, 2, 5, 3, 7],) ,
('saved value', 2.875351413349634) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 5) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 1, '-', 5, ',', 6, '-', 2) ,
('Swap gain:', -0.17710198745213646) ,
([0, 5, 11, 1, 9, 8, 2, 3, 7],) ,
('Computing match for mapping',) ,
([0, 5, 11, 1, 9, 8, 2, 3, 7],) ,
('saved value', 3.5522730057741985) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 3) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -0.012798146349559447) ,
([0, 3, 11, 1, 9, 8, 5, 2, 7],) ,
('Computing match for mapping',) ,
([0, 3, 11, 1, 9, 8, 5, 2, 7],) ,
('saved value', 3.7165768468767757) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 2, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 1, '-', 7, ',', 8, '-', 2) ,
('Swap gain:', -0.15066596295155044) ,
([0, 7, 11, 1, 9, 8, 5, 3, 2],) ,
('Computing match for mapping',) ,
([0, 7, 11, 1, 9, 8, 5, 3, 2],) ,
('saved value', 3.5787090302747844) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 11, ',', 3, '-', 1) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 11) ,
('Swap gain:', -1.0) ,
([0, 2, 1, 11, 9, 8, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 1, 11, 9, 8, 5, 3, 7],) ,
('saved value', 2.729374993226335) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 11, ',', 4, '-', 9) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 11) ,
('Swap gain:', -1.0) ,
([0, 2, 9, 1, 11, 8, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 9, 1, 11, 8, 5, 3, 7],) ,
('saved value', 2.729374993226335) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 11, ',', 5, '-', 8) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 11) ,
('Swap gain:', 0.0) ,
([0, 2, 8, 1, 9, 11, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 8, 1, 9, 11, 5, 3, 7],) ,
('saved value', 3.729374993226335) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 11, ',', 6, '-', 5) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 2, '-', 5, ',', 6, '-', 11) ,
('Swap gain:', 0.0) ,
([0, 2, 5, 1, 9, 8, 11, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 5, 1, 9, 8, 11, 3, 7],) ,
('saved value', 3.729374993226335) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 11, ',', 7, '-', 3) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 11) ,
('Swap gain:', 1.0) ,
([0, 2, 3, 1, 9, 8, 5, 11, 7],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 5, 11, 7],) ,
('saved value', 4.729374993226335) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 11, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 2, '-', 7, ',', 8, '-', 11) ,
('Swap gain:', 0.0) ,
([0, 2, 7, 1, 9, 8, 5, 3, 11],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 9, 8, 5, 3, 11],) ,
('saved value', 3.729374993226335) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 11, 9, 1, 8, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 9, 1, 8, 5, 3, 7],) ,
('saved value', 1.729374993226335) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 8) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 2, 11, 8, 9, 1, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 8, 9, 1, 5, 3, 7],) ,
('saved value', 2.729374993226335) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 5) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 3, '-', 5, ',', 6, '-', 1) ,
('Swap gain:', -1.8753514133496338) ,
([0, 2, 11, 5, 9, 8, 1, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 5, 9, 8, 1, 3, 7],) ,
('saved value', 1.854023579876701) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 3) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 2, 11, 3, 9, 8, 5, 1, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 3, 9, 8, 5, 1, 7],) ,
('saved value', 2.729374993226335) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 3, '-', 7, ',', 8, '-', 1) ,
('Swap gain:', -0.30510463163936685) ,
([0, 2, 11, 7, 9, 8, 5, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, 11, 7, 9, 8, 5, 3, 1],) ,
('saved value', 3.4242703615869683) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -1.0) ,
([0, 2, 11, 1, 8, 9, 5, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 8, 9, 5, 3, 7],) ,
('saved value', 2.729374993226335) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 5) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 4, '-', 5, ',', 6, '-', 9) ,
('Swap gain:', -1.8753514133496338) ,
([0, 2, 11, 1, 5, 8, 9, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 5, 8, 9, 3, 7],) ,
('saved value', 1.854023579876701) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 3) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 9) ,
('Swap gain:', -1.0) ,
([0, 2, 11, 1, 3, 8, 5, 9, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 3, 8, 5, 9, 7],) ,
('saved value', 2.729374993226335) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 4, '-', 7, ',', 8, '-', 9) ,
('Swap gain:', -1.0) ,
([0, 2, 11, 1, 7, 8, 5, 3, 9],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 7, 8, 5, 3, 9],) ,
('saved value', 2.729374993226335) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 5) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 5, '-', 5, ',', 6, '-', 8) ,
('Swap gain:', -0.8753514133496337) ,
([0, 2, 11, 1, 9, 5, 8, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 5, 8, 3, 7],) ,
('saved value', 2.854023579876701) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 3) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 8) ,
('Swap gain:', 0.0) ,
([0, 2, 11, 1, 9, 3, 5, 8, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 3, 5, 8, 7],) ,
('saved value', 3.729374993226335) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 5, '-', 7, ',', 8, '-', 8) ,
('Swap gain:', 0.0) ,
([0, 2, 11, 1, 9, 7, 5, 3, 8],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 7, 5, 3, 8],) ,
('saved value', 3.729374993226335) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 5, ',', 7, '-', 3) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', 0.12464858665036627) ,
([0, 2, 11, 1, 9, 8, 3, 5, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 3, 5, 7],) ,
('saved value', 3.854023579876701) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 5, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 6, '-', 7, ',', 8, '-', 5) ,
('Swap gain:', -0.19899239390262824) ,
([0, 2, 11, 1, 9, 8, 7, 3, 5],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 7, 3, 5],) ,
('saved value', 3.5303825993237066) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 3, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('After swapping:', 7, '-', 7, ',', 8, '-', 3) ,
('Swap gain:', 0.698639447949128) ,
([0, 2, 11, 1, 9, 8, 5, 7, 3],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 5, 7, 3],) ,
('saved value', 4.428014441175463) ,
('Use move gain',) ,
('Original mapping', [0, 2, 11, 1, 9, 8, 5, 3, 7]) ,
('Current mapping', [0, 2, 11, 1, 9, 8, 10, 3, 7]) ,
('Gain after the hill-climbing', 1.031053638835934) ,
('Update triple match number to:', 4.760428632062268) ,
('Current mapping:', [0, 2, 11, 1, 9, 8, 10, 3, 7]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', 0.3394009513403471) ,
('Computing match for mapping',) ,
([4, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('saved value', 5.099829583402616) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', 0.3425675684123289) ,
('Computing match for mapping',) ,
([5, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('saved value', 5.102996200474597) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('saved value', 4.760428632062268) ,
('Remap node', 1, 'from ', 2, 'to', 4) ,
('Move gain:', -0.10506616931811052) ,
('Computing match for mapping',) ,
([0, 4, 11, 1, 9, 8, 10, 3, 7],) ,
('saved value', 4.655362462744158) ,
('Remap node', 1, 'from ', 2, 'to', 5) ,
('Move gain:', -0.05579265860361393) ,
('Computing match for mapping',) ,
([0, 5, 11, 1, 9, 8, 10, 3, 7],) ,
('saved value', 4.704635973458655) ,
('Remap node', 1, 'from ', 2, 'to', 6) ,
('Move gain:', 0.14597642012329903) ,
('Computing match for mapping',) ,
([0, 6, 11, 1, 9, 8, 10, 3, 7],) ,
('saved value', 4.906405052185567) ,
('Remap node', 2, 'from ', 11, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 9, 8, 10, 3, 7],) ,
('saved value', 4.760428632062268) ,
('Remap node', 2, 'from ', 11, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 5, 1, 9, 8, 10, 3, 7],) ,
('saved value', 4.760428632062268) ,
('Remap node', 2, 'from ', 11, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 6, 1, 9, 8, 10, 3, 7],) ,
('saved value', 4.760428632062268) ,
('Remap node', 3, 'from ', 1, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 4, 9, 8, 10, 3, 7],) ,
('saved value', 3.7604286320622684) ,
('Remap node', 3, 'from ', 1, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 5, 9, 8, 10, 3, 7],) ,
('saved value', 3.7604286320622684) ,
('Remap node', 3, 'from ', 1, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 6, 9, 8, 10, 3, 7],) ,
('saved value', 4.760428632062268) ,
('Remap node', 4, 'from ', 9, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 4, 8, 10, 3, 7],) ,
('saved value', 3.7604286320622684) ,
('Remap node', 4, 'from ', 9, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 5, 8, 10, 3, 7],) ,
('saved value', 3.7604286320622684) ,
('Remap node', 4, 'from ', 9, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 6, 8, 10, 3, 7],) ,
('saved value', 3.7604286320622684) ,
('Remap node', 5, 'from ', 8, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 4, 10, 3, 7],) ,
('saved value', 3.7604286320622684) ,
('Remap node', 5, 'from ', 8, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 5, 10, 3, 7],) ,
('saved value', 3.7604286320622684) ,
('Remap node', 5, 'from ', 8, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 6, 10, 3, 7],) ,
('saved value', 3.7604286320622684) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', -0.9999999999999991) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 4, 3, 7],) ,
('saved value', 3.7604286320622693) ,
('Remap node', 6, 'from ', 10, 'to', 5) ,
('Move gain:', -1.0310536388359335) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 5, 3, 7],) ,
('saved value', 3.729374993226335) ,
('Remap node', 6, 'from ', 10, 'to', 6) ,
('Move gain:', -1.9064050521855673) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 6, 3, 7],) ,
('saved value', 2.854023579876701) ,
('Remap node', 7, 'from ', 3, 'to', 4) ,
('Move gain:', 0.8760280307993291) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 10, 4, 7],) ,
('saved value', 5.6364566628615975) ,
('Remap node', 7, 'from ', 3, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 10, 5, 7],) ,
('saved value', 5.760428632062268) ,
('Remap node', 7, 'from ', 3, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 10, 6, 7],) ,
('saved value', 4.760428632062268) ,
('Remap node', 8, 'from ', 7, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 10, 3, 4],) ,
('saved value', 4.760428632062268) ,
('Remap node', 8, 'from ', 7, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 10, 3, 5],) ,
('saved value', 4.760428632062268) ,
('Remap node', 8, 'from ', 7, 'to', 6) ,
('Move gain:', 0.6948953683606331) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 10, 3, 6],) ,
('saved value', 5.455324000422902) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -0.47369784814993704) ,
([2, 0, 11, 1, 9, 8, 10, 3, 7],) ,
('Computing match for mapping',) ,
([2, 0, 11, 1, 9, 8, 10, 3, 7],) ,
('saved value', 4.286730783912331) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 11) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 0, '-', 11, ',', 2, '-', 0) ,
('Swap gain:', 0.3425675684123289) ,
([11, 2, 0, 1, 9, 8, 10, 3, 7],) ,
('Computing match for mapping',) ,
([11, 2, 0, 1, 9, 8, 10, 3, 7],) ,
('saved value', 5.102996200474597) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 2, 11, 0, 9, 8, 10, 3, 7],) ,
('Computing match for mapping',) ,
([1, 2, 11, 0, 9, 8, 10, 3, 7],) ,
('saved value', 3.7604286320622684) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 9) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([9, 2, 11, 1, 0, 8, 10, 3, 7],) ,
('Computing match for mapping',) ,
([9, 2, 11, 1, 0, 8, 10, 3, 7],) ,
('saved value', 3.7604286320622684) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([8, 2, 11, 1, 9, 0, 10, 3, 7],) ,
('Computing match for mapping',) ,
([8, 2, 11, 1, 9, 0, 10, 3, 7],) ,
('saved value', 3.7604286320622684) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 10) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 0) ,
('Swap gain:', -1.567004100845221) ,
([10, 2, 11, 1, 9, 8, 0, 3, 7],) ,
('Computing match for mapping',) ,
([10, 2, 11, 1, 9, 8, 0, 3, 7],) ,
('saved value', 3.1934245312170475) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 2, 11, 1, 9, 8, 10, 0, 7],) ,
('Computing match for mapping',) ,
([3, 2, 11, 1, 9, 8, 10, 0, 7],) ,
('saved value', 4.760428632062268) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 0, '-', 7, ',', 8, '-', 0) ,
('Swap gain:', 0.2926977722481573) ,
([7, 2, 11, 1, 9, 8, 10, 3, 0],) ,
('Computing match for mapping',) ,
([7, 2, 11, 1, 9, 8, 10, 3, 0],) ,
('saved value', 5.053126404310426) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 11) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 1, '-', 11, ',', 2, '-', 2) ,
('Swap gain:', -0.05579265860361393) ,
([0, 11, 2, 1, 9, 8, 10, 3, 7],) ,
('Computing match for mapping',) ,
([0, 11, 2, 1, 9, 8, 10, 3, 7],) ,
('saved value', 4.704635973458655) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 1) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -0.34515499678291495) ,
([0, 1, 11, 2, 9, 8, 10, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 11, 2, 9, 8, 10, 3, 7],) ,
('saved value', 4.415273635279354) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 9) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -0.854023579876701) ,
([0, 9, 11, 1, 2, 8, 10, 3, 7],) ,
('Computing match for mapping',) ,
([0, 9, 11, 1, 2, 8, 10, 3, 7],) ,
('saved value', 3.9064050521855673) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 8) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1.854023579876701) ,
([0, 8, 11, 1, 9, 2, 10, 3, 7],) ,
('Computing match for mapping',) ,
([0, 8, 11, 1, 9, 2, 10, 3, 7],) ,
('saved value', 2.9064050521855673) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 10) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -1.2574291370025672) ,
([0, 10, 11, 1, 9, 8, 2, 3, 7],) ,
('Computing match for mapping',) ,
([0, 10, 11, 1, 9, 8, 2, 3, 7],) ,
('saved value', 3.502999495059701) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 3) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -0.012798146349559447) ,
([0, 3, 11, 1, 9, 8, 10, 2, 7],) ,
('Computing match for mapping',) ,
([0, 3, 11, 1, 9, 8, 10, 2, 7],) ,
('saved value', 4.747630485712709) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 2, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 1, '-', 7, ',', 8, '-', 2) ,
('Swap gain:', -0.15066596295155044) ,
([0, 7, 11, 1, 9, 8, 10, 3, 2],) ,
('Computing match for mapping',) ,
([0, 7, 11, 1, 9, 8, 10, 3, 2],) ,
('saved value', 4.609762669110718) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 11, ',', 3, '-', 1) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 11) ,
('Swap gain:', -1.0) ,
([0, 2, 1, 11, 9, 8, 10, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 1, 11, 9, 8, 10, 3, 7],) ,
('saved value', 3.7604286320622684) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 11, ',', 4, '-', 9) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 11) ,
('Swap gain:', -1.0) ,
([0, 2, 9, 1, 11, 8, 10, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 9, 1, 11, 8, 10, 3, 7],) ,
('saved value', 3.7604286320622684) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 11, ',', 5, '-', 8) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 11) ,
('Swap gain:', -1.0) ,
([0, 2, 8, 1, 9, 11, 10, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 8, 1, 9, 11, 10, 3, 7],) ,
('saved value', 3.7604286320622684) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 11, ',', 6, '-', 10) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 11) ,
('Swap gain:', -1.0310536388359341) ,
([0, 2, 10, 1, 9, 8, 11, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 10, 1, 9, 8, 11, 3, 7],) ,
('saved value', 3.729374993226334) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 11, ',', 7, '-', 3) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 11) ,
('Swap gain:', 2.0) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('saved value', 6.760428632062268) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 11, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 2, '-', 7, ',', 8, '-', 11) ,
('Swap gain:', 0.0) ,
([0, 2, 7, 1, 9, 8, 10, 3, 11],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 9, 8, 10, 3, 11],) ,
('saved value', 4.760428632062268) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 11, 9, 1, 8, 10, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 9, 1, 8, 10, 3, 7],) ,
('saved value', 2.7604286320622684) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 8) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 11, 8, 9, 1, 10, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 8, 9, 1, 10, 3, 7],) ,
('saved value', 2.7604286320622684) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 10) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -2.9064050521855678) ,
([0, 2, 11, 10, 9, 8, 1, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 10, 9, 8, 1, 3, 7],) ,
('saved value', 1.8540235798767006) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 3) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 2, 11, 3, 9, 8, 10, 1, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 3, 9, 8, 10, 1, 7],) ,
('saved value', 3.7604286320622684) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 3, '-', 7, ',', 8, '-', 1) ,
('Swap gain:', -0.30510463163936685) ,
([0, 2, 11, 7, 9, 8, 10, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, 11, 7, 9, 8, 10, 3, 1],) ,
('saved value', 4.455324000422902) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([0, 2, 11, 1, 8, 9, 10, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 8, 9, 10, 3, 7],) ,
('saved value', 2.7604286320622684) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -2.9064050521855678) ,
([0, 2, 11, 1, 10, 8, 9, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 10, 8, 9, 3, 7],) ,
('saved value', 1.8540235798767006) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 3) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 9) ,
('Swap gain:', -1.0) ,
([0, 2, 11, 1, 3, 8, 10, 9, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 3, 8, 10, 9, 7],) ,
('saved value', 3.7604286320622684) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 4, '-', 7, ',', 8, '-', 9) ,
('Swap gain:', -1.0) ,
([0, 2, 11, 1, 7, 8, 10, 3, 9],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 7, 8, 10, 3, 9],) ,
('saved value', 3.7604286320622684) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -1.9064050521855678) ,
([0, 2, 11, 1, 9, 10, 8, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 10, 8, 3, 7],) ,
('saved value', 2.8540235798767006) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 3) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 8) ,
('Swap gain:', -1.0) ,
([0, 2, 11, 1, 9, 3, 10, 8, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 3, 10, 8, 7],) ,
('saved value', 3.7604286320622684) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 5, '-', 7, ',', 8, '-', 8) ,
('Swap gain:', -1.0) ,
([0, 2, 11, 1, 9, 7, 10, 3, 8],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 7, 10, 3, 8],) ,
('saved value', 3.7604286320622684) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 3) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 10) ,
('Swap gain:', -1.0303770213862387) ,
([0, 2, 11, 1, 9, 8, 3, 10, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 3, 10, 7],) ,
('saved value', 3.7300516106760297) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 6, '-', 7, ',', 8, '-', 10) ,
('Swap gain:', -1.2300460327385623) ,
([0, 2, 11, 1, 9, 8, 7, 3, 10],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 7, 3, 10],) ,
('saved value', 3.530382599323706) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 3, ',', 8, '-', 7) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('After swapping:', 7, '-', 7, ',', 8, '-', 3) ,
('Swap gain:', 0.698639447949128) ,
([0, 2, 11, 1, 9, 8, 10, 7, 3],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 10, 7, 3],) ,
('saved value', 5.459068080011397) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 11, 1, 9, 8, 10, 3, 7]) ,
('Current mapping', [0, 2, 3, 1, 9, 8, 10, 11, 7]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 6.760428632062268) ,
('Current mapping:', [0, 2, 3, 1, 9, 8, 10, 11, 7]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', 0.3394009513403471) ,
('Computing match for mapping',) ,
([4, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('saved value', 7.099829583402616) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', 0.3425675684123289) ,
('Computing match for mapping',) ,
([5, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('saved value', 7.102996200474597) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('saved value', 6.760428632062268) ,
('Remap node', 1, 'from ', 2, 'to', 4) ,
('Move gain:', -0.10506616931811052) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 9, 8, 10, 11, 7],) ,
('saved value', 6.655362462744158) ,
('Remap node', 1, 'from ', 2, 'to', 5) ,
('Move gain:', -0.05579265860361393) ,
('Computing match for mapping',) ,
([0, 5, 3, 1, 9, 8, 10, 11, 7],) ,
('saved value', 6.704635973458655) ,
('Remap node', 1, 'from ', 2, 'to', 6) ,
('Move gain:', 0.14597642012329903) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 9, 8, 10, 11, 7],) ,
('saved value', 6.906405052185567) ,
('Remap node', 2, 'from ', 3, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 9, 8, 10, 11, 7],) ,
('saved value', 6.760428632062268) ,
('Remap node', 2, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 5, 1, 9, 8, 10, 11, 7],) ,
('saved value', 6.760428632062268) ,
('Remap node', 2, 'from ', 3, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 6, 1, 9, 8, 10, 11, 7],) ,
('saved value', 6.760428632062268) ,
('Remap node', 3, 'from ', 1, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 4, 9, 8, 10, 11, 7],) ,
('saved value', 5.760428632062268) ,
('Remap node', 3, 'from ', 1, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 5, 9, 8, 10, 11, 7],) ,
('saved value', 5.760428632062268) ,
('Remap node', 3, 'from ', 1, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 6, 9, 8, 10, 11, 7],) ,
('saved value', 6.760428632062268) ,
('Remap node', 4, 'from ', 9, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 4, 8, 10, 11, 7],) ,
('saved value', 5.760428632062268) ,
('Remap node', 4, 'from ', 9, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 5, 8, 10, 11, 7],) ,
('saved value', 5.760428632062268) ,
('Remap node', 4, 'from ', 9, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 6, 8, 10, 11, 7],) ,
('saved value', 5.760428632062268) ,
('Remap node', 5, 'from ', 8, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 4, 10, 11, 7],) ,
('saved value', 5.760428632062268) ,
('Remap node', 5, 'from ', 8, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 5, 10, 11, 7],) ,
('saved value', 5.760428632062268) ,
('Remap node', 5, 'from ', 8, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 6, 10, 11, 7],) ,
('saved value', 5.760428632062268) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 4, 11, 7],) ,
('saved value', 4.760428632062268) ,
('Remap node', 6, 'from ', 10, 'to', 5) ,
('Move gain:', -2.0310536388359335) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 5, 11, 7],) ,
('saved value', 4.729374993226335) ,
('Remap node', 6, 'from ', 10, 'to', 6) ,
('Move gain:', -2.9064050521855678) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 6, 11, 7],) ,
('saved value', 3.8540235798767006) ,
('Remap node', 7, 'from ', 11, 'to', 4) ,
('Move gain:', -1.1239719692006709) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 4, 7],) ,
('saved value', 5.6364566628615975) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 5, 7],) ,
('saved value', 5.760428632062268) ,
('Remap node', 7, 'from ', 11, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 6, 7],) ,
('saved value', 4.760428632062268) ,
('Remap node', 8, 'from ', 7, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 11, 4],) ,
('saved value', 6.760428632062268) ,
('Remap node', 8, 'from ', 7, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 11, 5],) ,
('saved value', 6.760428632062268) ,
('Remap node', 8, 'from ', 7, 'to', 6) ,
('Move gain:', 0.6948953683606331) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.455324000422902) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -0.47369784814993704) ,
([2, 0, 3, 1, 9, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1, 9, 8, 10, 11, 7],) ,
('saved value', 6.286730783912331) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 2, 0, 1, 9, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 9, 8, 10, 11, 7],) ,
('saved value', 6.760428632062268) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 2, 3, 0, 9, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([1, 2, 3, 0, 9, 8, 10, 11, 7],) ,
('saved value', 5.760428632062268) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 9) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([9, 2, 3, 1, 0, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([9, 2, 3, 1, 0, 8, 10, 11, 7],) ,
('saved value', 5.760428632062268) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([8, 2, 3, 1, 9, 0, 10, 11, 7],) ,
('Computing match for mapping',) ,
([8, 2, 3, 1, 9, 0, 10, 11, 7],) ,
('saved value', 5.760428632062268) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 10) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 0) ,
('Swap gain:', -2.567004100845221) ,
([10, 2, 3, 1, 9, 8, 0, 11, 7],) ,
('Computing match for mapping',) ,
([10, 2, 3, 1, 9, 8, 0, 11, 7],) ,
('saved value', 4.1934245312170475) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 11) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 0) ,
('Swap gain:', -1.6574324315876712) ,
([11, 2, 3, 1, 9, 8, 10, 0, 7],) ,
('Computing match for mapping',) ,
([11, 2, 3, 1, 9, 8, 10, 0, 7],) ,
('saved value', 5.102996200474597) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 7) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 0, '-', 7, ',', 8, '-', 0) ,
('Swap gain:', 0.2926977722481573) ,
([7, 2, 3, 1, 9, 8, 10, 11, 0],) ,
('Computing match for mapping',) ,
([7, 2, 3, 1, 9, 8, 10, 11, 0],) ,
('saved value', 7.053126404310426) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -0.854023579876701) ,
([0, 3, 2, 1, 9, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 9, 8, 10, 11, 7],) ,
('saved value', 5.906405052185567) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 1) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', 0.6548450032170852) ,
([0, 1, 3, 2, 9, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 8, 10, 11, 7],) ,
('saved value', 7.415273635279354) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 9) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -0.854023579876701) ,
([0, 9, 3, 1, 2, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([0, 9, 3, 1, 2, 8, 10, 11, 7],) ,
('saved value', 5.906405052185567) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 8) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1.854023579876701) ,
([0, 8, 3, 1, 9, 2, 10, 11, 7],) ,
('Computing match for mapping',) ,
([0, 8, 3, 1, 9, 2, 10, 11, 7],) ,
('saved value', 4.906405052185567) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 10) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -2.257429137002567) ,
([0, 10, 3, 1, 9, 8, 2, 11, 7],) ,
('Computing match for mapping',) ,
([0, 10, 3, 1, 9, 8, 2, 11, 7],) ,
('saved value', 4.502999495059701) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 11) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -1.2145672250764723) ,
([0, 11, 3, 1, 9, 8, 10, 2, 7],) ,
('Computing match for mapping',) ,
([0, 11, 3, 1, 9, 8, 10, 2, 7],) ,
('saved value', 5.5458614069857965) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 2, ',', 8, '-', 7) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 1, '-', 7, ',', 8, '-', 2) ,
('Swap gain:', -0.15066596295155044) ,
([0, 7, 3, 1, 9, 8, 10, 11, 2],) ,
('Computing match for mapping',) ,
([0, 7, 3, 1, 9, 8, 10, 11, 2],) ,
('saved value', 6.609762669110718) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 1) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 2, 1, 3, 9, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 9, 8, 10, 11, 7],) ,
('saved value', 5.760428632062268) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 9) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 2, 9, 1, 3, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([0, 2, 9, 1, 3, 8, 10, 11, 7],) ,
('saved value', 5.760428632062268) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 8) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 2, 8, 1, 9, 3, 10, 11, 7],) ,
('Computing match for mapping',) ,
([0, 2, 8, 1, 9, 3, 10, 11, 7],) ,
('saved value', 5.760428632062268) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 3, ',', 6, '-', 10) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 3) ,
('Swap gain:', -2.9064050521855678) ,
([0, 2, 10, 1, 9, 8, 3, 11, 7],) ,
('Computing match for mapping',) ,
([0, 2, 10, 1, 9, 8, 3, 11, 7],) ,
('saved value', 3.8540235798767006) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 3, ',', 7, '-', 11) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 10, 3, 7],) ,
('saved value', 4.760428632062268) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 3, ',', 8, '-', 7) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 2, '-', 7, ',', 8, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 2, 7, 1, 9, 8, 10, 11, 3],) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 9, 8, 10, 11, 3],) ,
('saved value', 6.760428632062268) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 3, 9, 1, 8, 10, 11, 7],) ,
('Computing match for mapping',) ,
([0, 2, 3, 9, 1, 8, 10, 11, 7],) ,
('saved value', 4.760428632062268) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 8) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 3, 8, 9, 1, 10, 11, 7],) ,
('Computing match for mapping',) ,
([0, 2, 3, 8, 9, 1, 10, 11, 7],) ,
('saved value', 4.760428632062268) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 10) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -3.9064050521855678) ,
([0, 2, 3, 10, 9, 8, 1, 11, 7],) ,
('Computing match for mapping',) ,
([0, 2, 3, 10, 9, 8, 1, 11, 7],) ,
('saved value', 2.8540235798767006) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 3, 11, 9, 8, 10, 1, 7],) ,
('Computing match for mapping',) ,
([0, 2, 3, 11, 9, 8, 10, 1, 7],) ,
('saved value', 3.7604286320622684) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 7) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 3, '-', 7, ',', 8, '-', 1) ,
('Swap gain:', -0.30510463163936685) ,
([0, 2, 3, 7, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 7, 9, 8, 10, 11, 1],) ,
('saved value', 6.455324000422902) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([0, 2, 3, 1, 8, 9, 10, 11, 7],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 8, 9, 10, 11, 7],) ,
('saved value', 4.760428632062268) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([0, 2, 3, 1, 10, 8, 9, 11, 7],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 10, 8, 9, 11, 7],) ,
('saved value', 2.8540235798767006) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([0, 2, 3, 1, 11, 8, 10, 9, 7],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 11, 8, 10, 9, 7],) ,
('saved value', 3.7604286320622684) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 7) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 4, '-', 7, ',', 8, '-', 9) ,
('Swap gain:', -1.0) ,
([0, 2, 3, 1, 7, 8, 10, 11, 9],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 7, 8, 10, 11, 9],) ,
('saved value', 5.760428632062268) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2.9064050521855678) ,
([0, 2, 3, 1, 9, 10, 8, 11, 7],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 10, 8, 11, 7],) ,
('saved value', 3.8540235798767006) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -3.0) ,
([0, 2, 3, 1, 9, 11, 10, 8, 7],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 11, 10, 8, 7],) ,
('saved value', 3.7604286320622684) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', 7) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 5, '-', 7, ',', 8, '-', 8) ,
('Swap gain:', -1.0) ,
([0, 2, 3, 1, 9, 7, 10, 11, 8],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 7, 10, 11, 8],) ,
('saved value', 5.760428632062268) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -2.155025608036605) ,
([0, 2, 3, 1, 9, 8, 11, 10, 7],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 11, 10, 7],) ,
('saved value', 4.605403024025664) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', 7) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 6, '-', 7, ',', 8, '-', 10) ,
('Swap gain:', -2.2300460327385623) ,
([0, 2, 3, 1, 9, 8, 7, 11, 10],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 7, 11, 10],) ,
('saved value', 4.530382599323707) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 7) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('After swapping:', 7, '-', 7, ',', 8, '-', 11) ,
('Swap gain:', -1.301360552050872) ,
([0, 2, 3, 1, 9, 8, 10, 7, 11],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 7, 11],) ,
('saved value', 5.459068080011397) ,
('Use move gain',) ,
('Original mapping', [0, 2, 3, 1, 9, 8, 10, 11, 7]) ,
('Current mapping', [0, 2, 3, 1, 9, 8, 10, 11, 6]) ,
('Gain after the hill-climbing', 0.6948953683606331) ,
('Update triple match number to:', 7.455324000422902) ,
('Current mapping:', [0, 2, 3, 1, 9, 8, 10, 11, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', 0.3394009513403473) ,
('Computing match for mapping',) ,
([4, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.794724951763249) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', 0.3425675684123295) ,
('Computing match for mapping',) ,
([5, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.797891568835231) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', 0.2926977722481573) ,
('Computing match for mapping',) ,
([7, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.748021772671059) ,
('Remap node', 1, 'from ', 2, 'to', 4) ,
('Move gain:', -0.10506616931811052) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.350257831104791) ,
('Remap node', 1, 'from ', 2, 'to', 5) ,
('Move gain:', -0.05579265860361393) ,
('Computing match for mapping',) ,
([0, 5, 3, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.399531341819288) ,
('Remap node', 1, 'from ', 2, 'to', 7) ,
('Move gain:', -0.15066596295155044) ,
('Computing match for mapping',) ,
([0, 7, 3, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.304658037471351) ,
('Remap node', 2, 'from ', 3, 'to', 4) ,
('Move gain:', 8.881784197001252e-16) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.455324000422903) ,
('Remap node', 2, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 5, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.455324000422902) ,
('Remap node', 2, 'from ', 3, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.455324000422902) ,
('Remap node', 3, 'from ', 1, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 4, 9, 8, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Remap node', 3, 'from ', 1, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 5, 9, 8, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Remap node', 3, 'from ', 1, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 7, 9, 8, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Remap node', 4, 'from ', 9, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 4, 8, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Remap node', 4, 'from ', 9, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 5, 8, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Remap node', 4, 'from ', 9, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 7, 8, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Remap node', 5, 'from ', 8, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 4, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Remap node', 5, 'from ', 8, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 5, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Remap node', 5, 'from ', 8, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 7, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 4, 11, 6],) ,
('saved value', 5.455324000422902) ,
('Remap node', 6, 'from ', 10, 'to', 5) ,
('Move gain:', -2.0310536388359344) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 5, 11, 6],) ,
('saved value', 5.424270361586967) ,
('Remap node', 6, 'from ', 10, 'to', 7) ,
('Move gain:', -2.2300460327385623) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 7, 11, 6],) ,
('saved value', 5.22527796768434) ,
('Remap node', 7, 'from ', 11, 'to', 4) ,
('Move gain:', -1.1239719692006709) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 4, 6],) ,
('saved value', 6.331352031222231) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 5, 6],) ,
('saved value', 6.455324000422902) ,
('Remap node', 7, 'from ', 11, 'to', 7) ,
('Move gain:', -1.301360552050872) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 7, 6],) ,
('saved value', 6.15396344837203) ,
('Remap node', 8, 'from ', 6, 'to', 4) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 11, 4],) ,
('saved value', 6.760428632062268) ,
('Remap node', 8, 'from ', 6, 'to', 5) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 11, 5],) ,
('saved value', 6.760428632062268) ,
('Remap node', 8, 'from ', 6, 'to', 7) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 11, 7],) ,
('saved value', 6.760428632062268) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -0.47369784814993704) ,
([2, 0, 3, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1, 9, 8, 10, 11, 6],) ,
('saved value', 6.981626152272964) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 2, 0, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.455324000422902) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 2, 3, 0, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([1, 2, 3, 0, 9, 8, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 9) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([9, 2, 3, 1, 0, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([9, 2, 3, 1, 0, 8, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([8, 2, 3, 1, 9, 0, 10, 11, 6],) ,
('Computing match for mapping',) ,
([8, 2, 3, 1, 9, 0, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 10) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 0) ,
('Swap gain:', -2.567004100845221) ,
([10, 2, 3, 1, 9, 8, 0, 11, 6],) ,
('Computing match for mapping',) ,
([10, 2, 3, 1, 9, 8, 0, 11, 6],) ,
('saved value', 4.888319899577681) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 11) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 0) ,
('Swap gain:', -1.6574324315876712) ,
([11, 2, 3, 1, 9, 8, 10, 0, 6],) ,
('Computing match for mapping',) ,
([11, 2, 3, 1, 9, 8, 10, 0, 6],) ,
('saved value', 5.79789156883523) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 6) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 6, ',', 8, '-', 0) ,
('Swap gain:', -0.6948953683606331) ,
([6, 2, 3, 1, 9, 8, 10, 11, 0],) ,
('Computing match for mapping',) ,
([6, 2, 3, 1, 9, 8, 10, 11, 0],) ,
('saved value', 6.760428632062268) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -0.854023579876701) ,
([0, 3, 2, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 9, 8, 10, 11, 6],) ,
('saved value', 6.601300420546201) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 1) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', 0.6548450032170852) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('saved value', 8.110169003639987) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 9) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -0.854023579876701) ,
([0, 9, 3, 1, 2, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 9, 3, 1, 2, 8, 10, 11, 6],) ,
('saved value', 6.601300420546201) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 8) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1.854023579876701) ,
([0, 8, 3, 1, 9, 2, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 8, 3, 1, 9, 2, 10, 11, 6],) ,
('saved value', 5.601300420546201) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 10) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -2.257429137002567) ,
([0, 10, 3, 1, 9, 8, 2, 11, 6],) ,
('Computing match for mapping',) ,
([0, 10, 3, 1, 9, 8, 2, 11, 6],) ,
('saved value', 5.197894863420334) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 2, ',', 7, '-', 11) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -1.2145672250764723) ,
([0, 11, 3, 1, 9, 8, 10, 2, 6],) ,
('Computing match for mapping',) ,
([0, 11, 3, 1, 9, 8, 10, 2, 6],) ,
('saved value', 6.24075677534643) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 2, ',', 8, '-', 6) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 6, ',', 8, '-', 2) ,
('Swap gain:', -0.5489189482373341) ,
([0, 6, 3, 1, 9, 8, 10, 11, 2],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 9, 8, 10, 11, 2],) ,
('saved value', 6.906405052185567) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 1) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 2, 1, 3, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 9, 8, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 9) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 2, 9, 1, 3, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 2, 9, 1, 3, 8, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 8) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 2, 8, 1, 9, 3, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 2, 8, 1, 9, 3, 10, 11, 6],) ,
('saved value', 6.455324000422902) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 3, ',', 6, '-', 10) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 3) ,
('Swap gain:', -2.9064050521855678) ,
([0, 2, 10, 1, 9, 8, 3, 11, 6],) ,
('Computing match for mapping',) ,
([0, 2, 10, 1, 9, 8, 3, 11, 6],) ,
('saved value', 4.5489189482373344) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 3, ',', 7, '-', 11) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 2, 11, 1, 9, 8, 10, 3, 6],) ,
('Computing match for mapping',) ,
([0, 2, 11, 1, 9, 8, 10, 3, 6],) ,
('saved value', 5.455324000422902) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 3, ',', 8, '-', 6) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 6, ',', 8, '-', 3) ,
('Swap gain:', -0.6948953683606331) ,
([0, 2, 6, 1, 9, 8, 10, 11, 3],) ,
('Computing match for mapping',) ,
([0, 2, 6, 1, 9, 8, 10, 11, 3],) ,
('saved value', 6.760428632062268) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 9) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 3, 9, 1, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 2, 3, 9, 1, 8, 10, 11, 6],) ,
('saved value', 5.455324000422902) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 8) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, 3, 8, 9, 1, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 2, 3, 8, 9, 1, 10, 11, 6],) ,
('saved value', 5.455324000422902) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 10) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -3.9064050521855678) ,
([0, 2, 3, 10, 9, 8, 1, 11, 6],) ,
('Computing match for mapping',) ,
([0, 2, 3, 10, 9, 8, 1, 11, 6],) ,
('saved value', 3.548918948237334) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 11) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 3, 11, 9, 8, 10, 1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 3, 11, 9, 8, 10, 1, 6],) ,
('saved value', 4.455324000422902) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 1, ',', 8, '-', 6) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 6, ',', 8, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, 3, 6, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 6, 9, 8, 10, 11, 1],) ,
('saved value', 7.455324000422902) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([0, 2, 3, 1, 8, 9, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 8, 9, 10, 11, 6],) ,
('saved value', 5.455324000422902) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([0, 2, 3, 1, 10, 8, 9, 11, 6],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 10, 8, 9, 11, 6],) ,
('saved value', 3.548918948237334) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([0, 2, 3, 1, 11, 8, 10, 9, 6],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 11, 8, 10, 9, 6],) ,
('saved value', 4.455324000422902) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 6) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 6, ',', 8, '-', 9) ,
('Swap gain:', -1.6948953683606331) ,
([0, 2, 3, 1, 6, 8, 10, 11, 9],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 6, 8, 10, 11, 9],) ,
('saved value', 5.760428632062268) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2.9064050521855678) ,
([0, 2, 3, 1, 9, 10, 8, 11, 6],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 10, 8, 11, 6],) ,
('saved value', 4.5489189482373344) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -3.0) ,
([0, 2, 3, 1, 9, 11, 10, 8, 6],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 11, 10, 8, 6],) ,
('saved value', 4.455324000422902) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', 6) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 5, '-', 6, ',', 8, '-', 8) ,
('Swap gain:', -1.6948953683606331) ,
([0, 2, 3, 1, 9, 6, 10, 11, 8],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 6, 10, 11, 8],) ,
('saved value', 5.760428632062268) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -2.155025608036605) ,
([0, 2, 3, 1, 9, 8, 11, 10, 6],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 11, 10, 6],) ,
('saved value', 5.300298392386297) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', 6) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 6, '-', 6, ',', 8, '-', 10) ,
('Swap gain:', -3.6013004205462007) ,
([0, 2, 3, 1, 9, 8, 6, 11, 10],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 6, 11, 10],) ,
('saved value', 3.854023579876701) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 6) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('After swapping:', 7, '-', 6, ',', 8, '-', 11) ,
('Swap gain:', -2.6948953683606334) ,
([0, 2, 3, 1, 9, 8, 10, 6, 11],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 6, 11],) ,
('saved value', 4.760428632062268) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 3, 1, 9, 8, 10, 11, 6]) ,
('Current mapping', [0, 1, 3, 2, 9, 8, 10, 11, 6]) ,
('Gain after the hill-climbing', 0.6548450032170852) ,
('Update triple match number to:', 8.110169003639987) ,
('Current mapping:', [0, 1, 3, 2, 9, 8, 10, 11, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -0.6605990486596529) ,
('Computing match for mapping',) ,
([4, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('saved value', 7.449569954980334) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -0.6574324315876712) ,
('Computing match for mapping',) ,
([5, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('saved value', 7.4527365720523155) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -0.7073022277518427) ,
('Computing match for mapping',) ,
([7, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('saved value', 7.402866775888144) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -1.2510425894414094) ,
('Computing match for mapping',) ,
([0, 4, 3, 2, 9, 8, 10, 11, 6],) ,
('saved value', 6.8591264141985775) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -1.201769078726913) ,
('Computing match for mapping',) ,
([0, 5, 3, 2, 9, 8, 10, 11, 6],) ,
('saved value', 6.908399924913073) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -1.2966423830748495) ,
('Computing match for mapping',) ,
([0, 7, 3, 2, 9, 8, 10, 11, 6],) ,
('saved value', 6.8135266205651375) ,
('Remap node', 2, 'from ', 3, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 9, 8, 10, 11, 6],) ,
('saved value', 7.110169003639987) ,
('Remap node', 2, 'from ', 3, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 9, 8, 10, 11, 6],) ,
('saved value', 7.110169003639987) ,
('Remap node', 2, 'from ', 3, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 9, 8, 10, 11, 6],) ,
('saved value', 7.110169003639987) ,
('Remap node', 3, 'from ', 2, 'to', 4) ,
('Move gain:', -0.508868583093786) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 9, 8, 10, 11, 6],) ,
('saved value', 7.601300420546201) ,
('Remap node', 3, 'from ', 2, 'to', 5) ,
('Move gain:', -0.508868583093786) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 9, 8, 10, 11, 6],) ,
('saved value', 7.601300420546201) ,
('Remap node', 3, 'from ', 2, 'to', 7) ,
('Move gain:', -0.508868583093786) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 9, 8, 10, 11, 6],) ,
('saved value', 7.601300420546201) ,
('Remap node', 4, 'from ', 9, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 8, 10, 11, 6],) ,
('saved value', 7.110169003639987) ,
('Remap node', 4, 'from ', 9, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 8, 10, 11, 6],) ,
('saved value', 7.110169003639987) ,
('Remap node', 4, 'from ', 9, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 7, 8, 10, 11, 6],) ,
('saved value', 7.110169003639987) ,
('Remap node', 5, 'from ', 8, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 4, 10, 11, 6],) ,
('saved value', 7.110169003639987) ,
('Remap node', 5, 'from ', 8, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 5, 10, 11, 6],) ,
('saved value', 7.110169003639987) ,
('Remap node', 5, 'from ', 8, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 7, 10, 11, 6],) ,
('saved value', 7.110169003639987) ,
('Remap node', 6, 'from ', 10, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 8, 4, 11, 6],) ,
('saved value', 6.110169003639987) ,
('Remap node', 6, 'from ', 10, 'to', 5) ,
('Move gain:', -2.0310536388359344) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 8, 5, 11, 6],) ,
('saved value', 6.079115364804053) ,
('Remap node', 6, 'from ', 10, 'to', 7) ,
('Move gain:', -2.2300460327385623) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 8, 7, 11, 6],) ,
('saved value', 5.880122970901425) ,
('Remap node', 7, 'from ', 11, 'to', 4) ,
('Move gain:', -1.1239719692006709) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 8, 10, 4, 6],) ,
('saved value', 6.986197034439316) ,
('Remap node', 7, 'from ', 11, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 8, 10, 5, 6],) ,
('saved value', 7.110169003639987) ,
('Remap node', 7, 'from ', 11, 'to', 7) ,
('Move gain:', -1.301360552050872) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 8, 10, 7, 6],) ,
('saved value', 6.808808451589115) ,
('Remap node', 8, 'from ', 6, 'to', 4) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 8, 10, 11, 4],) ,
('saved value', 7.415273635279354) ,
('Remap node', 8, 'from ', 6, 'to', 5) ,
('Move gain:', -0.6948953683606331) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 8, 10, 11, 5],) ,
('saved value', 7.415273635279354) ,
('Remap node', 8, 'from ', 6, 'to', 7) ,
('Move gain:', -0.6948953683606334) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 8, 10, 11, 7],) ,
('saved value', 7.415273635279354) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 0, 3, 2, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2, 9, 8, 10, 11, 6],) ,
('saved value', 6.110169003639987) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 1, 0, 2, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([3, 1, 0, 2, 9, 8, 10, 11, 6],) ,
('saved value', 8.110169003639987) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.1285428513670221) ,
([2, 1, 3, 0, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0, 9, 8, 10, 11, 6],) ,
('saved value', 6.981626152272964) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 9) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 9, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([9, 1, 3, 2, 0, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([9, 1, 3, 2, 0, 8, 10, 11, 6],) ,
('saved value', 6.110169003639987) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([8, 1, 3, 2, 9, 0, 10, 11, 6],) ,
('Computing match for mapping',) ,
([8, 1, 3, 2, 9, 0, 10, 11, 6],) ,
('saved value', 7.110169003639987) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 10) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 10, ',', 6, '-', 0) ,
('Swap gain:', -3.567004100845221) ,
([10, 1, 3, 2, 9, 8, 0, 11, 6],) ,
('Computing match for mapping',) ,
([10, 1, 3, 2, 9, 8, 0, 11, 6],) ,
('saved value', 4.543164902794766) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 11) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 11, ',', 7, '-', 0) ,
('Swap gain:', -2.6574324315876714) ,
([11, 1, 3, 2, 9, 8, 10, 0, 6],) ,
('Computing match for mapping',) ,
([11, 1, 3, 2, 9, 8, 10, 0, 6],) ,
('saved value', 5.4527365720523155) ,
('Swap node', 0, 'and', 8) ,
('Before swapping:', 0, '-', 0, ',', 8, '-', 6) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 0, '-', 6, ',', 8, '-', 0) ,
('Swap gain:', -1.6948953683606331) ,
([6, 1, 3, 2, 9, 8, 10, 11, 0],) ,
('Computing match for mapping',) ,
([6, 1, 3, 2, 9, 8, 10, 11, 0],) ,
('saved value', 6.415273635279354) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 1, 2, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 9, 8, 10, 11, 6],) ,
('saved value', 6.110169003639987) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -0.6548450032170852) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 9, 8, 10, 11, 6],) ,
('saved value', 7.455324000422902) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 9) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 9, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 9, 3, 2, 1, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 9, 3, 2, 1, 8, 10, 11, 6],) ,
('saved value', 5.110169003639987) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 8) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 8, 3, 2, 9, 1, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 8, 3, 2, 9, 1, 10, 11, 6],) ,
('saved value', 5.110169003639987) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 10) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 10, ',', 6, '-', 1) ,
('Swap gain:', -4.157447641626977) ,
([0, 10, 3, 2, 9, 8, 1, 11, 6],) ,
('Computing match for mapping',) ,
([0, 10, 3, 2, 9, 8, 1, 11, 6],) ,
('saved value', 3.95272136201301) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 11) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 11, ',', 7, '-', 1) ,
('Swap gain:', -3.201769078726913) ,
([0, 11, 3, 2, 9, 8, 10, 1, 6],) ,
('Computing match for mapping',) ,
([0, 11, 3, 2, 9, 8, 10, 1, 6],) ,
('saved value', 4.908399924913073) ,
('Swap node', 1, 'and', 8) ,
('Before swapping:', 1, '-', 1, ',', 8, '-', 6) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 1, '-', 6, ',', 8, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 6, 3, 2, 9, 8, 10, 11, 1],) ,
('Computing match for mapping',) ,
([0, 6, 3, 2, 9, 8, 10, 11, 1],) ,
('saved value', 7.110169003639987) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 2) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -1.508868583093786) ,
([0, 1, 2, 3, 9, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 9, 8, 10, 11, 6],) ,
('saved value', 6.601300420546201) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 9) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 9, ',', 4, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 1, 9, 2, 3, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 1, 9, 2, 3, 8, 10, 11, 6],) ,
('saved value', 6.110169003639987) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', 8) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, 8, 2, 9, 3, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 1, 8, 2, 9, 3, 10, 11, 6],) ,
('saved value', 7.110169003639987) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 3, ',', 6, '-', 10) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 10, ',', 6, '-', 3) ,
('Swap gain:', -3.9064050521855678) ,
([0, 1, 10, 2, 9, 8, 3, 11, 6],) ,
('Computing match for mapping',) ,
([0, 1, 10, 2, 9, 8, 3, 11, 6],) ,
('saved value', 4.20376395145442) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 3, ',', 7, '-', 11) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 11, ',', 7, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 11, 2, 9, 8, 10, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 11, 2, 9, 8, 10, 3, 6],) ,
('saved value', 5.110169003639987) ,
('Swap node', 2, 'and', 8) ,
('Before swapping:', 2, '-', 3, ',', 8, '-', 6) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 2, '-', 6, ',', 8, '-', 3) ,
('Swap gain:', -1.6948953683606331) ,
([0, 1, 6, 2, 9, 8, 10, 11, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 9, 8, 10, 11, 3],) ,
('saved value', 6.415273635279354) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 9) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 9, ',', 4, '-', 2) ,
('Swap gain:', -1.508868583093786) ,
([0, 1, 3, 9, 2, 8, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 9, 2, 8, 10, 11, 6],) ,
('saved value', 6.601300420546201) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 8) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1.508868583093786) ,
([0, 1, 3, 8, 9, 2, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 8, 9, 2, 10, 11, 6],) ,
('saved value', 6.601300420546201) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 10) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 10, ',', 6, '-', 2) ,
('Swap gain:', -2.6612315507782425) ,
([0, 1, 3, 10, 9, 8, 2, 11, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 10, 9, 8, 2, 11, 6],) ,
('saved value', 5.4489374528617445) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 2, ',', 7, '-', 11) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 11, ',', 7, '-', 2) ,
('Swap gain:', -1.6676431495666444) ,
([0, 1, 3, 11, 9, 8, 10, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 11, 9, 8, 10, 2, 6],) ,
('saved value', 6.4425258540733426) ,
('Swap node', 3, 'and', 8) ,
('Before swapping:', 3, '-', 2, ',', 8, '-', 6) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 3, '-', 6, ',', 8, '-', 2) ,
('Swap gain:', -0.20376395145441917) ,
([0, 1, 3, 6, 9, 8, 10, 11, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 6, 9, 8, 10, 11, 2],) ,
('saved value', 7.906405052185567) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 9, ',', 5, '-', 8) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 9) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 2, 8, 9, 10, 11, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 8, 9, 10, 11, 6],) ,
('saved value', 6.110169003639987) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 9, ',', 6, '-', 10) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 10, ',', 6, '-', 9) ,
('Swap gain:', -3.9064050521855678) ,
([0, 1, 3, 2, 10, 8, 9, 11, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 10, 8, 9, 11, 6],) ,
('saved value', 4.20376395145442) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 9, ',', 7, '-', 11) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 11, ',', 7, '-', 9) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 2, 11, 8, 10, 9, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 11, 8, 10, 9, 6],) ,
('saved value', 5.110169003639987) ,
('Swap node', 4, 'and', 8) ,
('Before swapping:', 4, '-', 9, ',', 8, '-', 6) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 4, '-', 6, ',', 8, '-', 9) ,
('Swap gain:', -1.6948953683606331) ,
([0, 1, 3, 2, 6, 8, 10, 11, 9],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 6, 8, 10, 11, 9],) ,
('saved value', 6.415273635279354) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 10) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 5, '-', 10, ',', 6, '-', 8) ,
('Swap gain:', -2.9064050521855678) ,
([0, 1, 3, 2, 9, 10, 8, 11, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 10, 8, 11, 6],) ,
('saved value', 5.20376395145442) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 11) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 5, '-', 11, ',', 7, '-', 8) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 2, 9, 11, 10, 8, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 11, 10, 8, 6],) ,
('saved value', 5.110169003639987) ,
('Swap node', 5, 'and', 8) ,
('Before swapping:', 5, '-', 8, ',', 8, '-', 6) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 5, '-', 6, ',', 8, '-', 8) ,
('Swap gain:', -1.6948953683606331) ,
([0, 1, 3, 2, 9, 6, 10, 11, 8],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 6, 10, 11, 8],) ,
('saved value', 6.415273635279354) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 10, ',', 7, '-', 11) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 6, '-', 11, ',', 7, '-', 10) ,
('Swap gain:', -2.155025608036605) ,
([0, 1, 3, 2, 9, 8, 11, 10, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 8, 11, 10, 6],) ,
('saved value', 5.955143395603383) ,
('Swap node', 6, 'and', 8) ,
('Before swapping:', 6, '-', 10, ',', 8, '-', 6) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 6, '-', 6, ',', 8, '-', 10) ,
('Swap gain:', -3.6013004205462007) ,
([0, 1, 3, 2, 9, 8, 6, 11, 10],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 8, 6, 11, 10],) ,
('saved value', 4.508868583093786) ,
('Swap node', 7, 'and', 8) ,
('Before swapping:', 7, '-', 11, ',', 8, '-', 6) ,
([0, 1, 3, 2, 9, 8, 10, 11, 6],) ,
('After swapping:', 7, '-', 6, ',', 8, '-', 11) ,
('Swap gain:', -2.6948953683606334) ,
([0, 1, 3, 2, 9, 8, 10, 6, 11],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 9, 8, 10, 6, 11],) ,
('saved value', 5.415273635279354) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 3, 2, 9, 8, 10, 11, 6]) ,
('Current mapping', [0, 1, 3, 2, 9, 8, 10, 11, 6]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 8.110169003639987) ,
('best node mapping', [0, 1, 3, 2, 9, 8, 10, 11, 6]) ,
('Best node mapping alignment:', 'a0(take-10)-b0(have-degree-91) a1(time)-b1(method) a2(instead-of-91)-b3(quick-02) a3(method)-b2(this) a4(naive)-b9(naive) a5(have-quant-91)-b8(have-degree-91) a6(less)-b10(more) a7(much)-b11(much) a8(methodology)-b6(method)') ,
('F-score:', 0.37721716295999935) ,
Smatch score F1 0.377
('AMR pair', 10) ,
('============================================',) ,
('AMR 1 (one-line):', '(c0 / count-04:ARG1 (h0 / hyperlink:destination (p0 / page)):ARG2 (v0 / vote-01:ARG1 (s0 / support-01)))') ,
('AMR 2 (one-line):', '(s0 / see-01:ARG1 (t0 / thing:ARG3-of (l0 / link-01:ARG1 (p0 / page))):ARG2 (v0 / vote-01:ARG1 (s1 / support-01)))') ,
('Instance triples of AMR 1:', 5) ,
([('instance', 'a0', 'count-04'), ('instance', 'a1', 'hyperlink'), ('instance', 'a2', 'page'), ('instance', 'a3', 'vote-01'), ('instance', 'a4', 'support-01')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'count-04')],) ,
('Relation triples of AMR 1:', 4) ,
([('ARG1', 'a0', 'a1'), ('ARG2', 'a0', 'a3'), ('destination', 'a1', 'a2'), ('ARG1', 'a3', 'a4')],) ,
('Instance triples of AMR 2:', 6) ,
([('instance', 'b0', 'see-01'), ('instance', 'b1', 'thing'), ('instance', 'b2', 'link-01'), ('instance', 'b3', 'page'), ('instance', 'b4', 'vote-01'), ('instance', 'b5', 'support-01')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'see-01')],) ,
('Relation triples of AMR 2:', 5) ,
([('ARG1', 'b0', 'b1'), ('ARG2', 'b0', 'b4'), ('ARG3', 'b2', 'b1'), ('ARG1', 'b2', 'b3'), ('ARG1', 'b4', 'b5')],) ,
('Similarity', 'count-04', 'see-01', 0.0) ,
('Similarity', 'count-04', 'thing', 0.0) ,
('Similarity', 'count-04', 'link-01', 0.0) ,
('Similarity', 'count-04', 'page', 0.0) ,
('Similarity', 'count-04', 'vote-01', 0.0) ,
('Similarity', 'count-04', 'support-01', 0.0) ,
('Similarity', 'hyperlink', 'see-01', 0.0) ,
('Similarity', 'hyperlink', 'thing', 0.0) ,
('Similarity', 'hyperlink', 'link-01', 0.0) ,
('Similarity', 'hyperlink', 'page', 0.0) ,
('Similarity', 'hyperlink', 'vote-01', 0.0) ,
('Similarity', 'hyperlink', 'support-01', 0.0) ,
('Similarity', 'page', 'see-01', 0.0) ,
('Similarity', 'page', 'thing', 0.0) ,
('Similarity', 'page', 'link-01', 0.0) ,
('Similarity', 'page', 'page', 1.0) ,
('Similarity', 'page', 'vote-01', 0.0) ,
('Similarity', 'page', 'support-01', 0.0) ,
('Similarity', 'vote-01', 'see-01', 0.0) ,
('Similarity', 'vote-01', 'thing', 0.0) ,
('Similarity', 'vote-01', 'link-01', 0.0) ,
('Similarity', 'vote-01', 'vote-01', 1.0) ,
('Similarity', 'vote-01', 'support-01', 0.0) ,
('Similarity', 'support-01', 'see-01', 0.26934866245991385) ,
('Similarity', 'support-01', 'thing', 0.0) ,
('Similarity', 'support-01', 'link-01', 0.0) ,
('Similarity', 'support-01', 'support-01', 1.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 5}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.0, (1, 1): 1, (3, 4): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0, (1, 3): 1}, (0, 3): {-1: 0.0}, (0, 4): {-1: 0.0, (1, 5): 1}, (0, 5): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 0.0, (0, 0): 1}, (1, 2): {-1: 0.0}, (1, 3): {-1: 0.0, (0, 2): 1}, (1, 4): {-1: 0.0}, (1, 5): {-1: 0.0, (0, 4): 1}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.0}, (2, 2): {-1: 0.0}, (2, 3): {-1: 1.0}, (2, 4): {-1: 0.0}, (2, 5): {-1: 0.0}, (3, 0): {-1: 0.0, (4, 1): 1}, (3, 1): {-1: 0.0}, (3, 2): {-1: 0.0, (4, 3): 1}, (3, 3): {-1: 0.0}, (3, 4): {-1: 1.0, (0, 0): 1, (4, 5): 1}, (3, 5): {-1: 0.0}, (4, 0): {-1: 0.26934866245991385}, (4, 1): {-1: 0.0, (3, 0): 1}, (4, 2): {-1: 0.0}, (4, 3): {-1: 0.0, (3, 2): 1}, (4, 4): {-1: 0.0}, (4, 5): {-1: 1.0, (3, 4): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([1, 0, 3, 4, 5],) ,
('node_pair', (0, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 3)) ,
('instance/attribute match', 1.0) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 1.0) ,
('relation match with', (4, 5), 1) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 4.0) ,
('Node mapping at start', [1, 0, 3, 4, 5]) ,
('Triple match number at start:', 4.0) ,
('Remap node', 0, 'from ', 1, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 0, 3, 4, 5],) ,
('saved value', 4.0) ,
('Remap node', 1, 'from ', 0, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 4, 5],) ,
('saved value', 4.0) ,
('Remap node', 2, 'from ', 3, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5],) ,
('saved value', 3.0) ,
('Remap node', 3, 'from ', 4, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 0, 3, 2, 5],) ,
('saved value', 2.0) ,
('Remap node', 4, 'from ', 5, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 0, 3, 4, 2],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, 3, 4, 5],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 2.0) ,
([0, 1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 0, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([3, 0, 1, 4, 5],) ,
('Computing match for mapping',) ,
([3, 0, 1, 4, 5],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 4) ,
([1, 0, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 0, 3, 1, 5],) ,
('Computing match for mapping',) ,
([4, 0, 3, 1, 5],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 5) ,
([1, 0, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([5, 0, 3, 4, 1],) ,
('Computing match for mapping',) ,
([5, 0, 3, 4, 1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 3) ,
([1, 0, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 3, 0, 4, 5],) ,
('Computing match for mapping',) ,
([1, 3, 0, 4, 5],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 4) ,
([1, 0, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 4, 3, 0, 5],) ,
('Computing match for mapping',) ,
([1, 4, 3, 0, 5],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', 5) ,
([1, 0, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -1.730651337540086) ,
([1, 5, 3, 4, 0],) ,
('Computing match for mapping',) ,
([1, 5, 3, 4, 0],) ,
('saved value', 2.269348662459914) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 4) ,
([1, 0, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -3.0) ,
([1, 0, 4, 3, 5],) ,
('Computing match for mapping',) ,
([1, 0, 4, 3, 5],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 5) ,
([1, 0, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([1, 0, 5, 4, 3],) ,
('Computing match for mapping',) ,
([1, 0, 5, 4, 3],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([1, 0, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -3.0) ,
([1, 0, 3, 5, 4],) ,
('Computing match for mapping',) ,
([1, 0, 3, 5, 4],) ,
('saved value', 1.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, 3, 4, 5]) ,
('Current mapping', [0, 1, 3, 4, 5]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 1, 3, 4, 5]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 1, 3, 4, 5],) ,
('saved value', 4.0) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 4, 5],) ,
('saved value', 5.0) ,
('Remap node', 2, 'from ', 3, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5],) ,
('saved value', 5.0) ,
('Remap node', 3, 'from ', 4, 'to', 2) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5],) ,
('saved value', 3.0) ,
('Remap node', 4, 'from ', 5, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 3, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 5],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 3, 0, 5],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -3.730651337540086) ,
([5, 1, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 3, 4, 0],) ,
('saved value', 2.269348662459914) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 5],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 5, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 3],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 4],) ,
('saved value', 2.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 3, 4, 5]) ,
('Current mapping', [0, 1, 3, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([4, 1, 5, 2, 0],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 0)) ,
('instance/attribute match', 0.26934866245991385) ,
('match computing complete, result:', 0.26934866245991385) ,
('Node mapping at start', [4, 1, 5, 2, 0]) ,
('Triple match number at start:', 0.26934866245991385) ,
('Remap node', 0, 'from ', 4, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 1, 5, 2, 0],) ,
('saved value', 0.26934866245991385) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 0],) ,
('saved value', 0.26934866245991385) ,
('Remap node', 2, 'from ', 5, 'to', 3) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([4, 1, 3, 2, 0],) ,
('saved value', 1.269348662459914) ,
('Remap node', 3, 'from ', 2, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 1, 5, 3, 0],) ,
('saved value', 0.26934866245991385) ,
('Remap node', 4, 'from ', 0, 'to', 3) ,
('Move gain:', 0.7306513375400862) ,
('Computing match for mapping',) ,
([4, 1, 5, 2, 3],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 1) ,
([4, 1, 5, 2, 0],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 4) ,
('Swap gain:', 0.0) ,
([1, 4, 5, 2, 0],) ,
('Computing match for mapping',) ,
([1, 4, 5, 2, 0],) ,
('saved value', 0.26934866245991385) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 5) ,
([4, 1, 5, 2, 0],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 4) ,
('Swap gain:', 0.0) ,
([5, 1, 4, 2, 0],) ,
('Computing match for mapping',) ,
([5, 1, 4, 2, 0],) ,
('saved value', 0.26934866245991385) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 2) ,
([4, 1, 5, 2, 0],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', 1.0) ,
([2, 1, 5, 4, 0],) ,
('Computing match for mapping',) ,
([2, 1, 5, 4, 0],) ,
('saved value', 1.269348662459914) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 0) ,
([4, 1, 5, 2, 0],) ,
('After swapping:', 0, '-', 0, ',', 4, '-', 4) ,
('Swap gain:', 0.7306513375400862) ,
([0, 1, 5, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 4],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 5) ,
([4, 1, 5, 2, 0],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', 1.0) ,
([4, 5, 1, 2, 0],) ,
('Computing match for mapping',) ,
([4, 5, 1, 2, 0],) ,
('saved value', 1.269348662459914) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([4, 1, 5, 2, 0],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 2, 5, 1, 0],) ,
('Computing match for mapping',) ,
([4, 2, 5, 1, 0],) ,
('saved value', 0.26934866245991385) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 0) ,
([4, 1, 5, 2, 0],) ,
('After swapping:', 1, '-', 0, ',', 4, '-', 1) ,
('Swap gain:', -0.26934866245991385) ,
([4, 0, 5, 2, 1],) ,
('Computing match for mapping',) ,
([4, 0, 5, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 2) ,
([4, 1, 5, 2, 0],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 5) ,
('Swap gain:', 0.0) ,
([4, 1, 2, 5, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 5, 0],) ,
('saved value', 0.26934866245991385) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 0) ,
([4, 1, 5, 2, 0],) ,
('After swapping:', 2, '-', 0, ',', 4, '-', 5) ,
('Swap gain:', 0.7306513375400862) ,
([4, 1, 0, 2, 5],) ,
('Computing match for mapping',) ,
([4, 1, 0, 2, 5],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 0) ,
([4, 1, 5, 2, 0],) ,
('After swapping:', 3, '-', 0, ',', 4, '-', 2) ,
('Swap gain:', -0.26934866245991385) ,
([4, 1, 5, 0, 2],) ,
('Computing match for mapping',) ,
([4, 1, 5, 0, 2],) ,
('saved value', 0.0) ,
('Use move gain',) ,
('Original mapping', [4, 1, 5, 2, 0]) ,
('Current mapping', [4, 1, 3, 2, 0]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 1.269348662459914) ,
('Current mapping:', [4, 1, 3, 2, 0]) ,
('Remap node', 0, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 1, 3, 2, 0],) ,
('saved value', 1.269348662459914) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([4, 5, 3, 2, 0],) ,
('saved value', 2.269348662459914) ,
('Remap node', 2, 'from ', 3, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 1, 5, 2, 0],) ,
('saved value', 0.26934866245991385) ,
('Remap node', 3, 'from ', 2, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 1, 3, 5, 0],) ,
('saved value', 1.269348662459914) ,
('Remap node', 4, 'from ', 0, 'to', 5) ,
('Move gain:', 0.7306513375400862) ,
('Computing match for mapping',) ,
([4, 1, 3, 2, 5],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 1) ,
([4, 1, 3, 2, 0],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 4) ,
('Swap gain:', 0.0) ,
([1, 4, 3, 2, 0],) ,
('Computing match for mapping',) ,
([1, 4, 3, 2, 0],) ,
('saved value', 1.269348662459914) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 3) ,
([4, 1, 3, 2, 0],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 4) ,
('Swap gain:', -1.0) ,
([3, 1, 4, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 4, 2, 0],) ,
('saved value', 0.26934866245991396) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 2) ,
([4, 1, 3, 2, 0],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', 1.0) ,
([2, 1, 3, 4, 0],) ,
('Computing match for mapping',) ,
([2, 1, 3, 4, 0],) ,
('saved value', 2.269348662459914) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 0) ,
([4, 1, 3, 2, 0],) ,
('After swapping:', 0, '-', 0, ',', 4, '-', 4) ,
('Swap gain:', 0.7306513375400862) ,
([0, 1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([4, 1, 3, 2, 0],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([4, 3, 1, 2, 0],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 0],) ,
('saved value', 0.26934866245991396) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([4, 1, 3, 2, 0],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([4, 2, 3, 1, 0],) ,
('saved value', 1.269348662459914) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 0) ,
([4, 1, 3, 2, 0],) ,
('After swapping:', 1, '-', 0, ',', 4, '-', 1) ,
('Swap gain:', -0.26934866245991385) ,
([4, 0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([4, 0, 3, 2, 1],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 2) ,
([4, 1, 3, 2, 0],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -1.0) ,
([4, 1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0],) ,
('saved value', 0.26934866245991396) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 0) ,
([4, 1, 3, 2, 0],) ,
('After swapping:', 2, '-', 0, ',', 4, '-', 3) ,
('Swap gain:', -0.26934866245991385) ,
([4, 1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([4, 1, 0, 2, 3],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 0) ,
([4, 1, 3, 2, 0],) ,
('After swapping:', 3, '-', 0, ',', 4, '-', 2) ,
('Swap gain:', -0.26934866245991385) ,
([4, 1, 3, 0, 2],) ,
('Computing match for mapping',) ,
([4, 1, 3, 0, 2],) ,
('saved value', 1.0) ,
('Use move gain',) ,
('Original mapping', [4, 1, 3, 2, 0]) ,
('Current mapping', [4, 5, 3, 2, 0]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 2.269348662459914) ,
('Current mapping:', [4, 5, 3, 2, 0]) ,
('Remap node', 0, 'from ', 4, 'to', 1) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 5, 3, 2, 0],) ,
('saved value', 1.269348662459914) ,
('Remap node', 1, 'from ', 5, 'to', 1) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 1, 3, 2, 0],) ,
('saved value', 1.269348662459914) ,
('Remap node', 2, 'from ', 3, 'to', 1) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 5, 1, 2, 0],) ,
('saved value', 1.269348662459914) ,
('Remap node', 3, 'from ', 2, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 5, 3, 1, 0],) ,
('saved value', 2.269348662459914) ,
('Remap node', 4, 'from ', 0, 'to', 1) ,
('Move gain:', -0.26934866245991385) ,
('Computing match for mapping',) ,
([4, 5, 3, 2, 1],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 5) ,
([4, 5, 3, 2, 0],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 4) ,
('Swap gain:', -1.0) ,
([5, 4, 3, 2, 0],) ,
('Computing match for mapping',) ,
([5, 4, 3, 2, 0],) ,
('saved value', 1.269348662459914) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 3) ,
([4, 5, 3, 2, 0],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 4) ,
('Swap gain:', -2.0) ,
([3, 5, 4, 2, 0],) ,
('Computing match for mapping',) ,
([3, 5, 4, 2, 0],) ,
('saved value', 0.26934866245991396) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 2) ,
([4, 5, 3, 2, 0],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', 0.0) ,
([2, 5, 3, 4, 0],) ,
('Computing match for mapping',) ,
([2, 5, 3, 4, 0],) ,
('saved value', 2.269348662459914) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 0) ,
([4, 5, 3, 2, 0],) ,
('After swapping:', 0, '-', 0, ',', 4, '-', 4) ,
('Swap gain:', -1.269348662459914) ,
([0, 5, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 5, 3, 2, 4],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 3) ,
([4, 5, 3, 2, 0],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 5) ,
('Swap gain:', -2.0) ,
([4, 3, 5, 2, 0],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 0],) ,
('saved value', 0.26934866245991385) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 2) ,
([4, 5, 3, 2, 0],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 5) ,
('Swap gain:', -1.0) ,
([4, 2, 3, 5, 0],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 0],) ,
('saved value', 1.269348662459914) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 0) ,
([4, 5, 3, 2, 0],) ,
('After swapping:', 1, '-', 0, ',', 4, '-', 5) ,
('Swap gain:', -0.26934866245991385) ,
([4, 0, 3, 2, 5],) ,
('Computing match for mapping',) ,
([4, 0, 3, 2, 5],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 2) ,
([4, 5, 3, 2, 0],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -1.0) ,
([4, 5, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 5, 2, 3, 0],) ,
('saved value', 1.269348662459914) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 0) ,
([4, 5, 3, 2, 0],) ,
('After swapping:', 2, '-', 0, ',', 4, '-', 3) ,
('Swap gain:', -0.26934866245991385) ,
([4, 5, 0, 2, 3],) ,
('Computing match for mapping',) ,
([4, 5, 0, 2, 3],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 0) ,
([4, 5, 3, 2, 0],) ,
('After swapping:', 3, '-', 0, ',', 4, '-', 2) ,
('Swap gain:', -0.26934866245991385) ,
([4, 5, 3, 0, 2],) ,
('Computing match for mapping',) ,
([4, 5, 3, 0, 2],) ,
('saved value', 2.0) ,
('no move/swap gain found',) ,
('Original mapping', [4, 5, 3, 2, 0]) ,
('Current mapping', [4, 5, 3, 2, 0]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([4, 0, 3, 5, 2],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 3)) ,
('instance/attribute match', 1.0) ,
('node_pair', (3, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 2)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 1.0) ,
('Node mapping at start', [4, 0, 3, 5, 2]) ,
('Triple match number at start:', 1.0) ,
('Remap node', 0, 'from ', 4, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 0, 3, 5, 2],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 0, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 1, 3, 5, 2],) ,
('saved value', 1.0) ,
('Remap node', 2, 'from ', 3, 'to', 1) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 0, 1, 5, 2],) ,
('saved value', 0.0) ,
('Remap node', 3, 'from ', 5, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 0, 3, 1, 2],) ,
('saved value', 1.0) ,
('Remap node', 4, 'from ', 2, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 0, 3, 5, 1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 0) ,
([4, 0, 3, 5, 2],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 4, 3, 5, 2],) ,
('Computing match for mapping',) ,
([0, 4, 3, 5, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 3) ,
([4, 0, 3, 5, 2],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 4) ,
('Swap gain:', -1.0) ,
([3, 0, 4, 5, 2],) ,
('Computing match for mapping',) ,
([3, 0, 4, 5, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 5) ,
([4, 0, 3, 5, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 4) ,
('Swap gain:', 1.0) ,
([5, 0, 3, 4, 2],) ,
('Computing match for mapping',) ,
([5, 0, 3, 4, 2],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 2) ,
([4, 0, 3, 5, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 0.0) ,
([2, 0, 3, 5, 4],) ,
('Computing match for mapping',) ,
([2, 0, 3, 5, 4],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 3) ,
([4, 0, 3, 5, 2],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([4, 3, 0, 5, 2],) ,
('Computing match for mapping',) ,
([4, 3, 0, 5, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 5) ,
([4, 0, 3, 5, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', 1.0) ,
([4, 5, 3, 0, 2],) ,
('Computing match for mapping',) ,
([4, 5, 3, 0, 2],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', 2) ,
([4, 0, 3, 5, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', 0.26934866245991396) ,
([4, 2, 3, 5, 0],) ,
('Computing match for mapping',) ,
([4, 2, 3, 5, 0],) ,
('saved value', 1.269348662459914) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 5) ,
([4, 0, 3, 5, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 3) ,
('Swap gain:', -1.0) ,
([4, 0, 5, 3, 2],) ,
('Computing match for mapping',) ,
([4, 0, 5, 3, 2],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 2) ,
([4, 0, 3, 5, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', -1.0) ,
([4, 0, 2, 5, 3],) ,
('Computing match for mapping',) ,
([4, 0, 2, 5, 3],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 2) ,
([4, 0, 3, 5, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 1.0) ,
([4, 0, 3, 2, 5],) ,
('Computing match for mapping',) ,
([4, 0, 3, 2, 5],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [4, 0, 3, 5, 2]) ,
('Current mapping', [5, 0, 3, 4, 2]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 2.0) ,
('Current mapping:', [5, 0, 3, 4, 2]) ,
('Remap node', 0, 'from ', 5, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 0, 3, 4, 2],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 0, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 1, 3, 4, 2],) ,
('saved value', 2.0) ,
('Remap node', 2, 'from ', 3, 'to', 1) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 0, 1, 4, 2],) ,
('saved value', 1.0) ,
('Remap node', 3, 'from ', 4, 'to', 1) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 0, 3, 1, 2],) ,
('saved value', 1.0) ,
('Remap node', 4, 'from ', 2, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 0, 3, 4, 1],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 5, ',', 1, '-', 0) ,
([5, 0, 3, 4, 2],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 5, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 2],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 5, ',', 2, '-', 3) ,
([5, 0, 3, 4, 2],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 5) ,
('Swap gain:', -1.0) ,
([3, 0, 5, 4, 2],) ,
('Computing match for mapping',) ,
([3, 0, 5, 4, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 5, ',', 3, '-', 4) ,
([5, 0, 3, 4, 2],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', -1.0) ,
([4, 0, 3, 5, 2],) ,
('Computing match for mapping',) ,
([4, 0, 3, 5, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 5, ',', 4, '-', 2) ,
([5, 0, 3, 4, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 2.0) ,
([2, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, 0, 3, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 3) ,
([5, 0, 3, 4, 2],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([5, 3, 0, 4, 2],) ,
('Computing match for mapping',) ,
([5, 3, 0, 4, 2],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 4) ,
([5, 0, 3, 4, 2],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([5, 4, 3, 0, 2],) ,
('Computing match for mapping',) ,
([5, 4, 3, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', 2) ,
([5, 0, 3, 4, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', 0.26934866245991385) ,
([5, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 2, 3, 4, 0],) ,
('saved value', 2.269348662459914) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 4) ,
([5, 0, 3, 4, 2],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -2.0) ,
([5, 0, 4, 3, 2],) ,
('Computing match for mapping',) ,
([5, 0, 4, 3, 2],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 2) ,
([5, 0, 3, 4, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', -1.0) ,
([5, 0, 2, 4, 3],) ,
('Computing match for mapping',) ,
([5, 0, 2, 4, 3],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 2) ,
([5, 0, 3, 4, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', -1.0) ,
([5, 0, 3, 2, 4],) ,
('Computing match for mapping',) ,
([5, 0, 3, 2, 4],) ,
('saved value', 1.0) ,
('Use swap gain',) ,
('Original mapping', [5, 0, 3, 4, 2]) ,
('Current mapping', [2, 0, 3, 4, 5]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [2, 0, 3, 4, 5]) ,
('Remap node', 0, 'from ', 2, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 0, 3, 4, 5],) ,
('saved value', 4.0) ,
('Remap node', 1, 'from ', 0, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 1, 3, 4, 5],) ,
('saved value', 4.0) ,
('Remap node', 2, 'from ', 3, 'to', 1) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 0, 1, 4, 5],) ,
('saved value', 3.0) ,
('Remap node', 3, 'from ', 4, 'to', 1) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 0, 3, 1, 5],) ,
('saved value', 2.0) ,
('Remap node', 4, 'from ', 5, 'to', 1) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 0, 3, 4, 1],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0, 3, 4, 5],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 2, 3, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 3, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 3) ,
([2, 0, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -1.0) ,
([3, 0, 2, 4, 5],) ,
('Computing match for mapping',) ,
([3, 0, 2, 4, 5],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 4) ,
([2, 0, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -2.0) ,
([4, 0, 3, 2, 5],) ,
('Computing match for mapping',) ,
([4, 0, 3, 2, 5],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 5) ,
([2, 0, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([5, 0, 3, 4, 2],) ,
('Computing match for mapping',) ,
([5, 0, 3, 4, 2],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 3) ,
([2, 0, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 3, 0, 4, 5],) ,
('Computing match for mapping',) ,
([2, 3, 0, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 4) ,
([2, 0, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 4, 3, 0, 5],) ,
('Computing match for mapping',) ,
([2, 4, 3, 0, 5],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', 5) ,
([2, 0, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -1.730651337540086) ,
([2, 5, 3, 4, 0],) ,
('Computing match for mapping',) ,
([2, 5, 3, 4, 0],) ,
('saved value', 2.269348662459914) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 4) ,
([2, 0, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -3.0) ,
([2, 0, 4, 3, 5],) ,
('Computing match for mapping',) ,
([2, 0, 4, 3, 5],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 5) ,
([2, 0, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([2, 0, 5, 4, 3],) ,
('Computing match for mapping',) ,
([2, 0, 5, 4, 3],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([2, 0, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -3.0) ,
([2, 0, 3, 5, 4],) ,
('Computing match for mapping',) ,
([2, 0, 3, 5, 4],) ,
('saved value', 1.0) ,
('Use swap gain',) ,
('Original mapping', [2, 0, 3, 4, 5]) ,
('Current mapping', [0, 2, 3, 4, 5]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 5.0) ,
('Current mapping:', [0, 2, 3, 4, 5]) ,
('Remap node', 0, 'from ', 0, 'to', 1) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 2, 3, 4, 5],) ,
('saved value', 4.0) ,
('Remap node', 1, 'from ', 2, 'to', 1) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5],) ,
('saved value', 6.0) ,
('Remap node', 2, 'from ', 3, 'to', 1) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5],) ,
('saved value', 4.0) ,
('Remap node', 3, 'from ', 4, 'to', 1) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 5],) ,
('saved value', 2.0) ,
('Remap node', 4, 'from ', 5, 'to', 1) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 4, 1],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, 0, 3, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([3, 2, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 2, 0, 4, 5],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 2, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 2, 3, 0, 5],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 2, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -2.730651337540086) ,
([5, 2, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 2, 3, 4, 0],) ,
('saved value', 2.269348662459914) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([0, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 4) ,
([0, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 4, 3, 2, 5],) ,
('Computing match for mapping',) ,
([0, 4, 3, 2, 5],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 5) ,
([0, 2, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 5, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 2],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 4) ,
([0, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 5],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 5) ,
([0, 2, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 3],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 2, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 2, 3, 5, 4],) ,
('saved value', 1.0) ,
('Use move gain',) ,
('Original mapping', [0, 2, 3, 4, 5]) ,
('Current mapping', [0, 1, 3, 4, 5]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 1, 3, 4, 5]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 1, 3, 4, 5],) ,
('saved value', 4.0) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 4, 5],) ,
('saved value', 5.0) ,
('Remap node', 2, 'from ', 3, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5],) ,
('saved value', 5.0) ,
('Remap node', 3, 'from ', 4, 'to', 2) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5],) ,
('saved value', 3.0) ,
('Remap node', 4, 'from ', 5, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 3, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 5],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 3, 0, 5],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -3.730651337540086) ,
([5, 1, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 3, 4, 0],) ,
('saved value', 2.269348662459914) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 5],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 5, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 3],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 4],) ,
('saved value', 2.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 3, 4, 5]) ,
('Current mapping', [0, 1, 3, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0.0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 2)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 1.0) ,
('Node mapping at start', [0, 1, 5, 3, 2]) ,
('Triple match number at start:', 1.0) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([4, 1, 5, 3, 2],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 4, 5, 3, 2],) ,
('saved value', 0.0) ,
('Remap node', 2, 'from ', 5, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2],) ,
('saved value', 1.0) ,
('Remap node', 3, 'from ', 3, 'to', 4) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2],) ,
('saved value', 3.0) ,
('Remap node', 4, 'from ', 2, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 5, 3, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 0, 5, 3, 2],) ,
('Computing match for mapping',) ,
([1, 0, 5, 3, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 1, 5, 3, 2],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([5, 1, 0, 3, 2],) ,
('Computing match for mapping',) ,
([5, 1, 0, 3, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 5, 3, 2],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([3, 1, 5, 0, 2],) ,
('Computing match for mapping',) ,
([3, 1, 5, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -0.7306513375400862) ,
([2, 1, 5, 3, 0],) ,
('Computing match for mapping',) ,
([2, 1, 5, 3, 0],) ,
('saved value', 0.26934866245991385) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 5) ,
([0, 1, 5, 3, 2],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 5, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 5, 1, 3, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 5, 3, 2],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 3, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 2, 5, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, 5, 3, 1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 3) ,
([0, 1, 5, 3, 2],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 1, 3, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 2],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 1.0) ,
([0, 1, 5, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 3],) ,
('saved value', 2.0) ,
('Use move gain',) ,
('Original mapping', [0, 1, 5, 3, 2]) ,
('Current mapping', [0, 1, 5, 4, 2]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 3.0) ,
('Current mapping:', [0, 1, 5, 4, 2]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([3, 1, 5, 4, 2],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 2],) ,
('saved value', 2.0) ,
('Remap node', 2, 'from ', 5, 'to', 3) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2],) ,
('saved value', 4.0) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2],) ,
('saved value', 1.0) ,
('Remap node', 4, 'from ', 2, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 5, 4, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 0, 5, 4, 2],) ,
('Computing match for mapping',) ,
([1, 0, 5, 4, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 1, 5, 4, 2],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([5, 1, 0, 4, 2],) ,
('Computing match for mapping',) ,
([5, 1, 0, 4, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 5, 0, 2],) ,
('Computing match for mapping',) ,
([4, 1, 5, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -1.730651337540086) ,
([2, 1, 5, 4, 0],) ,
('Computing match for mapping',) ,
([2, 1, 5, 4, 0],) ,
('saved value', 1.269348662459914) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 5) ,
([0, 1, 5, 4, 2],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 5, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 2],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 4, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 5, 1, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 2, 5, 4, 1],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 2.0) ,
([0, 1, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 4],) ,
('saved value', 1.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 5, 4, 2]) ,
('Current mapping', [0, 1, 2, 4, 5]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 5.0) ,
('Current mapping:', [0, 1, 2, 4, 5]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5],) ,
('saved value', 3.0) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5],) ,
('saved value', 4.0) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5],) ,
('saved value', 6.0) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5],) ,
('saved value', 2.0) ,
('Remap node', 4, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 0, 2, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 1, 0, 4, 5],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -3.730651337540086) ,
([5, 1, 2, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0],) ,
('saved value', 1.269348662459914) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([0, 2, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 2, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 5, 2, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4],) ,
('saved value', 1.0) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 4, 5]) ,
('Current mapping', [0, 1, 3, 4, 5]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 1, 3, 4, 5]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 1, 3, 4, 5],) ,
('saved value', 4.0) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 4, 5],) ,
('saved value', 5.0) ,
('Remap node', 2, 'from ', 3, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5],) ,
('saved value', 5.0) ,
('Remap node', 3, 'from ', 4, 'to', 2) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5],) ,
('saved value', 3.0) ,
('Remap node', 4, 'from ', 5, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 0, 3, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 3, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 5],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 3, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 3, 0, 5],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -3.730651337540086) ,
([5, 1, 3, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 3, 4, 0],) ,
('saved value', 2.269348662459914) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 3, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 5],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 5, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 4) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 3],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 3, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 4],) ,
('saved value', 2.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 3, 4, 5]) ,
('Current mapping', [0, 1, 3, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([2, 5, 4, 1, 3],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 3)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [2, 5, 4, 1, 3]) ,
('Triple match number at start:', 0.0) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 4, 1, 3],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 5, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 0, 4, 1, 3],) ,
('saved value', 0.0) ,
('Remap node', 2, 'from ', 4, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 5, 0, 1, 3],) ,
('saved value', 0.0) ,
('Remap node', 3, 'from ', 1, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 5, 4, 0, 3],) ,
('saved value', 0.0) ,
('Remap node', 4, 'from ', 3, 'to', 0) ,
('Move gain:', 0.26934866245991385) ,
('Computing match for mapping',) ,
([2, 5, 4, 1, 0],) ,
('saved value', 0.26934866245991385) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 5) ,
([2, 5, 4, 1, 3],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 2) ,
('Swap gain:', 0.0) ,
([5, 2, 4, 1, 3],) ,
('Computing match for mapping',) ,
([5, 2, 4, 1, 3],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 4) ,
([2, 5, 4, 1, 3],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([4, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([4, 5, 2, 1, 3],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 1) ,
([2, 5, 4, 1, 3],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', 1.0) ,
([1, 5, 4, 2, 3],) ,
('Computing match for mapping',) ,
([1, 5, 4, 2, 3],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 3) ,
([2, 5, 4, 1, 3],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 5, 4, 1, 2],) ,
('Computing match for mapping',) ,
([3, 5, 4, 1, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 4) ,
([2, 5, 4, 1, 3],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 5) ,
('Swap gain:', 0.0) ,
([2, 4, 5, 1, 3],) ,
('Computing match for mapping',) ,
([2, 4, 5, 1, 3],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 1) ,
([2, 5, 4, 1, 3],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 5) ,
('Swap gain:', 0.0) ,
([2, 1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 1, 4, 5, 3],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 3) ,
([2, 5, 4, 1, 3],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 5) ,
('Swap gain:', 2.0) ,
([2, 3, 4, 1, 5],) ,
('Computing match for mapping',) ,
([2, 3, 4, 1, 5],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 1) ,
([2, 5, 4, 1, 3],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', 1.0) ,
([2, 5, 1, 4, 3],) ,
('Computing match for mapping',) ,
([2, 5, 1, 4, 3],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 3) ,
([2, 5, 4, 1, 3],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([2, 5, 3, 1, 4],) ,
('Computing match for mapping',) ,
([2, 5, 3, 1, 4],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 3) ,
([2, 5, 4, 1, 3],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', 0.0) ,
([2, 5, 4, 3, 1],) ,
('Computing match for mapping',) ,
([2, 5, 4, 3, 1],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [2, 5, 4, 1, 3]) ,
('Current mapping', [2, 3, 4, 1, 5]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 2.0) ,
('Current mapping:', [2, 3, 4, 1, 5]) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 5],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 3, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 0, 4, 1, 5],) ,
('saved value', 1.0) ,
('Remap node', 2, 'from ', 4, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, 5],) ,
('saved value', 2.0) ,
('Remap node', 3, 'from ', 1, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 3, 4, 0, 5],) ,
('saved value', 2.0) ,
('Remap node', 4, 'from ', 5, 'to', 0) ,
('Move gain:', -0.7306513375400862) ,
('Computing match for mapping',) ,
([2, 3, 4, 1, 0],) ,
('saved value', 1.269348662459914) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 3) ,
([2, 3, 4, 1, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 2) ,
('Swap gain:', -1.0) ,
([3, 2, 4, 1, 5],) ,
('Computing match for mapping',) ,
([3, 2, 4, 1, 5],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 4) ,
([2, 3, 4, 1, 5],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 2) ,
('Swap gain:', -1.0) ,
([4, 3, 2, 1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 5],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 1) ,
([2, 3, 4, 1, 5],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([1, 3, 4, 2, 5],) ,
('Computing match for mapping',) ,
([1, 3, 4, 2, 5],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 5) ,
([2, 3, 4, 1, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([5, 3, 4, 1, 2],) ,
('Computing match for mapping',) ,
([5, 3, 4, 1, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 4) ,
([2, 3, 4, 1, 5],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 3) ,
('Swap gain:', 0.0) ,
([2, 4, 3, 1, 5],) ,
('Computing match for mapping',) ,
([2, 4, 3, 1, 5],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 1) ,
([2, 3, 4, 1, 5],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', -1.0) ,
([2, 1, 4, 3, 5],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 5],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 5) ,
([2, 3, 4, 1, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -2.0) ,
([2, 5, 4, 1, 3],) ,
('Computing match for mapping',) ,
([2, 5, 4, 1, 3],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 1) ,
([2, 3, 4, 1, 5],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', 2.0) ,
([2, 3, 1, 4, 5],) ,
('Computing match for mapping',) ,
([2, 3, 1, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 5) ,
([2, 3, 4, 1, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -1.0) ,
([2, 3, 5, 1, 4],) ,
('Computing match for mapping',) ,
([2, 3, 5, 1, 4],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 5) ,
([2, 3, 4, 1, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([2, 3, 4, 5, 1],) ,
('saved value', 1.0) ,
('Use swap gain',) ,
('Original mapping', [2, 3, 4, 1, 5]) ,
('Current mapping', [2, 3, 1, 4, 5]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [2, 3, 1, 4, 5]) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 5],) ,
('saved value', 4.0) ,
('Remap node', 1, 'from ', 3, 'to', 0) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 0, 1, 4, 5],) ,
('saved value', 3.0) ,
('Remap node', 2, 'from ', 1, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 3, 0, 4, 5],) ,
('saved value', 4.0) ,
('Remap node', 3, 'from ', 4, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 3, 1, 0, 5],) ,
('saved value', 2.0) ,
('Remap node', 4, 'from ', 5, 'to', 0) ,
('Move gain:', -1.730651337540086) ,
('Computing match for mapping',) ,
([2, 3, 1, 4, 0],) ,
('saved value', 2.269348662459914) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 3) ,
([2, 3, 1, 4, 5],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 2) ,
('Swap gain:', -1.0) ,
([3, 2, 1, 4, 5],) ,
('Computing match for mapping',) ,
([3, 2, 1, 4, 5],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 3, 1, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', -1.0) ,
([1, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([1, 3, 2, 4, 5],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 4) ,
([2, 3, 1, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([4, 3, 1, 2, 5],) ,
('Computing match for mapping',) ,
([4, 3, 1, 2, 5],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 5) ,
([2, 3, 1, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([5, 3, 1, 4, 2],) ,
('Computing match for mapping',) ,
([5, 3, 1, 4, 2],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([2, 3, 1, 4, 5],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', 0.0) ,
([2, 1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([2, 1, 3, 4, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 4) ,
([2, 3, 1, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -3.0) ,
([2, 4, 1, 3, 5],) ,
('Computing match for mapping',) ,
([2, 4, 1, 3, 5],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 5) ,
([2, 3, 1, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([2, 5, 1, 4, 3],) ,
('Computing match for mapping',) ,
([2, 5, 1, 4, 3],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 4) ,
([2, 3, 1, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([2, 3, 4, 1, 5],) ,
('Computing match for mapping',) ,
([2, 3, 4, 1, 5],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 5) ,
([2, 3, 1, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([2, 3, 5, 4, 1],) ,
('Computing match for mapping',) ,
([2, 3, 5, 4, 1],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([2, 3, 1, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -3.0) ,
([2, 3, 1, 5, 4],) ,
('Computing match for mapping',) ,
([2, 3, 1, 5, 4],) ,
('saved value', 1.0) ,
('no move/swap gain found',) ,
('Original mapping', [2, 3, 1, 4, 5]) ,
('Current mapping', [2, 3, 1, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 6.0) ,
('best node mapping', [0, 1, 3, 4, 5]) ,
('Best node mapping alignment:', 'a0(count-04)-b0(see-01) a1(hyperlink)-b1(thing) a2(page)-b3(page) a3(vote-01)-b4(vote-01) a4(support-01)-b5(support-01)') ,
('F-score:', 0.5454545454545454) ,
Smatch score F1 0.545
('AMR pair', 11) ,
('============================================',) ,
('AMR 1 (one-line):', '(a0 / arrest-01:ARG1 (p0 / person:ARG0-of (c0 / country:name (n0 / name:op1 "Russia" )):ARG0-of (l0 / lead-02:ARG1 (o0 / oppose-01))):location (h0 / house))') ,
('AMR 2 (one-line):', '(p0 / place-01:ARG1 (p1 / person:ARG0-of (c0 / country:name (n0 / name:op1 "Russia" )):ARG0-of (l0 / lead-02:ARG1 (o0 / oppose-01))):ARG2 (u0 / under:op1 (s0 / strike-01:ARG0 (g0 / government-organization:name (n1 / name:op1 "House":op2 "House" )))))') ,
('Instance triples of AMR 1:', 7) ,
([('instance', 'a0', 'arrest-01'), ('instance', 'a1', 'person'), ('instance', 'a2', 'country'), ('instance', 'a3', 'name'), ('instance', 'a4', 'lead-02'), ('instance', 'a5', 'oppose-01'), ('instance', 'a6', 'house')],) ,
('Attribute triples of AMR 1:', 2) ,
([('TOP', 'a0', 'arrest-01'), ('op1', 'a3', 'Russia_')],) ,
('Relation triples of AMR 1:', 6) ,
([('ARG1', 'a0', 'a1'), ('location', 'a0', 'a6'), ('ARG0', 'a2', 'a1'), ('name', 'a2', 'a3'), ('ARG0', 'a4', 'a1'), ('ARG1', 'a4', 'a5')],) ,
('Instance triples of AMR 2:', 10) ,
([('instance', 'b0', 'place-01'), ('instance', 'b1', 'person'), ('instance', 'b2', 'country'), ('instance', 'b3', 'name'), ('instance', 'b4', 'lead-02'), ('instance', 'b5', 'oppose-01'), ('instance', 'b6', 'under'), ('instance', 'b7', 'strike-01'), ('instance', 'b8', 'government-organization'), ('instance', 'b9', 'name')],) ,
('Attribute triples of AMR 2:', 4) ,
([('TOP', 'b0', 'place-01'), ('op1', 'b3', 'Russia_'), ('op1', 'b9', 'House_'), ('op2', 'b9', 'House_')],) ,
('Relation triples of AMR 2:', 9) ,
([('ARG1', 'b0', 'b1'), ('ARG2', 'b0', 'b6'), ('ARG0', 'b2', 'b1'), ('name', 'b2', 'b3'), ('ARG0', 'b4', 'b1'), ('ARG1', 'b4', 'b5'), ('op1', 'b6', 'b7'), ('ARG0', 'b7', 'b8'), ('name', 'b8', 'b9')],) ,
('Similarity', 'arrest-01', 'place-01', 0.0) ,
('Similarity', 'arrest-01', 'person', 0.0) ,
('Similarity', 'arrest-01', 'country', 0.0) ,
('Similarity', 'arrest-01', 'name', 0.0) ,
('Similarity', 'arrest-01', 'lead-02', 0.0) ,
('Similarity', 'arrest-01', 'oppose-01', 0.0) ,
('Similarity', 'arrest-01', 'under', 0.0) ,
('Similarity', 'arrest-01', 'strike-01', 0.0) ,
('Similarity', 'arrest-01', 'government-organization', 0.0) ,
('Similarity', 'person', 'place-01', 0.27907863326659615) ,
('Similarity', 'person', 'person', 1.0) ,
('Similarity', 'person', 'country', 0.0) ,
('Similarity', 'person', 'name', 0.5223025907899909) ,
('Similarity', 'person', 'lead-02', 0.0) ,
('Similarity', 'person', 'oppose-01', 0.0) ,
('Similarity', 'person', 'under', 0.0) ,
('Similarity', 'person', 'strike-01', 0.0) ,
('Similarity', 'person', 'government-organization', 0.5069831227987472) ,
('Similarity', 'country', 'place-01', 0.33336970380839753) ,
('Similarity', 'country', 'country', 1.0) ,
('Similarity', 'country', 'name', 0.0) ,
('Similarity', 'country', 'lead-02', 0.0) ,
('Similarity', 'country', 'oppose-01', 0.0) ,
('Similarity', 'country', 'under', 0.6342159673569299) ,
('Similarity', 'country', 'strike-01', 0.0) ,
('Similarity', 'country', 'government-organization', 0.7307308635240672) ,
('Similarity', 'name', 'place-01', 0.2671511968517025) ,
('Similarity', 'name', 'name', 1.0) ,
('Similarity', 'name', 'lead-02', 0.0) ,
('Similarity', 'name', 'oppose-01', 0.0) ,
('Similarity', 'name', 'under', 0.5839842751147758) ,
('Similarity', 'name', 'strike-01', 0.0) ,
('Similarity', 'name', 'government-organization', 0.0) ,
('Similarity', 'lead-02', 'place-01', 0.25076851105563075) ,
('Similarity', 'lead-02', 'lead-02', 1.0) ,
('Similarity', 'lead-02', 'oppose-01', 0.0) ,
('Similarity', 'lead-02', 'under', 0.0) ,
('Similarity', 'lead-02', 'strike-01', 0.0) ,
('Similarity', 'lead-02', 'government-organization', 0.0) ,
('Similarity', 'oppose-01', 'place-01', 0.0) ,
('Similarity', 'oppose-01', 'oppose-01', 1.0) ,
('Similarity', 'oppose-01', 'under', 0.0) ,
('Similarity', 'oppose-01', 'strike-01', 0.0) ,
('Similarity', 'oppose-01', 'government-organization', 0.0) ,
('Similarity', 'house', 'place-01', 0.2620451775185415) ,
('Similarity', 'house', 'person', 0.0) ,
('Similarity', 'house', 'country', 0.5062493250080999) ,
('Similarity', 'house', 'name', 0.0) ,
('Similarity', 'house', 'lead-02', 0.0) ,
('Similarity', 'house', 'oppose-01', 0.0) ,
('Similarity', 'house', 'under', 0.5304485942473737) ,
('Similarity', 'house', 'strike-01', 0.0) ,
('Similarity', 'house', 'government-organization', 0.5488519617984917) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.0, (1, 1): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0}, (0, 3): {-1: 0.0}, (0, 4): {-1: 0.0, (1, 5): 1}, (0, 5): {-1: 0.0}, (0, 6): {-1: 0.0}, (0, 7): {-1: 0.0}, (0, 8): {-1: 0.0}, (0, 9): {-1: 0.0}, (1, 0): {-1: 0.27907863326659615}, (1, 1): {-1: 1.0, (0, 0): 1, (2, 2): 1, (2, 4): 1, (4, 2): 1, (4, 4): 1}, (1, 2): {-1: 0.0}, (1, 3): {-1: 0.5223025907899909}, (1, 4): {-1: 0.0}, (1, 5): {-1: 0.0, (0, 4): 1}, (1, 6): {-1: 0.0}, (1, 7): {-1: 0.0}, (1, 8): {-1: 0.5069831227987472, (2, 7): 1, (4, 7): 1}, (1, 9): {-1: 0.5223025907899909}, (2, 0): {-1: 0.33336970380839753}, (2, 1): {-1: 0.0}, (2, 2): {-1: 1.0, (1, 1): 1, (3, 3): 1}, (2, 3): {-1: 0.0}, (2, 4): {-1: 0.0, (1, 1): 1}, (2, 5): {-1: 0.0}, (2, 6): {-1: 0.6342159673569299}, (2, 7): {-1: 0.0, (1, 8): 1}, (2, 8): {-1: 0.7307308635240672, (3, 9): 1}, (2, 9): {-1: 0.0}, (3, 0): {-1: 0.2671511968517025}, (3, 1): {-1: 0.5223025907899909}, (3, 2): {-1: 0.0}, (3, 3): {-1: 2.0, (2, 2): 1}, (3, 4): {-1: 0.0}, (3, 5): {-1: 0.0}, (3, 6): {-1: 0.5839842751147758}, (3, 7): {-1: 0.0}, (3, 8): {-1: 0.0}, (3, 9): {-1: 1.0, (2, 8): 1}, (4, 0): {-1: 0.25076851105563075, (5, 1): 1}, (4, 1): {-1: 0.0}, (4, 2): {-1: 0.0, (1, 1): 1}, (4, 3): {-1: 0.0}, (4, 4): {-1: 1.0, (1, 1): 1, (5, 5): 1}, (4, 5): {-1: 0.0}, (4, 6): {-1: 0.0}, (4, 7): {-1: 0.0, (1, 8): 1}, (4, 8): {-1: 0.0}, (4, 9): {-1: 0.0}, (5, 0): {-1: 0.0}, (5, 1): {-1: 0.0, (4, 0): 1}, (5, 2): {-1: 0.0}, (5, 3): {-1: 0.0}, (5, 4): {-1: 0.0}, (5, 5): {-1: 1.0, (4, 4): 1}, (5, 6): {-1: 0.0}, (5, 7): {-1: 0.0}, (5, 8): {-1: 0.0}, (5, 9): {-1: 0.0}, (6, 0): {-1: 0.2620451775185415}, (6, 1): {-1: 0.0}, (6, 2): {-1: 0.5062493250080999}, (6, 3): {-1: 0.0}, (6, 4): {-1: 0.0}, (6, 5): {-1: 0.0}, (6, 6): {-1: 0.5304485942473737}, (6, 7): {-1: 0.0}, (6, 8): {-1: 0.5488519617984917}, (6, 9): {-1: 0.0}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0.0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('relation match with', (2, 2), 1) ,
('relation match with', (4, 4), 1) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1.0) ,
('relation match with', (3, 3), 1) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 2.0) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 1.0) ,
('relation match with', (5, 5), 1) ,
('node_pair', (5, 5)) ,
('instance/attribute match', 1.0) ,
('node_pair', (6, 7)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 11.0) ,
('Node mapping at start', [0, 1, 2, 3, 4, 5, 7]) ,
('Triple match number at start:', 11.0) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 7],) ,
('saved value', 10.0) ,
('Remap node', 0, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 5, 7],) ,
('saved value', 10.0) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 4, 5, 7],) ,
('saved value', 10.0) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 7],) ,
('saved value', 7.0) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -3.493016877201253) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 5, 7],) ,
('saved value', 7.506983122798747) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 4, 5, 7],) ,
('saved value', 7.522302590789991) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -2.36578403264307) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 7],) ,
('saved value', 8.63421596735693) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -2.2692691364759328) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, 7],) ,
('saved value', 8.730730863524068) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 3, 4, 5, 7],) ,
('saved value', 8.0) ,
('Remap node', 3, 'from ', 3, 'to', 6) ,
('Move gain:', -2.416015724885224) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 7],) ,
('saved value', 8.583984275114776) ,
('Remap node', 3, 'from ', 3, 'to', 8) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 4, 5, 7],) ,
('saved value', 8.0) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, 7],) ,
('saved value', 9.0) ,
('Remap node', 4, 'from ', 4, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 7],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 4, 'to', 8) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 8, 5, 7],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 4, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 9, 5, 7],) ,
('saved value', 8.0) ,
('Remap node', 5, 'from ', 5, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 7],) ,
('saved value', 9.0) ,
('Remap node', 5, 'from ', 5, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 8, 7],) ,
('saved value', 9.0) ,
('Remap node', 5, 'from ', 5, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 9, 7],) ,
('saved value', 9.0) ,
('Remap node', 6, 'from ', 7, 'to', 6) ,
('Move gain:', 0.5304485942473737) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 11.530448594247373) ,
('Remap node', 6, 'from ', 7, 'to', 8) ,
('Move gain:', 0.5488519617984917) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('saved value', 11.548851961798492) ,
('Remap node', 6, 'from ', 7, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.720921366733404) ,
([1, 0, 2, 3, 4, 5, 7],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 7],) ,
('saved value', 7.279078633266597) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.6666302961916024) ,
([2, 1, 0, 3, 4, 5, 7],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 7],) ,
('saved value', 7.333369703808398) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.7328488031482974) ,
([3, 1, 2, 0, 4, 5, 7],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 7],) ,
('saved value', 7.267151196851703) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.7492314889443694) ,
([4, 1, 2, 3, 0, 5, 7],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 7],) ,
('saved value', 7.250768511055631) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -0.7379548224814585) ,
([7, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10.26204517751854) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 1, 3, 4, 5, 7],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 7],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.955394818420018) ,
([0, 3, 2, 1, 4, 5, 7],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 7],) ,
('saved value', 5.044605181579982) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 3, 1, 5, 7],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 7],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 5, 2, 3, 4, 1, 7],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 7],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 4, 5, 1],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 7],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 7],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 5, 3, 4, 2, 7],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 7],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -2.4937506749919) ,
([0, 1, 7, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, 2],) ,
('saved value', 8.506249325008099) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 4, 3, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 7],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 7],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 7) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 7, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 5, 3],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 3, 5, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 7],) ,
('saved value', 7.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 3, 7, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, 4],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 7) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 3, 4, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 5],) ,
('saved value', 9.0) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 7]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Gain after the hill-climbing', 0.5488519617984917) ,
('Update triple match number to:', 11.548851961798492) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 8],) ,
('saved value', 7.548851961798492) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 4, 5, 8],) ,
('saved value', 7.548851961798492) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 4, 5, 8],) ,
('saved value', 8.071154552588483) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -2.36578403264307) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 8],) ,
('saved value', 9.183067929155422) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 3, 4, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 3, 'from ', 3, 'to', 6) ,
('Move gain:', -2.416015724885224) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 8],) ,
('saved value', 9.132836236913269) ,
('Remap node', 3, 'from ', 3, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 4, 'from ', 4, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 4, 'from ', 4, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 9, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 5, 'from ', 5, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 5, 'from ', 5, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 5, 'from ', 5, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 9, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 6, 'from ', 8, 'to', 6) ,
('Move gain:', -0.018403367551119487) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 11.530448594247373) ,
('Remap node', 6, 'from ', 8, 'to', 7) ,
('Move gain:', -0.5488519617984924) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('saved value', 11.0) ,
('Remap node', 6, 'from ', 8, 'to', 9) ,
('Move gain:', -0.5488519617984924) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.720921366733404) ,
([1, 0, 2, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 8],) ,
('saved value', 7.827930595065089) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.6666302961916024) ,
([2, 1, 0, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 8],) ,
('saved value', 7.88222166560689) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.7328488031482974) ,
([3, 1, 2, 0, 4, 5, 8],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 8],) ,
('saved value', 7.8160031586501955) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.7492314889443694) ,
([4, 1, 2, 3, 0, 5, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 8],) ,
('saved value', 7.799620472854123) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 3, 4, 0, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 8],) ,
('saved value', 8.548851961798492) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -1.2868067842799502) ,
([8, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10.262045177518543) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 1, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.955394818420018) ,
([0, 3, 2, 1, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 8],) ,
('saved value', 5.593457143378474) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 3, 1, 5, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 5, 2, 3, 4, 1, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -4.041868838999744) ,
([0, 8, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 5, 1],) ,
('saved value', 7.506983122798748) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 8],) ,
('saved value', 6.548851961798492) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 8],) ,
('saved value', 7.548851961798492) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 5, 3, 4, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 8],) ,
('saved value', 6.548851961798492) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -2.3118717732663248) ,
([0, 1, 8, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, 2],) ,
('saved value', 9.236980188532169) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 4, 3, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 3, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 8],) ,
('saved value', 6.548851961798492) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -3.5488519617984915) ,
([0, 1, 2, 8, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 4, 5, 3],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 3, 5, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 8],) ,
('saved value', 7.548851961798492) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -3.5488519617984915) ,
([0, 1, 2, 3, 8, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 8, 5, 4],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -2.5488519617984915) ,
([0, 1, 2, 3, 4, 8, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 8, 5],) ,
('saved value', 9.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('node_pair', (0, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 9)) ,
('instance/attribute match', 1.0) ,
('node_pair', (4, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 4)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 1.0) ,
('Node mapping at start', [7, 2, 5, 9, 6, 3, 4]) ,
('Triple match number at start:', 1.0) ,
('Remap node', 0, 'from ', 7, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 5, 9, 6, 3, 4],) ,
('saved value', 1.0) ,
('Remap node', 0, 'from ', 7, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 2, 5, 9, 6, 3, 4],) ,
('saved value', 1.0) ,
('Remap node', 0, 'from ', 7, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 2, 5, 9, 6, 3, 4],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 2, 'to', 0) ,
('Move gain:', 0.27907863326659615) ,
('Computing match for mapping',) ,
([7, 0, 5, 9, 6, 3, 4],) ,
('saved value', 1.2790786332665962) ,
('Remap node', 1, 'from ', 2, 'to', 1) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([7, 1, 5, 9, 6, 3, 4],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 2, 'to', 8) ,
('Move gain:', 0.5069831227987472) ,
('Computing match for mapping',) ,
([7, 8, 5, 9, 6, 3, 4],) ,
('saved value', 1.5069831227987471) ,
('Remap node', 2, 'from ', 5, 'to', 0) ,
('Move gain:', 0.33336970380839753) ,
('Computing match for mapping',) ,
([7, 2, 0, 9, 6, 3, 4],) ,
('saved value', 1.3333697038083976) ,
('Remap node', 2, 'from ', 5, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 1, 9, 6, 3, 4],) ,
('saved value', 1.0) ,
('Remap node', 2, 'from ', 5, 'to', 8) ,
('Move gain:', 1.7307308635240672) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('saved value', 2.7307308635240672) ,
('Remap node', 3, 'from ', 9, 'to', 0) ,
('Move gain:', -0.7328488031482975) ,
('Computing match for mapping',) ,
([7, 2, 5, 0, 6, 3, 4],) ,
('saved value', 0.2671511968517025) ,
('Remap node', 3, 'from ', 9, 'to', 1) ,
('Move gain:', -0.47769740921000914) ,
('Computing match for mapping',) ,
([7, 2, 5, 1, 6, 3, 4],) ,
('saved value', 0.5223025907899909) ,
('Remap node', 3, 'from ', 9, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 2, 5, 8, 6, 3, 4],) ,
('saved value', 0.0) ,
('Remap node', 4, 'from ', 6, 'to', 0) ,
('Move gain:', 0.25076851105563075) ,
('Computing match for mapping',) ,
([7, 2, 5, 9, 0, 3, 4],) ,
('saved value', 1.2507685110556308) ,
('Remap node', 4, 'from ', 6, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 5, 9, 1, 3, 4],) ,
('saved value', 1.0) ,
('Remap node', 4, 'from ', 6, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 5, 9, 8, 3, 4],) ,
('saved value', 1.0) ,
('Remap node', 5, 'from ', 3, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 5, 9, 6, 0, 4],) ,
('saved value', 1.0) ,
('Remap node', 5, 'from ', 3, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 5, 9, 6, 1, 4],) ,
('saved value', 1.0) ,
('Remap node', 5, 'from ', 3, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 5, 9, 6, 8, 4],) ,
('saved value', 1.0) ,
('Remap node', 6, 'from ', 4, 'to', 0) ,
('Move gain:', 0.2620451775185415) ,
('Computing match for mapping',) ,
([7, 2, 5, 9, 6, 3, 0],) ,
('saved value', 1.2620451775185415) ,
('Remap node', 6, 'from ', 4, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 5, 9, 6, 3, 1],) ,
('saved value', 1.0) ,
('Remap node', 6, 'from ', 4, 'to', 8) ,
('Move gain:', 0.5488519617984917) ,
('Computing match for mapping',) ,
([7, 2, 5, 9, 6, 3, 8],) ,
('saved value', 1.5488519617984917) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 2) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 7) ,
('Swap gain:', 0.0) ,
([2, 7, 5, 9, 6, 3, 4],) ,
('Computing match for mapping',) ,
([2, 7, 5, 9, 6, 3, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 5) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 7) ,
('Swap gain:', 0.0) ,
([5, 2, 7, 9, 6, 3, 4],) ,
('Computing match for mapping',) ,
([5, 2, 7, 9, 6, 3, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 9) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 7) ,
('Swap gain:', -1.0) ,
([9, 2, 5, 7, 6, 3, 4],) ,
('Computing match for mapping',) ,
([9, 2, 5, 7, 6, 3, 4],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 6) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 7) ,
('Swap gain:', 0.0) ,
([6, 2, 5, 9, 7, 3, 4],) ,
('Computing match for mapping',) ,
([6, 2, 5, 9, 7, 3, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 3) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', 0.0) ,
([3, 2, 5, 9, 6, 7, 4],) ,
('Computing match for mapping',) ,
([3, 2, 5, 9, 6, 7, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', 4) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', 0.0) ,
([4, 2, 5, 9, 6, 3, 7],) ,
('Computing match for mapping',) ,
([4, 2, 5, 9, 6, 3, 7],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 5) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([7, 5, 2, 9, 6, 3, 4],) ,
('Computing match for mapping',) ,
([7, 5, 2, 9, 6, 3, 4],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 9) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 2) ,
('Swap gain:', -0.47769740921000914) ,
([7, 9, 5, 2, 6, 3, 4],) ,
('Computing match for mapping',) ,
([7, 9, 5, 2, 6, 3, 4],) ,
('saved value', 0.5223025907899909) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 6) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([7, 6, 5, 9, 2, 3, 4],) ,
('Computing match for mapping',) ,
([7, 6, 5, 9, 2, 3, 4],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 3) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', 0.5223025907899909) ,
([7, 3, 5, 9, 6, 2, 4],) ,
('Computing match for mapping',) ,
([7, 3, 5, 9, 6, 2, 4],) ,
('saved value', 1.522302590789991) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 4) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', 0.5062493250080999) ,
([7, 4, 5, 9, 6, 3, 2],) ,
('Computing match for mapping',) ,
([7, 4, 5, 9, 6, 3, 2],) ,
('saved value', 1.5062493250081) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 9) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 5) ,
('Swap gain:', -1.0) ,
([7, 2, 9, 5, 6, 3, 4],) ,
('Computing match for mapping',) ,
([7, 2, 9, 5, 6, 3, 4],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 6) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', 0.6342159673569299) ,
([7, 2, 6, 9, 5, 3, 4],) ,
('Computing match for mapping',) ,
([7, 2, 6, 9, 5, 3, 4],) ,
('saved value', 1.6342159673569299) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 3) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', 1.0) ,
([7, 2, 3, 9, 6, 5, 4],) ,
('Computing match for mapping',) ,
([7, 2, 3, 9, 6, 5, 4],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 4) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 5) ,
('Swap gain:', 0.0) ,
([7, 2, 4, 9, 6, 3, 5],) ,
('Computing match for mapping',) ,
([7, 2, 4, 9, 6, 3, 5],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 6) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 9) ,
('Swap gain:', -0.4160157248852242) ,
([7, 2, 5, 6, 9, 3, 4],) ,
('Computing match for mapping',) ,
([7, 2, 5, 6, 9, 3, 4],) ,
('saved value', 0.5839842751147758) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 3) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 9) ,
('Swap gain:', 1.0) ,
([7, 2, 5, 3, 6, 9, 4],) ,
('Computing match for mapping',) ,
([7, 2, 5, 3, 6, 9, 4],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 4) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 9) ,
('Swap gain:', -1.0) ,
([7, 2, 5, 4, 6, 3, 9],) ,
('Computing match for mapping',) ,
([7, 2, 5, 4, 6, 3, 9],) ,
('saved value', 0.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 3) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([7, 2, 5, 9, 3, 6, 4],) ,
('Computing match for mapping',) ,
([7, 2, 5, 9, 3, 6, 4],) ,
('saved value', 1.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 4) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', 1.5304485942473738) ,
([7, 2, 5, 9, 4, 3, 6],) ,
('Computing match for mapping',) ,
([7, 2, 5, 9, 4, 3, 6],) ,
('saved value', 2.530448594247374) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', 0.0) ,
([7, 2, 5, 9, 6, 4, 3],) ,
('Computing match for mapping',) ,
([7, 2, 5, 9, 6, 4, 3],) ,
('saved value', 1.0) ,
('Use move gain',) ,
('Original mapping', [7, 2, 5, 9, 6, 3, 4]) ,
('Current mapping', [7, 2, 8, 9, 6, 3, 4]) ,
('Gain after the hill-climbing', 1.7307308635240672) ,
('Update triple match number to:', 2.7307308635240672) ,
('Current mapping:', [7, 2, 8, 9, 6, 3, 4]) ,
('Remap node', 0, 'from ', 7, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 8, 9, 6, 3, 4],) ,
('saved value', 2.7307308635240672) ,
('Remap node', 0, 'from ', 7, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 2, 8, 9, 6, 3, 4],) ,
('saved value', 2.7307308635240672) ,
('Remap node', 0, 'from ', 7, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 2, 8, 9, 6, 3, 4],) ,
('saved value', 2.7307308635240672) ,
('Remap node', 1, 'from ', 2, 'to', 0) ,
('Move gain:', 0.27907863326659615) ,
('Computing match for mapping',) ,
([7, 0, 8, 9, 6, 3, 4],) ,
('saved value', 3.0098094967906635) ,
('Remap node', 1, 'from ', 2, 'to', 1) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 6, 3, 4],) ,
('saved value', 3.7307308635240672) ,
('Remap node', 1, 'from ', 2, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 5, 8, 9, 6, 3, 4],) ,
('saved value', 2.7307308635240672) ,
('Remap node', 2, 'from ', 8, 'to', 0) ,
('Move gain:', -1.3973611597156697) ,
('Computing match for mapping',) ,
([7, 2, 0, 9, 6, 3, 4],) ,
('saved value', 1.3333697038083976) ,
('Remap node', 2, 'from ', 8, 'to', 1) ,
('Move gain:', -1.7307308635240672) ,
('Computing match for mapping',) ,
([7, 2, 1, 9, 6, 3, 4],) ,
('saved value', 1.0) ,
('Remap node', 2, 'from ', 8, 'to', 5) ,
('Move gain:', -1.7307308635240672) ,
('Computing match for mapping',) ,
([7, 2, 5, 9, 6, 3, 4],) ,
('saved value', 1.0) ,
('Remap node', 3, 'from ', 9, 'to', 0) ,
('Move gain:', -1.7328488031482974) ,
('Computing match for mapping',) ,
([7, 2, 8, 0, 6, 3, 4],) ,
('saved value', 0.9978820603757699) ,
('Remap node', 3, 'from ', 9, 'to', 1) ,
('Move gain:', -1.477697409210009) ,
('Computing match for mapping',) ,
([7, 2, 8, 1, 6, 3, 4],) ,
('saved value', 1.2530334543140582) ,
('Remap node', 3, 'from ', 9, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 5, 6, 3, 4],) ,
('saved value', 0.7307308635240672) ,
('Remap node', 4, 'from ', 6, 'to', 0) ,
('Move gain:', 0.25076851105563075) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 0, 3, 4],) ,
('saved value', 2.981499374579698) ,
('Remap node', 4, 'from ', 6, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 1, 3, 4],) ,
('saved value', 2.7307308635240672) ,
('Remap node', 4, 'from ', 6, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 5, 3, 4],) ,
('saved value', 2.7307308635240672) ,
('Remap node', 5, 'from ', 3, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 6, 0, 4],) ,
('saved value', 2.7307308635240672) ,
('Remap node', 5, 'from ', 3, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 6, 1, 4],) ,
('saved value', 2.7307308635240672) ,
('Remap node', 5, 'from ', 3, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 6, 5, 4],) ,
('saved value', 3.7307308635240672) ,
('Remap node', 6, 'from ', 4, 'to', 0) ,
('Move gain:', 0.2620451775185415) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 6, 3, 0],) ,
('saved value', 2.9927760410426085) ,
('Remap node', 6, 'from ', 4, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 6, 3, 1],) ,
('saved value', 2.7307308635240672) ,
('Remap node', 6, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 6, 3, 5],) ,
('saved value', 2.7307308635240672) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 2) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 7) ,
('Swap gain:', 0.0) ,
([2, 7, 8, 9, 6, 3, 4],) ,
('Computing match for mapping',) ,
([2, 7, 8, 9, 6, 3, 4],) ,
('saved value', 2.7307308635240672) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 8) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 0, '-', 8, ',', 2, '-', 7) ,
('Swap gain:', -1.7307308635240672) ,
([8, 2, 7, 9, 6, 3, 4],) ,
('Computing match for mapping',) ,
([8, 2, 7, 9, 6, 3, 4],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 9) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 7) ,
('Swap gain:', -2.0) ,
([9, 2, 8, 7, 6, 3, 4],) ,
('Computing match for mapping',) ,
([9, 2, 8, 7, 6, 3, 4],) ,
('saved value', 0.7307308635240672) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 6) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 7) ,
('Swap gain:', 0.0) ,
([6, 2, 8, 9, 7, 3, 4],) ,
('Computing match for mapping',) ,
([6, 2, 8, 9, 7, 3, 4],) ,
('saved value', 2.7307308635240672) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 3) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', 0.0) ,
([3, 2, 8, 9, 6, 7, 4],) ,
('Computing match for mapping',) ,
([3, 2, 8, 9, 6, 7, 4],) ,
('saved value', 2.7307308635240672) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', 4) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', 0.0) ,
([4, 2, 8, 9, 6, 3, 7],) ,
('Computing match for mapping',) ,
([4, 2, 8, 9, 6, 3, 7],) ,
('saved value', 2.7307308635240672) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 8) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 1, '-', 8, ',', 2, '-', 2) ,
('Swap gain:', -0.2237477407253201) ,
([7, 8, 2, 9, 6, 3, 4],) ,
('Computing match for mapping',) ,
([7, 8, 2, 9, 6, 3, 4],) ,
('saved value', 2.506983122798747) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 9) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 2) ,
('Swap gain:', -1.477697409210009) ,
([7, 9, 8, 2, 6, 3, 4],) ,
('Computing match for mapping',) ,
([7, 9, 8, 2, 6, 3, 4],) ,
('saved value', 1.2530334543140582) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 6) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([7, 6, 8, 9, 2, 3, 4],) ,
('Computing match for mapping',) ,
([7, 6, 8, 9, 2, 3, 4],) ,
('saved value', 2.7307308635240672) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 3) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', 0.5223025907899909) ,
([7, 3, 8, 9, 6, 2, 4],) ,
('Computing match for mapping',) ,
([7, 3, 8, 9, 6, 2, 4],) ,
('saved value', 3.253033454314058) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 4) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', 0.5062493250080999) ,
([7, 4, 8, 9, 6, 3, 2],) ,
('Computing match for mapping',) ,
([7, 4, 8, 9, 6, 3, 2],) ,
('saved value', 3.236980188532167) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 8, ',', 3, '-', 9) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 8) ,
('Swap gain:', -2.7307308635240672) ,
([7, 2, 9, 8, 6, 3, 4],) ,
('Computing match for mapping',) ,
([7, 2, 9, 8, 6, 3, 4],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 8, ',', 4, '-', 6) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 8) ,
('Swap gain:', -1.0965148961671374) ,
([7, 2, 6, 9, 8, 3, 4],) ,
('Computing match for mapping',) ,
([7, 2, 6, 9, 8, 3, 4],) ,
('saved value', 1.6342159673569299) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 8, ',', 5, '-', 3) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 8) ,
('Swap gain:', -1.7307308635240672) ,
([7, 2, 3, 9, 6, 8, 4],) ,
('Computing match for mapping',) ,
([7, 2, 3, 9, 6, 8, 4],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 8, ',', 6, '-', 4) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 8) ,
('Swap gain:', -1.1818789017255755) ,
([7, 2, 4, 9, 6, 3, 8],) ,
('Computing match for mapping',) ,
([7, 2, 4, 9, 6, 3, 8],) ,
('saved value', 1.5488519617984917) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 6) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 9) ,
('Swap gain:', -1.416015724885224) ,
([7, 2, 8, 6, 9, 3, 4],) ,
('Computing match for mapping',) ,
([7, 2, 8, 6, 9, 3, 4],) ,
('saved value', 1.3147151386388432) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 3) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 9) ,
('Swap gain:', 0.0) ,
([7, 2, 8, 3, 6, 9, 4],) ,
('Computing match for mapping',) ,
([7, 2, 8, 3, 6, 9, 4],) ,
('saved value', 2.7307308635240672) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 4) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 9) ,
('Swap gain:', -2.0) ,
([7, 2, 8, 4, 6, 3, 9],) ,
('Computing match for mapping',) ,
([7, 2, 8, 4, 6, 3, 9],) ,
('saved value', 0.7307308635240672) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 3) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([7, 2, 8, 9, 3, 6, 4],) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 3, 6, 4],) ,
('saved value', 2.7307308635240672) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 4) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', 1.5304485942473738) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('saved value', 4.261179457771441) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', 0.0) ,
([7, 2, 8, 9, 6, 4, 3],) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 6, 4, 3],) ,
('saved value', 2.7307308635240672) ,
('Use swap gain',) ,
('Original mapping', [7, 2, 8, 9, 6, 3, 4]) ,
('Current mapping', [7, 2, 8, 9, 4, 3, 6]) ,
('Gain after the hill-climbing', 1.5304485942473738) ,
('Update triple match number to:', 4.261179457771441) ,
('Current mapping:', [7, 2, 8, 9, 4, 3, 6]) ,
('Remap node', 0, 'from ', 7, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 8, 9, 4, 3, 6],) ,
('saved value', 4.261179457771441) ,
('Remap node', 0, 'from ', 7, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 2, 8, 9, 4, 3, 6],) ,
('saved value', 4.261179457771441) ,
('Remap node', 0, 'from ', 7, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 2, 8, 9, 4, 3, 6],) ,
('saved value', 4.261179457771441) ,
('Remap node', 1, 'from ', 2, 'to', 0) ,
('Move gain:', 0.27907863326659615) ,
('Computing match for mapping',) ,
([7, 0, 8, 9, 4, 3, 6],) ,
('saved value', 4.540258091038036) ,
('Remap node', 1, 'from ', 2, 'to', 1) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 1, 'from ', 2, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 5, 8, 9, 4, 3, 6],) ,
('saved value', 4.261179457771441) ,
('Remap node', 2, 'from ', 8, 'to', 0) ,
('Move gain:', -1.3973611597156697) ,
('Computing match for mapping',) ,
([7, 2, 0, 9, 4, 3, 6],) ,
('saved value', 2.863818298055771) ,
('Remap node', 2, 'from ', 8, 'to', 1) ,
('Move gain:', -1.7307308635240672) ,
('Computing match for mapping',) ,
([7, 2, 1, 9, 4, 3, 6],) ,
('saved value', 2.5304485942473733) ,
('Remap node', 2, 'from ', 8, 'to', 5) ,
('Move gain:', -1.7307308635240668) ,
('Computing match for mapping',) ,
([7, 2, 5, 9, 4, 3, 6],) ,
('saved value', 2.530448594247374) ,
('Remap node', 3, 'from ', 9, 'to', 0) ,
('Move gain:', -1.7328488031482974) ,
('Computing match for mapping',) ,
([7, 2, 8, 0, 4, 3, 6],) ,
('saved value', 2.528330654623143) ,
('Remap node', 3, 'from ', 9, 'to', 1) ,
('Move gain:', -1.477697409210009) ,
('Computing match for mapping',) ,
([7, 2, 8, 1, 4, 3, 6],) ,
('saved value', 2.7834820485614316) ,
('Remap node', 3, 'from ', 9, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 5, 4, 3, 6],) ,
('saved value', 2.2611794577714406) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', -0.7492314889443692) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 0, 3, 6],) ,
('saved value', 3.511947968827071) ,
('Remap node', 4, 'from ', 4, 'to', 1) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 1, 3, 6],) ,
('saved value', 3.2611794577714406) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 5, 3, 6],) ,
('saved value', 3.2611794577714406) ,
('Remap node', 5, 'from ', 3, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 4, 0, 6],) ,
('saved value', 4.261179457771441) ,
('Remap node', 5, 'from ', 3, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 4, 1, 6],) ,
('saved value', 4.261179457771441) ,
('Remap node', 5, 'from ', 3, 'to', 5) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 4, 5, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 6, 'from ', 6, 'to', 0) ,
('Move gain:', -0.26840341672883217) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 4, 3, 0],) ,
('saved value', 3.9927760410426085) ,
('Remap node', 6, 'from ', 6, 'to', 1) ,
('Move gain:', -0.5304485942473737) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 4, 3, 1],) ,
('saved value', 3.730730863524067) ,
('Remap node', 6, 'from ', 6, 'to', 5) ,
('Move gain:', -0.5304485942473737) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 4, 3, 5],) ,
('saved value', 3.730730863524067) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 2) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 7) ,
('Swap gain:', 0.0) ,
([2, 7, 8, 9, 4, 3, 6],) ,
('Computing match for mapping',) ,
([2, 7, 8, 9, 4, 3, 6],) ,
('saved value', 4.261179457771441) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 8) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 0, '-', 8, ',', 2, '-', 7) ,
('Swap gain:', -1.7307308635240672) ,
([8, 2, 7, 9, 4, 3, 6],) ,
('Computing match for mapping',) ,
([8, 2, 7, 9, 4, 3, 6],) ,
('saved value', 2.5304485942473733) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 9) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 7) ,
('Swap gain:', -2.0) ,
([9, 2, 8, 7, 4, 3, 6],) ,
('Computing match for mapping',) ,
([9, 2, 8, 7, 4, 3, 6],) ,
('saved value', 2.2611794577714406) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 4) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -1.0) ,
([4, 2, 8, 9, 7, 3, 6],) ,
('Computing match for mapping',) ,
([4, 2, 8, 9, 7, 3, 6],) ,
('saved value', 3.2611794577714406) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 3) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', 0.0) ,
([3, 2, 8, 9, 4, 7, 6],) ,
('Computing match for mapping',) ,
([3, 2, 8, 9, 4, 7, 6],) ,
('saved value', 4.261179457771441) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', 6) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -0.5304485942473737) ,
([6, 2, 8, 9, 4, 3, 7],) ,
('Computing match for mapping',) ,
([6, 2, 8, 9, 4, 3, 7],) ,
('saved value', 3.730730863524067) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 8) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 1, '-', 8, ',', 2, '-', 2) ,
('Swap gain:', -0.2237477407253201) ,
([7, 8, 2, 9, 4, 3, 6],) ,
('Computing match for mapping',) ,
([7, 8, 2, 9, 4, 3, 6],) ,
('saved value', 4.03743171704612) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 9) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 2) ,
('Swap gain:', -1.477697409210009) ,
([7, 9, 8, 2, 4, 3, 6],) ,
('Computing match for mapping',) ,
([7, 9, 8, 2, 4, 3, 6],) ,
('saved value', 2.7834820485614316) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([7, 4, 8, 9, 2, 3, 6],) ,
('Computing match for mapping',) ,
([7, 4, 8, 9, 2, 3, 6],) ,
('saved value', 3.2611794577714406) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 3) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', 0.5223025907899909) ,
([7, 3, 8, 9, 4, 2, 6],) ,
('Computing match for mapping',) ,
([7, 3, 8, 9, 4, 2, 6],) ,
('saved value', 4.7834820485614316) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 6) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -0.024199269239273735) ,
([7, 6, 8, 9, 4, 3, 2],) ,
('Computing match for mapping',) ,
([7, 6, 8, 9, 4, 3, 2],) ,
('saved value', 4.236980188532167) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 8, ',', 3, '-', 9) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 8) ,
('Swap gain:', -2.7307308635240672) ,
([7, 2, 9, 8, 4, 3, 6],) ,
('Computing match for mapping',) ,
([7, 2, 9, 8, 4, 3, 6],) ,
('saved value', 1.5304485942473733) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 8, ',', 4, '-', 4) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 8) ,
('Swap gain:', -2.7307308635240672) ,
([7, 2, 4, 9, 8, 3, 6],) ,
('Computing match for mapping',) ,
([7, 2, 4, 9, 8, 3, 6],) ,
('saved value', 1.5304485942473733) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 8, ',', 5, '-', 3) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 8) ,
('Swap gain:', -1.7307308635240672) ,
([7, 2, 3, 9, 4, 8, 6],) ,
('Computing match for mapping',) ,
([7, 2, 3, 9, 4, 8, 6],) ,
('saved value', 2.5304485942473733) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 8, ',', 6, '-', 6) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 8) ,
('Swap gain:', -1.0781115286160192) ,
([7, 2, 6, 9, 4, 3, 8],) ,
('Computing match for mapping',) ,
([7, 2, 6, 9, 4, 3, 8],) ,
('saved value', 3.1830679291554214) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 4) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 9) ,
('Swap gain:', -3.0) ,
([7, 2, 8, 4, 9, 3, 6],) ,
('Computing match for mapping',) ,
([7, 2, 8, 4, 9, 3, 6],) ,
('saved value', 1.2611794577714406) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 3) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 9) ,
('Swap gain:', 0.0) ,
([7, 2, 8, 3, 4, 9, 6],) ,
('Computing match for mapping',) ,
([7, 2, 8, 3, 4, 9, 6],) ,
('saved value', 4.261179457771441) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 6) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 9) ,
('Swap gain:', -1.9464643191325979) ,
([7, 2, 8, 6, 4, 3, 9],) ,
('Computing match for mapping',) ,
([7, 2, 8, 6, 4, 3, 9],) ,
('saved value', 2.3147151386388427) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([7, 2, 8, 9, 3, 4, 6],) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 3, 4, 6],) ,
('saved value', 3.2611794577714406) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -1.5304485942473733) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 6, 3, 4],) ,
('saved value', 2.7307308635240672) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -0.5304485942473737) ,
([7, 2, 8, 9, 4, 6, 3],) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 4, 6, 3],) ,
('saved value', 3.730730863524067) ,
('Use move gain',) ,
('Original mapping', [7, 2, 8, 9, 4, 3, 6]) ,
('Current mapping', [7, 1, 8, 9, 4, 3, 6]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 6.261179457771441) ,
('Current mapping:', [7, 1, 8, 9, 4, 3, 6]) ,
('Remap node', 0, 'from ', 7, 'to', 0) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 4, 3, 6],) ,
('saved value', 7.261179457771441) ,
('Remap node', 0, 'from ', 7, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 1, 8, 9, 4, 3, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 0, 'from ', 7, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 1, 8, 9, 4, 3, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', -1.7209213667334042) ,
('Computing match for mapping',) ,
([7, 0, 8, 9, 4, 3, 6],) ,
('saved value', 4.540258091038036) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 4, 3, 6],) ,
('saved value', 4.261179457771441) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 5, 8, 9, 4, 3, 6],) ,
('saved value', 4.261179457771441) ,
('Remap node', 2, 'from ', 8, 'to', 0) ,
('Move gain:', -1.3973611597156697) ,
('Computing match for mapping',) ,
([7, 1, 0, 9, 4, 3, 6],) ,
('saved value', 4.8638182980557705) ,
('Remap node', 2, 'from ', 8, 'to', 2) ,
('Move gain:', 0.26926913647593276) ,
('Computing match for mapping',) ,
([7, 1, 2, 9, 4, 3, 6],) ,
('saved value', 6.530448594247373) ,
('Remap node', 2, 'from ', 8, 'to', 5) ,
('Move gain:', -1.7307308635240672) ,
('Computing match for mapping',) ,
([7, 1, 5, 9, 4, 3, 6],) ,
('saved value', 4.530448594247373) ,
('Remap node', 3, 'from ', 9, 'to', 0) ,
('Move gain:', -1.7328488031482974) ,
('Computing match for mapping',) ,
([7, 1, 8, 0, 4, 3, 6],) ,
('saved value', 4.528330654623144) ,
('Remap node', 3, 'from ', 9, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 2, 4, 3, 6],) ,
('saved value', 4.261179457771441) ,
('Remap node', 3, 'from ', 9, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 5, 4, 3, 6],) ,
('saved value', 4.261179457771441) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', -1.7492314889443692) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 0, 3, 6],) ,
('saved value', 4.511947968827071) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 2, 3, 6],) ,
('saved value', 5.261179457771441) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 5, 3, 6],) ,
('saved value', 4.261179457771441) ,
('Remap node', 5, 'from ', 3, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 0, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 5, 'from ', 3, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 2, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 5, 'from ', 3, 'to', 5) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('saved value', 8.26117945777144) ,
('Remap node', 6, 'from ', 6, 'to', 0) ,
('Move gain:', -0.26840341672883217) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 3, 0],) ,
('saved value', 5.9927760410426085) ,
('Remap node', 6, 'from ', 6, 'to', 2) ,
('Move gain:', -0.024199269239273735) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 3, 2],) ,
('saved value', 6.236980188532167) ,
('Remap node', 6, 'from ', 6, 'to', 5) ,
('Move gain:', -0.5304485942473737) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 3, 5],) ,
('saved value', 5.730730863524067) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 1) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 7) ,
('Swap gain:', -2.0) ,
([1, 7, 8, 9, 4, 3, 6],) ,
('Computing match for mapping',) ,
([1, 7, 8, 9, 4, 3, 6],) ,
('saved value', 4.261179457771441) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 8) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 0, '-', 8, ',', 2, '-', 7) ,
('Swap gain:', -1.7307308635240672) ,
([8, 1, 7, 9, 4, 3, 6],) ,
('Computing match for mapping',) ,
([8, 1, 7, 9, 4, 3, 6],) ,
('saved value', 4.530448594247373) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 9) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 7) ,
('Swap gain:', -2.0) ,
([9, 1, 8, 7, 4, 3, 6],) ,
('Computing match for mapping',) ,
([9, 1, 8, 7, 4, 3, 6],) ,
('saved value', 4.261179457771441) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 4) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2.0) ,
([4, 1, 8, 9, 7, 3, 6],) ,
('Computing match for mapping',) ,
([4, 1, 8, 9, 7, 3, 6],) ,
('saved value', 4.261179457771441) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 3) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', 0.0) ,
([3, 1, 8, 9, 4, 7, 6],) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 4, 7, 6],) ,
('saved value', 6.261179457771441) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', 6) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -0.5304485942473737) ,
([6, 1, 8, 9, 4, 3, 7],) ,
('Computing match for mapping',) ,
([6, 1, 8, 9, 4, 3, 7],) ,
('saved value', 5.730730863524067) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 8) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 1, '-', 8, ',', 2, '-', 1) ,
('Swap gain:', -3.22374774072532) ,
([7, 8, 1, 9, 4, 3, 6],) ,
('Computing match for mapping',) ,
([7, 8, 1, 9, 4, 3, 6],) ,
('saved value', 3.0374317170461205) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 9) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 1) ,
('Swap gain:', -2.955394818420018) ,
([7, 9, 8, 1, 4, 3, 6],) ,
('Computing match for mapping',) ,
([7, 9, 8, 1, 4, 3, 6],) ,
('saved value', 3.3057846393514225) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([7, 4, 8, 9, 1, 3, 6],) ,
('Computing match for mapping',) ,
([7, 4, 8, 9, 1, 3, 6],) ,
('saved value', 3.2611794577714406) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -1.477697409210009) ,
([7, 3, 8, 9, 4, 1, 6],) ,
('Computing match for mapping',) ,
([7, 3, 8, 9, 4, 1, 6],) ,
('saved value', 4.7834820485614316) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -2.530448594247374) ,
([7, 6, 8, 9, 4, 3, 1],) ,
('Computing match for mapping',) ,
([7, 6, 8, 9, 4, 3, 1],) ,
('saved value', 3.730730863524067) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 8, ',', 3, '-', 9) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 8) ,
('Swap gain:', -2.7307308635240672) ,
([7, 1, 9, 8, 4, 3, 6],) ,
('Computing match for mapping',) ,
([7, 1, 9, 8, 4, 3, 6],) ,
('saved value', 3.5304485942473733) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 8, ',', 4, '-', 4) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 8) ,
('Swap gain:', -2.7307308635240672) ,
([7, 1, 4, 9, 8, 3, 6],) ,
('Computing match for mapping',) ,
([7, 1, 4, 9, 8, 3, 6],) ,
('saved value', 3.5304485942473733) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 8, ',', 5, '-', 3) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 8) ,
('Swap gain:', -1.7307308635240672) ,
([7, 1, 3, 9, 4, 8, 6],) ,
('Computing match for mapping',) ,
([7, 1, 3, 9, 4, 8, 6],) ,
('saved value', 4.530448594247373) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 8, ',', 6, '-', 6) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 8) ,
('Swap gain:', -1.0781115286160192) ,
([7, 1, 6, 9, 4, 3, 8],) ,
('Computing match for mapping',) ,
([7, 1, 6, 9, 4, 3, 8],) ,
('saved value', 5.183067929155421) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 4) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 9) ,
('Swap gain:', -4.0) ,
([7, 1, 8, 4, 9, 3, 6],) ,
('Computing match for mapping',) ,
([7, 1, 8, 4, 9, 3, 6],) ,
('saved value', 2.2611794577714406) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 3) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 9) ,
('Swap gain:', 0.0) ,
([7, 1, 8, 3, 4, 9, 6],) ,
('Computing match for mapping',) ,
([7, 1, 8, 3, 4, 9, 6],) ,
('saved value', 6.261179457771441) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 6) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 9) ,
('Swap gain:', -1.9464643191325979) ,
([7, 1, 8, 6, 4, 3, 9],) ,
('Computing match for mapping',) ,
([7, 1, 8, 6, 4, 3, 9],) ,
('saved value', 4.314715138638842) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([7, 1, 8, 9, 3, 4, 6],) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 3, 4, 6],) ,
('saved value', 4.261179457771441) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2.5304485942473733) ,
([7, 1, 8, 9, 6, 3, 4],) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 6, 3, 4],) ,
('saved value', 3.7307308635240672) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -0.5304485942473737) ,
([7, 1, 8, 9, 4, 6, 3],) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 6, 3],) ,
('saved value', 5.730730863524067) ,
('Use move gain',) ,
('Original mapping', [7, 1, 8, 9, 4, 3, 6]) ,
('Current mapping', [7, 1, 8, 9, 4, 5, 6]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 8.26117945777144) ,
('Current mapping:', [7, 1, 8, 9, 4, 5, 6]) ,
('Remap node', 0, 'from ', 7, 'to', 0) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('saved value', 9.26117945777144) ,
('Remap node', 0, 'from ', 7, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 1, 8, 9, 4, 5, 6],) ,
('saved value', 8.26117945777144) ,
('Remap node', 0, 'from ', 7, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 4, 5, 6],) ,
('saved value', 8.26117945777144) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', -1.7209213667334038) ,
('Computing match for mapping',) ,
([7, 0, 8, 9, 4, 5, 6],) ,
('saved value', 6.540258091038037) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 2, 8, 9, 4, 5, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -1.477697409210009) ,
('Computing match for mapping',) ,
([7, 3, 8, 9, 4, 5, 6],) ,
('saved value', 6.7834820485614316) ,
('Remap node', 2, 'from ', 8, 'to', 0) ,
('Move gain:', -1.3973611597156697) ,
('Computing match for mapping',) ,
([7, 1, 0, 9, 4, 5, 6],) ,
('saved value', 6.8638182980557705) ,
('Remap node', 2, 'from ', 8, 'to', 2) ,
('Move gain:', 0.26926913647593276) ,
('Computing match for mapping',) ,
([7, 1, 2, 9, 4, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 2, 'from ', 8, 'to', 3) ,
('Move gain:', -1.7307308635240672) ,
('Computing match for mapping',) ,
([7, 1, 3, 9, 4, 5, 6],) ,
('saved value', 6.530448594247373) ,
('Remap node', 3, 'from ', 9, 'to', 0) ,
('Move gain:', -1.7328488031482974) ,
('Computing match for mapping',) ,
([7, 1, 8, 0, 4, 5, 6],) ,
('saved value', 6.528330654623144) ,
('Remap node', 3, 'from ', 9, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 2, 4, 5, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 3, 'from ', 9, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 3, 4, 5, 6],) ,
('saved value', 8.26117945777144) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', -2.7492314889443694) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 0, 5, 6],) ,
('saved value', 5.511947968827071) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 2, 5, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 4, 'from ', 4, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 3, 5, 6],) ,
('saved value', 5.261179457771441) ,
('Remap node', 5, 'from ', 5, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 0, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 5, 'from ', 5, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 2, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 5, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 3, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 6, 'from ', 6, 'to', 0) ,
('Move gain:', -0.26840341672883217) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 5, 0],) ,
('saved value', 7.9927760410426085) ,
('Remap node', 6, 'from ', 6, 'to', 2) ,
('Move gain:', -0.024199269239273735) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 5, 2],) ,
('saved value', 8.236980188532167) ,
('Remap node', 6, 'from ', 6, 'to', 3) ,
('Move gain:', -0.5304485942473737) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 5, 3],) ,
('saved value', 7.730730863524067) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 7, ',', 1, '-', 1) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 7) ,
('Swap gain:', -2.0) ,
([1, 7, 8, 9, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 7, 8, 9, 4, 5, 6],) ,
('saved value', 6.261179457771441) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 7, ',', 2, '-', 8) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 8, ',', 2, '-', 7) ,
('Swap gain:', -1.7307308635240672) ,
([8, 1, 7, 9, 4, 5, 6],) ,
('Computing match for mapping',) ,
([8, 1, 7, 9, 4, 5, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 7, ',', 3, '-', 9) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 7) ,
('Swap gain:', -2.0) ,
([9, 1, 8, 7, 4, 5, 6],) ,
('Computing match for mapping',) ,
([9, 1, 8, 7, 4, 5, 6],) ,
('saved value', 6.261179457771441) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 7, ',', 4, '-', 4) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -3.0) ,
([4, 1, 8, 9, 7, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 8, 9, 7, 5, 6],) ,
('saved value', 5.261179457771441) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 7, ',', 5, '-', 5) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([5, 1, 8, 9, 4, 7, 6],) ,
('Computing match for mapping',) ,
([5, 1, 8, 9, 4, 7, 6],) ,
('saved value', 6.261179457771441) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 7, ',', 6, '-', 6) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -0.5304485942473737) ,
([6, 1, 8, 9, 4, 5, 7],) ,
('Computing match for mapping',) ,
([6, 1, 8, 9, 4, 5, 7],) ,
('saved value', 7.730730863524067) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 8) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 1, '-', 8, ',', 2, '-', 1) ,
('Swap gain:', -3.22374774072532) ,
([7, 8, 1, 9, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 8, 1, 9, 4, 5, 6],) ,
('saved value', 5.03743171704612) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 9) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 1) ,
('Swap gain:', -2.955394818420018) ,
([7, 9, 8, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 9, 8, 1, 4, 5, 6],) ,
('saved value', 5.3057846393514225) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([7, 4, 8, 9, 1, 5, 6],) ,
('Computing match for mapping',) ,
([7, 4, 8, 9, 1, 5, 6],) ,
('saved value', 4.261179457771441) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([7, 5, 8, 9, 4, 1, 6],) ,
('Computing match for mapping',) ,
([7, 5, 8, 9, 4, 1, 6],) ,
('saved value', 4.261179457771441) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -2.530448594247374) ,
([7, 6, 8, 9, 4, 5, 1],) ,
('Computing match for mapping',) ,
([7, 6, 8, 9, 4, 5, 1],) ,
('saved value', 5.730730863524067) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 8, ',', 3, '-', 9) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 8) ,
('Swap gain:', -2.7307308635240672) ,
([7, 1, 9, 8, 4, 5, 6],) ,
('Computing match for mapping',) ,
([7, 1, 9, 8, 4, 5, 6],) ,
('saved value', 5.530448594247373) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 8, ',', 4, '-', 4) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 8) ,
('Swap gain:', -3.7307308635240672) ,
([7, 1, 4, 9, 8, 5, 6],) ,
('Computing match for mapping',) ,
([7, 1, 4, 9, 8, 5, 6],) ,
('saved value', 4.530448594247373) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 8, ',', 5, '-', 5) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 8) ,
('Swap gain:', -3.7307308635240672) ,
([7, 1, 5, 9, 4, 8, 6],) ,
('Computing match for mapping',) ,
([7, 1, 5, 9, 4, 8, 6],) ,
('saved value', 4.530448594247373) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 8, ',', 6, '-', 6) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 8) ,
('Swap gain:', -1.0781115286160192) ,
([7, 1, 6, 9, 4, 5, 8],) ,
('Computing match for mapping',) ,
([7, 1, 6, 9, 4, 5, 8],) ,
('saved value', 7.183067929155421) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 4) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 9) ,
('Swap gain:', -5.0) ,
([7, 1, 8, 4, 9, 5, 6],) ,
('Computing match for mapping',) ,
([7, 1, 8, 4, 9, 5, 6],) ,
('saved value', 3.2611794577714406) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 5) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 9) ,
('Swap gain:', -4.0) ,
([7, 1, 8, 5, 4, 9, 6],) ,
('Computing match for mapping',) ,
([7, 1, 8, 5, 4, 9, 6],) ,
('saved value', 4.261179457771441) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 6) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 9) ,
('Swap gain:', -1.9464643191325979) ,
([7, 1, 8, 6, 4, 5, 9],) ,
('Computing match for mapping',) ,
([7, 1, 8, 6, 4, 5, 9],) ,
('saved value', 6.314715138638842) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([7, 1, 8, 9, 5, 4, 6],) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 5, 4, 6],) ,
('saved value', 4.261179457771441) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3.530448594247374) ,
([7, 1, 8, 9, 6, 5, 4],) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 6, 5, 4],) ,
('saved value', 4.730730863524067) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -2.530448594247374) ,
([7, 1, 8, 9, 4, 6, 5],) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 6, 5],) ,
('saved value', 5.730730863524067) ,
('Use move gain',) ,
('Original mapping', [7, 1, 8, 9, 4, 5, 6]) ,
('Current mapping', [0, 1, 8, 9, 4, 5, 6]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 9.26117945777144) ,
('Current mapping:', [0, 1, 8, 9, 4, 5, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 1, 8, 9, 4, 5, 6],) ,
('saved value', 8.26117945777144) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([3, 1, 8, 9, 4, 5, 6],) ,
('saved value', 8.26117945777144) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 1, 8, 9, 4, 5, 6],) ,
('saved value', 8.26117945777144) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 2, 8, 9, 4, 5, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -2.477697409210009) ,
('Computing match for mapping',) ,
([0, 3, 8, 9, 4, 5, 6],) ,
('saved value', 6.7834820485614316) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 7, 8, 9, 4, 5, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 2, 'from ', 8, 'to', 2) ,
('Move gain:', 0.26926913647593276) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('saved value', 9.530448594247373) ,
('Remap node', 2, 'from ', 8, 'to', 3) ,
('Move gain:', -1.7307308635240672) ,
('Computing match for mapping',) ,
([0, 1, 3, 9, 4, 5, 6],) ,
('saved value', 7.530448594247373) ,
('Remap node', 2, 'from ', 8, 'to', 7) ,
('Move gain:', -1.7307308635240672) ,
('Computing match for mapping',) ,
([0, 1, 7, 9, 4, 5, 6],) ,
('saved value', 7.530448594247373) ,
('Remap node', 3, 'from ', 9, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 8, 2, 4, 5, 6],) ,
('saved value', 7.261179457771441) ,
('Remap node', 3, 'from ', 9, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, 6],) ,
('saved value', 9.26117945777144) ,
('Remap node', 3, 'from ', 9, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 8, 7, 4, 5, 6],) ,
('saved value', 7.261179457771441) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 2, 5, 6],) ,
('saved value', 7.261179457771441) ,
('Remap node', 4, 'from ', 4, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 3, 5, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 7, 5, 6],) ,
('saved value', 6.261179457771441) ,
('Remap node', 5, 'from ', 5, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 4, 2, 6],) ,
('saved value', 7.261179457771441) ,
('Remap node', 5, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 4, 3, 6],) ,
('saved value', 7.261179457771441) ,
('Remap node', 5, 'from ', 5, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 4, 7, 6],) ,
('saved value', 7.261179457771441) ,
('Remap node', 6, 'from ', 6, 'to', 2) ,
('Move gain:', -0.024199269239273735) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 4, 5, 2],) ,
('saved value', 9.236980188532167) ,
('Remap node', 6, 'from ', 6, 'to', 3) ,
('Move gain:', -0.5304485942473737) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 4, 5, 3],) ,
('saved value', 8.730730863524068) ,
('Remap node', 6, 'from ', 6, 'to', 7) ,
('Move gain:', -0.5304485942473737) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 4, 5, 7],) ,
('saved value', 8.730730863524068) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -2.720921366733404) ,
([1, 0, 8, 9, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 8, 9, 4, 5, 6],) ,
('saved value', 6.540258091038037) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 8) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 8, ',', 2, '-', 0) ,
('Swap gain:', -2.3973611597156697) ,
([8, 1, 0, 9, 4, 5, 6],) ,
('Computing match for mapping',) ,
([8, 1, 0, 9, 4, 5, 6],) ,
('saved value', 6.8638182980557705) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 9) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 0) ,
('Swap gain:', -2.7328488031482974) ,
([9, 1, 8, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([9, 1, 8, 0, 4, 5, 6],) ,
('saved value', 6.528330654623144) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.7492314889443694) ,
([4, 1, 8, 9, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 8, 9, 0, 5, 6],) ,
('saved value', 5.511947968827071) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 8, 9, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 8, 9, 4, 0, 6],) ,
('saved value', 6.261179457771441) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -1.268403416728832) ,
([6, 1, 8, 9, 4, 5, 0],) ,
('Computing match for mapping',) ,
([6, 1, 8, 9, 4, 5, 0],) ,
('saved value', 7.9927760410426085) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 8) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 1, '-', 8, ',', 2, '-', 1) ,
('Swap gain:', -4.2237477407253206) ,
([0, 8, 1, 9, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 8, 1, 9, 4, 5, 6],) ,
('saved value', 5.03743171704612) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 9) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 1) ,
('Swap gain:', -3.955394818420018) ,
([0, 9, 8, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 9, 8, 1, 4, 5, 6],) ,
('saved value', 5.3057846393514225) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 4, 8, 9, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 8, 9, 1, 5, 6],) ,
('saved value', 4.261179457771441) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 8, 9, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 8, 9, 4, 1, 6],) ,
('saved value', 4.261179457771441) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -3.530448594247374) ,
([0, 6, 8, 9, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 8, 9, 4, 5, 1],) ,
('saved value', 5.730730863524067) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 8, ',', 3, '-', 9) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 8) ,
('Swap gain:', -2.7307308635240672) ,
([0, 1, 9, 8, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 9, 8, 4, 5, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 8, ',', 4, '-', 4) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 8) ,
('Swap gain:', -3.7307308635240672) ,
([0, 1, 4, 9, 8, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 9, 8, 5, 6],) ,
('saved value', 5.530448594247373) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 8, ',', 5, '-', 5) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 8) ,
('Swap gain:', -3.7307308635240672) ,
([0, 1, 5, 9, 4, 8, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 9, 4, 8, 6],) ,
('saved value', 5.530448594247373) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 8, ',', 6, '-', 6) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 8) ,
('Swap gain:', -1.0781115286160192) ,
([0, 1, 6, 9, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 4, 5, 8],) ,
('saved value', 8.18306792915542) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 4) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 9) ,
('Swap gain:', -5.0) ,
([0, 1, 8, 4, 9, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 9, 5, 6],) ,
('saved value', 4.261179457771441) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 5) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 9) ,
('Swap gain:', -4.0) ,
([0, 1, 8, 5, 4, 9, 6],) ,
('Computing match for mapping',) ,
([0, 1, 8, 5, 4, 9, 6],) ,
('saved value', 5.261179457771441) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 6) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 9) ,
('Swap gain:', -1.9464643191325979) ,
([0, 1, 8, 6, 4, 5, 9],) ,
('Computing match for mapping',) ,
([0, 1, 8, 6, 4, 5, 9],) ,
('saved value', 7.314715138638842) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 8, 9, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 5, 4, 6],) ,
('saved value', 5.261179457771441) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3.530448594247374) ,
([0, 1, 8, 9, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 6, 5, 4],) ,
('saved value', 5.730730863524067) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -2.530448594247374) ,
([0, 1, 8, 9, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 4, 6, 5],) ,
('saved value', 6.730730863524067) ,
('Use move gain',) ,
('Original mapping', [0, 1, 8, 9, 4, 5, 6]) ,
('Current mapping', [0, 1, 2, 9, 4, 5, 6]) ,
('Gain after the hill-climbing', 0.26926913647593276) ,
('Update triple match number to:', 9.530448594247373) ,
('Current mapping:', [0, 1, 2, 9, 4, 5, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([3, 1, 2, 9, 4, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 1, 2, 9, 4, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 0, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 9, 4, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 3, 2, 9, 4, 5, 6],) ,
('saved value', 6.052751185037364) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 7, 2, 9, 4, 5, 6],) ,
('saved value', 5.530448594247373) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -3.493016877201253) ,
('Computing match for mapping',) ,
([0, 8, 2, 9, 4, 5, 6],) ,
('saved value', 6.03743171704612) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 9, 4, 5, 6],) ,
('saved value', 7.530448594247373) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 9, 4, 5, 6],) ,
('saved value', 7.530448594247373) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -0.2692691364759323) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 4, 5, 6],) ,
('saved value', 9.26117945777144) ,
('Remap node', 3, 'from ', 9, 'to', 3) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 11.530448594247373) ,
('Remap node', 3, 'from ', 9, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 3, 'from ', 9, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 4, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 4, 'from ', 4, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 3, 5, 6],) ,
('saved value', 6.530448594247373) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 7, 5, 6],) ,
('saved value', 6.530448594247373) ,
('Remap node', 4, 'from ', 4, 'to', 8) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 8, 5, 6],) ,
('saved value', 6.530448594247373) ,
('Remap node', 5, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 3, 6],) ,
('saved value', 7.530448594247373) ,
('Remap node', 5, 'from ', 5, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 7, 6],) ,
('saved value', 7.530448594247373) ,
('Remap node', 5, 'from ', 5, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 8, 6],) ,
('saved value', 7.530448594247373) ,
('Remap node', 6, 'from ', 6, 'to', 3) ,
('Move gain:', -0.5304485942473737) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, 3],) ,
('saved value', 9.0) ,
('Remap node', 6, 'from ', 6, 'to', 7) ,
('Move gain:', -0.5304485942473729) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, 7],) ,
('saved value', 9.0) ,
('Remap node', 6, 'from ', 6, 'to', 8) ,
('Move gain:', 0.018403367551119487) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, 8],) ,
('saved value', 9.548851961798492) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.720921366733404) ,
([1, 0, 2, 9, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 9, 4, 5, 6],) ,
('saved value', 5.8095272275139695) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -2.6666302961916024) ,
([2, 1, 0, 9, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 9, 4, 5, 6],) ,
('saved value', 6.8638182980557705) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 9) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 0) ,
('Swap gain:', -1.7328488031482974) ,
([9, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([9, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.797599791099076) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.7492314889443694) ,
([4, 1, 2, 9, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 9, 0, 5, 6],) ,
('saved value', 5.7812171053030035) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 9, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 9, 4, 0, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -1.268403416728832) ,
([6, 1, 2, 9, 4, 5, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 9, 4, 5, 0],) ,
('saved value', 8.26204517751854) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 2, 1, 9, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 9, 4, 5, 6],) ,
('saved value', 4.530448594247373) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 9) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 1) ,
('Swap gain:', -3.955394818420018) ,
([0, 9, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 4, 5, 6],) ,
('saved value', 5.575053775827355) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 9, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 9, 1, 5, 6],) ,
('saved value', 3.530448594247373) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 5, 2, 9, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 9, 4, 1, 6],) ,
('saved value', 3.530448594247373) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -4.530448594247374) ,
([0, 6, 2, 9, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 9, 4, 5, 1],) ,
('saved value', 4.999999999999999) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 9) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 9, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 9, 2, 4, 5, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 9, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 9, 2, 5, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 5, 9, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 9, 4, 2, 6],) ,
('saved value', 5.530448594247373) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -1.389983301882344) ,
([0, 1, 6, 9, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 4, 5, 2],) ,
('saved value', 8.140465292365029) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 4) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 9) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 9, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 9, 5, 6],) ,
('saved value', 5.530448594247373) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 5) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 9) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 5, 4, 9, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 9, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 6) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 9) ,
('Swap gain:', -0.9464643191325979) ,
([0, 1, 2, 6, 4, 5, 9],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 9],) ,
('saved value', 8.583984275114775) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 9, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 5, 4, 6],) ,
('saved value', 5.530448594247373) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3.530448594247374) ,
([0, 1, 2, 9, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 6, 5, 4],) ,
('saved value', 5.999999999999999) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -2.530448594247374) ,
([0, 1, 2, 9, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 6, 5],) ,
('saved value', 6.999999999999999) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 9, 4, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 11.530448594247373) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, 5, 6],) ,
('saved value', 10.530448594247373) ,
('Remap node', 0, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 5, 6],) ,
('saved value', 10.530448594247373) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 4, 5, 6],) ,
('saved value', 10.530448594247373) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 4, 5, 6],) ,
('saved value', 7.530448594247373) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -3.493016877201253) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 5, 6],) ,
('saved value', 8.03743171704612) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 4, 5, 6],) ,
('saved value', 8.052751185037364) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -2.2692691364759323) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, 6],) ,
('saved value', 9.26117945777144) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 3, 4, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 3, 'from ', 3, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 3, 'from ', 3, 'to', 8) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 4, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('saved value', 9.530448594247373) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 4, 'from ', 4, 'to', 8) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 8, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 4, 'from ', 4, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 9, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 5, 'from ', 5, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('saved value', 9.530448594247373) ,
('Remap node', 5, 'from ', 5, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 8, 6],) ,
('saved value', 9.530448594247373) ,
('Remap node', 5, 'from ', 5, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 9, 6],) ,
('saved value', 9.530448594247373) ,
('Remap node', 6, 'from ', 6, 'to', 7) ,
('Move gain:', -0.5304485942473729) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('saved value', 11.0) ,
('Remap node', 6, 'from ', 6, 'to', 8) ,
('Move gain:', 0.018403367551119487) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('saved value', 11.548851961798492) ,
('Remap node', 6, 'from ', 6, 'to', 9) ,
('Move gain:', -0.5304485942473729) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.720921366733404) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('saved value', 7.8095272275139695) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.6666302961916024) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('saved value', 7.8638182980557705) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.7328488031482974) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.797599791099076) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.7492314889443694) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('saved value', 7.7812171053030035) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('saved value', 8.530448594247373) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -1.268403416728832) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10.26204517751854) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('saved value', 5.530448594247373) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.955394818420018) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('saved value', 5.575053775827355) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('saved value', 5.530448594247373) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('saved value', 5.530448594247373) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -4.530448594247374) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('saved value', 6.999999999999999) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('saved value', 7.530448594247373) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -2.389983301882344) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('saved value', 9.140465292365029) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('saved value', 5.530448594247373) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -2.946464319132598) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('saved value', 8.583984275114775) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('saved value', 7.530448594247373) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3.530448594247374) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('saved value', 7.999999999999999) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -2.530448594247374) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('saved value', 9.0) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Gain after the hill-climbing', 0.018403367551119487) ,
('Update triple match number to:', 11.548851961798492) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 8],) ,
('saved value', 7.548851961798492) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 4, 5, 8],) ,
('saved value', 7.548851961798492) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 4, 5, 8],) ,
('saved value', 8.071154552588483) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -2.36578403264307) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 8],) ,
('saved value', 9.183067929155422) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 3, 4, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 3, 'from ', 3, 'to', 6) ,
('Move gain:', -2.4160157248852236) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 8],) ,
('saved value', 9.132836236913269) ,
('Remap node', 3, 'from ', 3, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 4, 'from ', 4, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 4, 'from ', 4, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 9, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 5, 'from ', 5, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 5, 'from ', 5, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 5, 'from ', 5, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 9, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 6, 'from ', 8, 'to', 6) ,
('Move gain:', -0.018403367551119487) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 11.530448594247373) ,
('Remap node', 6, 'from ', 8, 'to', 7) ,
('Move gain:', -0.5488519617984924) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('saved value', 11.0) ,
('Remap node', 6, 'from ', 8, 'to', 9) ,
('Move gain:', -0.5488519617984924) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.7209213667334033) ,
([1, 0, 2, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 8],) ,
('saved value', 7.827930595065089) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.6666302961916024) ,
([2, 1, 0, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 8],) ,
('saved value', 7.88222166560689) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.732848803148297) ,
([3, 1, 2, 0, 4, 5, 8],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 8],) ,
('saved value', 7.8160031586501955) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.7492314889443694) ,
([4, 1, 2, 3, 0, 5, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 8],) ,
('saved value', 7.799620472854123) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 3, 4, 0, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 8],) ,
('saved value', 8.548851961798492) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -1.2868067842799498) ,
([8, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10.262045177518543) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 1, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.955394818420018) ,
([0, 3, 2, 1, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 8],) ,
('saved value', 5.593457143378474) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 3, 1, 5, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 5, 2, 3, 4, 1, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -4.041868838999744) ,
([0, 8, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 5, 1],) ,
('saved value', 7.506983122798748) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 8],) ,
('saved value', 6.548851961798492) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 8],) ,
('saved value', 7.548851961798492) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 5, 3, 4, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 8],) ,
('saved value', 6.548851961798492) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -2.311871773266324) ,
([0, 1, 8, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, 2],) ,
('saved value', 9.236980188532169) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 4, 3, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 3, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 8],) ,
('saved value', 6.548851961798492) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -3.5488519617984924) ,
([0, 1, 2, 8, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 4, 5, 3],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 3, 5, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 8],) ,
('saved value', 7.548851961798492) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -3.5488519617984924) ,
([0, 1, 2, 3, 8, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 8, 5, 4],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -2.5488519617984924) ,
([0, 1, 2, 3, 4, 8, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 8, 5],) ,
('saved value', 9.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('node_pair', (0, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 6)) ,
('instance/attribute match', 0.6342159673569299) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 2.0) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 7)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 2.63421596735693) ,
('Node mapping at start', [1, 4, 6, 3, 5, 0, 7]) ,
('Triple match number at start:', 2.63421596735693) ,
('Remap node', 0, 'from ', 1, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 4, 6, 3, 5, 0, 7],) ,
('saved value', 2.63421596735693) ,
('Remap node', 0, 'from ', 1, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 4, 6, 3, 5, 0, 7],) ,
('saved value', 2.63421596735693) ,
('Remap node', 0, 'from ', 1, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 4, 6, 3, 5, 0, 7],) ,
('saved value', 2.63421596735693) ,
('Remap node', 1, 'from ', 4, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 2, 6, 3, 5, 0, 7],) ,
('saved value', 2.63421596735693) ,
('Remap node', 1, 'from ', 4, 'to', 8) ,
('Move gain:', 0.5069831227987472) ,
('Computing match for mapping',) ,
([1, 8, 6, 3, 5, 0, 7],) ,
('saved value', 3.141199090155677) ,
('Remap node', 1, 'from ', 4, 'to', 9) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([1, 9, 6, 3, 5, 0, 7],) ,
('saved value', 3.156518558146921) ,
('Remap node', 2, 'from ', 6, 'to', 2) ,
('Move gain:', 1.3657840326430701) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('saved value', 4.0) ,
('Remap node', 2, 'from ', 6, 'to', 8) ,
('Move gain:', 0.09651489616713738) ,
('Computing match for mapping',) ,
([1, 4, 8, 3, 5, 0, 7],) ,
('saved value', 2.7307308635240672) ,
('Remap node', 2, 'from ', 6, 'to', 9) ,
('Move gain:', -0.6342159673569299) ,
('Computing match for mapping',) ,
([1, 4, 9, 3, 5, 0, 7],) ,
('saved value', 2.0) ,
('Remap node', 3, 'from ', 3, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 4, 6, 2, 5, 0, 7],) ,
('saved value', 0.6342159673569299) ,
('Remap node', 3, 'from ', 3, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 4, 6, 8, 5, 0, 7],) ,
('saved value', 0.6342159673569299) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 4, 6, 9, 5, 0, 7],) ,
('saved value', 1.6342159673569299) ,
('Remap node', 4, 'from ', 5, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 4, 6, 3, 2, 0, 7],) ,
('saved value', 2.63421596735693) ,
('Remap node', 4, 'from ', 5, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 4, 6, 3, 8, 0, 7],) ,
('saved value', 2.63421596735693) ,
('Remap node', 4, 'from ', 5, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 4, 6, 3, 9, 0, 7],) ,
('saved value', 2.63421596735693) ,
('Remap node', 5, 'from ', 0, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 4, 6, 3, 5, 2, 7],) ,
('saved value', 2.63421596735693) ,
('Remap node', 5, 'from ', 0, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 4, 6, 3, 5, 8, 7],) ,
('saved value', 2.63421596735693) ,
('Remap node', 5, 'from ', 0, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 4, 6, 3, 5, 9, 7],) ,
('saved value', 2.63421596735693) ,
('Remap node', 6, 'from ', 7, 'to', 2) ,
('Move gain:', 0.5062493250080999) ,
('Computing match for mapping',) ,
([1, 4, 6, 3, 5, 0, 2],) ,
('saved value', 3.14046529236503) ,
('Remap node', 6, 'from ', 7, 'to', 8) ,
('Move gain:', 0.5488519617984917) ,
('Computing match for mapping',) ,
([1, 4, 6, 3, 5, 0, 8],) ,
('saved value', 3.1830679291554214) ,
('Remap node', 6, 'from ', 7, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 4, 6, 3, 5, 0, 9],) ,
('saved value', 2.63421596735693) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 4) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 1) ,
('Swap gain:', 1.0) ,
([4, 1, 6, 3, 5, 0, 7],) ,
('Computing match for mapping',) ,
([4, 1, 6, 3, 5, 0, 7],) ,
('saved value', 3.63421596735693) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 6) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -0.6342159673569299) ,
([6, 4, 1, 3, 5, 0, 7],) ,
('Computing match for mapping',) ,
([6, 4, 1, 3, 5, 0, 7],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 3) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -1.477697409210009) ,
([3, 4, 6, 1, 5, 0, 7],) ,
('Computing match for mapping',) ,
([3, 4, 6, 1, 5, 0, 7],) ,
('saved value', 1.1565185581469208) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 5) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', 0.0) ,
([5, 4, 6, 3, 1, 0, 7],) ,
('Computing match for mapping',) ,
([5, 4, 6, 3, 1, 0, 7],) ,
('saved value', 2.63421596735693) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 0) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 4, 6, 3, 5, 1, 7],) ,
('Computing match for mapping',) ,
([0, 4, 6, 3, 5, 1, 7],) ,
('saved value', 2.63421596735693) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 1, ',', 6, '-', 7) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', 0.0) ,
([7, 4, 6, 3, 5, 0, 1],) ,
('Computing match for mapping',) ,
([7, 4, 6, 3, 5, 0, 1],) ,
('saved value', 2.63421596735693) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 6) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 4) ,
('Swap gain:', -0.6342159673569299) ,
([1, 6, 4, 3, 5, 0, 7],) ,
('Computing match for mapping',) ,
([1, 6, 4, 3, 5, 0, 7],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 3) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', -1.477697409210009) ,
([1, 3, 6, 4, 5, 0, 7],) ,
('Computing match for mapping',) ,
([1, 3, 6, 4, 5, 0, 7],) ,
('saved value', 1.1565185581469208) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 5) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([1, 5, 6, 3, 4, 0, 7],) ,
('Computing match for mapping',) ,
([1, 5, 6, 3, 4, 0, 7],) ,
('saved value', 3.63421596735693) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 4, ',', 5, '-', 0) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 4) ,
('Swap gain:', 0.27907863326659615) ,
([1, 0, 6, 3, 5, 4, 7],) ,
('Computing match for mapping',) ,
([1, 0, 6, 3, 5, 4, 7],) ,
('saved value', 2.913294600623526) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 4, ',', 6, '-', 7) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', 0.0) ,
([1, 7, 6, 3, 5, 0, 4],) ,
('Computing match for mapping',) ,
([1, 7, 6, 3, 5, 0, 4],) ,
('saved value', 2.63421596735693) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 3) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 6) ,
('Swap gain:', -2.050231692242154) ,
([1, 4, 3, 6, 5, 0, 7],) ,
('Computing match for mapping',) ,
([1, 4, 3, 6, 5, 0, 7],) ,
('saved value', 0.5839842751147759) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 5) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 6) ,
('Swap gain:', -0.6342159673569299) ,
([1, 4, 5, 3, 6, 0, 7],) ,
('Computing match for mapping',) ,
([1, 4, 5, 3, 6, 0, 7],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 0) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 6) ,
('Swap gain:', -0.30084626354853233) ,
([1, 4, 0, 3, 5, 6, 7],) ,
('Computing match for mapping',) ,
([1, 4, 0, 3, 5, 6, 7],) ,
('saved value', 2.3333697038083976) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 7) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -0.1037673731095562) ,
([1, 4, 7, 3, 5, 0, 6],) ,
('Computing match for mapping',) ,
([1, 4, 7, 3, 5, 0, 6],) ,
('saved value', 2.530448594247374) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -2.0) ,
([1, 4, 6, 5, 3, 0, 7],) ,
('Computing match for mapping',) ,
([1, 4, 6, 5, 3, 0, 7],) ,
('saved value', 0.6342159673569299) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 0) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -1.7328488031482974) ,
([1, 4, 6, 0, 5, 3, 7],) ,
('Computing match for mapping',) ,
([1, 4, 6, 0, 5, 3, 7],) ,
('saved value', 0.9013671642086325) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 7) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', -2.0) ,
([1, 4, 6, 7, 5, 0, 3],) ,
('Computing match for mapping',) ,
([1, 4, 6, 7, 5, 0, 3],) ,
('saved value', 0.6342159673569299) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 0) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', 1.2507685110556308) ,
([1, 4, 6, 3, 0, 5, 7],) ,
('Computing match for mapping',) ,
([1, 4, 6, 3, 0, 5, 7],) ,
('saved value', 3.8849844784125604) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', 0.0) ,
([1, 4, 6, 3, 7, 0, 5],) ,
('Computing match for mapping',) ,
([1, 4, 6, 3, 7, 0, 5],) ,
('saved value', 2.63421596735693) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 7) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', 0.2620451775185415) ,
([1, 4, 6, 3, 5, 7, 0],) ,
('Computing match for mapping',) ,
([1, 4, 6, 3, 5, 7, 0],) ,
('saved value', 2.8962611448754716) ,
('Use move gain',) ,
('Original mapping', [1, 4, 6, 3, 5, 0, 7]) ,
('Current mapping', [1, 4, 2, 3, 5, 0, 7]) ,
('Gain after the hill-climbing', 1.3657840326430701) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [1, 4, 2, 3, 5, 0, 7]) ,
('Remap node', 0, 'from ', 1, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 4, 2, 3, 5, 0, 7],) ,
('saved value', 4.0) ,
('Remap node', 0, 'from ', 1, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 4, 2, 3, 5, 0, 7],) ,
('saved value', 4.0) ,
('Remap node', 0, 'from ', 1, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 4, 2, 3, 5, 0, 7],) ,
('saved value', 4.0) ,
('Remap node', 1, 'from ', 4, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 6, 2, 3, 5, 0, 7],) ,
('saved value', 4.0) ,
('Remap node', 1, 'from ', 4, 'to', 8) ,
('Move gain:', 0.5069831227987472) ,
('Computing match for mapping',) ,
([1, 8, 2, 3, 5, 0, 7],) ,
('saved value', 4.506983122798747) ,
('Remap node', 1, 'from ', 4, 'to', 9) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([1, 9, 2, 3, 5, 0, 7],) ,
('saved value', 4.522302590789991) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -1.3657840326430701) ,
('Computing match for mapping',) ,
([1, 4, 6, 3, 5, 0, 7],) ,
('saved value', 2.63421596735693) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -1.2692691364759328) ,
('Computing match for mapping',) ,
([1, 4, 8, 3, 5, 0, 7],) ,
('saved value', 2.7307308635240672) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 4, 9, 3, 5, 0, 7],) ,
('saved value', 2.0) ,
('Remap node', 3, 'from ', 3, 'to', 6) ,
('Move gain:', -2.416015724885224) ,
('Computing match for mapping',) ,
([1, 4, 2, 6, 5, 0, 7],) ,
('saved value', 1.583984275114776) ,
('Remap node', 3, 'from ', 3, 'to', 8) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([1, 4, 2, 8, 5, 0, 7],) ,
('saved value', 1.0) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([1, 4, 2, 9, 5, 0, 7],) ,
('saved value', 2.0) ,
('Remap node', 4, 'from ', 5, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 6, 0, 7],) ,
('saved value', 4.0) ,
('Remap node', 4, 'from ', 5, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 8, 0, 7],) ,
('saved value', 4.0) ,
('Remap node', 4, 'from ', 5, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 9, 0, 7],) ,
('saved value', 4.0) ,
('Remap node', 5, 'from ', 0, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 5, 6, 7],) ,
('saved value', 4.0) ,
('Remap node', 5, 'from ', 0, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 5, 8, 7],) ,
('saved value', 4.0) ,
('Remap node', 5, 'from ', 0, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 5, 9, 7],) ,
('saved value', 4.0) ,
('Remap node', 6, 'from ', 7, 'to', 6) ,
('Move gain:', 0.5304485942473737) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 5, 0, 6],) ,
('saved value', 4.530448594247374) ,
('Remap node', 6, 'from ', 7, 'to', 8) ,
('Move gain:', 0.5488519617984917) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 5, 0, 8],) ,
('saved value', 4.5488519617984915) ,
('Remap node', 6, 'from ', 7, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 5, 0, 9],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 4) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 1) ,
('Swap gain:', 2.0) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 2) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([2, 4, 1, 3, 5, 0, 7],) ,
('Computing match for mapping',) ,
([2, 4, 1, 3, 5, 0, 7],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 3) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.477697409210009) ,
([3, 4, 2, 1, 5, 0, 7],) ,
('Computing match for mapping',) ,
([3, 4, 2, 1, 5, 0, 7],) ,
('saved value', 1.522302590789991) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 5) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', 0.0) ,
([5, 4, 2, 3, 1, 0, 7],) ,
('Computing match for mapping',) ,
([5, 4, 2, 3, 1, 0, 7],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 0) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 4, 2, 3, 5, 1, 7],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 5, 1, 7],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 1, ',', 6, '-', 7) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', 0.0) ,
([7, 4, 2, 3, 5, 0, 1],) ,
('Computing match for mapping',) ,
([7, 4, 2, 3, 5, 0, 1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 2) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', -2.0) ,
([1, 2, 4, 3, 5, 0, 7],) ,
('Computing match for mapping',) ,
([1, 2, 4, 3, 5, 0, 7],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 3) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', -2.477697409210009) ,
([1, 3, 2, 4, 5, 0, 7],) ,
('Computing match for mapping',) ,
([1, 3, 2, 4, 5, 0, 7],) ,
('saved value', 1.522302590789991) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 5) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', 1.0) ,
([1, 5, 2, 3, 4, 0, 7],) ,
('Computing match for mapping',) ,
([1, 5, 2, 3, 4, 0, 7],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 4, ',', 5, '-', 0) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 4) ,
('Swap gain:', 0.27907863326659615) ,
([1, 0, 2, 3, 5, 4, 7],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 5, 4, 7],) ,
('saved value', 4.279078633266596) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 4, ',', 6, '-', 7) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', 0.0) ,
([1, 7, 2, 3, 5, 0, 4],) ,
('Computing match for mapping',) ,
([1, 7, 2, 3, 5, 0, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -4.0) ,
([1, 4, 3, 2, 5, 0, 7],) ,
('Computing match for mapping',) ,
([1, 4, 3, 2, 5, 0, 7],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([1, 4, 5, 3, 2, 0, 7],) ,
('Computing match for mapping',) ,
([1, 4, 5, 3, 2, 0, 7],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 0) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -1.6666302961916024) ,
([1, 4, 0, 3, 5, 2, 7],) ,
('Computing match for mapping',) ,
([1, 4, 0, 3, 5, 2, 7],) ,
('saved value', 2.3333697038083976) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -1.4937506749919) ,
([1, 4, 7, 3, 5, 0, 2],) ,
('Computing match for mapping',) ,
([1, 4, 7, 3, 5, 0, 2],) ,
('saved value', 2.5062493250081) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([1, 4, 2, 5, 3, 0, 7],) ,
('Computing match for mapping',) ,
([1, 4, 2, 5, 3, 0, 7],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 0) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -2.7328488031482974) ,
([1, 4, 2, 0, 5, 3, 7],) ,
('Computing match for mapping',) ,
([1, 4, 2, 0, 5, 3, 7],) ,
('saved value', 1.2671511968517026) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 7) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', -3.0) ,
([1, 4, 2, 7, 5, 0, 3],) ,
('Computing match for mapping',) ,
([1, 4, 2, 7, 5, 0, 3],) ,
('saved value', 1.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 0) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', 1.2507685110556308) ,
([1, 4, 2, 3, 0, 5, 7],) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 0, 5, 7],) ,
('saved value', 5.250768511055631) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', 0.0) ,
([1, 4, 2, 3, 7, 0, 5],) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 7, 0, 5],) ,
('saved value', 4.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 7) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', 0.2620451775185415) ,
([1, 4, 2, 3, 5, 7, 0],) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 5, 7, 0],) ,
('saved value', 4.262045177518542) ,
('Use swap gain',) ,
('Original mapping', [1, 4, 2, 3, 5, 0, 7]) ,
('Current mapping', [4, 1, 2, 3, 5, 0, 7]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [4, 1, 2, 3, 5, 0, 7]) ,
('Remap node', 0, 'from ', 4, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 5, 0, 7],) ,
('saved value', 6.0) ,
('Remap node', 0, 'from ', 4, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 5, 0, 7],) ,
('saved value', 6.0) ,
('Remap node', 0, 'from ', 4, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 5, 0, 7],) ,
('saved value', 6.0) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 6, 2, 3, 5, 0, 7],) ,
('saved value', 4.0) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -1.4930168772012529) ,
('Computing match for mapping',) ,
([4, 8, 2, 3, 5, 0, 7],) ,
('saved value', 4.506983122798747) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -1.477697409210009) ,
('Computing match for mapping',) ,
([4, 9, 2, 3, 5, 0, 7],) ,
('saved value', 4.522302590789991) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -2.36578403264307) ,
('Computing match for mapping',) ,
([4, 1, 6, 3, 5, 0, 7],) ,
('saved value', 3.63421596735693) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -2.2692691364759328) ,
('Computing match for mapping',) ,
([4, 1, 8, 3, 5, 0, 7],) ,
('saved value', 3.7307308635240672) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([4, 1, 9, 3, 5, 0, 7],) ,
('saved value', 3.0) ,
('Remap node', 3, 'from ', 3, 'to', 6) ,
('Move gain:', -2.416015724885224) ,
('Computing match for mapping',) ,
([4, 1, 2, 6, 5, 0, 7],) ,
('saved value', 3.583984275114776) ,
('Remap node', 3, 'from ', 3, 'to', 8) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([4, 1, 2, 8, 5, 0, 7],) ,
('saved value', 3.0) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 1, 2, 9, 5, 0, 7],) ,
('saved value', 4.0) ,
('Remap node', 4, 'from ', 5, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 6, 0, 7],) ,
('saved value', 6.0) ,
('Remap node', 4, 'from ', 5, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 8, 0, 7],) ,
('saved value', 6.0) ,
('Remap node', 4, 'from ', 5, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 9, 0, 7],) ,
('saved value', 6.0) ,
('Remap node', 5, 'from ', 0, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 6, 7],) ,
('saved value', 6.0) ,
('Remap node', 5, 'from ', 0, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 8, 7],) ,
('saved value', 6.0) ,
('Remap node', 5, 'from ', 0, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 9, 7],) ,
('saved value', 6.0) ,
('Remap node', 6, 'from ', 7, 'to', 6) ,
('Move gain:', 0.5304485942473737) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0, 6],) ,
('saved value', 6.530448594247374) ,
('Remap node', 6, 'from ', 7, 'to', 8) ,
('Move gain:', 0.5488519617984917) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0, 8],) ,
('saved value', 6.5488519617984915) ,
('Remap node', 6, 'from ', 7, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0, 9],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 1) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 4) ,
('Swap gain:', -2.0) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 5, 0, 7],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 2) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 4) ,
('Swap gain:', -2.0) ,
([2, 1, 4, 3, 5, 0, 7],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 5, 0, 7],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 3) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', -3.0) ,
([3, 1, 2, 4, 5, 0, 7],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 0, 7],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 5) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', 2.0) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 0) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 2, 3, 5, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 7],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 7) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', 0.0) ,
([7, 1, 2, 3, 5, 0, 4],) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 5, 0, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([4, 2, 1, 3, 5, 0, 7],) ,
('Computing match for mapping',) ,
([4, 2, 1, 3, 5, 0, 7],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3.955394818420018) ,
([4, 3, 2, 1, 5, 0, 7],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 5, 0, 7],) ,
('saved value', 2.044605181579982) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([4, 5, 2, 3, 1, 0, 7],) ,
('Computing match for mapping',) ,
([4, 5, 2, 3, 1, 0, 7],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 0) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -1.7209213667334038) ,
([4, 0, 2, 3, 5, 1, 7],) ,
('Computing match for mapping',) ,
([4, 0, 2, 3, 5, 1, 7],) ,
('saved value', 4.279078633266597) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -2.0) ,
([4, 7, 2, 3, 5, 0, 1],) ,
('Computing match for mapping',) ,
([4, 7, 2, 3, 5, 0, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([4, 1, 3, 2, 5, 0, 7],) ,
('Computing match for mapping',) ,
([4, 1, 3, 2, 5, 0, 7],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([4, 1, 5, 3, 2, 0, 7],) ,
('Computing match for mapping',) ,
([4, 1, 5, 3, 2, 0, 7],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 0) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -2.6666302961916024) ,
([4, 1, 0, 3, 5, 2, 7],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, 5, 2, 7],) ,
('saved value', 3.3333697038083976) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -2.4937506749919) ,
([4, 1, 7, 3, 5, 0, 2],) ,
('Computing match for mapping',) ,
([4, 1, 7, 3, 5, 0, 2],) ,
('saved value', 3.5062493250081) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([4, 1, 2, 5, 3, 0, 7],) ,
('Computing match for mapping',) ,
([4, 1, 2, 5, 3, 0, 7],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 0) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -2.7328488031482974) ,
([4, 1, 2, 0, 5, 3, 7],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 3, 7],) ,
('saved value', 3.2671511968517026) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 7) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', -3.0) ,
([4, 1, 2, 7, 5, 0, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 7, 5, 0, 3],) ,
('saved value', 3.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 0) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', 1.2507685110556306) ,
([4, 1, 2, 3, 0, 5, 7],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 7],) ,
('saved value', 7.250768511055631) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', 0.0) ,
([4, 1, 2, 3, 7, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 7, 0, 5],) ,
('saved value', 6.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 7) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', 0.2620451775185415) ,
([4, 1, 2, 3, 5, 7, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 7, 0],) ,
('saved value', 6.262045177518542) ,
('Use swap gain',) ,
('Original mapping', [4, 1, 2, 3, 5, 0, 7]) ,
('Current mapping', [5, 1, 2, 3, 4, 0, 7]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 8.0) ,
('Current mapping:', [5, 1, 2, 3, 4, 0, 7]) ,
('Remap node', 0, 'from ', 5, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 0, 7],) ,
('saved value', 8.0) ,
('Remap node', 0, 'from ', 5, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 0, 7],) ,
('saved value', 8.0) ,
('Remap node', 0, 'from ', 5, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 4, 0, 7],) ,
('saved value', 8.0) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 6, 2, 3, 4, 0, 7],) ,
('saved value', 5.0) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -2.493016877201253) ,
('Computing match for mapping',) ,
([5, 8, 2, 3, 4, 0, 7],) ,
('saved value', 5.506983122798747) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -2.477697409210009) ,
('Computing match for mapping',) ,
([5, 9, 2, 3, 4, 0, 7],) ,
('saved value', 5.522302590789991) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -2.36578403264307) ,
('Computing match for mapping',) ,
([5, 1, 6, 3, 4, 0, 7],) ,
('saved value', 5.63421596735693) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -2.2692691364759328) ,
('Computing match for mapping',) ,
([5, 1, 8, 3, 4, 0, 7],) ,
('saved value', 5.730730863524068) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 1, 9, 3, 4, 0, 7],) ,
('saved value', 5.0) ,
('Remap node', 3, 'from ', 3, 'to', 6) ,
('Move gain:', -2.416015724885224) ,
('Computing match for mapping',) ,
([5, 1, 2, 6, 4, 0, 7],) ,
('saved value', 5.583984275114776) ,
('Remap node', 3, 'from ', 3, 'to', 8) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 8, 4, 0, 7],) ,
('saved value', 5.0) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 9, 4, 0, 7],) ,
('saved value', 6.0) ,
('Remap node', 4, 'from ', 4, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 6, 0, 7],) ,
('saved value', 6.0) ,
('Remap node', 4, 'from ', 4, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 8, 0, 7],) ,
('saved value', 6.0) ,
('Remap node', 4, 'from ', 4, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 9, 0, 7],) ,
('saved value', 6.0) ,
('Remap node', 5, 'from ', 0, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 6, 7],) ,
('saved value', 8.0) ,
('Remap node', 5, 'from ', 0, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 8, 7],) ,
('saved value', 8.0) ,
('Remap node', 5, 'from ', 0, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 9, 7],) ,
('saved value', 8.0) ,
('Remap node', 6, 'from ', 7, 'to', 6) ,
('Move gain:', 0.5304485942473729) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 6, 'from ', 7, 'to', 8) ,
('Move gain:', 0.5488519617984924) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 6, 'from ', 7, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 9],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 5, ',', 1, '-', 1) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 5) ,
('Swap gain:', -3.0) ,
([1, 5, 2, 3, 4, 0, 7],) ,
('Computing match for mapping',) ,
([1, 5, 2, 3, 4, 0, 7],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 5, ',', 2, '-', 2) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 5) ,
('Swap gain:', -3.0) ,
([2, 1, 5, 3, 4, 0, 7],) ,
('Computing match for mapping',) ,
([2, 1, 5, 3, 4, 0, 7],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 5, ',', 3, '-', 3) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 5) ,
('Swap gain:', -3.0) ,
([3, 1, 2, 5, 4, 0, 7],) ,
('Computing match for mapping',) ,
([3, 1, 2, 5, 4, 0, 7],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 5, ',', 4, '-', 4) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -2.0) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0, 7],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 5, ',', 5, '-', 0) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 5) ,
('Swap gain:', 3.0) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 5, ',', 6, '-', 7) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', 0.0) ,
([7, 1, 2, 3, 4, 0, 5],) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, 0, 5],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([5, 2, 1, 3, 4, 0, 7],) ,
('Computing match for mapping',) ,
([5, 2, 1, 3, 4, 0, 7],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -4.955394818420018) ,
([5, 3, 2, 1, 4, 0, 7],) ,
('Computing match for mapping',) ,
([5, 3, 2, 1, 4, 0, 7],) ,
('saved value', 3.044605181579982) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([5, 4, 2, 3, 1, 0, 7],) ,
('Computing match for mapping',) ,
([5, 4, 2, 3, 1, 0, 7],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 0) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -2.720921366733404) ,
([5, 0, 2, 3, 4, 1, 7],) ,
('Computing match for mapping',) ,
([5, 0, 2, 3, 4, 1, 7],) ,
('saved value', 5.279078633266597) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([5, 7, 2, 3, 4, 0, 1],) ,
('Computing match for mapping',) ,
([5, 7, 2, 3, 4, 0, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([5, 1, 3, 2, 4, 0, 7],) ,
('Computing match for mapping',) ,
([5, 1, 3, 2, 4, 0, 7],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([5, 1, 4, 3, 2, 0, 7],) ,
('Computing match for mapping',) ,
([5, 1, 4, 3, 2, 0, 7],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 0) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', -2.6666302961916024) ,
([5, 1, 0, 3, 4, 2, 7],) ,
('Computing match for mapping',) ,
([5, 1, 0, 3, 4, 2, 7],) ,
('saved value', 5.333369703808398) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -2.4937506749919) ,
([5, 1, 7, 3, 4, 0, 2],) ,
('Computing match for mapping',) ,
([5, 1, 7, 3, 4, 0, 2],) ,
('saved value', 5.5062493250081) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -5.0) ,
([5, 1, 2, 4, 3, 0, 7],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 3, 0, 7],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 0) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 3) ,
('Swap gain:', -2.7328488031482974) ,
([5, 1, 2, 0, 4, 3, 7],) ,
('Computing match for mapping',) ,
([5, 1, 2, 0, 4, 3, 7],) ,
('saved value', 5.267151196851703) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 7) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 7, 4, 0, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 7, 4, 0, 3],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 0) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 4) ,
('Swap gain:', -1.7492314889443692) ,
([5, 1, 2, 3, 0, 4, 7],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 4, 7],) ,
('saved value', 6.250768511055631) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 7) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([5, 1, 2, 3, 7, 0, 4],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 7, 0, 4],) ,
('saved value', 6.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 7) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', 0.2620451775185415) ,
([5, 1, 2, 3, 4, 7, 0],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 7, 0],) ,
('saved value', 8.26204517751854) ,
('Use swap gain',) ,
('Original mapping', [5, 1, 2, 3, 4, 0, 7]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 7]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 11.0) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 7]) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 7],) ,
('saved value', 10.0) ,
('Remap node', 0, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 5, 7],) ,
('saved value', 10.0) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 4, 5, 7],) ,
('saved value', 10.0) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 7],) ,
('saved value', 7.0) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -3.493016877201253) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 5, 7],) ,
('saved value', 7.506983122798747) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 4, 5, 7],) ,
('saved value', 7.522302590789991) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -2.36578403264307) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 7],) ,
('saved value', 8.63421596735693) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -2.2692691364759323) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, 7],) ,
('saved value', 8.730730863524068) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 3, 4, 5, 7],) ,
('saved value', 8.0) ,
('Remap node', 3, 'from ', 3, 'to', 6) ,
('Move gain:', -2.4160157248852236) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 7],) ,
('saved value', 8.583984275114776) ,
('Remap node', 3, 'from ', 3, 'to', 8) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 4, 5, 7],) ,
('saved value', 8.0) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, 7],) ,
('saved value', 9.0) ,
('Remap node', 4, 'from ', 4, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 7],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 4, 'to', 8) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 8, 5, 7],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 4, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 9, 5, 7],) ,
('saved value', 8.0) ,
('Remap node', 5, 'from ', 5, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 7],) ,
('saved value', 9.0) ,
('Remap node', 5, 'from ', 5, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 8, 7],) ,
('saved value', 9.0) ,
('Remap node', 5, 'from ', 5, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 9, 7],) ,
('saved value', 9.0) ,
('Remap node', 6, 'from ', 7, 'to', 6) ,
('Move gain:', 0.5304485942473729) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 11.530448594247373) ,
('Remap node', 6, 'from ', 7, 'to', 8) ,
('Move gain:', 0.5488519617984924) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('saved value', 11.548851961798492) ,
('Remap node', 6, 'from ', 7, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.7209213667334033) ,
([1, 0, 2, 3, 4, 5, 7],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 7],) ,
('saved value', 7.279078633266597) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.6666302961916024) ,
([2, 1, 0, 3, 4, 5, 7],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 7],) ,
('saved value', 7.333369703808398) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.732848803148297) ,
([3, 1, 2, 0, 4, 5, 7],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 7],) ,
('saved value', 7.267151196851703) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.7492314889443694) ,
([4, 1, 2, 3, 0, 5, 7],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 7],) ,
('saved value', 7.250768511055631) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 7],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -0.7379548224814592) ,
([7, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10.26204517751854) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 1, 3, 4, 5, 7],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 7],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.955394818420018) ,
([0, 3, 2, 1, 4, 5, 7],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 7],) ,
('saved value', 5.044605181579982) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 3, 1, 5, 7],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 7],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 5, 2, 3, 4, 1, 7],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 7],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 4, 5, 1],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 7],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 7],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 5, 3, 4, 2, 7],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 7],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -2.493750674991901) ,
([0, 1, 7, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, 2],) ,
('saved value', 8.506249325008099) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 4, 3, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 7],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 7],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 7) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 7, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 5, 3],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 3, 5, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 7],) ,
('saved value', 7.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 3, 7, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, 4],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 7) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 3, 4, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 5],) ,
('saved value', 9.0) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 7]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Gain after the hill-climbing', 0.5488519617984924) ,
('Update triple match number to:', 11.548851961798492) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 8],) ,
('saved value', 7.548851961798492) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 4, 5, 8],) ,
('saved value', 7.548851961798492) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 4, 5, 8],) ,
('saved value', 8.071154552588483) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -2.36578403264307) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 8],) ,
('saved value', 9.183067929155422) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 3, 4, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 3, 'from ', 3, 'to', 6) ,
('Move gain:', -2.4160157248852236) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 8],) ,
('saved value', 9.132836236913269) ,
('Remap node', 3, 'from ', 3, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 4, 'from ', 4, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 4, 'from ', 4, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 9, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 5, 'from ', 5, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 5, 'from ', 5, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 5, 'from ', 5, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 9, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 6, 'from ', 8, 'to', 6) ,
('Move gain:', -0.018403367551119487) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 11.530448594247373) ,
('Remap node', 6, 'from ', 8, 'to', 7) ,
('Move gain:', -0.5488519617984924) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('saved value', 11.0) ,
('Remap node', 6, 'from ', 8, 'to', 9) ,
('Move gain:', -0.5488519617984924) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.7209213667334033) ,
([1, 0, 2, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 8],) ,
('saved value', 7.827930595065089) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.6666302961916024) ,
([2, 1, 0, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 8],) ,
('saved value', 7.88222166560689) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.732848803148297) ,
([3, 1, 2, 0, 4, 5, 8],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 8],) ,
('saved value', 7.8160031586501955) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.7492314889443694) ,
([4, 1, 2, 3, 0, 5, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 8],) ,
('saved value', 7.799620472854123) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 3, 4, 0, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 8],) ,
('saved value', 8.548851961798492) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -1.2868067842799498) ,
([8, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10.262045177518543) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 1, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.955394818420018) ,
([0, 3, 2, 1, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 8],) ,
('saved value', 5.593457143378474) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 3, 1, 5, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 5, 2, 3, 4, 1, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -4.041868838999744) ,
([0, 8, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 5, 1],) ,
('saved value', 7.506983122798748) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 8],) ,
('saved value', 6.548851961798492) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 8],) ,
('saved value', 7.548851961798492) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 5, 3, 4, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 8],) ,
('saved value', 6.548851961798492) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -2.311871773266324) ,
([0, 1, 8, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, 2],) ,
('saved value', 9.236980188532169) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 4, 3, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 3, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 8],) ,
('saved value', 6.548851961798492) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -3.5488519617984924) ,
([0, 1, 2, 8, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 4, 5, 3],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 3, 5, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 8],) ,
('saved value', 7.548851961798492) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -3.5488519617984924) ,
([0, 1, 2, 3, 8, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 8, 5, 4],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -2.5488519617984924) ,
([0, 1, 2, 3, 4, 8, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 8, 5],) ,
('saved value', 9.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 0.5223025907899909) ,
('node_pair', (4, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 3)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.5223025907899909) ,
('Node mapping at start', [0, 6, 4, 1, 2, 7, 3]) ,
('Triple match number at start:', 0.5223025907899909) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 6, 4, 1, 2, 7, 3],) ,
('saved value', 0.5223025907899909) ,
('Remap node', 0, 'from ', 0, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 6, 4, 1, 2, 7, 3],) ,
('saved value', 0.5223025907899909) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 6, 4, 1, 2, 7, 3],) ,
('saved value', 0.5223025907899909) ,
('Remap node', 1, 'from ', 6, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 4, 1, 2, 7, 3],) ,
('saved value', 0.5223025907899909) ,
('Remap node', 1, 'from ', 6, 'to', 8) ,
('Move gain:', 0.5069831227987472) ,
('Computing match for mapping',) ,
([0, 8, 4, 1, 2, 7, 3],) ,
('saved value', 1.029285713588738) ,
('Remap node', 1, 'from ', 6, 'to', 9) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 9, 4, 1, 2, 7, 3],) ,
('saved value', 1.0446051815799817) ,
('Remap node', 2, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 5, 1, 2, 7, 3],) ,
('saved value', 0.5223025907899909) ,
('Remap node', 2, 'from ', 4, 'to', 8) ,
('Move gain:', 0.7307308635240672) ,
('Computing match for mapping',) ,
([0, 6, 8, 1, 2, 7, 3],) ,
('saved value', 1.2530334543140582) ,
('Remap node', 2, 'from ', 4, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 9, 1, 2, 7, 3],) ,
('saved value', 0.5223025907899909) ,
('Remap node', 3, 'from ', 1, 'to', 5) ,
('Move gain:', -0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 6, 4, 5, 2, 7, 3],) ,
('saved value', 0.0) ,
('Remap node', 3, 'from ', 1, 'to', 8) ,
('Move gain:', -0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 6, 4, 8, 2, 7, 3],) ,
('saved value', 0.0) ,
('Remap node', 3, 'from ', 1, 'to', 9) ,
('Move gain:', 0.47769740921000914) ,
('Computing match for mapping',) ,
([0, 6, 4, 9, 2, 7, 3],) ,
('saved value', 1.0) ,
('Remap node', 4, 'from ', 2, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 5, 7, 3],) ,
('saved value', 0.5223025907899909) ,
('Remap node', 4, 'from ', 2, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 8, 7, 3],) ,
('saved value', 0.5223025907899909) ,
('Remap node', 4, 'from ', 2, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 9, 7, 3],) ,
('saved value', 0.5223025907899909) ,
('Remap node', 5, 'from ', 7, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 2, 5, 3],) ,
('saved value', 1.522302590789991) ,
('Remap node', 5, 'from ', 7, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 2, 8, 3],) ,
('saved value', 0.5223025907899909) ,
('Remap node', 5, 'from ', 7, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 2, 9, 3],) ,
('saved value', 0.5223025907899909) ,
('Remap node', 6, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 2, 7, 5],) ,
('saved value', 0.5223025907899909) ,
('Remap node', 6, 'from ', 3, 'to', 8) ,
('Move gain:', 0.5488519617984917) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 2, 7, 8],) ,
('saved value', 1.0711545525884825) ,
('Remap node', 6, 'from ', 3, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 2, 7, 9],) ,
('saved value', 0.5223025907899909) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 6) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 0) ,
('Swap gain:', 0.27907863326659615) ,
([6, 0, 4, 1, 2, 7, 3],) ,
('Computing match for mapping',) ,
([6, 0, 4, 1, 2, 7, 3],) ,
('saved value', 0.801381224056587) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', 0.33336970380839753) ,
([4, 6, 0, 1, 2, 7, 3],) ,
('Computing match for mapping',) ,
([4, 6, 0, 1, 2, 7, 3],) ,
('saved value', 0.8556722945983883) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -0.25515139393828834) ,
([1, 6, 4, 0, 2, 7, 3],) ,
('Computing match for mapping',) ,
([1, 6, 4, 0, 2, 7, 3],) ,
('saved value', 0.2671511968517025) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', 0.25076851105563075) ,
([2, 6, 4, 1, 0, 7, 3],) ,
('Computing match for mapping',) ,
([2, 6, 4, 1, 0, 7, 3],) ,
('saved value', 0.7730711018456216) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([7, 6, 4, 1, 2, 0, 3],) ,
('Computing match for mapping',) ,
([7, 6, 4, 1, 2, 0, 3],) ,
('saved value', 0.5223025907899909) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 3) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 0, '-', 3, ',', 6, '-', 0) ,
('Swap gain:', 0.2620451775185415) ,
([3, 6, 4, 1, 2, 7, 0],) ,
('Computing match for mapping',) ,
([3, 6, 4, 1, 2, 7, 0],) ,
('saved value', 0.7843477683085324) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 4) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 6) ,
('Swap gain:', 0.6342159673569299) ,
([0, 4, 6, 1, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 4, 6, 1, 2, 7, 3],) ,
('saved value', 1.1565185581469208) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 1) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 6) ,
('Swap gain:', 4.0616816843247845) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('saved value', 4.5839842751147755) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 2) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 2, 4, 1, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 1, 6, 7, 3],) ,
('saved value', 0.5223025907899909) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', 7) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 7, 4, 1, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 7, 4, 1, 2, 6, 3],) ,
('saved value', 0.5223025907899909) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 3) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 1, '-', 3, ',', 6, '-', 6) ,
('Swap gain:', 1.0527511850373645) ,
([0, 3, 4, 1, 2, 7, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 2, 7, 6],) ,
('saved value', 1.5750537758273553) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 1) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 4) ,
('Swap gain:', -0.5223025907899909) ,
([0, 6, 1, 4, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 4, 2, 7, 3],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 2) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 6, 2, 1, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 6, 2, 1, 4, 7, 3],) ,
('saved value', 2.522302590789991) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 6, 7, 1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 6, 7, 1, 2, 4, 3],) ,
('saved value', 0.5223025907899909) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 3) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 2, '-', 3, ',', 6, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 6, 3, 1, 2, 7, 4],) ,
('Computing match for mapping',) ,
([0, 6, 3, 1, 2, 7, 4],) ,
('saved value', 0.5223025907899909) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 2) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -0.5223025907899909) ,
([0, 6, 4, 2, 1, 7, 3],) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 1, 7, 3],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 7) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -0.5223025907899909) ,
([0, 6, 4, 7, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 4, 7, 2, 1, 3],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 3) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 3, '-', 3, ',', 6, '-', 1) ,
('Swap gain:', 1.477697409210009) ,
([0, 6, 4, 3, 2, 7, 1],) ,
('Computing match for mapping',) ,
([0, 6, 4, 3, 2, 7, 1],) ,
('saved value', 2.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 7) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 6, 4, 1, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 7, 2, 3],) ,
('saved value', 0.5223025907899909) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 3) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 4, '-', 3, ',', 6, '-', 2) ,
('Swap gain:', 0.5062493250080999) ,
([0, 6, 4, 1, 3, 7, 2],) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 3, 7, 2],) ,
('saved value', 1.028551915798091) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 3) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('After swapping:', 5, '-', 3, ',', 6, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 6, 4, 1, 2, 3, 7],) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 2, 3, 7],) ,
('saved value', 0.5223025907899909) ,
('Use swap gain',) ,
('Original mapping', [0, 6, 4, 1, 2, 7, 3]) ,
('Current mapping', [0, 1, 4, 6, 2, 7, 3]) ,
('Gain after the hill-climbing', 4.0616816843247845) ,
('Update triple match number to:', 4.5839842751147755) ,
('Current mapping:', [0, 1, 4, 6, 2, 7, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 1, 4, 6, 2, 7, 3],) ,
('saved value', 3.5839842751147755) ,
('Remap node', 0, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([8, 1, 4, 6, 2, 7, 3],) ,
('saved value', 3.5839842751147755) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([9, 1, 4, 6, 2, 7, 3],) ,
('saved value', 3.5839842751147755) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 5, 4, 6, 2, 7, 3],) ,
('saved value', 0.5839842751147755) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -3.493016877201253) ,
('Computing match for mapping',) ,
([0, 8, 4, 6, 2, 7, 3],) ,
('saved value', 1.0909673979135226) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 4, 6, 2, 7, 3],) ,
('saved value', 1.1062868659047664) ,
('Remap node', 2, 'from ', 4, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 6, 2, 7, 3],) ,
('saved value', 3.5839842751147755) ,
('Remap node', 2, 'from ', 4, 'to', 8) ,
('Move gain:', -0.26926913647593276) ,
('Computing match for mapping',) ,
([0, 1, 8, 6, 2, 7, 3],) ,
('saved value', 4.314715138638842) ,
('Remap node', 2, 'from ', 4, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 6, 2, 7, 3],) ,
('saved value', 3.5839842751147755) ,
('Remap node', 3, 'from ', 6, 'to', 5) ,
('Move gain:', -0.5839842751147758) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 7, 3],) ,
('saved value', 3.9999999999999996) ,
('Remap node', 3, 'from ', 6, 'to', 8) ,
('Move gain:', -0.5839842751147758) ,
('Computing match for mapping',) ,
([0, 1, 4, 8, 2, 7, 3],) ,
('saved value', 3.9999999999999996) ,
('Remap node', 3, 'from ', 6, 'to', 9) ,
('Move gain:', 0.4160157248852242) ,
('Computing match for mapping',) ,
([0, 1, 4, 9, 2, 7, 3],) ,
('saved value', 5.0) ,
('Remap node', 4, 'from ', 2, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 5, 7, 3],) ,
('saved value', 3.5839842751147755) ,
('Remap node', 4, 'from ', 2, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 8, 7, 3],) ,
('saved value', 3.5839842751147755) ,
('Remap node', 4, 'from ', 2, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 9, 7, 3],) ,
('saved value', 3.5839842751147755) ,
('Remap node', 5, 'from ', 7, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 2, 5, 3],) ,
('saved value', 5.5839842751147755) ,
('Remap node', 5, 'from ', 7, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 2, 8, 3],) ,
('saved value', 4.5839842751147755) ,
('Remap node', 5, 'from ', 7, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 2, 9, 3],) ,
('saved value', 4.5839842751147755) ,
('Remap node', 6, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 2, 7, 5],) ,
('saved value', 4.5839842751147755) ,
('Remap node', 6, 'from ', 3, 'to', 8) ,
('Move gain:', 0.5488519617984917) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 2, 7, 8],) ,
('saved value', 5.132836236913267) ,
('Remap node', 6, 'from ', 3, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 2, 7, 9],) ,
('saved value', 4.5839842751147755) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.720921366733404) ,
([1, 0, 4, 6, 2, 7, 3],) ,
('Computing match for mapping',) ,
([1, 0, 4, 6, 2, 7, 3],) ,
('saved value', 0.8630629083813717) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -1.6666302961916024) ,
([4, 1, 0, 6, 2, 7, 3],) ,
('Computing match for mapping',) ,
([4, 1, 0, 6, 2, 7, 3],) ,
('saved value', 2.917353978923173) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 6) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 0, '-', 6, ',', 3, '-', 0) ,
('Swap gain:', -1.3168330782630733) ,
([6, 1, 4, 0, 2, 7, 3],) ,
('Computing match for mapping',) ,
([6, 1, 4, 0, 2, 7, 3],) ,
('saved value', 3.267151196851702) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -1.7492314889443692) ,
([2, 1, 4, 6, 0, 7, 3],) ,
('Computing match for mapping',) ,
([2, 1, 4, 6, 0, 7, 3],) ,
('saved value', 2.834752786170406) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([7, 1, 4, 6, 2, 0, 3],) ,
('Computing match for mapping',) ,
([7, 1, 4, 6, 2, 0, 3],) ,
('saved value', 3.5839842751147755) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 3) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 0, '-', 3, ',', 6, '-', 0) ,
('Swap gain:', -0.7379548224814585) ,
([3, 1, 4, 6, 2, 7, 0],) ,
('Computing match for mapping',) ,
([3, 1, 4, 6, 2, 7, 0],) ,
('saved value', 3.846029452633317) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 1, 6, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 4, 1, 6, 2, 7, 3],) ,
('saved value', 0.5839842751147755) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 6) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 1, '-', 6, ',', 3, '-', 1) ,
('Swap gain:', -4.0616816843247845) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 6, 4, 1, 2, 7, 3],) ,
('saved value', 0.5223025907899909) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 4, 6, 1, 7, 3],) ,
('Computing match for mapping',) ,
([0, 2, 4, 6, 1, 7, 3],) ,
('saved value', 0.5839842751147755) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 7) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 4, 6, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 4, 6, 2, 1, 3],) ,
('saved value', 0.5839842751147755) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 3) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 1, '-', 3, ',', 6, '-', 1) ,
('Swap gain:', -3.477697409210009) ,
([0, 3, 4, 6, 2, 7, 1],) ,
('Computing match for mapping',) ,
([0, 3, 4, 6, 2, 7, 1],) ,
('saved value', 1.1062868659047664) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 6) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 2, '-', 6, ',', 3, '-', 4) ,
('Swap gain:', -0.9497683077578459) ,
([0, 1, 6, 4, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 2, 7, 3],) ,
('saved value', 3.6342159673569294) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 2) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('saved value', 6.5839842751147755) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 6, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 2, 4, 3],) ,
('saved value', 3.5839842751147755) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 3) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 2, '-', 3, ',', 6, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 3, 6, 2, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 6, 2, 7, 4],) ,
('saved value', 3.5839842751147755) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 6, ',', 4, '-', 2) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -1.583984275114776) ,
([0, 1, 4, 2, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 7, 3],) ,
('saved value', 2.9999999999999996) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 6, ',', 5, '-', 7) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -0.5839842751147758) ,
([0, 1, 4, 7, 2, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 2, 6, 3],) ,
('saved value', 3.9999999999999996) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 6, ',', 6, '-', 3) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 3, '-', 3, ',', 6, '-', 6) ,
('Swap gain:', 1.9464643191325979) ,
([0, 1, 4, 3, 2, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 7, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 7) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 4, 6, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 7, 2, 3],) ,
('saved value', 3.5839842751147755) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 3) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 4, '-', 3, ',', 6, '-', 2) ,
('Swap gain:', -0.49375067499190006) ,
([0, 1, 4, 6, 3, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 3, 7, 2],) ,
('saved value', 4.090233600122875) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 3) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('After swapping:', 5, '-', 3, ',', 6, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 1, 4, 6, 2, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 2, 3, 7],) ,
('saved value', 4.5839842751147755) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 4, 6, 2, 7, 3]) ,
('Current mapping', [0, 1, 2, 6, 4, 7, 3]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 6.5839842751147755) ,
('Current mapping:', [0, 1, 2, 6, 4, 7, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 6, 4, 7, 3],) ,
('saved value', 5.5839842751147755) ,
('Remap node', 0, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 6, 4, 7, 3],) ,
('saved value', 5.5839842751147755) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 6, 4, 7, 3],) ,
('saved value', 5.5839842751147755) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 5, 2, 6, 4, 7, 3],) ,
('saved value', 2.5839842751147755) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -3.493016877201253) ,
('Computing match for mapping',) ,
([0, 8, 2, 6, 4, 7, 3],) ,
('saved value', 3.0909673979135226) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 2, 6, 4, 7, 3],) ,
('saved value', 3.1062868659047664) ,
('Remap node', 2, 'from ', 2, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 6, 4, 7, 3],) ,
('saved value', 4.5839842751147755) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -1.2692691364759328) ,
('Computing match for mapping',) ,
([0, 1, 8, 6, 4, 7, 3],) ,
('saved value', 5.314715138638842) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 6, 4, 7, 3],) ,
('saved value', 4.5839842751147755) ,
('Remap node', 3, 'from ', 6, 'to', 5) ,
('Move gain:', -0.5839842751147758) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 7, 3],) ,
('saved value', 6.0) ,
('Remap node', 3, 'from ', 6, 'to', 8) ,
('Move gain:', -0.5839842751147758) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 4, 7, 3],) ,
('saved value', 6.0) ,
('Remap node', 3, 'from ', 6, 'to', 9) ,
('Move gain:', 0.4160157248852242) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 7, 3],) ,
('saved value', 7.0) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 7, 3],) ,
('saved value', 4.5839842751147755) ,
('Remap node', 4, 'from ', 4, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 8, 7, 3],) ,
('saved value', 4.5839842751147755) ,
('Remap node', 4, 'from ', 4, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 9, 7, 3],) ,
('saved value', 4.5839842751147755) ,
('Remap node', 5, 'from ', 7, 'to', 5) ,
('Move gain:', 1.9999999999999991) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('saved value', 8.583984275114775) ,
('Remap node', 5, 'from ', 7, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 8, 3],) ,
('saved value', 6.5839842751147755) ,
('Remap node', 5, 'from ', 7, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 9, 3],) ,
('saved value', 6.5839842751147755) ,
('Remap node', 6, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 7, 5],) ,
('saved value', 6.5839842751147755) ,
('Remap node', 6, 'from ', 3, 'to', 8) ,
('Move gain:', 0.5488519617984917) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 7, 8],) ,
('saved value', 7.132836236913267) ,
('Remap node', 6, 'from ', 3, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 7, 9],) ,
('saved value', 6.5839842751147755) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.720921366733404) ,
([1, 0, 2, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 6, 4, 7, 3],) ,
('saved value', 2.8630629083813717) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -2.6666302961916024) ,
([2, 1, 0, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 6, 4, 7, 3],) ,
('saved value', 3.917353978923173) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 6) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 0, '-', 6, ',', 3, '-', 0) ,
('Swap gain:', -1.3168330782630733) ,
([6, 1, 2, 0, 4, 7, 3],) ,
('Computing match for mapping',) ,
([6, 1, 2, 0, 4, 7, 3],) ,
('saved value', 5.267151196851702) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -2.7492314889443694) ,
([4, 1, 2, 6, 0, 7, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 6, 0, 7, 3],) ,
('saved value', 3.834752786170406) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([7, 1, 2, 6, 4, 0, 3],) ,
('Computing match for mapping',) ,
([7, 1, 2, 6, 4, 0, 3],) ,
('saved value', 5.5839842751147755) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 3) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 0, '-', 3, ',', 6, '-', 0) ,
('Swap gain:', -0.7379548224814585) ,
([3, 1, 2, 6, 4, 7, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 6, 4, 7, 0],) ,
('saved value', 5.846029452633317) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 2, 1, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 6, 4, 7, 3],) ,
('saved value', 1.5839842751147755) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 6) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 1, '-', 6, ',', 3, '-', 1) ,
('Swap gain:', -4.0616816843247845) ,
([0, 6, 2, 1, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 6, 2, 1, 4, 7, 3],) ,
('saved value', 2.522302590789991) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 4, 2, 6, 1, 7, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 6, 1, 7, 3],) ,
('saved value', 1.5839842751147755) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 7) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 2, 6, 4, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 6, 4, 1, 3],) ,
('saved value', 2.5839842751147755) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 3) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 1, '-', 3, ',', 6, '-', 1) ,
('Swap gain:', -3.477697409210009) ,
([0, 3, 2, 6, 4, 7, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 6, 4, 7, 1],) ,
('saved value', 3.1062868659047664) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 6) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 2, '-', 6, ',', 3, '-', 2) ,
('Swap gain:', -1.949768307757846) ,
([0, 1, 6, 2, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 4, 7, 3],) ,
('saved value', 4.63421596735693) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 2, 7, 3],) ,
('saved value', 4.5839842751147755) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 7) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 7, 6, 4, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, 2, 3],) ,
('saved value', 4.5839842751147755) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 3) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 2, '-', 3, ',', 6, '-', 2) ,
('Swap gain:', -1.4937506749919) ,
([0, 1, 3, 6, 4, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 6, 4, 7, 2],) ,
('saved value', 5.090233600122875) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 6, ',', 4, '-', 4) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -2.583984275114776) ,
([0, 1, 2, 4, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 7, 3],) ,
('saved value', 3.9999999999999996) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 6, ',', 5, '-', 7) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -0.5839842751147758) ,
([0, 1, 2, 7, 4, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 6, ',', 6, '-', 3) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 3, '-', 3, ',', 6, '-', 6) ,
('Swap gain:', 2.9464643191325974) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('saved value', 9.530448594247373) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 7) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 6, 7, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 7, 4, 3],) ,
('saved value', 4.5839842751147755) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 3) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 4, '-', 3, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 6, 3, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 3, 7, 4],) ,
('saved value', 4.5839842751147755) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 3) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('After swapping:', 5, '-', 3, ',', 6, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 1, 2, 6, 4, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 3, 7],) ,
('saved value', 6.5839842751147755) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 6, 4, 7, 3]) ,
('Current mapping', [0, 1, 2, 3, 4, 7, 6]) ,
('Gain after the hill-climbing', 2.9464643191325974) ,
('Update triple match number to:', 9.530448594247373) ,
('Current mapping:', [0, 1, 2, 3, 4, 7, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 7, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 0, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 7, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 4, 7, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 7, 6],) ,
('saved value', 5.530448594247373) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -3.493016877201253) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 7, 6],) ,
('saved value', 6.03743171704612) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 4, 7, 6],) ,
('saved value', 6.052751185037364) ,
('Remap node', 2, 'from ', 2, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 7, 6],) ,
('saved value', 6.530448594247373) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -2.2692691364759328) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 7, 6],) ,
('saved value', 7.261179457771441) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 3, 4, 7, 6],) ,
('saved value', 6.530448594247373) ,
('Remap node', 3, 'from ', 3, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 7, 6],) ,
('saved value', 6.530448594247373) ,
('Remap node', 3, 'from ', 3, 'to', 8) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 4, 7, 6],) ,
('saved value', 6.530448594247373) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 7, 6],) ,
('saved value', 7.530448594247373) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 7, 6],) ,
('saved value', 7.530448594247373) ,
('Remap node', 4, 'from ', 4, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 8, 7, 6],) ,
('saved value', 7.530448594247373) ,
('Remap node', 4, 'from ', 4, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 9, 7, 6],) ,
('saved value', 7.530448594247373) ,
('Remap node', 5, 'from ', 7, 'to', 5) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 11.530448594247373) ,
('Remap node', 5, 'from ', 7, 'to', 8) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 8, 6],) ,
('saved value', 9.530448594247373) ,
('Remap node', 5, 'from ', 7, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 9, 6],) ,
('saved value', 9.530448594247373) ,
('Remap node', 6, 'from ', 6, 'to', 5) ,
('Move gain:', -0.5304485942473729) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 5],) ,
('saved value', 9.0) ,
('Remap node', 6, 'from ', 6, 'to', 8) ,
('Move gain:', 0.018403367551119487) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 6, 'from ', 6, 'to', 9) ,
('Move gain:', -0.5304485942473737) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 9],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.720921366733404) ,
([1, 0, 2, 3, 4, 7, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 7, 6],) ,
('saved value', 5.8095272275139695) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.6666302961916024) ,
([2, 1, 0, 3, 4, 7, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 7, 6],) ,
('saved value', 5.8638182980557705) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.7328488031482974) ,
([3, 1, 2, 0, 4, 7, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 7, 6],) ,
('saved value', 5.797599791099076) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -2.7492314889443694) ,
([4, 1, 2, 3, 0, 7, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 7, 6],) ,
('saved value', 6.7812171053030035) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([7, 1, 2, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, 0, 6],) ,
('saved value', 8.530448594247373) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -1.268403416728832) ,
([6, 1, 2, 3, 4, 7, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 7, 0],) ,
('saved value', 8.26204517751854) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 1, 3, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 7, 6],) ,
('saved value', 3.530448594247373) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.955394818420018) ,
([0, 3, 2, 1, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 7, 6],) ,
('saved value', 3.575053775827355) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 4, 2, 3, 1, 7, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 7, 6],) ,
('saved value', 4.530448594247373) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 7) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 2, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 4, 1, 6],) ,
('saved value', 5.530448594247373) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -4.530448594247374) ,
([0, 6, 2, 3, 4, 7, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 7, 1],) ,
('saved value', 4.999999999999999) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 7, 6],) ,
('saved value', 4.530448594247373) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 3, 2, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 7, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 7) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 2, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -2.389983301882344) ,
([0, 1, 6, 3, 4, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 7, 2],) ,
('saved value', 7.140465292365029) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 7, 6],) ,
('saved value', 4.530448594247373) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 7) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 7, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 3, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -2.9464643191325974) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 7, 3],) ,
('saved value', 6.5839842751147755) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 7) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 3, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 4, 6],) ,
('saved value', 7.530448594247373) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2.530448594247374) ,
([0, 1, 2, 3, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 7, 4],) ,
('saved value', 6.999999999999999) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 7, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', -0.5304485942473729) ,
([0, 1, 2, 3, 4, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 7],) ,
('saved value', 9.0) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 3, 4, 7, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 11.530448594247373) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, 5, 6],) ,
('saved value', 10.530448594247373) ,
('Remap node', 0, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 5, 6],) ,
('saved value', 10.530448594247373) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 4, 5, 6],) ,
('saved value', 10.530448594247373) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 4, 5, 6],) ,
('saved value', 7.530448594247373) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -3.493016877201253) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 5, 6],) ,
('saved value', 8.03743171704612) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 4, 5, 6],) ,
('saved value', 8.052751185037364) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -2.2692691364759323) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, 6],) ,
('saved value', 9.26117945777144) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 3, 4, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 3, 'from ', 3, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 3, 'from ', 3, 'to', 8) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 4, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, 6],) ,
('saved value', 9.530448594247373) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 4, 'from ', 4, 'to', 8) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 8, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 4, 'from ', 4, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 9, 5, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 5, 'from ', 5, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 6],) ,
('saved value', 9.530448594247373) ,
('Remap node', 5, 'from ', 5, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 8, 6],) ,
('saved value', 9.530448594247373) ,
('Remap node', 5, 'from ', 5, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 9, 6],) ,
('saved value', 9.530448594247373) ,
('Remap node', 6, 'from ', 6, 'to', 7) ,
('Move gain:', -0.5304485942473729) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('saved value', 11.0) ,
('Remap node', 6, 'from ', 6, 'to', 8) ,
('Move gain:', 0.018403367551119487) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('saved value', 11.548851961798492) ,
('Remap node', 6, 'from ', 6, 'to', 9) ,
('Move gain:', -0.5304485942473729) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.7209213667334033) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('saved value', 7.8095272275139695) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.6666302961916024) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('saved value', 7.8638182980557705) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.732848803148297) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('saved value', 7.797599791099076) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.7492314889443694) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('saved value', 7.7812171053030035) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('saved value', 8.530448594247373) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -1.268403416728832) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10.26204517751854) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('saved value', 5.530448594247373) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.955394818420018) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('saved value', 5.575053775827355) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('saved value', 5.530448594247373) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('saved value', 5.530448594247373) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -4.530448594247374) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('saved value', 6.999999999999999) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('saved value', 7.530448594247373) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -2.389983301882344) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('saved value', 9.140465292365029) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('saved value', 5.530448594247373) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('saved value', 6.530448594247373) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -2.9464643191325983) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('saved value', 8.583984275114775) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('saved value', 7.530448594247373) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -3.530448594247374) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('saved value', 7.999999999999999) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -2.530448594247373) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('saved value', 9.0) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Gain after the hill-climbing', 0.018403367551119487) ,
('Update triple match number to:', 11.548851961798492) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 8],) ,
('saved value', 7.548851961798492) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 4, 5, 8],) ,
('saved value', 7.548851961798492) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 4, 5, 8],) ,
('saved value', 8.071154552588483) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -2.36578403264307) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 8],) ,
('saved value', 9.183067929155422) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 3, 4, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 3, 'from ', 3, 'to', 6) ,
('Move gain:', -2.4160157248852236) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 8],) ,
('saved value', 9.132836236913269) ,
('Remap node', 3, 'from ', 3, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 4, 'from ', 4, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 4, 'from ', 4, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 9, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 5, 'from ', 5, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 5, 'from ', 5, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 5, 'from ', 5, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 9, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 6, 'from ', 8, 'to', 6) ,
('Move gain:', -0.018403367551119487) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 11.530448594247373) ,
('Remap node', 6, 'from ', 8, 'to', 7) ,
('Move gain:', -0.5488519617984924) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('saved value', 11.0) ,
('Remap node', 6, 'from ', 8, 'to', 9) ,
('Move gain:', -0.5488519617984924) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.7209213667334033) ,
([1, 0, 2, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 8],) ,
('saved value', 7.827930595065089) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.6666302961916024) ,
([2, 1, 0, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 8],) ,
('saved value', 7.88222166560689) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.732848803148297) ,
([3, 1, 2, 0, 4, 5, 8],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 8],) ,
('saved value', 7.8160031586501955) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.7492314889443694) ,
([4, 1, 2, 3, 0, 5, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 8],) ,
('saved value', 7.799620472854123) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 3, 4, 0, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 8],) ,
('saved value', 8.548851961798492) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -1.2868067842799498) ,
([8, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10.262045177518543) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 1, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.955394818420018) ,
([0, 3, 2, 1, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 8],) ,
('saved value', 5.593457143378474) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 3, 1, 5, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 5, 2, 3, 4, 1, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -4.041868838999744) ,
([0, 8, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 5, 1],) ,
('saved value', 7.506983122798748) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 8],) ,
('saved value', 6.548851961798492) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 8],) ,
('saved value', 7.548851961798492) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 5, 3, 4, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 8],) ,
('saved value', 6.548851961798492) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -2.311871773266324) ,
([0, 1, 8, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, 2],) ,
('saved value', 9.236980188532169) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 4, 3, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 3, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 8],) ,
('saved value', 6.548851961798492) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -3.5488519617984924) ,
([0, 1, 2, 8, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 4, 5, 3],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 3, 5, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 8],) ,
('saved value', 7.548851961798492) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -3.5488519617984924) ,
([0, 1, 2, 3, 8, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 8, 5, 4],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -2.5488519617984924) ,
([0, 1, 2, 3, 4, 8, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 8, 5],) ,
('saved value', 9.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('node_pair', (0, 8)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('relation match with', (2, 4), 1) ,
('node_pair', (2, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 2.0) ,
('node_pair', (4, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 9)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 5)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 4.0) ,
('Node mapping at start', [8, 1, 4, 3, 6, 9, 5]) ,
('Triple match number at start:', 4.0) ,
('Remap node', 0, 'from ', 8, 'to', 0) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 6, 9, 5],) ,
('saved value', 5.0) ,
('Remap node', 0, 'from ', 8, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 6, 9, 5],) ,
('saved value', 4.0) ,
('Remap node', 0, 'from ', 8, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 1, 4, 3, 6, 9, 5],) ,
('saved value', 4.0) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', -1.7209213667334038) ,
('Computing match for mapping',) ,
([8, 0, 4, 3, 6, 9, 5],) ,
('saved value', 2.279078633266596) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([8, 2, 4, 3, 6, 9, 5],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([8, 7, 4, 3, 6, 9, 5],) ,
('saved value', 2.0) ,
('Remap node', 2, 'from ', 4, 'to', 0) ,
('Move gain:', -0.6666302961916024) ,
('Computing match for mapping',) ,
([8, 1, 0, 3, 6, 9, 5],) ,
('saved value', 3.3333697038083976) ,
('Remap node', 2, 'from ', 4, 'to', 2) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('saved value', 6.0) ,
('Remap node', 2, 'from ', 4, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([8, 1, 7, 3, 6, 9, 5],) ,
('saved value', 3.0) ,
('Remap node', 3, 'from ', 3, 'to', 0) ,
('Move gain:', -1.7328488031482974) ,
('Computing match for mapping',) ,
([8, 1, 4, 0, 6, 9, 5],) ,
('saved value', 2.2671511968517026) ,
('Remap node', 3, 'from ', 3, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([8, 1, 4, 2, 6, 9, 5],) ,
('saved value', 2.0) ,
('Remap node', 3, 'from ', 3, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([8, 1, 4, 7, 6, 9, 5],) ,
('saved value', 2.0) ,
('Remap node', 4, 'from ', 6, 'to', 0) ,
('Move gain:', 0.25076851105563075) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 0, 9, 5],) ,
('saved value', 4.250768511055631) ,
('Remap node', 4, 'from ', 6, 'to', 2) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 2, 9, 5],) ,
('saved value', 5.0) ,
('Remap node', 4, 'from ', 6, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 7, 9, 5],) ,
('saved value', 4.0) ,
('Remap node', 5, 'from ', 9, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 6, 0, 5],) ,
('saved value', 4.0) ,
('Remap node', 5, 'from ', 9, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 6, 2, 5],) ,
('saved value', 4.0) ,
('Remap node', 5, 'from ', 9, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 6, 7, 5],) ,
('saved value', 4.0) ,
('Remap node', 6, 'from ', 5, 'to', 0) ,
('Move gain:', 0.2620451775185415) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 6, 9, 0],) ,
('saved value', 4.262045177518542) ,
('Remap node', 6, 'from ', 5, 'to', 2) ,
('Move gain:', 0.5062493250080999) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 6, 9, 2],) ,
('saved value', 4.5062493250081) ,
('Remap node', 6, 'from ', 5, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 6, 9, 7],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 8, ',', 1, '-', 1) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 8) ,
('Swap gain:', -1.4930168772012529) ,
([1, 8, 4, 3, 6, 9, 5],) ,
('Computing match for mapping',) ,
([1, 8, 4, 3, 6, 9, 5],) ,
('saved value', 2.506983122798747) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 8, ',', 2, '-', 4) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 8) ,
('Swap gain:', -0.26926913647593276) ,
([4, 1, 8, 3, 6, 9, 5],) ,
('Computing match for mapping',) ,
([4, 1, 8, 3, 6, 9, 5],) ,
('saved value', 3.7307308635240672) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 8, ',', 3, '-', 3) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 8) ,
('Swap gain:', -2.0) ,
([3, 1, 4, 8, 6, 9, 5],) ,
('Computing match for mapping',) ,
([3, 1, 4, 8, 6, 9, 5],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 8, ',', 4, '-', 6) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 8) ,
('Swap gain:', 0.0) ,
([6, 1, 4, 3, 8, 9, 5],) ,
('Computing match for mapping',) ,
([6, 1, 4, 3, 8, 9, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 8, ',', 5, '-', 9) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 0, '-', 9, ',', 5, '-', 8) ,
('Swap gain:', 0.0) ,
([9, 1, 4, 3, 6, 8, 5],) ,
('Computing match for mapping',) ,
([9, 1, 4, 3, 6, 8, 5],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 8, ',', 6, '-', 5) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 0, '-', 5, ',', 6, '-', 8) ,
('Swap gain:', 0.5488519617984917) ,
([5, 1, 4, 3, 6, 9, 8],) ,
('Computing match for mapping',) ,
([5, 1, 4, 3, 6, 9, 8],) ,
('saved value', 4.5488519617984915) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([8, 4, 1, 3, 6, 9, 5],) ,
('Computing match for mapping',) ,
([8, 4, 1, 3, 6, 9, 5],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.955394818420018) ,
([8, 3, 4, 1, 6, 9, 5],) ,
('Computing match for mapping',) ,
([8, 3, 4, 1, 6, 9, 5],) ,
('saved value', 1.044605181579982) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 6) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([8, 6, 4, 3, 1, 9, 5],) ,
('Computing match for mapping',) ,
([8, 6, 4, 3, 1, 9, 5],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 9) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 1, '-', 9, ',', 5, '-', 1) ,
('Swap gain:', -1.477697409210009) ,
([8, 9, 4, 3, 6, 1, 5],) ,
('Computing match for mapping',) ,
([8, 9, 4, 3, 6, 1, 5],) ,
('saved value', 2.522302590789991) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 5) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 1, '-', 5, ',', 6, '-', 1) ,
('Swap gain:', -2.0) ,
([8, 5, 4, 3, 6, 9, 1],) ,
('Computing match for mapping',) ,
([8, 5, 4, 3, 6, 9, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 3) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', -3.0) ,
([8, 1, 3, 4, 6, 9, 5],) ,
('Computing match for mapping',) ,
([8, 1, 3, 4, 6, 9, 5],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', 1.6342159673569299) ,
([8, 1, 6, 3, 4, 9, 5],) ,
('Computing match for mapping',) ,
([8, 1, 6, 3, 4, 9, 5],) ,
('saved value', 5.63421596735693) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 9) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 2, '-', 9, ',', 5, '-', 4) ,
('Swap gain:', -1.0) ,
([8, 1, 9, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([8, 1, 9, 3, 6, 4, 5],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 4, ',', 6, '-', 5) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 2, '-', 5, ',', 6, '-', 4) ,
('Swap gain:', -1.0) ,
([8, 1, 5, 3, 6, 9, 4],) ,
('Computing match for mapping',) ,
([8, 1, 5, 3, 6, 9, 4],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 6) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -1.416015724885224) ,
([8, 1, 4, 6, 3, 9, 5],) ,
('Computing match for mapping',) ,
([8, 1, 4, 6, 3, 9, 5],) ,
('saved value', 2.583984275114776) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 9) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 3, '-', 9, ',', 5, '-', 3) ,
('Swap gain:', -1.0) ,
([8, 1, 4, 9, 6, 3, 5],) ,
('Computing match for mapping',) ,
([8, 1, 4, 9, 6, 3, 5],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 5) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 3, '-', 5, ',', 6, '-', 3) ,
('Swap gain:', -2.0) ,
([8, 1, 4, 5, 6, 9, 3],) ,
('Computing match for mapping',) ,
([8, 1, 4, 5, 6, 9, 3],) ,
('saved value', 2.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 9) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 4, '-', 9, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([8, 1, 4, 3, 9, 6, 5],) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 9, 6, 5],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 5) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 4, '-', 5, ',', 6, '-', 6) ,
('Swap gain:', 0.5304485942473737) ,
([8, 1, 4, 3, 5, 9, 6],) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 5, 9, 6],) ,
('saved value', 4.530448594247374) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 9, ',', 6, '-', 5) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('After swapping:', 5, '-', 5, ',', 6, '-', 9) ,
('Swap gain:', 1.0) ,
([8, 1, 4, 3, 6, 5, 9],) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 6, 5, 9],) ,
('saved value', 5.0) ,
('Use move gain',) ,
('Original mapping', [8, 1, 4, 3, 6, 9, 5]) ,
('Current mapping', [8, 1, 2, 3, 6, 9, 5]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [8, 1, 2, 3, 6, 9, 5]) ,
('Remap node', 0, 'from ', 8, 'to', 0) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 9, 5],) ,
('saved value', 7.0) ,
('Remap node', 0, 'from ', 8, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 6, 9, 5],) ,
('saved value', 6.0) ,
('Remap node', 0, 'from ', 8, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 6, 9, 5],) ,
('saved value', 6.0) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', -1.7209213667334038) ,
('Computing match for mapping',) ,
([8, 0, 2, 3, 6, 9, 5],) ,
('saved value', 4.279078633266597) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([8, 4, 2, 3, 6, 9, 5],) ,
('saved value', 4.0) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([8, 7, 2, 3, 6, 9, 5],) ,
('saved value', 4.0) ,
('Remap node', 2, 'from ', 2, 'to', 0) ,
('Move gain:', -2.6666302961916024) ,
('Computing match for mapping',) ,
([8, 1, 0, 3, 6, 9, 5],) ,
('saved value', 3.3333697038083976) ,
('Remap node', 2, 'from ', 2, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 6, 9, 5],) ,
('saved value', 4.0) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([8, 1, 7, 3, 6, 9, 5],) ,
('saved value', 3.0) ,
('Remap node', 3, 'from ', 3, 'to', 0) ,
('Move gain:', -2.7328488031482974) ,
('Computing match for mapping',) ,
([8, 1, 2, 0, 6, 9, 5],) ,
('saved value', 3.2671511968517026) ,
('Remap node', 3, 'from ', 3, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 6, 9, 5],) ,
('saved value', 3.0) ,
('Remap node', 3, 'from ', 3, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 7, 6, 9, 5],) ,
('saved value', 3.0) ,
('Remap node', 4, 'from ', 6, 'to', 0) ,
('Move gain:', 0.25076851105563075) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 0, 9, 5],) ,
('saved value', 6.250768511055631) ,
('Remap node', 4, 'from ', 6, 'to', 4) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 6, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 7, 9, 5],) ,
('saved value', 6.0) ,
('Remap node', 5, 'from ', 9, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 6, 0, 5],) ,
('saved value', 6.0) ,
('Remap node', 5, 'from ', 9, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 6, 4, 5],) ,
('saved value', 6.0) ,
('Remap node', 5, 'from ', 9, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 6, 7, 5],) ,
('saved value', 6.0) ,
('Remap node', 6, 'from ', 5, 'to', 0) ,
('Move gain:', 0.2620451775185415) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 6, 9, 0],) ,
('saved value', 6.262045177518542) ,
('Remap node', 6, 'from ', 5, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 6, 9, 4],) ,
('saved value', 6.0) ,
('Remap node', 6, 'from ', 5, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 6, 9, 7],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 8, ',', 1, '-', 1) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 8) ,
('Swap gain:', -1.4930168772012529) ,
([1, 8, 2, 3, 6, 9, 5],) ,
('Computing match for mapping',) ,
([1, 8, 2, 3, 6, 9, 5],) ,
('saved value', 4.506983122798747) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 8, ',', 2, '-', 2) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 8) ,
('Swap gain:', -2.2692691364759328) ,
([2, 1, 8, 3, 6, 9, 5],) ,
('Computing match for mapping',) ,
([2, 1, 8, 3, 6, 9, 5],) ,
('saved value', 3.7307308635240672) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 8, ',', 3, '-', 3) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 8) ,
('Swap gain:', -3.0) ,
([3, 1, 2, 8, 6, 9, 5],) ,
('Computing match for mapping',) ,
([3, 1, 2, 8, 6, 9, 5],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 8, ',', 4, '-', 6) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 8) ,
('Swap gain:', 0.0) ,
([6, 1, 2, 3, 8, 9, 5],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 8, 9, 5],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 8, ',', 5, '-', 9) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 0, '-', 9, ',', 5, '-', 8) ,
('Swap gain:', 0.0) ,
([9, 1, 2, 3, 6, 8, 5],) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 6, 8, 5],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 8, ',', 6, '-', 5) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 0, '-', 5, ',', 6, '-', 8) ,
('Swap gain:', 0.5488519617984917) ,
([5, 1, 2, 3, 6, 9, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 6, 9, 8],) ,
('saved value', 6.5488519617984915) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([8, 2, 1, 3, 6, 9, 5],) ,
('Computing match for mapping',) ,
([8, 2, 1, 3, 6, 9, 5],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3.955394818420018) ,
([8, 3, 2, 1, 6, 9, 5],) ,
('Computing match for mapping',) ,
([8, 3, 2, 1, 6, 9, 5],) ,
('saved value', 2.044605181579982) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 6) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([8, 6, 2, 3, 1, 9, 5],) ,
('Computing match for mapping',) ,
([8, 6, 2, 3, 1, 9, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 9) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 1, '-', 9, ',', 5, '-', 1) ,
('Swap gain:', -1.477697409210009) ,
([8, 9, 2, 3, 6, 1, 5],) ,
('Computing match for mapping',) ,
([8, 9, 2, 3, 6, 1, 5],) ,
('saved value', 4.522302590789991) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 5) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 1, '-', 5, ',', 6, '-', 1) ,
('Swap gain:', -2.0) ,
([8, 5, 2, 3, 6, 9, 1],) ,
('Computing match for mapping',) ,
([8, 5, 2, 3, 6, 9, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([8, 1, 3, 2, 6, 9, 5],) ,
('Computing match for mapping',) ,
([8, 1, 3, 2, 6, 9, 5],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 6) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', -1.3657840326430701) ,
([8, 1, 6, 3, 2, 9, 5],) ,
('Computing match for mapping',) ,
([8, 1, 6, 3, 2, 9, 5],) ,
('saved value', 4.63421596735693) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 9) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 2, '-', 9, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([8, 1, 9, 3, 6, 2, 5],) ,
('Computing match for mapping',) ,
([8, 1, 9, 3, 6, 2, 5],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 5) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 2, '-', 5, ',', 6, '-', 2) ,
('Swap gain:', -2.4937506749919) ,
([8, 1, 5, 3, 6, 9, 2],) ,
('Computing match for mapping',) ,
([8, 1, 5, 3, 6, 9, 2],) ,
('saved value', 3.5062493250081) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 6) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -2.416015724885224) ,
([8, 1, 2, 6, 3, 9, 5],) ,
('Computing match for mapping',) ,
([8, 1, 2, 6, 3, 9, 5],) ,
('saved value', 3.583984275114776) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 9) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 3, '-', 9, ',', 5, '-', 3) ,
('Swap gain:', -2.0) ,
([8, 1, 2, 9, 6, 3, 5],) ,
('Computing match for mapping',) ,
([8, 1, 2, 9, 6, 3, 5],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 5) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 3, '-', 5, ',', 6, '-', 3) ,
('Swap gain:', -3.0) ,
([8, 1, 2, 5, 6, 9, 3],) ,
('Computing match for mapping',) ,
([8, 1, 2, 5, 6, 9, 3],) ,
('saved value', 3.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 9) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 4, '-', 9, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([8, 1, 2, 3, 9, 6, 5],) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 9, 6, 5],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 5) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 4, '-', 5, ',', 6, '-', 6) ,
('Swap gain:', 0.5304485942473737) ,
([8, 1, 2, 3, 5, 9, 6],) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 5, 9, 6],) ,
('saved value', 6.530448594247374) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 9, ',', 6, '-', 5) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('After swapping:', 5, '-', 5, ',', 6, '-', 9) ,
('Swap gain:', 1.0) ,
([8, 1, 2, 3, 6, 5, 9],) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 6, 5, 9],) ,
('saved value', 7.0) ,
('Use move gain',) ,
('Original mapping', [8, 1, 2, 3, 6, 9, 5]) ,
('Current mapping', [8, 1, 2, 3, 4, 9, 5]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 8.0) ,
('Current mapping:', [8, 1, 2, 3, 4, 9, 5]) ,
('Remap node', 0, 'from ', 8, 'to', 0) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 9, 5],) ,
('saved value', 9.0) ,
('Remap node', 0, 'from ', 8, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 9, 5],) ,
('saved value', 8.0) ,
('Remap node', 0, 'from ', 8, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, 9, 5],) ,
('saved value', 8.0) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', -2.720921366733404) ,
('Computing match for mapping',) ,
([8, 0, 2, 3, 4, 9, 5],) ,
('saved value', 5.279078633266597) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([8, 6, 2, 3, 4, 9, 5],) ,
('saved value', 5.0) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([8, 7, 2, 3, 4, 9, 5],) ,
('saved value', 5.0) ,
('Remap node', 2, 'from ', 2, 'to', 0) ,
('Move gain:', -2.6666302961916024) ,
('Computing match for mapping',) ,
([8, 1, 0, 3, 4, 9, 5],) ,
('saved value', 5.333369703808398) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -2.36578403264307) ,
('Computing match for mapping',) ,
([8, 1, 6, 3, 4, 9, 5],) ,
('saved value', 5.63421596735693) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([8, 1, 7, 3, 4, 9, 5],) ,
('saved value', 5.0) ,
('Remap node', 3, 'from ', 3, 'to', 0) ,
('Move gain:', -2.7328488031482974) ,
('Computing match for mapping',) ,
([8, 1, 2, 0, 4, 9, 5],) ,
('saved value', 5.267151196851703) ,
('Remap node', 3, 'from ', 3, 'to', 6) ,
('Move gain:', -2.416015724885224) ,
('Computing match for mapping',) ,
([8, 1, 2, 6, 4, 9, 5],) ,
('saved value', 5.583984275114776) ,
('Remap node', 3, 'from ', 3, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 7, 4, 9, 5],) ,
('saved value', 5.0) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', -1.7492314889443694) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 0, 9, 5],) ,
('saved value', 6.250768511055631) ,
('Remap node', 4, 'from ', 4, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 6, 9, 5],) ,
('saved value', 6.0) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 7, 9, 5],) ,
('saved value', 6.0) ,
('Remap node', 5, 'from ', 9, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 0, 5],) ,
('saved value', 8.0) ,
('Remap node', 5, 'from ', 9, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 6, 5],) ,
('saved value', 8.0) ,
('Remap node', 5, 'from ', 9, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 7, 5],) ,
('saved value', 8.0) ,
('Remap node', 6, 'from ', 5, 'to', 0) ,
('Move gain:', 0.2620451775185415) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 9, 0],) ,
('saved value', 8.26204517751854) ,
('Remap node', 6, 'from ', 5, 'to', 6) ,
('Move gain:', 0.5304485942473737) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 9, 6],) ,
('saved value', 8.530448594247373) ,
('Remap node', 6, 'from ', 5, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 9, 7],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 8, ',', 1, '-', 1) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 8) ,
('Swap gain:', -2.493016877201253) ,
([1, 8, 2, 3, 4, 9, 5],) ,
('Computing match for mapping',) ,
([1, 8, 2, 3, 4, 9, 5],) ,
('saved value', 5.506983122798747) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 8, ',', 2, '-', 2) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 8) ,
('Swap gain:', -2.2692691364759328) ,
([2, 1, 8, 3, 4, 9, 5],) ,
('Computing match for mapping',) ,
([2, 1, 8, 3, 4, 9, 5],) ,
('saved value', 5.730730863524068) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 8, ',', 3, '-', 3) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 8) ,
('Swap gain:', -3.0) ,
([3, 1, 2, 8, 4, 9, 5],) ,
('Computing match for mapping',) ,
([3, 1, 2, 8, 4, 9, 5],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 8, ',', 4, '-', 4) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 8) ,
('Swap gain:', -2.0) ,
([4, 1, 2, 3, 8, 9, 5],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 8, 9, 5],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 8, ',', 5, '-', 9) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 0, '-', 9, ',', 5, '-', 8) ,
('Swap gain:', 0.0) ,
([9, 1, 2, 3, 4, 8, 5],) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 4, 8, 5],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 8, ',', 6, '-', 5) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 0, '-', 5, ',', 6, '-', 8) ,
('Swap gain:', 0.5488519617984917) ,
([5, 1, 2, 3, 4, 9, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 9, 8],) ,
('saved value', 8.548851961798492) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([8, 2, 1, 3, 4, 9, 5],) ,
('Computing match for mapping',) ,
([8, 2, 1, 3, 4, 9, 5],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -4.955394818420018) ,
([8, 3, 2, 1, 4, 9, 5],) ,
('Computing match for mapping',) ,
([8, 3, 2, 1, 4, 9, 5],) ,
('saved value', 3.044605181579982) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -4.0) ,
([8, 4, 2, 3, 1, 9, 5],) ,
('Computing match for mapping',) ,
([8, 4, 2, 3, 1, 9, 5],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 9) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 1, '-', 9, ',', 5, '-', 1) ,
('Swap gain:', -2.477697409210009) ,
([8, 9, 2, 3, 4, 1, 5],) ,
('Computing match for mapping',) ,
([8, 9, 2, 3, 4, 1, 5],) ,
('saved value', 5.522302590789991) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 5) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 1, '-', 5, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([8, 5, 2, 3, 4, 9, 1],) ,
('Computing match for mapping',) ,
([8, 5, 2, 3, 4, 9, 1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([8, 1, 3, 2, 4, 9, 5],) ,
('Computing match for mapping',) ,
([8, 1, 3, 2, 4, 9, 5],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([8, 1, 4, 3, 2, 9, 5],) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 2, 9, 5],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 9) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 2, '-', 9, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([8, 1, 9, 3, 4, 2, 5],) ,
('Computing match for mapping',) ,
([8, 1, 9, 3, 4, 2, 5],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 5) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 2, '-', 5, ',', 6, '-', 2) ,
('Swap gain:', -2.4937506749919) ,
([8, 1, 5, 3, 4, 9, 2],) ,
('Computing match for mapping',) ,
([8, 1, 5, 3, 4, 9, 2],) ,
('saved value', 5.5062493250081) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -5.0) ,
([8, 1, 2, 4, 3, 9, 5],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 3, 9, 5],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 9) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 3, '-', 9, ',', 5, '-', 3) ,
('Swap gain:', -2.0) ,
([8, 1, 2, 9, 4, 3, 5],) ,
('Computing match for mapping',) ,
([8, 1, 2, 9, 4, 3, 5],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 5) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 3, '-', 5, ',', 6, '-', 3) ,
('Swap gain:', -3.0) ,
([8, 1, 2, 5, 4, 9, 3],) ,
('Computing match for mapping',) ,
([8, 1, 2, 5, 4, 9, 3],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 9) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 4, '-', 9, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([8, 1, 2, 3, 9, 4, 5],) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 9, 4, 5],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 5) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 4, '-', 5, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([8, 1, 2, 3, 5, 9, 4],) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 5, 9, 4],) ,
('saved value', 6.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 9, ',', 6, '-', 5) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('After swapping:', 5, '-', 5, ',', 6, '-', 9) ,
('Swap gain:', 2.0) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('saved value', 10.0) ,
('Use swap gain',) ,
('Original mapping', [8, 1, 2, 3, 4, 9, 5]) ,
('Current mapping', [8, 1, 2, 3, 4, 5, 9]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 10.0) ,
('Current mapping:', [8, 1, 2, 3, 4, 5, 9]) ,
('Remap node', 0, 'from ', 8, 'to', 0) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('saved value', 11.0) ,
('Remap node', 0, 'from ', 8, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 9],) ,
('saved value', 10.0) ,
('Remap node', 0, 'from ', 8, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, 5, 9],) ,
('saved value', 10.0) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', -2.720921366733404) ,
('Computing match for mapping',) ,
([8, 0, 2, 3, 4, 5, 9],) ,
('saved value', 7.279078633266597) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([8, 6, 2, 3, 4, 5, 9],) ,
('saved value', 7.0) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([8, 7, 2, 3, 4, 5, 9],) ,
('saved value', 7.0) ,
('Remap node', 2, 'from ', 2, 'to', 0) ,
('Move gain:', -2.6666302961916024) ,
('Computing match for mapping',) ,
([8, 1, 0, 3, 4, 5, 9],) ,
('saved value', 7.333369703808398) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -2.36578403264307) ,
('Computing match for mapping',) ,
([8, 1, 6, 3, 4, 5, 9],) ,
('saved value', 7.63421596735693) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([8, 1, 7, 3, 4, 5, 9],) ,
('saved value', 7.0) ,
('Remap node', 3, 'from ', 3, 'to', 0) ,
('Move gain:', -2.7328488031482974) ,
('Computing match for mapping',) ,
([8, 1, 2, 0, 4, 5, 9],) ,
('saved value', 7.267151196851703) ,
('Remap node', 3, 'from ', 3, 'to', 6) ,
('Move gain:', -2.416015724885224) ,
('Computing match for mapping',) ,
([8, 1, 2, 6, 4, 5, 9],) ,
('saved value', 7.583984275114776) ,
('Remap node', 3, 'from ', 3, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 7, 4, 5, 9],) ,
('saved value', 7.0) ,
('Remap node', 4, 'from ', 4, 'to', 0) ,
('Move gain:', -2.7492314889443694) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 0, 5, 9],) ,
('saved value', 7.250768511055631) ,
('Remap node', 4, 'from ', 4, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 6, 5, 9],) ,
('saved value', 7.0) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 7, 5, 9],) ,
('saved value', 7.0) ,
('Remap node', 5, 'from ', 5, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 0, 9],) ,
('saved value', 8.0) ,
('Remap node', 5, 'from ', 5, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 6, 9],) ,
('saved value', 8.0) ,
('Remap node', 5, 'from ', 5, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 7, 9],) ,
('saved value', 8.0) ,
('Remap node', 6, 'from ', 9, 'to', 0) ,
('Move gain:', 0.2620451775185426) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10.262045177518543) ,
('Remap node', 6, 'from ', 9, 'to', 6) ,
('Move gain:', 0.5304485942473729) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 5, 6],) ,
('saved value', 10.530448594247373) ,
('Remap node', 6, 'from ', 9, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 5, 7],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 8, ',', 1, '-', 1) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 8) ,
('Swap gain:', -2.493016877201253) ,
([1, 8, 2, 3, 4, 5, 9],) ,
('Computing match for mapping',) ,
([1, 8, 2, 3, 4, 5, 9],) ,
('saved value', 7.506983122798747) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 8, ',', 2, '-', 2) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 8) ,
('Swap gain:', -2.2692691364759328) ,
([2, 1, 8, 3, 4, 5, 9],) ,
('Computing match for mapping',) ,
([2, 1, 8, 3, 4, 5, 9],) ,
('saved value', 7.730730863524068) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 8, ',', 3, '-', 3) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 8) ,
('Swap gain:', -3.0) ,
([3, 1, 2, 8, 4, 5, 9],) ,
('Computing match for mapping',) ,
([3, 1, 2, 8, 4, 5, 9],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 8, ',', 4, '-', 4) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 8) ,
('Swap gain:', -3.0) ,
([4, 1, 2, 3, 8, 5, 9],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 8, 5, 9],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 8, ',', 5, '-', 5) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 8) ,
('Swap gain:', -2.0) ,
([5, 1, 2, 3, 4, 8, 9],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 8, 9],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 8, ',', 6, '-', 9) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 0, '-', 9, ',', 6, '-', 8) ,
('Swap gain:', 0.5488519617984924) ,
([9, 1, 2, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([8, 2, 1, 3, 4, 5, 9],) ,
('Computing match for mapping',) ,
([8, 2, 1, 3, 4, 5, 9],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -4.955394818420018) ,
([8, 3, 2, 1, 4, 5, 9],) ,
('Computing match for mapping',) ,
([8, 3, 2, 1, 4, 5, 9],) ,
('saved value', 5.044605181579982) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -5.0) ,
([8, 4, 2, 3, 1, 5, 9],) ,
('Computing match for mapping',) ,
([8, 4, 2, 3, 1, 5, 9],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([8, 5, 2, 3, 4, 1, 9],) ,
('Computing match for mapping',) ,
([8, 5, 2, 3, 4, 1, 9],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 9) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 1, '-', 9, ',', 6, '-', 1) ,
('Swap gain:', -2.477697409210009) ,
([8, 9, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([8, 9, 2, 3, 4, 5, 1],) ,
('saved value', 7.522302590789991) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([8, 1, 3, 2, 4, 5, 9],) ,
('Computing match for mapping',) ,
([8, 1, 3, 2, 4, 5, 9],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([8, 1, 4, 3, 2, 5, 9],) ,
('Computing match for mapping',) ,
([8, 1, 4, 3, 2, 5, 9],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([8, 1, 5, 3, 4, 2, 9],) ,
('Computing match for mapping',) ,
([8, 1, 5, 3, 4, 2, 9],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 9) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 2, '-', 9, ',', 6, '-', 2) ,
('Swap gain:', -2.4937506749919) ,
([8, 1, 9, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([8, 1, 9, 3, 4, 5, 2],) ,
('saved value', 7.5062493250081) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6.0) ,
([8, 1, 2, 4, 3, 5, 9],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 3, 5, 9],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([8, 1, 2, 5, 4, 3, 9],) ,
('Computing match for mapping',) ,
([8, 1, 2, 5, 4, 3, 9],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 9) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 3, '-', 9, ',', 6, '-', 3) ,
('Swap gain:', -2.0) ,
([8, 1, 2, 9, 4, 5, 3],) ,
('Computing match for mapping',) ,
([8, 1, 2, 9, 4, 5, 3],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([8, 1, 2, 3, 5, 4, 9],) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 5, 4, 9],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 9) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 4, '-', 9, ',', 6, '-', 4) ,
('Swap gain:', -3.0) ,
([8, 1, 2, 3, 9, 5, 4],) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 9, 5, 4],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 9) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 5, '-', 9, ',', 6, '-', 5) ,
('Swap gain:', -2.0) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 9, 5],) ,
('saved value', 8.0) ,
('Use move gain',) ,
('Original mapping', [8, 1, 2, 3, 4, 5, 9]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 9]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 11.0) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 9]) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 9],) ,
('saved value', 10.0) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, 5, 9],) ,
('saved value', 10.0) ,
('Remap node', 0, 'from ', 0, 'to', 8) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 5, 9],) ,
('saved value', 10.0) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 9],) ,
('saved value', 7.0) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 4, 5, 9],) ,
('saved value', 7.0) ,
('Remap node', 1, 'from ', 1, 'to', 8) ,
('Move gain:', -3.493016877201253) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 5, 9],) ,
('saved value', 7.506983122798747) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -2.36578403264307) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 9],) ,
('saved value', 8.63421596735693) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, 9],) ,
('saved value', 8.0) ,
('Remap node', 2, 'from ', 2, 'to', 8) ,
('Move gain:', -2.2692691364759328) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, 9],) ,
('saved value', 8.730730863524068) ,
('Remap node', 3, 'from ', 3, 'to', 6) ,
('Move gain:', -2.4160157248852254) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 9],) ,
('saved value', 8.583984275114775) ,
('Remap node', 3, 'from ', 3, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 5, 9],) ,
('saved value', 8.0) ,
('Remap node', 3, 'from ', 3, 'to', 8) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 4, 5, 9],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 4, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 9],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, 9],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 4, 'to', 8) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 8, 5, 9],) ,
('saved value', 8.0) ,
('Remap node', 5, 'from ', 5, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 9],) ,
('saved value', 9.0) ,
('Remap node', 5, 'from ', 5, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 9],) ,
('saved value', 9.0) ,
('Remap node', 5, 'from ', 5, 'to', 8) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 8, 9],) ,
('saved value', 9.0) ,
('Remap node', 6, 'from ', 9, 'to', 6) ,
('Move gain:', 0.5304485942473729) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 11.530448594247373) ,
('Remap node', 6, 'from ', 9, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('saved value', 11.0) ,
('Remap node', 6, 'from ', 9, 'to', 8) ,
('Move gain:', 0.5488519617984924) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('saved value', 11.548851961798492) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.720921366733404) ,
([1, 0, 2, 3, 4, 5, 9],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 9],) ,
('saved value', 7.279078633266597) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.6666302961916024) ,
([2, 1, 0, 3, 4, 5, 9],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 9],) ,
('saved value', 7.333369703808398) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.7328488031482974) ,
([3, 1, 2, 0, 4, 5, 9],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 9],) ,
('saved value', 7.267151196851703) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.7492314889443694) ,
([4, 1, 2, 3, 0, 5, 9],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 9],) ,
('saved value', 7.250768511055631) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 3, 4, 0, 9],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 9],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 9) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 0, '-', 9, ',', 6, '-', 0) ,
('Swap gain:', -0.7379548224814585) ,
([9, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10.26204517751854) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 1, 3, 4, 5, 9],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 9],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.955394818420018) ,
([0, 3, 2, 1, 4, 5, 9],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 9],) ,
('saved value', 5.044605181579982) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 3, 1, 5, 9],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 9],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 5, 2, 3, 4, 1, 9],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 9],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 9) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 1, '-', 9, ',', 6, '-', 1) ,
('Swap gain:', -3.477697409210009) ,
([0, 9, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 4, 5, 1],) ,
('saved value', 7.522302590789991) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 5, 9],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 9],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5, 9],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 9],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 5, 3, 4, 2, 9],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 9],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 9) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 2, '-', 9, ',', 6, '-', 2) ,
('Swap gain:', -2.4937506749919) ,
([0, 1, 9, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 9, 3, 4, 5, 2],) ,
('saved value', 8.506249325008099) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 4, 3, 5, 9],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 9],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 3, 9],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 9],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 9) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 3, '-', 9, ',', 6, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 9, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, 3],) ,
('saved value', 9.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 3, 5, 4, 9],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 9],) ,
('saved value', 7.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 9) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 4, '-', 9, ',', 6, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 3, 9, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 9, 5, 4],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 9) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('After swapping:', 5, '-', 9, ',', 6, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 3, 4, 9, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 9, 5],) ,
('saved value', 9.0) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 9]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Gain after the hill-climbing', 0.5488519617984924) ,
('Update triple match number to:', 11.548851961798492) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([7, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 3, 4, 5, 8],) ,
('saved value', 10.548851961798492) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 8],) ,
('saved value', 7.548851961798492) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 4, 5, 8],) ,
('saved value', 7.548851961798492) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 4, 5, 8],) ,
('saved value', 8.071154552588483) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -2.36578403264307) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 8],) ,
('saved value', 9.183067929155422) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 3, 4, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 3, 'from ', 3, 'to', 6) ,
('Move gain:', -2.4160157248852236) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 8],) ,
('saved value', 9.132836236913269) ,
('Remap node', 3, 'from ', 3, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 5, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 4, 'from ', 4, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 4, 'from ', 4, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 9, 5, 8],) ,
('saved value', 8.548851961798492) ,
('Remap node', 5, 'from ', 5, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 5, 'from ', 5, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 5, 'from ', 5, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 9, 8],) ,
('saved value', 9.548851961798492) ,
('Remap node', 6, 'from ', 8, 'to', 6) ,
('Move gain:', -0.018403367551119487) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 11.530448594247373) ,
('Remap node', 6, 'from ', 8, 'to', 7) ,
('Move gain:', -0.5488519617984924) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 7],) ,
('saved value', 11.0) ,
('Remap node', 6, 'from ', 8, 'to', 9) ,
('Move gain:', -0.5488519617984924) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 9],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.7209213667334033) ,
([1, 0, 2, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 8],) ,
('saved value', 7.827930595065089) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.6666302961916024) ,
([2, 1, 0, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 8],) ,
('saved value', 7.88222166560689) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.732848803148297) ,
([3, 1, 2, 0, 4, 5, 8],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 8],) ,
('saved value', 7.8160031586501955) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.7492314889443694) ,
([4, 1, 2, 3, 0, 5, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 8],) ,
('saved value', 7.799620472854123) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 3, 4, 0, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 8],) ,
('saved value', 8.548851961798492) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 0, '-', 8, ',', 6, '-', 0) ,
('Swap gain:', -1.2868067842799498) ,
([8, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 3, 4, 5, 0],) ,
('saved value', 10.262045177518543) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 1, 3, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.955394818420018) ,
([0, 3, 2, 1, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 8],) ,
('saved value', 5.593457143378474) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 4, 2, 3, 1, 5, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 5, 2, 3, 4, 1, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 1, '-', 8, ',', 6, '-', 1) ,
('Swap gain:', -4.041868838999744) ,
([0, 8, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 4, 5, 1],) ,
('saved value', 7.506983122798748) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 8],) ,
('saved value', 6.548851961798492) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 8],) ,
('saved value', 7.548851961798492) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 5, 3, 4, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 8],) ,
('saved value', 6.548851961798492) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 2, '-', 8, ',', 6, '-', 2) ,
('Swap gain:', -2.311871773266324) ,
([0, 1, 8, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 4, 5, 2],) ,
('saved value', 9.236980188532169) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 4, 3, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 8],) ,
('saved value', 5.548851961798492) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 3, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 8],) ,
('saved value', 6.548851961798492) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 3, '-', 8, ',', 6, '-', 3) ,
('Swap gain:', -3.5488519617984924) ,
([0, 1, 2, 8, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 4, 5, 3],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 3, 5, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 8],) ,
('saved value', 7.548851961798492) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 4, '-', 8, ',', 6, '-', 4) ,
('Swap gain:', -3.5488519617984924) ,
([0, 1, 2, 3, 8, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 8, 5, 4],) ,
('saved value', 8.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 8) ,
([0, 1, 2, 3, 4, 5, 8],) ,
('After swapping:', 5, '-', 8, ',', 6, '-', 5) ,
('Swap gain:', -2.5488519617984924) ,
([0, 1, 2, 3, 4, 8, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 8, 5],) ,
('saved value', 9.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 11.548851961798492) ,
('best node mapping', [0, 1, 2, 3, 4, 5, 8]) ,
('Best node mapping alignment:', 'a0(arrest-01)-b0(place-01) a1(person)-b1(person) a2(country)-b2(country) a3(name)-b3(name) a4(lead-02)-b4(lead-02) a5(oppose-01)-b5(oppose-01) a6(house)-b8(government-organization)') ,
('F-score:', 0.607834313778868) ,
Smatch score F1 0.608
('AMR pair', 12) ,
('============================================',) ,
('AMR 1 (one-line):', '(n0 / need-01:ARG1 (w0 / worry-01:ARG1 y0):ARG0 (y0 / you):polarity - )') ,
('AMR 2 (one-line):', '(o0 / obligate-01:ARG1 (y0 / you):ARG2 (w0 / worry-02:ARG0 y0):polarity - )') ,
('Instance triples of AMR 1:', 3) ,
([('instance', 'a0', 'need-01'), ('instance', 'a1', 'worry-01'), ('instance', 'a2', 'you')],) ,
('Attribute triples of AMR 1:', 2) ,
([('polarity', 'a0', '-'), ('TOP', 'a0', 'need-01')],) ,
('Relation triples of AMR 1:', 3) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a2'), ('ARG1', 'a1', 'a2')],) ,
('Instance triples of AMR 2:', 3) ,
([('instance', 'b0', 'obligate-01'), ('instance', 'b1', 'you'), ('instance', 'b2', 'worry-02')],) ,
('Attribute triples of AMR 2:', 2) ,
([('polarity', 'b0', '-'), ('TOP', 'b0', 'obligate-01')],) ,
('Relation triples of AMR 2:', 3) ,
([('ARG1', 'b0', 'b1'), ('ARG2', 'b0', 'b2'), ('ARG0', 'b2', 'b1')],) ,
('Similarity', 'need-01', 'obligate-01', 0.0) ,
('Similarity', 'need-01', 'you', 0.36698664330883585) ,
('Similarity', 'need-01', 'worry-02', 0.3185344100930455) ,
('Similarity', 'worry-01', 'obligate-01', 0.0) ,
('Similarity', 'worry-01', 'you', 0.3400044110317696) ,
('Similarity', 'worry-01', 'worry-02', 0.5) ,
('Similarity', 'you', 'obligate-01', 0.0) ,
('Similarity', 'you', 'you', 1.0) ,
('Similarity', 'you', 'worry-02', 0.3400044110317696) ,
('Candidate mappings:',) ,
([{0, 1, 2}, {0, 1, 2}, {0, 1, 2}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 1.0, (1, 1): 1}, (0, 1): {-1: 0.36698664330883585}, (0, 2): {-1: 0.3185344100930455, (2, 1): 1}, (1, 0): {-1: 0.0, (2, 1): 1}, (1, 1): {-1: 0.3400044110317696, (0, 0): 1}, (1, 2): {-1: 0.5}, (2, 0): {-1: 0.0}, (2, 1): {-1: 1.0, (0, 2): 1, (1, 0): 1}, (2, 2): {-1: 0.3400044110317696}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0.3185344100930455) ,
('relation match with', (2, 1), 1) ,
('node_pair', (1, 0)) ,
('instance/attribute match', 0.0) ,
('relation match with', (2, 1), 1) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 3.3185344100930454) ,
('Node mapping at start', [2, 0, 1]) ,
('Triple match number at start:', 3.3185344100930454) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', -0.8185344100930454) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 2.5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', -2.61154335575244) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0.7069910543406053) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2.6599955889682305) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0.6585388211248149) ,
('no move/swap gain found',) ,
('Original mapping', [2, 0, 1]) ,
('Current mapping', [2, 0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('saved value', 3.3185344100930454) ,
('Node mapping at start', [2, 0, 1]) ,
('Triple match number at start:', 3.3185344100930454) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', -0.8185344100930454) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 2.5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', -2.61154335575244) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0.7069910543406053) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2.6599955889682305) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0.6585388211248149) ,
('no move/swap gain found',) ,
('Original mapping', [2, 0, 1]) ,
('Current mapping', [2, 0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 2.5) ,
('Node mapping at start', [0, 2, 1]) ,
('Triple match number at start:', 2.5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', 0.8185344100930454) ,
([2, 0, 1],) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('saved value', 3.3185344100930454) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 2, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -1.6330133566911642) ,
([1, 2, 0],) ,
('Computing match for mapping',) ,
([1, 2, 0],) ,
('saved value', 0.8669866433088358) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([0, 2, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 0.18000882206353896) ,
([0, 1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 2.680008822063539) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 1]) ,
('Current mapping', [2, 0, 1]) ,
('Gain after the hill-climbing', 0.8185344100930454) ,
('Update triple match number to:', 3.3185344100930454) ,
('Current mapping:', [2, 0, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', -0.8185344100930454) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 2.5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', -2.61154335575244) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0.7069910543406053) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2.6599955889682305) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0.6585388211248149) ,
('no move/swap gain found',) ,
('Original mapping', [2, 0, 1]) ,
('Current mapping', [2, 0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0.6585388211248149) ,
('Node mapping at start', [2, 1, 0]) ,
('Triple match number at start:', 0.6585388211248149) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 0],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', 0.20844782218402091) ,
([1, 2, 0],) ,
('Computing match for mapping',) ,
([1, 2, 0],) ,
('saved value', 0.8669866433088358) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 1, 0],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 2.021470000938724) ,
([0, 1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 2.680008822063539) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 0) ,
([2, 1, 0],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', 2.6599955889682305) ,
([2, 0, 1],) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('saved value', 3.3185344100930454) ,
('Use swap gain',) ,
('Original mapping', [2, 1, 0]) ,
('Current mapping', [2, 0, 1]) ,
('Gain after the hill-climbing', 2.6599955889682305) ,
('Update triple match number to:', 3.3185344100930454) ,
('Current mapping:', [2, 0, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', -0.8185344100930454) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 2.5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', -2.61154335575244) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0.7069910543406053) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2.6599955889682305) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0.6585388211248149) ,
('no move/swap gain found',) ,
('Original mapping', [2, 0, 1]) ,
('Current mapping', [2, 0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([1, 2, 0],) ,
('saved value', 0.8669866433088358) ,
('Node mapping at start', [1, 2, 0]) ,
('Triple match number at start:', 0.8669866433088358) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 0],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -0.20844782218402091) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0.6585388211248149) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 0) ,
([1, 2, 0],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', 1.6330133566911642) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 2.5) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 0) ,
([1, 2, 0],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', -0.15999558896823052) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0.7069910543406053) ,
('Use swap gain',) ,
('Original mapping', [1, 2, 0]) ,
('Current mapping', [0, 2, 1]) ,
('Gain after the hill-climbing', 1.6330133566911642) ,
('Update triple match number to:', 2.5) ,
('Current mapping:', [0, 2, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', 0.8185344100930454) ,
([2, 0, 1],) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('saved value', 3.3185344100930454) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 2, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -1.6330133566911642) ,
([1, 2, 0],) ,
('Computing match for mapping',) ,
([1, 2, 0],) ,
('saved value', 0.8669866433088358) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([0, 2, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 0.18000882206353896) ,
([0, 1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 2.680008822063539) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 1]) ,
('Current mapping', [2, 0, 1]) ,
('Gain after the hill-climbing', 0.8185344100930454) ,
('Update triple match number to:', 3.3185344100930454) ,
('Current mapping:', [2, 0, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', -0.8185344100930454) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 2.5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', -2.61154335575244) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0.7069910543406053) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2.6599955889682305) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0.6585388211248149) ,
('no move/swap gain found',) ,
('Original mapping', [2, 0, 1]) ,
('Current mapping', [2, 0, 1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 3.3185344100930454) ,
('best node mapping', [2, 0, 1]) ,
('Best node mapping alignment:', 'a0(need-01)-b2(worry-02) a1(worry-01)-b0(obligate-01) a2(you)-b1(you)') ,
('F-score:', 0.4148168012616307) ,
Smatch score F1 0.415
('AMR pair', 13) ,
('============================================',) ,
('AMR 1 (one-line):', '(b0 / be-located-at-91:ARG1 (i0 / i):ARG2 (s0 / situation:ARG1-of (r0 / resemble-01)))') ,
('AMR 2 (one-line):', '(h0 / have-03:ARG1 (s0 / situation:ARG1-of (r0 / resemble-01)):ARG0 (i0 / i))') ,
('Instance triples of AMR 1:', 4) ,
([('instance', 'a0', 'be-located-at-91'), ('instance', 'a1', 'i'), ('instance', 'a2', 'situation'), ('instance', 'a3', 'resemble-01')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'be-located-at-91')],) ,
('Relation triples of AMR 1:', 3) ,
([('ARG1', 'a0', 'a1'), ('ARG2', 'a0', 'a2'), ('ARG1', 'a3', 'a2')],) ,
('Instance triples of AMR 2:', 4) ,
([('instance', 'b0', 'have-03'), ('instance', 'b1', 'situation'), ('instance', 'b2', 'resemble-01'), ('instance', 'b3', 'i')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'have-03')],) ,
('Relation triples of AMR 2:', 3) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b3'), ('ARG1', 'b2', 'b1')],) ,
('Similarity', 'be-located-at-91', 'have-03', 0.0) ,
('Similarity', 'be-located-at-91', 'situation', 0.0) ,
('Similarity', 'be-located-at-91', 'resemble-01', 0.0) ,
('Similarity', 'be-located-at-91', 'i', 0.0) ,
('Similarity', 'i', 'have-03', 0.26105530822330736) ,
('Similarity', 'i', 'situation', 0.5713741609125123) ,
('Similarity', 'i', 'resemble-01', 0.0) ,
('Similarity', 'i', 'i', 1.0) ,
('Similarity', 'situation', 'have-03', 0.0) ,
('Similarity', 'situation', 'situation', 1.0) ,
('Similarity', 'situation', 'resemble-01', 0.0) ,
('Similarity', 'resemble-01', 'have-03', 0.0) ,
('Similarity', 'resemble-01', 'resemble-01', 1.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3}, {0, 1, 2, 3}, {0, 1, 2, 3}, {0, 1, 2, 3}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.0, (1, 1): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0, (1, 1): 1}, (0, 3): {-1: 0.0}, (1, 0): {-1: 0.26105530822330736}, (1, 1): {-1: 0.5713741609125123, (0, 0): 1, (0, 2): 1}, (1, 2): {-1: 0.0}, (1, 3): {-1: 1.0}, (2, 0): {-1: 0.0}, (2, 1): {-1: 1.0, (3, 0): 1, (3, 2): 1}, (2, 2): {-1: 0.0}, (2, 3): {-1: 0.5713741609125123}, (3, 0): {-1: 0.0, (2, 1): 1}, (3, 1): {-1: 0.0}, (3, 2): {-1: 1.0, (2, 1): 1}, (3, 3): {-1: 0.0}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 3, 1, 2],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 1.0) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 1.0) ,
('relation match with', (3, 2), 1) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 4.0) ,
('Node mapping at start', [0, 3, 1, 2]) ,
('Triple match number at start:', 4.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -0.7389446917766926) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 3.261055308223307) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -0.8572516781749755) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 3.1427483218250245) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([3, 2, 1, 0],) ,
('node_pair', (0, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 1.0) ,
('relation match with', (3, 0), 1) ,
('node_pair', (3, 0)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 2.0) ,
('Node mapping at start', [3, 2, 1, 0]) ,
('Triple match number at start:', 2.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 2) ,
([3, 2, 1, 0],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 3) ,
('Swap gain:', 1.0) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 1) ,
([3, 2, 1, 0],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -1.4286258390874877) ,
([1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([1, 2, 3, 0],) ,
('saved value', 0.5713741609125123) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 0) ,
([3, 2, 1, 0],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([3, 2, 1, 0],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', -1.4286258390874877) ,
([3, 1, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0],) ,
('saved value', 0.5713741609125123) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 0) ,
([3, 2, 1, 0],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', 1.2610553082233071) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 3.261055308223307) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 0) ,
([3, 2, 1, 0],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([3, 2, 0, 1],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [3, 2, 1, 0]) ,
('Current mapping', [3, 0, 1, 2]) ,
('Gain after the hill-climbing', 1.2610553082233071) ,
('Update triple match number to:', 3.261055308223307) ,
('Current mapping:', [3, 0, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 0) ,
([3, 0, 1, 2],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 3) ,
('Swap gain:', 0.7389446917766929) ,
([0, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 1) ,
([3, 0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -1.4286258390874877) ,
([1, 0, 3, 2],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2],) ,
('saved value', 1.8324294691358194) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 2) ,
([3, 0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -2.0) ,
([2, 0, 1, 3],) ,
('Computing match for mapping',) ,
([2, 0, 1, 3],) ,
('saved value', 1.2610553082233071) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([3, 0, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -1.689681147310795) ,
([3, 1, 0, 2],) ,
('Computing match for mapping',) ,
([3, 1, 0, 2],) ,
('saved value', 1.571374160912512) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 2) ,
([3, 0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.2610553082233071) ,
([3, 2, 1, 0],) ,
('Computing match for mapping',) ,
([3, 2, 1, 0],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([3, 0, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([3, 0, 2, 1],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1],) ,
('saved value', 0.26105530822330714) ,
('Use swap gain',) ,
('Original mapping', [3, 0, 1, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 0.7389446917766929) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [0, 3, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -0.7389446917766929) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 3.261055308223307) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -0.8572516781749755) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 3.1427483218250245) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([3, 0, 2, 1],) ,
('saved value', 0.26105530822330714) ,
('Node mapping at start', [3, 0, 2, 1]) ,
('Triple match number at start:', 0.26105530822330714) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 0) ,
([3, 0, 2, 1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 3) ,
('Swap gain:', 0.7389446917766929) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 2) ,
([3, 0, 2, 1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', 0.5713741609125123) ,
([2, 0, 3, 1],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1],) ,
('saved value', 0.8324294691358194) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 1) ,
([3, 0, 2, 1],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 0.0) ,
([1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3],) ,
('saved value', 0.26105530822330714) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 2) ,
([3, 0, 2, 1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -0.26105530822330714) ,
([3, 2, 0, 1],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 1) ,
([3, 0, 2, 1],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', 0.3103188526892051) ,
([3, 1, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0],) ,
('saved value', 0.5713741609125123) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([3, 0, 2, 1],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', 3.0) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 3.261055308223307) ,
('Use swap gain',) ,
('Original mapping', [3, 0, 2, 1]) ,
('Current mapping', [3, 0, 1, 2]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 3.261055308223307) ,
('Current mapping:', [3, 0, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 0) ,
([3, 0, 1, 2],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 3) ,
('Swap gain:', 0.7389446917766929) ,
([0, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 1) ,
([3, 0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -1.4286258390874877) ,
([1, 0, 3, 2],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2],) ,
('saved value', 1.8324294691358194) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 2) ,
([3, 0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -2.0) ,
([2, 0, 1, 3],) ,
('Computing match for mapping',) ,
([2, 0, 1, 3],) ,
('saved value', 1.2610553082233071) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([3, 0, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -1.689681147310795) ,
([3, 1, 0, 2],) ,
('Computing match for mapping',) ,
([3, 1, 0, 2],) ,
('saved value', 1.571374160912512) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 2) ,
([3, 0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.2610553082233071) ,
([3, 2, 1, 0],) ,
('Computing match for mapping',) ,
([3, 2, 1, 0],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([3, 0, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([3, 0, 2, 1],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1],) ,
('saved value', 0.26105530822330714) ,
('Use swap gain',) ,
('Original mapping', [3, 0, 1, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 0.7389446917766929) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [0, 3, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -0.7389446917766929) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 3.261055308223307) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -0.8572516781749755) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 3.1427483218250245) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([1, 2, 3, 0],) ,
('saved value', 0.5713741609125123) ,
('Node mapping at start', [1, 2, 3, 0]) ,
('Triple match number at start:', 0.5713741609125123) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 3, 0],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', 1.5713741609125123) ,
([2, 1, 3, 0],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0],) ,
('saved value', 2.1427483218250245) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 3) ,
([1, 2, 3, 0],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', 1.4286258390874877) ,
([3, 2, 1, 0],) ,
('Computing match for mapping',) ,
([3, 2, 1, 0],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 0) ,
([1, 2, 3, 0],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1],) ,
('saved value', 0.5713741609125123) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([1, 2, 3, 0],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', 0.42862583908748775) ,
([1, 3, 2, 0],) ,
('Computing match for mapping',) ,
([1, 3, 2, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 0) ,
([1, 2, 3, 0],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', 1.2610553082233071) ,
([1, 0, 3, 2],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2],) ,
('saved value', 1.8324294691358194) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 0) ,
([1, 2, 3, 0],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', -0.5713741609125123) ,
([1, 2, 0, 3],) ,
('Computing match for mapping',) ,
([1, 2, 0, 3],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 2, 3, 0]) ,
('Current mapping', [2, 1, 3, 0]) ,
('Gain after the hill-climbing', 1.5713741609125123) ,
('Update triple match number to:', 2.1427483218250245) ,
('Current mapping:', [2, 1, 3, 0]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 3, 0],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -1.5713741609125123) ,
([1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([1, 2, 3, 0],) ,
('saved value', 0.5713741609125123) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 3) ,
([2, 1, 3, 0],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', -1.5713741609125123) ,
([3, 1, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0],) ,
('saved value', 0.5713741609125123) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 0) ,
([2, 1, 3, 0],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 3.1427483218250245) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([2, 1, 3, 0],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', 0.8572516781749755) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 0) ,
([2, 1, 3, 0],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', -1.3103188526892051) ,
([2, 0, 3, 1],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1],) ,
('saved value', 0.8324294691358194) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 0) ,
([2, 1, 3, 0],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', -0.5713741609125123) ,
([2, 1, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3],) ,
('saved value', 1.5713741609125123) ,
('Use swap gain',) ,
('Original mapping', [2, 1, 3, 0]) ,
('Current mapping', [0, 1, 3, 2]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 3.1427483218250245) ,
('Current mapping:', [0, 1, 3, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 3, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.3103188526892051) ,
([1, 0, 3, 2],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2],) ,
('saved value', 1.8324294691358194) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 1, 3, 2],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -1.5713741609125125) ,
([3, 1, 0, 2],) ,
('Computing match for mapping',) ,
([3, 1, 0, 2],) ,
('saved value', 1.571374160912512) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 3, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 1, 3, 0],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0],) ,
('saved value', 2.1427483218250245) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([0, 1, 3, 2],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', 0.8572516781749755) ,
([0, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 3, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2.5713741609125123) ,
([0, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1],) ,
('saved value', 0.5713741609125123) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 2) ,
([0, 1, 3, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -1.5713741609125123) ,
([0, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3],) ,
('saved value', 1.5713741609125123) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 3, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 0.8572516781749755) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [0, 3, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -0.7389446917766929) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 3.261055308223307) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -0.8572516781749755) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 3.1427483218250245) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([1, 2, 0, 3],) ,
('saved value', 0.0) ,
('Node mapping at start', [1, 2, 0, 3]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 0, 3],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', 1.5713741609125123) ,
([2, 1, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3],) ,
('saved value', 1.5713741609125123) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 0) ,
([1, 2, 0, 3],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', 1.0) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 3) ,
([1, 2, 0, 3],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([3, 2, 0, 1],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 0) ,
([1, 2, 0, 3],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 0.26105530822330714) ,
([1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3],) ,
('saved value', 0.26105530822330714) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 3) ,
([1, 2, 0, 3],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', 2.0) ,
([1, 3, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 3) ,
([1, 2, 0, 3],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', 0.5713741609125123) ,
([1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([1, 2, 3, 0],) ,
('saved value', 0.5713741609125123) ,
('Use swap gain',) ,
('Original mapping', [1, 2, 0, 3]) ,
('Current mapping', [1, 3, 0, 2]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 2.0) ,
('Current mapping:', [1, 3, 0, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 3) ,
([1, 3, 0, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 1) ,
('Swap gain:', -0.42862583908748797) ,
([3, 1, 0, 2],) ,
('Computing match for mapping',) ,
([3, 1, 0, 2],) ,
('saved value', 1.571374160912512) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 0) ,
([1, 3, 0, 2],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', 2.0) ,
([0, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 2) ,
([1, 3, 0, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([2, 3, 0, 1],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 0) ,
([1, 3, 0, 2],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 3) ,
('Swap gain:', -0.1675705308641806) ,
([1, 0, 3, 2],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2],) ,
('saved value', 1.8324294691358194) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([1, 3, 0, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -2.0) ,
([1, 2, 0, 3],) ,
('Computing match for mapping',) ,
([1, 2, 0, 3],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 2) ,
([1, 3, 0, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 3, 2, 0],) ,
('Computing match for mapping',) ,
([1, 3, 2, 0],) ,
('saved value', 1.0) ,
('Use swap gain',) ,
('Original mapping', [1, 3, 0, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [0, 3, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -0.7389446917766929) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 3.261055308223307) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 3, 0, 2],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -0.8572516781749755) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 3.1427483218250245) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, 3, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1, 2]) ,
('Current mapping', [0, 3, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 4.0) ,
('best node mapping', [0, 3, 1, 2]) ,
('Best node mapping alignment:', 'a0(be-located-at-91)-b0(have-03) a1(i)-b3(i) a2(situation)-b1(situation) a3(resemble-01)-b2(resemble-01)') ,
('F-score:', 0.5) ,
Smatch score F1 0.500
('AMR pair', 14) ,
('============================================',) ,
('AMR 1 (one-line):', '(d0 / decide-01:ARG1 (a0 / and:op1 (p0 / protect-01:ARG0 t0:ARG1 (t1 / thing:ARG1-of (r0 / remain-01))):op2 (p1 / polish:ARG0 t0:topic t1)):ARG0 (t0 / they))') ,
('AMR 2 (one-line):', '(d0 / decide-01:ARG1 (a0 / and:op1 (p0 / protect-01:ARG0 t0:ARG1 (t1 / thing:ARG1-of (r0 / remain-01))):op2 (m0 / meddle-01:ARG0 t0:ARG1 t1)):ARG0 (t0 / they))') ,
('Instance triples of AMR 1:', 7) ,
([('instance', 'a0', 'decide-01'), ('instance', 'a1', 'and'), ('instance', 'a2', 'protect-01'), ('instance', 'a3', 'thing'), ('instance', 'a4', 'remain-01'), ('instance', 'a5', 'polish'), ('instance', 'a6', 'they')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'decide-01')],) ,
('Relation triples of AMR 1:', 9) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a6'), ('op1', 'a1', 'a2'), ('op2', 'a1', 'a5'), ('ARG1', 'a2', 'a3'), ('ARG0', 'a2', 'a6'), ('ARG1', 'a4', 'a3'), ('topic', 'a5', 'a3'), ('ARG0', 'a5', 'a6')],) ,
('Instance triples of AMR 2:', 7) ,
([('instance', 'b0', 'decide-01'), ('instance', 'b1', 'and'), ('instance', 'b2', 'protect-01'), ('instance', 'b3', 'thing'), ('instance', 'b4', 'remain-01'), ('instance', 'b5', 'meddle-01'), ('instance', 'b6', 'they')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'decide-01')],) ,
('Relation triples of AMR 2:', 9) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b6'), ('op1', 'b1', 'b2'), ('op2', 'b1', 'b5'), ('ARG1', 'b2', 'b3'), ('ARG0', 'b2', 'b6'), ('ARG1', 'b4', 'b3'), ('ARG1', 'b5', 'b3'), ('ARG0', 'b5', 'b6')],) ,
('Similarity', 'decide-01', 'decide-01', 1.0) ,
('Similarity', 'decide-01', 'and', 0.0) ,
('Similarity', 'decide-01', 'protect-01', 0.0) ,
('Similarity', 'decide-01', 'thing', 0.2550457351011664) ,
('Similarity', 'decide-01', 'remain-01', 0.0) ,
('Similarity', 'decide-01', 'meddle-01', 0.0) ,
('Similarity', 'decide-01', 'they', 0.0) ,
('Similarity', 'and', 'and', 1.0) ,
('Similarity', 'and', 'protect-01', 0.0) ,
('Similarity', 'and', 'thing', 0.5216418222345861) ,
('Similarity', 'and', 'remain-01', 0.27048188884876645) ,
('Similarity', 'and', 'meddle-01', 0.0) ,
('Similarity', 'and', 'they', 0.7994592286236641) ,
('Similarity', 'protect-01', 'protect-01', 1.0) ,
('Similarity', 'protect-01', 'thing', 0.0) ,
('Similarity', 'protect-01', 'remain-01', 0.0) ,
('Similarity', 'protect-01', 'meddle-01', 0.0) ,
('Similarity', 'protect-01', 'they', 0.0) ,
('Similarity', 'thing', 'thing', 1.0) ,
('Similarity', 'thing', 'remain-01', 0.0) ,
('Similarity', 'thing', 'meddle-01', 0.0) ,
('Similarity', 'thing', 'they', 0.6682008268974087) ,
('Similarity', 'remain-01', 'remain-01', 1.0) ,
('Similarity', 'remain-01', 'meddle-01', 0.0) ,
('Similarity', 'remain-01', 'they', 0.29401593470208043) ,
('Similarity', 'polish', 'decide-01', 0.0) ,
('Similarity', 'polish', 'and', 0.0) ,
('Similarity', 'polish', 'protect-01', 0.0) ,
('Similarity', 'polish', 'thing', 0.0) ,
('Similarity', 'polish', 'remain-01', 0.0) ,
('Similarity', 'polish', 'meddle-01', 0.0) ,
('Similarity', 'polish', 'they', 0.0) ,
('Similarity', 'they', 'meddle-01', 0.0) ,
('Similarity', 'they', 'they', 1.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2.0, (1, 1): 1, (6, 6): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0, (1, 3): 1, (6, 6): 1}, (0, 3): {-1: 0.2550457351011664}, (0, 4): {-1: 0.0, (1, 3): 1}, (0, 5): {-1: 0.0, (1, 3): 1, (6, 6): 1}, (0, 6): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 1.0, (0, 0): 1, (2, 2): 1, (5, 5): 1}, (1, 2): {-1: 0.0}, (1, 3): {-1: 0.5216418222345861, (0, 2): 1, (0, 4): 1, (0, 5): 1}, (1, 4): {-1: 0.27048188884876645}, (1, 5): {-1: 0.0}, (1, 6): {-1: 0.7994592286236641}, (2, 0): {-1: 0.0, (3, 1): 1, (6, 6): 1}, (2, 1): {-1: 0.0}, (2, 2): {-1: 1.0, (1, 1): 1, (3, 3): 1, (6, 6): 1}, (2, 3): {-1: 0.0}, (2, 4): {-1: 0.0, (3, 3): 1}, (2, 5): {-1: 0.0, (3, 3): 1, (6, 6): 1}, (2, 6): {-1: 0.0}, (3, 0): {-1: 0.2550457351011664}, (3, 1): {-1: 0.5216418222345861, (2, 0): 1, (4, 0): 1}, (3, 2): {-1: 0.0}, (3, 3): {-1: 1.0, (2, 2): 1, (2, 4): 1, (2, 5): 1, (4, 2): 1, (4, 4): 1, (4, 5): 1}, (3, 4): {-1: 0.0}, (3, 5): {-1: 0.0}, (3, 6): {-1: 0.6682008268974087}, (4, 0): {-1: 0.0, (3, 1): 1}, (4, 1): {-1: 0.27048188884876645}, (4, 2): {-1: 0.0, (3, 3): 1}, (4, 3): {-1: 0.0}, (4, 4): {-1: 1.0, (3, 3): 1}, (4, 5): {-1: 0.0, (3, 3): 1}, (4, 6): {-1: 0.29401593470208043}, (5, 0): {-1: 0.0, (6, 6): 1}, (5, 1): {-1: 0.0}, (5, 2): {-1: 0.0, (6, 6): 1}, (5, 3): {-1: 0.0}, (5, 4): {-1: 0.0}, (5, 5): {-1: 0.0, (1, 1): 1, (6, 6): 1}, (5, 6): {-1: 0.0}, (6, 0): {-1: 0.0}, (6, 1): {-1: 0.7994592286236641}, (6, 2): {-1: 0.0}, (6, 3): {-1: 0.6682008268974087}, (6, 4): {-1: 0.29401593470208043}, (6, 5): {-1: 0.0}, (6, 6): {-1: 1.0, (0, 0): 1, (0, 2): 1, (0, 5): 1, (2, 0): 1, (2, 2): 1, (2, 5): 1, (5, 0): 1, (5, 2): 1, (5, 5): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2.0) ,
('relation match with', (1, 1), 1) ,
('relation match with', (6, 6), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('relation match with', (2, 2), 1) ,
('relation match with', (5, 5), 1) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1.0) ,
('relation match with', (3, 3), 1) ,
('relation match with', (6, 6), 1) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 1.0) ,
('relation match with', (4, 4), 1) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 1.0) ,
('node_pair', (5, 5)) ,
('instance/attribute match', 0.0) ,
('relation match with', (6, 6), 1) ,
('node_pair', (6, 6)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 15.0) ,
('Node mapping at start', [0, 1, 2, 3, 4, 5, 6]) ,
('Triple match number at start:', 15.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -7.0) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.489908529797667) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('saved value', 8.510091470202333) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -7.0) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.956716355530828) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('saved value', 9.043283644469172) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -5.459036222302467) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('saved value', 9.540963777697533) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6.401081542752672) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('saved value', 8.59891845724733) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('saved value', 11.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -7.0) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -5.663598346205182) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('saved value', 9.336401653794818) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('saved value', 12.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -5.411968130595839) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('saved value', 9.588031869404162) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('saved value', 10.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('node_pair', (0, 3)) ,
('instance/attribute match', 0.2550457351011664) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 0)) ,
('instance/attribute match', 0.0) ,
('relation match with', (3, 1), 1) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 0.5216418222345861) ,
('node_pair', (4, 6)) ,
('instance/attribute match', 0.29401593470208043) ,
('node_pair', (5, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 5)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 2.070703492037833) ,
('Node mapping at start', [3, 2, 0, 1, 6, 4, 5]) ,
('Triple match number at start:', 2.070703492037833) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 2) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 3) ,
('Swap gain:', 1.2665960871334196) ,
([2, 3, 0, 1, 6, 4, 5],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, 6, 4, 5],) ,
('saved value', 3.337299579171253) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 0) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 3) ,
('Swap gain:', 0.7449542648988337) ,
([0, 2, 3, 1, 6, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 6, 4, 5],) ,
('saved value', 2.815657756936667) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 1) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', -0.7766875573357525) ,
([1, 2, 0, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([1, 2, 0, 3, 6, 4, 5],) ,
('saved value', 1.2940159347020805) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 6) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', -0.5490616698032469) ,
([6, 2, 0, 1, 3, 4, 5],) ,
('Computing match for mapping',) ,
([6, 2, 0, 1, 3, 4, 5],) ,
('saved value', 1.5216418222345862) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 4) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -0.2550457351011664) ,
([4, 2, 0, 1, 6, 3, 5],) ,
('Computing match for mapping',) ,
([4, 2, 0, 1, 6, 3, 5],) ,
('saved value', 1.8156577569366668) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', 5) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 6, '-', 3) ,
('Swap gain:', 0.41315509179624227) ,
([5, 2, 0, 1, 6, 4, 3],) ,
('Computing match for mapping',) ,
([5, 2, 0, 1, 6, 4, 3],) ,
('saved value', 2.4838585838340754) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 0) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 0, 2, 1, 6, 4, 5],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1, 6, 4, 5],) ,
('saved value', 2.070703492037833) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 1) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -0.5216418222345861) ,
([3, 1, 0, 2, 6, 4, 5],) ,
('Computing match for mapping',) ,
([3, 1, 0, 2, 6, 4, 5],) ,
('saved value', 1.549061669803247) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 6) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', 0.5054432939215837) ,
([3, 6, 0, 1, 2, 4, 5],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 2, 4, 5],) ,
('saved value', 2.5761467859594167) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 4) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', 0.27048188884876645) ,
([3, 4, 0, 1, 6, 2, 5],) ,
('Computing match for mapping',) ,
([3, 4, 0, 1, 6, 2, 5],) ,
('saved value', 2.3411853808865994) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 5) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 6, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 5, 0, 1, 6, 4, 2],) ,
('Computing match for mapping',) ,
([3, 5, 0, 1, 6, 4, 2],) ,
('saved value', 2.070703492037833) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 1) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -1.2665960871334199) ,
([3, 2, 1, 0, 6, 4, 5],) ,
('Computing match for mapping',) ,
([3, 2, 1, 0, 6, 4, 5],) ,
('saved value', 0.8041074049044132) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 6) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -0.29401593470208043) ,
([3, 2, 6, 1, 0, 4, 5],) ,
('Computing match for mapping',) ,
([3, 2, 6, 1, 0, 4, 5],) ,
('saved value', 1.7766875573357526) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 4) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([3, 2, 4, 1, 6, 0, 5],) ,
('Computing match for mapping',) ,
([3, 2, 4, 1, 6, 0, 5],) ,
('saved value', 1.070703492037833) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 5) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 6, '-', 0) ,
('Swap gain:', -1.0) ,
([3, 2, 5, 1, 6, 4, 0],) ,
('Computing match for mapping',) ,
([3, 2, 5, 1, 6, 4, 0],) ,
('saved value', 1.070703492037833) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 6) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -0.8769750411904914) ,
([3, 2, 0, 6, 1, 4, 5],) ,
('Computing match for mapping',) ,
([3, 2, 0, 6, 1, 4, 5],) ,
('saved value', 1.1937284508473418) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 4) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -1.521641822234586) ,
([3, 2, 0, 4, 6, 1, 5],) ,
('Computing match for mapping',) ,
([3, 2, 0, 4, 6, 1, 5],) ,
('saved value', 0.5490616698032471) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 5) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 6, '-', 1) ,
('Swap gain:', -0.722182593610922) ,
([3, 2, 0, 5, 6, 4, 1],) ,
('Computing match for mapping',) ,
([3, 2, 0, 5, 6, 4, 1],) ,
('saved value', 1.3485208984269113) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 4) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 6) ,
('Swap gain:', 0.7059840652979196) ,
([3, 2, 0, 1, 4, 6, 5],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 4, 6, 5],) ,
('saved value', 2.7766875573357526) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 6, ',', 6, '-', 5) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 6, '-', 6) ,
('Swap gain:', 1.7059840652979195) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('saved value', 3.7766875573357526) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 4, ',', 6, '-', 5) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('After swapping:', 5, '-', 5, ',', 6, '-', 4) ,
('Swap gain:', 0.29401593470208043) ,
([3, 2, 0, 1, 6, 5, 4],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 6, 5, 4],) ,
('saved value', 2.3647194267399136) ,
('Use swap gain',) ,
('Original mapping', [3, 2, 0, 1, 6, 4, 5]) ,
('Current mapping', [3, 2, 0, 1, 5, 4, 6]) ,
('Gain after the hill-climbing', 1.7059840652979195) ,
('Update triple match number to:', 3.7766875573357526) ,
('Current mapping:', [3, 2, 0, 1, 5, 4, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 2) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 3) ,
('Swap gain:', 2.2665960871334194) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('saved value', 6.043283644469172) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 0) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 3) ,
('Swap gain:', 0.7449542648988334) ,
([0, 2, 3, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 5, 4, 6],) ,
('saved value', 4.521641822234586) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 1) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 0.22331244266424743) ,
([1, 2, 0, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 0, 3, 5, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 5) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', 0.7449542648988337) ,
([5, 2, 0, 1, 3, 4, 6],) ,
('Computing match for mapping',) ,
([5, 2, 0, 1, 3, 4, 6],) ,
('saved value', 4.521641822234586) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 4) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -0.2550457351011664) ,
([4, 2, 0, 1, 5, 3, 6],) ,
('Computing match for mapping',) ,
([4, 2, 0, 1, 5, 3, 6],) ,
('saved value', 3.521641822234586) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', 6) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -1.5868449082037577) ,
([6, 2, 0, 1, 5, 4, 3],) ,
('Computing match for mapping',) ,
([6, 2, 0, 1, 5, 4, 3],) ,
('saved value', 2.189842649131995) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 0) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 0, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1, 5, 4, 6],) ,
('saved value', 3.7766875573357526) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 1) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -0.5216418222345861) ,
([3, 1, 0, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 0, 2, 5, 4, 6],) ,
('saved value', 3.2550457351011666) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 5) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 5, 0, 1, 2, 4, 6],) ,
('Computing match for mapping',) ,
([3, 5, 0, 1, 2, 4, 6],) ,
('saved value', 3.7766875573357526) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 4) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', 1.2704818888487663) ,
([3, 4, 0, 1, 5, 2, 6],) ,
('Computing match for mapping',) ,
([3, 4, 0, 1, 5, 2, 6],) ,
('saved value', 5.047169446184519) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 6) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -1.2005407713763359) ,
([3, 6, 0, 1, 5, 4, 2],) ,
('Computing match for mapping',) ,
([3, 6, 0, 1, 5, 4, 2],) ,
('saved value', 2.5761467859594167) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 1) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -2.26659608713342) ,
([3, 2, 1, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 1, 0, 5, 4, 6],) ,
('saved value', 1.5100914702023327) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 5) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 2, 5, 1, 0, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 5, 1, 0, 4, 6],) ,
('saved value', 3.7766875573357526) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 4) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([3, 2, 4, 1, 5, 0, 6],) ,
('Computing match for mapping',) ,
([3, 2, 4, 1, 5, 0, 6],) ,
('saved value', 2.7766875573357526) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 6) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 2, 6, 1, 5, 4, 0],) ,
('Computing match for mapping',) ,
([3, 2, 6, 1, 5, 4, 0],) ,
('saved value', 0.7766875573357526) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 5) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -1.2511599333858197) ,
([3, 2, 0, 5, 1, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 0, 5, 1, 4, 6],) ,
('saved value', 2.525527623949933) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 4) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -1.521641822234586) ,
([3, 2, 0, 4, 5, 1, 6],) ,
('Computing match for mapping',) ,
([3, 2, 0, 4, 5, 1, 6],) ,
('saved value', 2.2550457351011666) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 6) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -2.0539817667135134) ,
([3, 2, 0, 6, 5, 4, 1],) ,
('Computing match for mapping',) ,
([3, 2, 0, 6, 5, 4, 1],) ,
('saved value', 1.7227057906222392) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 2.0) ,
([3, 2, 0, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 4, 5, 6],) ,
('saved value', 5.776687557335753) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -1.7059840652979195) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 6, 4, 5],) ,
('saved value', 2.070703492037833) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 4, ',', 6, '-', 6) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -1.7059840652979195) ,
([3, 2, 0, 1, 5, 6, 4],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 5, 6, 4],) ,
('saved value', 2.070703492037833) ,
('Use swap gain',) ,
('Original mapping', [3, 2, 0, 1, 5, 4, 6]) ,
('Current mapping', [2, 3, 0, 1, 5, 4, 6]) ,
('Gain after the hill-climbing', 2.2665960871334194) ,
('Update triple match number to:', 6.043283644469172) ,
('Current mapping:', [2, 3, 0, 1, 5, 4, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 3) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 2) ,
('Swap gain:', -2.2665960871334194) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 5, 4, 6],) ,
('saved value', 3.7766875573357526) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 3, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 5, 4, 6],) ,
('saved value', 7.043283644469172) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 1) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -3.521641822234586) ,
([1, 3, 0, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2, 5, 4, 6],) ,
('saved value', 2.521641822234586) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 5) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([5, 3, 0, 1, 2, 4, 6],) ,
('Computing match for mapping',) ,
([5, 3, 0, 1, 2, 4, 6],) ,
('saved value', 6.043283644469172) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 4) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 3, 0, 1, 5, 2, 6],) ,
('Computing match for mapping',) ,
([4, 3, 0, 1, 5, 2, 6],) ,
('saved value', 6.043283644469172) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 6) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -4.0) ,
([6, 3, 0, 1, 5, 4, 2],) ,
('Computing match for mapping',) ,
([6, 3, 0, 1, 5, 4, 2],) ,
('saved value', 2.043283644469172) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 0) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 3) ,
('Swap gain:', -3.521641822234586) ,
([2, 0, 3, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1, 5, 4, 6],) ,
('saved value', 2.521641822234586) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 1) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', -0.0432836444691721) ,
([2, 1, 0, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 5) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -1.521641822234586) ,
([2, 5, 0, 1, 3, 4, 6],) ,
('Computing match for mapping',) ,
([2, 5, 0, 1, 3, 4, 6],) ,
('saved value', 4.521641822234586) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 4) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -1.2511599333858197) ,
([2, 4, 0, 1, 5, 3, 6],) ,
('Computing match for mapping',) ,
([2, 4, 0, 1, 5, 3, 6],) ,
('saved value', 4.792123711083352) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 6) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -3.0539817667135134) ,
([2, 6, 0, 1, 5, 4, 3],) ,
('Computing match for mapping',) ,
([2, 6, 0, 1, 5, 4, 3],) ,
('saved value', 2.9893018777556586) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 1) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -2.26659608713342) ,
([2, 3, 1, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0, 5, 4, 6],) ,
('saved value', 3.776687557335752) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 5) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 3, 5, 1, 0, 4, 6],) ,
('Computing match for mapping',) ,
([2, 3, 5, 1, 0, 4, 6],) ,
('saved value', 6.043283644469172) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 4) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 3, 4, 1, 5, 0, 6],) ,
('Computing match for mapping',) ,
([2, 3, 4, 1, 5, 0, 6],) ,
('saved value', 5.043283644469172) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 6) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 3, 6, 1, 5, 4, 0],) ,
('Computing match for mapping',) ,
([2, 3, 6, 1, 5, 4, 0],) ,
('saved value', 2.043283644469172) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 5) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -1.2511599333858197) ,
([2, 3, 0, 5, 1, 4, 6],) ,
('Computing match for mapping',) ,
([2, 3, 0, 5, 1, 4, 6],) ,
('saved value', 4.792123711083352) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 4) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -1.521641822234586) ,
([2, 3, 0, 4, 5, 1, 6],) ,
('Computing match for mapping',) ,
([2, 3, 0, 4, 5, 1, 6],) ,
('saved value', 4.521641822234586) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 6) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -3.0539817667135134) ,
([2, 3, 0, 6, 5, 4, 1],) ,
('Computing match for mapping',) ,
([2, 3, 0, 6, 5, 4, 1],) ,
('saved value', 2.9893018777556586) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 2.0) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('saved value', 8.043283644469172) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -2.705984065297919) ,
([2, 3, 0, 1, 6, 4, 5],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, 6, 4, 5],) ,
('saved value', 3.337299579171253) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 4, ',', 6, '-', 6) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2.7059840652979195) ,
([2, 3, 0, 1, 5, 6, 4],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, 5, 6, 4],) ,
('saved value', 3.3372995791712525) ,
('Use swap gain',) ,
('Original mapping', [2, 3, 0, 1, 5, 4, 6]) ,
('Current mapping', [2, 3, 0, 1, 4, 5, 6]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 8.043283644469172) ,
('Current mapping:', [2, 3, 0, 1, 4, 5, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 3) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 2) ,
('Swap gain:', -2.2665960871334194) ,
([3, 2, 0, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([3, 2, 0, 1, 4, 5, 6],) ,
('saved value', 5.776687557335753) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('saved value', 9.043283644469172) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 1) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -3.521641822234586) ,
([1, 3, 0, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 3, 0, 2, 4, 5, 6],) ,
('saved value', 4.521641822234586) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 4) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([4, 3, 0, 1, 2, 5, 6],) ,
('Computing match for mapping',) ,
([4, 3, 0, 1, 2, 5, 6],) ,
('saved value', 6.043283644469172) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 5) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([5, 3, 0, 1, 4, 2, 6],) ,
('Computing match for mapping',) ,
([5, 3, 0, 1, 4, 2, 6],) ,
('saved value', 8.043283644469172) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 6) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -5.0) ,
([6, 3, 0, 1, 4, 5, 2],) ,
('Computing match for mapping',) ,
([6, 3, 0, 1, 4, 5, 2],) ,
('saved value', 3.043283644469172) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 0) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 3) ,
('Swap gain:', -3.521641822234586) ,
([2, 0, 3, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1, 4, 5, 6],) ,
('saved value', 4.521641822234586) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 1) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 0.956716355530828) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 4) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -2.2511599333858197) ,
([2, 4, 0, 1, 3, 5, 6],) ,
('Computing match for mapping',) ,
([2, 4, 0, 1, 3, 5, 6],) ,
('saved value', 5.792123711083352) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 5) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -2.521641822234586) ,
([2, 5, 0, 1, 4, 3, 6],) ,
('Computing match for mapping',) ,
([2, 5, 0, 1, 4, 3, 6],) ,
('saved value', 5.521641822234586) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 6) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -4.053981766713513) ,
([2, 6, 0, 1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 6, 0, 1, 4, 5, 3],) ,
('saved value', 3.9893018777556586) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 1) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -2.26659608713342) ,
([2, 3, 1, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0, 4, 5, 6],) ,
('saved value', 5.776687557335752) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 4) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 3, 4, 1, 0, 5, 6],) ,
('Computing match for mapping',) ,
([2, 3, 4, 1, 0, 5, 6],) ,
('saved value', 6.043283644469172) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 5) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 3, 5, 1, 4, 0, 6],) ,
('Computing match for mapping',) ,
([2, 3, 5, 1, 4, 0, 6],) ,
('saved value', 7.043283644469172) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 6) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 3, 6, 1, 4, 5, 0],) ,
('Computing match for mapping',) ,
([2, 3, 6, 1, 4, 5, 0],) ,
('saved value', 3.043283644469172) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 4) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2.2511599333858197) ,
([2, 3, 0, 4, 1, 5, 6],) ,
('Computing match for mapping',) ,
([2, 3, 0, 4, 1, 5, 6],) ,
('saved value', 5.792123711083352) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 5) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -2.521641822234586) ,
([2, 3, 0, 5, 4, 1, 6],) ,
('Computing match for mapping',) ,
([2, 3, 0, 5, 4, 1, 6],) ,
('saved value', 5.521641822234586) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 6) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -4.053981766713513) ,
([2, 3, 0, 6, 4, 5, 1],) ,
('Computing match for mapping',) ,
([2, 3, 0, 6, 4, 5, 1],) ,
('saved value', 3.9893018777556586) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, 5, 4, 6],) ,
('saved value', 6.043283644469172) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -4.411968130595839) ,
([2, 3, 0, 1, 6, 5, 4],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, 6, 5, 4],) ,
('saved value', 3.631315513873333) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4.0) ,
([2, 3, 0, 1, 4, 6, 5],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, 4, 6, 5],) ,
('saved value', 4.043283644469172) ,
('Use swap gain',) ,
('Original mapping', [2, 3, 0, 1, 4, 5, 6]) ,
('Current mapping', [0, 3, 2, 1, 4, 5, 6]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 9.043283644469172) ,
('Current mapping:', [0, 3, 2, 1, 4, 5, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -3.2665960871334194) ,
([3, 0, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1, 4, 5, 6],) ,
('saved value', 5.776687557335753) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1, 4, 5, 6],) ,
('saved value', 8.043283644469172) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -3.2665960871334194) ,
([1, 3, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 3, 2, 0, 4, 5, 6],) ,
('saved value', 5.776687557335753) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 3, 2, 1, 0, 5, 6],) ,
('saved value', 7.043283644469172) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([5, 3, 2, 1, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 3, 2, 1, 4, 0, 6],) ,
('saved value', 8.043283644469172) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 3, 2, 1, 4, 5, 0],) ,
('Computing match for mapping',) ,
([6, 3, 2, 1, 4, 5, 0],) ,
('saved value', 3.043283644469172) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -2.521641822234586) ,
([0, 2, 3, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 3, 1, 4, 5, 6],) ,
('saved value', 6.521641822234586) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 1) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 3) ,
('Swap gain:', 5.956716355530828) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 15.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 4) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -1.2511599333858197) ,
([0, 4, 2, 1, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3, 5, 6],) ,
('saved value', 7.792123711083352) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 5) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -1.521641822234586) ,
([0, 5, 2, 1, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 1, 4, 3, 6],) ,
('saved value', 7.521641822234586) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 6) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -3.0539817667135134) ,
([0, 6, 2, 1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 6, 2, 1, 4, 5, 3],) ,
('saved value', 5.989301877755659) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -2.521641822234586) ,
([0, 3, 1, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 4, 5, 6],) ,
('saved value', 6.521641822234586) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 2, 5, 6],) ,
('saved value', 6.043283644469172) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 3, 5, 1, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 4, 2, 6],) ,
('saved value', 8.043283644469172) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 3, 6, 1, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 1, 4, 5, 2],) ,
('saved value', 4.043283644469172) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 4) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -1.2511599333858197) ,
([0, 3, 2, 4, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 5, 6],) ,
('saved value', 7.792123711083352) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 5) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -1.521641822234586) ,
([0, 3, 2, 5, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 4, 1, 6],) ,
('saved value', 7.521641822234586) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 6) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -3.0539817667135134) ,
([0, 3, 2, 6, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 6, 4, 5, 1],) ,
('saved value', 5.989301877755659) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 3, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 5, 4, 6],) ,
('saved value', 7.043283644469172) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -4.411968130595839) ,
([0, 3, 2, 1, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 6, 5, 4],) ,
('saved value', 4.631315513873333) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 3, 2, 1, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 6, 5],) ,
('saved value', 5.043283644469172) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 2, 1, 4, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 5.956716355530828) ,
('Update triple match number to:', 15.0) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -7.0) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.489908529797667) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('saved value', 8.510091470202333) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -7.0) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.956716355530828) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('saved value', 9.043283644469172) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -5.459036222302467) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('saved value', 9.540963777697533) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6.401081542752671) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('saved value', 8.59891845724733) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('saved value', 11.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -7.0) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -5.663598346205182) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('saved value', 9.336401653794818) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('saved value', 12.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -5.411968130595838) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('saved value', 9.588031869404162) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('saved value', 10.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 3)) ,
('instance/attribute match', 0.6682008268974087) ,
('match computing complete, result:', 0.6682008268974087) ,
('Node mapping at start', [4, 5, 6, 2, 0, 1, 3]) ,
('Triple match number at start:', 0.6682008268974087) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 5) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 4) ,
('Swap gain:', 0.27048188884876645) ,
([5, 4, 6, 2, 0, 1, 3],) ,
('Computing match for mapping',) ,
([5, 4, 6, 2, 0, 1, 3],) ,
('saved value', 0.9386827157461751) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 6) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 4) ,
('Swap gain:', 0.0) ,
([6, 5, 4, 2, 0, 1, 3],) ,
('Computing match for mapping',) ,
([6, 5, 4, 2, 0, 1, 3],) ,
('saved value', 0.6682008268974087) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 2) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', 0.0) ,
([2, 5, 6, 4, 0, 1, 3],) ,
('Computing match for mapping',) ,
([2, 5, 6, 4, 0, 1, 3],) ,
('saved value', 0.6682008268974087) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 0) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 0, '-', 0, ',', 4, '-', 4) ,
('Swap gain:', 3.0) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('saved value', 3.668200826897409) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 1) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', 0.0) ,
([1, 5, 6, 2, 0, 4, 3],) ,
('Computing match for mapping',) ,
([1, 5, 6, 2, 0, 4, 3],) ,
('saved value', 0.6682008268974087) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 3) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 0, '-', 3, ',', 6, '-', 4) ,
('Swap gain:', -0.11913915709416179) ,
([3, 5, 6, 2, 0, 1, 4],) ,
('Computing match for mapping',) ,
([3, 5, 6, 2, 0, 1, 4],) ,
('saved value', 0.5490616698032469) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 6) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 5) ,
('Swap gain:', 0.7994592286236641) ,
([4, 6, 5, 2, 0, 1, 3],) ,
('Computing match for mapping',) ,
([4, 6, 5, 2, 0, 1, 3],) ,
('saved value', 1.4676600555210728) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 2) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 5) ,
('Swap gain:', 0.0) ,
([4, 2, 6, 5, 0, 1, 3],) ,
('Computing match for mapping',) ,
([4, 2, 6, 5, 0, 1, 3],) ,
('saved value', 0.6682008268974087) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 0) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 1, '-', 0, ',', 4, '-', 5) ,
('Swap gain:', 0.0) ,
([4, 0, 6, 2, 5, 1, 3],) ,
('Computing match for mapping',) ,
([4, 0, 6, 2, 5, 1, 3],) ,
('saved value', 0.6682008268974087) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 5, ',', 5, '-', 1) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 5) ,
('Swap gain:', 2.0) ,
([4, 1, 6, 2, 0, 5, 3],) ,
('Computing match for mapping',) ,
([4, 1, 6, 2, 0, 5, 3],) ,
('saved value', 2.668200826897409) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 5, ',', 6, '-', 3) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 1, '-', 3, ',', 6, '-', 5) ,
('Swap gain:', 0.8534409953371773) ,
([4, 3, 6, 2, 0, 1, 5],) ,
('Computing match for mapping',) ,
([4, 3, 6, 2, 0, 1, 5],) ,
('saved value', 1.521641822234586) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 2) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 6) ,
('Swap gain:', 1.6682008268974087) ,
([4, 5, 2, 6, 0, 1, 3],) ,
('Computing match for mapping',) ,
([4, 5, 2, 6, 0, 1, 3],) ,
('saved value', 2.3364016537948173) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 0) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 2, '-', 0, ',', 4, '-', 6) ,
('Swap gain:', 0.29401593470208043) ,
([4, 5, 0, 2, 6, 1, 3],) ,
('Computing match for mapping',) ,
([4, 5, 0, 2, 6, 1, 3],) ,
('saved value', 0.9622167615994891) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 1) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([4, 5, 1, 2, 0, 6, 3],) ,
('Computing match for mapping',) ,
([4, 5, 1, 2, 0, 6, 3],) ,
('saved value', 0.6682008268974087) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 3) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 2, '-', 3, ',', 6, '-', 6) ,
('Swap gain:', 0.3317991731025913) ,
([4, 5, 3, 2, 0, 1, 6],) ,
('Computing match for mapping',) ,
([4, 5, 3, 2, 0, 1, 6],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 0) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 3, '-', 0, ',', 4, '-', 2) ,
('Swap gain:', 0.2550457351011664) ,
([4, 5, 6, 0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([4, 5, 6, 0, 2, 1, 3],) ,
('saved value', 0.923246561998575) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 1) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 2) ,
('Swap gain:', 1.521641822234586) ,
([4, 5, 6, 1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([4, 5, 6, 1, 0, 2, 3],) ,
('saved value', 2.189842649131995) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 3) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 3, '-', 3, ',', 6, '-', 2) ,
('Swap gain:', 0.3317991731025913) ,
([4, 5, 6, 3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([4, 5, 6, 3, 0, 1, 2],) ,
('saved value', 1.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 0, ',', 5, '-', 1) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', 0.27048188884876645) ,
([4, 5, 6, 2, 1, 0, 3],) ,
('Computing match for mapping',) ,
([4, 5, 6, 2, 1, 0, 3],) ,
('saved value', 0.9386827157461751) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 0, ',', 6, '-', 3) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 4, '-', 3, ',', 6, '-', 0) ,
('Swap gain:', -0.6682008268974087) ,
([4, 5, 6, 2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([4, 5, 6, 2, 3, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 1, ',', 6, '-', 3) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('After swapping:', 5, '-', 3, ',', 6, '-', 1) ,
('Swap gain:', 0.13125840172625547) ,
([4, 5, 6, 2, 0, 3, 1],) ,
('Computing match for mapping',) ,
([4, 5, 6, 2, 0, 3, 1],) ,
('saved value', 0.7994592286236641) ,
('Use swap gain',) ,
('Original mapping', [4, 5, 6, 2, 0, 1, 3]) ,
('Current mapping', [0, 5, 6, 2, 4, 1, 3]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 3.668200826897409) ,
('Current mapping:', [0, 5, 6, 2, 4, 1, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 5) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([5, 0, 6, 2, 4, 1, 3],) ,
('Computing match for mapping',) ,
([5, 0, 6, 2, 4, 1, 3],) ,
('saved value', 1.668200826897409) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([6, 5, 0, 2, 4, 1, 3],) ,
('Computing match for mapping',) ,
([6, 5, 0, 2, 4, 1, 3],) ,
('saved value', 1.668200826897409) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.7449542648988337) ,
([2, 5, 6, 0, 4, 1, 3],) ,
('Computing match for mapping',) ,
([2, 5, 6, 0, 4, 1, 3],) ,
('saved value', 1.9232465619985752) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('Computing match for mapping',) ,
([4, 5, 6, 2, 0, 1, 3],) ,
('saved value', 0.6682008268974087) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 1) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 5, 6, 2, 4, 0, 3],) ,
('Computing match for mapping',) ,
([1, 5, 6, 2, 4, 0, 3],) ,
('saved value', 1.668200826897409) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 3) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 0, '-', 3, ',', 6, '-', 0) ,
('Swap gain:', -2.4131550917962423) ,
([3, 5, 6, 2, 4, 1, 0],) ,
('Computing match for mapping',) ,
([3, 5, 6, 2, 4, 1, 0],) ,
('saved value', 1.2550457351011666) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 6) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 5) ,
('Swap gain:', 0.7994592286236641) ,
([0, 6, 5, 2, 4, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 5, 2, 4, 1, 3],) ,
('saved value', 4.467660055521073) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 2) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 2, 6, 5, 4, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 6, 5, 4, 1, 3],) ,
('saved value', 3.668200826897409) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 4) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 5) ,
('Swap gain:', -0.7295181111512336) ,
([0, 4, 6, 2, 5, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 6, 2, 5, 1, 3],) ,
('saved value', 2.9386827157461752) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 5, ',', 5, '-', 1) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 5) ,
('Swap gain:', 3.0) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('saved value', 6.668200826897409) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 5, ',', 6, '-', 3) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 1, '-', 3, ',', 6, '-', 5) ,
('Swap gain:', -0.14655900466282257) ,
([0, 3, 6, 2, 4, 1, 5],) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 4, 1, 5],) ,
('saved value', 3.5216418222345864) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 2) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 6) ,
('Swap gain:', 1.6682008268974087) ,
([0, 5, 2, 6, 4, 1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 6, 4, 1, 3],) ,
('saved value', 5.336401653794818) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -0.7059840652979196) ,
([0, 5, 4, 2, 6, 1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 4, 2, 6, 1, 3],) ,
('saved value', 2.9622167615994894) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 1) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 5, 1, 2, 4, 6, 3],) ,
('Computing match for mapping',) ,
([0, 5, 1, 2, 4, 6, 3],) ,
('saved value', 3.668200826897409) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 3) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 2, '-', 3, ',', 6, '-', 6) ,
('Swap gain:', 1.3317991731025913) ,
([0, 5, 3, 2, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 3, 2, 4, 1, 6],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 4) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 5, 6, 4, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 6, 4, 2, 1, 3],) ,
('saved value', 2.668200826897409) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 1) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 2) ,
('Swap gain:', 0.5216418222345861) ,
([0, 5, 6, 1, 4, 2, 3],) ,
('Computing match for mapping',) ,
([0, 5, 6, 1, 4, 2, 3],) ,
('saved value', 4.189842649131995) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 3) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 3, '-', 3, ',', 6, '-', 2) ,
('Swap gain:', 1.3317991731025913) ,
([0, 5, 6, 3, 4, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 6, 3, 4, 1, 2],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 1) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', -0.7295181111512336) ,
([0, 5, 6, 2, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 5, 6, 2, 1, 4, 3],) ,
('saved value', 2.9386827157461752) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 3) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 4, '-', 3, ',', 6, '-', 4) ,
('Swap gain:', -1.3741848921953284) ,
([0, 5, 6, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 5, 6, 2, 3, 1, 4],) ,
('saved value', 2.2940159347020805) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 1, ',', 6, '-', 3) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('After swapping:', 5, '-', 3, ',', 6, '-', 1) ,
('Swap gain:', 0.13125840172625547) ,
([0, 5, 6, 2, 4, 3, 1],) ,
('Computing match for mapping',) ,
([0, 5, 6, 2, 4, 3, 1],) ,
('saved value', 3.7994592286236646) ,
('Use swap gain',) ,
('Original mapping', [0, 5, 6, 2, 4, 1, 3]) ,
('Current mapping', [0, 1, 6, 2, 4, 5, 3]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 6.668200826897409) ,
('Current mapping:', [0, 1, 6, 2, 4, 5, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 6, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([1, 0, 6, 2, 4, 5, 3],) ,
('saved value', 1.668200826897409) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 0, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([6, 1, 0, 2, 4, 5, 3],) ,
('saved value', 3.668200826897409) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -2.7449542648988334) ,
([2, 1, 6, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 1, 6, 0, 4, 5, 3],) ,
('saved value', 3.9232465619985755) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 6, 2, 0, 5, 3],) ,
('Computing match for mapping',) ,
([4, 1, 6, 2, 0, 5, 3],) ,
('saved value', 2.668200826897409) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 6, 2, 4, 0, 3],) ,
('Computing match for mapping',) ,
([5, 1, 6, 2, 4, 0, 3],) ,
('saved value', 2.668200826897409) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 3) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 0, '-', 3, ',', 6, '-', 0) ,
('Swap gain:', -3.4131550917962423) ,
([3, 1, 6, 2, 4, 5, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 2, 4, 5, 0],) ,
('saved value', 3.2550457351011666) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -2.200540771376336) ,
([0, 6, 1, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 2, 4, 5, 3],) ,
('saved value', 4.467660055521073) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2.478358177765414) ,
([0, 2, 6, 1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 2, 6, 1, 4, 5, 3],) ,
('saved value', 4.189842649131995) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -3.4590362223024673) ,
([0, 4, 6, 2, 1, 5, 3],) ,
('Computing match for mapping',) ,
([0, 4, 6, 2, 1, 5, 3],) ,
('saved value', 3.2091646045949416) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 6, 2, 4, 1, 3],) ,
('saved value', 3.668200826897409) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 3) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 1, '-', 3, ',', 6, '-', 1) ,
('Swap gain:', -2.3470997760391583) ,
([0, 3, 6, 2, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 4, 5, 1],) ,
('saved value', 4.321101050858251) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 2) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 6) ,
('Swap gain:', 2.668200826897409) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('saved value', 9.336401653794818) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -0.7059840652979196) ,
([0, 1, 4, 2, 6, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 5, 3],) ,
('saved value', 5.962216761599489) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 5) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 6) ,
('Swap gain:', -1.0) ,
([0, 1, 5, 2, 4, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 4, 6, 3],) ,
('saved value', 5.668200826897409) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 3) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 2, '-', 3, ',', 6, '-', 6) ,
('Swap gain:', 2.331799173102591) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 4) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 6, 4, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 2, 5, 3],) ,
('saved value', 5.668200826897409) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 5) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 6, 5, 4, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 4, 2, 3],) ,
('saved value', 5.668200826897409) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 3) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 3, '-', 3, ',', 6, '-', 2) ,
('Swap gain:', 1.331799173102591) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 6, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 4, 3],) ,
('saved value', 4.668200826897409) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 3) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 4, '-', 3, ',', 6, '-', 4) ,
('Swap gain:', -1.3741848921953284) ,
([0, 1, 6, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 3, 5, 4],) ,
('saved value', 5.294015934702081) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 3) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('After swapping:', 5, '-', 3, ',', 6, '-', 5) ,
('Swap gain:', -1.6682008268974087) ,
([0, 1, 6, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 4, 3, 5],) ,
('saved value', 5.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 6, 2, 4, 5, 3]) ,
('Current mapping', [0, 1, 2, 6, 4, 5, 3]) ,
('Gain after the hill-climbing', 2.668200826897409) ,
('Update triple match number to:', 9.336401653794818) ,
('Current mapping:', [0, 1, 2, 6, 4, 5, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 6, 4, 5, 3],) ,
('saved value', 3.336401653794818) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 6, 4, 5, 3],) ,
('saved value', 4.336401653794818) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 6) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 0, '-', 6, ',', 3, '-', 0) ,
('Swap gain:', -3.4131550917962423) ,
([6, 1, 2, 0, 4, 5, 3],) ,
('Computing match for mapping',) ,
([6, 1, 2, 0, 4, 5, 3],) ,
('saved value', 5.9232465619985755) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, 6, 0, 5, 3],) ,
('Computing match for mapping',) ,
([4, 1, 2, 6, 0, 5, 3],) ,
('saved value', 5.336401653794818) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 6, 4, 0, 3],) ,
('Computing match for mapping',) ,
([5, 1, 2, 6, 4, 0, 3],) ,
('saved value', 5.336401653794818) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 3) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 0, '-', 3, ',', 6, '-', 0) ,
('Swap gain:', -3.4131550917962423) ,
([3, 1, 2, 6, 4, 5, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 6, 4, 5, 0],) ,
('saved value', 5.9232465619985755) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 2, 1, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 6, 4, 5, 3],) ,
('saved value', 4.336401653794818) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 6) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 1, '-', 6, ',', 3, '-', 1) ,
('Swap gain:', -3.347099776039159) ,
([0, 6, 2, 1, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 6, 2, 1, 4, 5, 3],) ,
('saved value', 5.989301877755659) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -4.459036222302467) ,
([0, 4, 2, 6, 1, 5, 3],) ,
('Computing match for mapping',) ,
([0, 4, 2, 6, 1, 5, 3],) ,
('saved value', 4.8773654314923505) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 5, 2, 6, 4, 1, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 6, 4, 1, 3],) ,
('saved value', 5.336401653794818) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 3) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 1, '-', 3, ',', 6, '-', 1) ,
('Swap gain:', -3.347099776039159) ,
([0, 3, 2, 6, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 6, 4, 5, 1],) ,
('saved value', 5.989301877755659) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 6) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 2, '-', 6, ',', 3, '-', 2) ,
('Swap gain:', -2.668200826897409) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 4, 5, 3],) ,
('saved value', 6.668200826897409) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 6, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 2, 5, 3],) ,
('saved value', 6.336401653794818) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 6, 4, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 6, 4, 2, 3],) ,
('saved value', 6.336401653794818) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 3) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 2, '-', 3, ',', 6, '-', 2) ,
('Swap gain:', -2.668200826897409) ,
([0, 1, 3, 6, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 6, 4, 5, 2],) ,
('saved value', 6.668200826897409) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 6, ',', 4, '-', 4) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -1.3741848921953284) ,
([0, 1, 2, 4, 6, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 5, 3],) ,
('saved value', 7.962216761599489) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 6, ',', 5, '-', 5) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 6) ,
('Swap gain:', -1.6682008268974087) ,
([0, 1, 2, 5, 4, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6, 3],) ,
('saved value', 7.668200826897409) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 6, ',', 6, '-', 3) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 3, '-', 3, ',', 6, '-', 6) ,
('Swap gain:', 5.663598346205182) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 15.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, 3],) ,
('saved value', 7.336401653794818) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 3) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 4, '-', 3, ',', 6, '-', 4) ,
('Swap gain:', -1.3741848921953284) ,
([0, 1, 2, 6, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 3, 5, 4],) ,
('saved value', 7.962216761599489) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 3) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('After swapping:', 5, '-', 3, ',', 6, '-', 5) ,
('Swap gain:', -1.6682008268974087) ,
([0, 1, 2, 6, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 3, 5],) ,
('saved value', 7.668200826897409) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 6, 4, 5, 3]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 5.663598346205182) ,
('Update triple match number to:', 15.0) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -7.0) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.489908529797667) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('saved value', 8.510091470202333) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -7.0) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.956716355530828) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('saved value', 9.043283644469172) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -5.459036222302467) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('saved value', 9.540963777697533) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6.401081542752671) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('saved value', 8.59891845724733) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('saved value', 11.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -7.0) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -5.663598346205182) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('saved value', 9.336401653794818) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('saved value', 12.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -5.411968130595838) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('saved value', 9.588031869404162) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('saved value', 10.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('node_pair', (0, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 1)) ,
('instance/attribute match', 0.27048188884876645) ,
('node_pair', (5, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 4)) ,
('instance/attribute match', 0.29401593470208043) ,
('match computing complete, result:', 0.5644978235508469) ,
('Node mapping at start', [5, 0, 6, 2, 1, 3, 4]) ,
('Triple match number at start:', 0.5644978235508469) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 5, ',', 1, '-', 0) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 5) ,
('Swap gain:', 2.0) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('saved value', 2.564497823550847) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 5, ',', 2, '-', 6) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 5) ,
('Swap gain:', 0.0) ,
([6, 0, 5, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([6, 0, 5, 2, 1, 3, 4],) ,
('saved value', 0.5644978235508469) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 5, ',', 3, '-', 2) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 5) ,
('Swap gain:', 0.0) ,
([2, 0, 6, 5, 1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 0, 6, 5, 1, 3, 4],) ,
('saved value', 0.5644978235508469) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 5, ',', 4, '-', 1) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 5) ,
('Swap gain:', -0.27048188884876645) ,
([1, 0, 6, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 6, 2, 5, 3, 4],) ,
('saved value', 0.29401593470208043) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 5, ',', 5, '-', 3) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', 0.2550457351011664) ,
([3, 0, 6, 2, 1, 5, 4],) ,
('Computing match for mapping',) ,
([3, 0, 6, 2, 1, 5, 4],) ,
('saved value', 0.8195435586520132) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 5, ',', 6, '-', 4) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 5) ,
('Swap gain:', -0.29401593470208043) ,
([4, 0, 6, 2, 1, 3, 5],) ,
('Computing match for mapping',) ,
([4, 0, 6, 2, 1, 3, 5],) ,
('saved value', 0.27048188884876645) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 6) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', 0.7994592286236641) ,
([5, 6, 0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([5, 6, 0, 2, 1, 3, 4],) ,
('saved value', 1.363957052174511) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 2) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', 0.2550457351011664) ,
([5, 2, 6, 0, 1, 3, 4],) ,
('Computing match for mapping',) ,
([5, 2, 6, 0, 1, 3, 4],) ,
('saved value', 0.8195435586520132) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', 1) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', 0.7295181111512336) ,
([5, 1, 6, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([5, 1, 6, 2, 0, 3, 4],) ,
('saved value', 1.2940159347020805) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 0, ',', 5, '-', 3) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', 1.521641822234586) ,
([5, 3, 6, 2, 1, 0, 4],) ,
('Computing match for mapping',) ,
([5, 3, 6, 2, 1, 0, 4],) ,
('saved value', 2.086139645785433) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 0, ',', 6, '-', 4) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -0.02353404585331398) ,
([5, 4, 6, 2, 1, 3, 0],) ,
('Computing match for mapping',) ,
([5, 4, 6, 2, 1, 3, 0],) ,
('saved value', 0.5409637776975329) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 2) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 6) ,
('Swap gain:', 1.6682008268974087) ,
([5, 0, 2, 6, 1, 3, 4],) ,
('Computing match for mapping',) ,
([5, 0, 2, 6, 1, 3, 4],) ,
('saved value', 2.2326986504482553) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 1) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 6) ,
('Swap gain:', 0.02353404585331398) ,
([5, 0, 1, 2, 6, 3, 4],) ,
('Computing match for mapping',) ,
([5, 0, 1, 2, 6, 3, 4],) ,
('saved value', 0.5880318694041609) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([5, 0, 3, 2, 1, 6, 4],) ,
('Computing match for mapping',) ,
([5, 0, 3, 2, 1, 6, 4],) ,
('saved value', 0.5644978235508469) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 4) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', 1.7059840652979195) ,
([5, 0, 4, 2, 1, 3, 6],) ,
('Computing match for mapping',) ,
([5, 0, 4, 2, 1, 3, 6],) ,
('saved value', 2.2704818888487663) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 1) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', 0.25115993338581966) ,
([5, 0, 6, 1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([5, 0, 6, 1, 2, 3, 4],) ,
('saved value', 0.8156577569366665) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', 1.0) ,
([5, 0, 6, 3, 1, 2, 4],) ,
('Computing match for mapping',) ,
([5, 0, 6, 3, 1, 2, 4],) ,
('saved value', 1.5644978235508469) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 4) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -0.29401593470208043) ,
([5, 0, 6, 4, 1, 3, 2],) ,
('Computing match for mapping',) ,
([5, 0, 6, 4, 1, 3, 2],) ,
('saved value', 0.27048188884876645) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 3) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -0.27048188884876645) ,
([5, 0, 6, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([5, 0, 6, 2, 3, 1, 4],) ,
('saved value', 0.29401593470208043) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 4) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', 1.2349614050728173) ,
([5, 0, 6, 2, 4, 3, 1],) ,
('Computing match for mapping',) ,
([5, 0, 6, 2, 4, 3, 1],) ,
('saved value', 1.7994592286236641) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', 0.37418489219532824) ,
([5, 0, 6, 2, 1, 4, 3],) ,
('Computing match for mapping',) ,
([5, 0, 6, 2, 1, 4, 3],) ,
('saved value', 0.9386827157461751) ,
('Use swap gain',) ,
('Original mapping', [5, 0, 6, 2, 1, 3, 4]) ,
('Current mapping', [0, 5, 6, 2, 1, 3, 4]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 2.564497823550847) ,
('Current mapping:', [0, 5, 6, 2, 1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 5) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([5, 0, 6, 2, 1, 3, 4],) ,
('saved value', 0.5644978235508469) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([6, 5, 0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([6, 5, 0, 2, 1, 3, 4],) ,
('saved value', 0.5644978235508469) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.7449542648988337) ,
([2, 5, 6, 0, 1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 5, 6, 0, 1, 3, 4],) ,
('saved value', 0.8195435586520132) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -2.2704818888487663) ,
([1, 5, 6, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([1, 5, 6, 2, 0, 3, 4],) ,
('saved value', 0.29401593470208054) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -1.7449542648988337) ,
([3, 5, 6, 2, 1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 5, 6, 2, 1, 0, 4],) ,
('saved value', 0.8195435586520132) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -2.2940159347020805) ,
([4, 5, 6, 2, 1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 5, 6, 2, 1, 3, 0],) ,
('saved value', 0.27048188884876634) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 6) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 5) ,
('Swap gain:', 0.7994592286236641) ,
([0, 6, 5, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 6, 5, 2, 1, 3, 4],) ,
('saved value', 3.363957052174511) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 2) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 2, 6, 5, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 6, 5, 1, 3, 4],) ,
('saved value', 2.564497823550847) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 1) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 5) ,
('Swap gain:', 1.7295181111512337) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('saved value', 4.294015934702081) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 5, ',', 5, '-', 3) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', 0.5216418222345861) ,
([0, 3, 6, 2, 1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 1, 5, 4],) ,
('saved value', 3.086139645785433) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 5, ',', 6, '-', 4) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 5) ,
('Swap gain:', -0.02353404585331398) ,
([0, 4, 6, 2, 1, 3, 5],) ,
('Computing match for mapping',) ,
([0, 4, 6, 2, 1, 3, 5],) ,
('saved value', 2.5409637776975327) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 2) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 6) ,
('Swap gain:', 1.6682008268974087) ,
([0, 5, 2, 6, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 5, 2, 6, 1, 3, 4],) ,
('saved value', 4.232698650448255) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 1) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 6) ,
('Swap gain:', 0.02353404585331398) ,
([0, 5, 1, 2, 6, 3, 4],) ,
('Computing match for mapping',) ,
([0, 5, 1, 2, 6, 3, 4],) ,
('saved value', 2.588031869404161) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 5, 3, 2, 1, 6, 4],) ,
('Computing match for mapping',) ,
([0, 5, 3, 2, 1, 6, 4],) ,
('saved value', 2.564497823550847) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 4) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', 1.7059840652979195) ,
([0, 5, 4, 2, 1, 3, 6],) ,
('Computing match for mapping',) ,
([0, 5, 4, 2, 1, 3, 6],) ,
('saved value', 4.270481888848766) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 1) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', 0.25115993338581966) ,
([0, 5, 6, 1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 5, 6, 1, 2, 3, 4],) ,
('saved value', 2.8156577569366665) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 5, 6, 3, 1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 5, 6, 3, 1, 2, 4],) ,
('saved value', 3.564497823550847) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 4) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -0.29401593470208043) ,
([0, 5, 6, 4, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 5, 6, 4, 1, 3, 2],) ,
('saved value', 2.2704818888487663) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 3) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -0.27048188884876634) ,
([0, 5, 6, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 5, 6, 2, 3, 1, 4],) ,
('saved value', 2.2940159347020805) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 4) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', 1.2349614050728177) ,
([0, 5, 6, 2, 4, 3, 1],) ,
('Computing match for mapping',) ,
([0, 5, 6, 2, 4, 3, 1],) ,
('saved value', 3.7994592286236646) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', 0.37418489219532836) ,
([0, 5, 6, 2, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 5, 6, 2, 1, 4, 3],) ,
('saved value', 2.9386827157461752) ,
('Use swap gain',) ,
('Original mapping', [0, 5, 6, 2, 1, 3, 4]) ,
('Current mapping', [0, 1, 6, 2, 5, 3, 4]) ,
('Gain after the hill-climbing', 1.7295181111512337) ,
('Update triple match number to:', 4.294015934702081) ,
('Current mapping:', [0, 1, 6, 2, 5, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.000000000000001) ,
([1, 0, 6, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 6, 2, 5, 3, 4],) ,
('saved value', 0.29401593470208043) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 0, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([6, 1, 0, 2, 5, 3, 4],) ,
('saved value', 1.294015934702081) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -2.7449542648988334) ,
([2, 1, 6, 0, 5, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 6, 0, 5, 3, 4],) ,
('saved value', 1.5490616698032476) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -3.0000000000000004) ,
([5, 1, 6, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([5, 1, 6, 2, 0, 3, 4],) ,
('saved value', 1.2940159347020805) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -2.7449542648988334) ,
([3, 1, 6, 2, 5, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 6, 2, 5, 0, 4],) ,
('saved value', 1.5490616698032476) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -3.2940159347020805) ,
([4, 1, 6, 2, 5, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 6, 2, 5, 3, 0],) ,
('saved value', 1.0000000000000004) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -1.2005407713763359) ,
([0, 6, 1, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 6, 1, 2, 5, 3, 4],) ,
('saved value', 3.093475163325745) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -1.478358177765414) ,
([0, 2, 6, 1, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 6, 1, 5, 3, 4],) ,
('saved value', 2.815657756936667) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -1.729518111151234) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 5, 6, 2, 1, 3, 4],) ,
('saved value', 2.564497823550847) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -1.478358177765414) ,
([0, 3, 6, 2, 5, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 5, 1, 4],) ,
('saved value', 2.815657756936667) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -1.22407481722965) ,
([0, 4, 6, 2, 5, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 6, 2, 5, 3, 1],) ,
('saved value', 3.069941117472431) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 2) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 6) ,
('Swap gain:', 2.668200826897409) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('saved value', 6.96221676159949) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 5) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 6) ,
('Swap gain:', 0.29401593470208043) ,
([0, 1, 5, 2, 6, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 6, 3, 4],) ,
('saved value', 4.588031869404161) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 1, 3, 2, 5, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 6, 4],) ,
('saved value', 4.294015934702081) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 4) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', 1.7059840652979195) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 5) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 1, 6, 5, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 2, 3, 4],) ,
('saved value', 4.294015934702081) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', 2.0) ,
([0, 1, 6, 3, 5, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 5, 2, 4],) ,
('saved value', 6.294015934702081) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 4) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -0.29401593470208043) ,
([0, 1, 6, 4, 5, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 3, 2],) ,
('saved value', 4.000000000000001) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 1, 6, 2, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 3, 5, 4],) ,
('saved value', 5.294015934702081) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 4) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 5) ,
('Swap gain:', 0.705984065297919) ,
([0, 1, 6, 2, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 4, 3, 5],) ,
('saved value', 5.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', 0.3741848921953279) ,
([0, 1, 6, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 4, 3],) ,
('saved value', 4.668200826897409) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 6, 2, 5, 3, 4]) ,
('Current mapping', [0, 1, 2, 6, 5, 3, 4]) ,
('Gain after the hill-climbing', 2.668200826897409) ,
('Update triple match number to:', 6.96221676159949) ,
('Current mapping:', [0, 1, 2, 6, 5, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, 6, 5, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 6, 5, 3, 4],) ,
('saved value', 1.9622167615994899) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 6, 5, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 6, 5, 3, 4],) ,
('saved value', 1.9622167615994899) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 6) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 0, '-', 6, ',', 3, '-', 0) ,
('Swap gain:', -3.4131550917962423) ,
([6, 1, 2, 0, 5, 3, 4],) ,
('Computing match for mapping',) ,
([6, 1, 2, 0, 5, 3, 4],) ,
('saved value', 3.5490616698032476) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 2, 6, 0, 3, 4],) ,
('Computing match for mapping',) ,
([5, 1, 2, 6, 0, 3, 4],) ,
('saved value', 3.96221676159949) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -2.7449542648988334) ,
([3, 1, 2, 6, 5, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 6, 5, 0, 4],) ,
('saved value', 4.2172624967006564) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -3.2940159347020805) ,
([4, 1, 2, 6, 5, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 6, 5, 3, 0],) ,
('saved value', 3.6682008268974093) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 1, 6, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 6, 5, 3, 4],) ,
('saved value', 2.96221676159949) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 6) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 1, '-', 6, ',', 3, '-', 1) ,
('Swap gain:', -2.3470997760391583) ,
([0, 6, 2, 1, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 6, 2, 1, 5, 3, 4],) ,
('saved value', 4.615116985560332) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2.7295181111512345) ,
([0, 5, 2, 6, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 5, 2, 6, 1, 3, 4],) ,
('saved value', 4.232698650448255) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -2.478358177765414) ,
([0, 3, 2, 6, 5, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 6, 5, 1, 4],) ,
('saved value', 4.483858583834076) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -2.22407481722965) ,
([0, 4, 2, 6, 5, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 6, 5, 3, 1],) ,
('saved value', 4.73814194436984) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 6) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 2, '-', 6, ',', 3, '-', 2) ,
('Swap gain:', -2.668200826897409) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 3, 4],) ,
('saved value', 4.294015934702081) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 6, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 6, 2, 3, 4],) ,
('saved value', 4.96221676159949) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 6, 5, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 6, 5, 2, 4],) ,
('saved value', 4.96221676159949) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 4) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -2.2940159347020805) ,
([0, 1, 4, 6, 5, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 5, 3, 2],) ,
('saved value', 4.66820082689741) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 6, ',', 4, '-', 5) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 6) ,
('Swap gain:', -0.37418489219532824) ,
([0, 1, 2, 5, 6, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 6, 3, 4],) ,
('saved value', 6.588031869404162) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 6, ',', 5, '-', 3) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', 2.331799173102591) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('saved value', 9.294015934702081) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 6, ',', 6, '-', 4) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', 2.0377832384005106) ,
([0, 1, 2, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, 6],) ,
('saved value', 9.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 3) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', 0.9999999999999991) ,
([0, 1, 2, 6, 3, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 3, 5, 4],) ,
('saved value', 7.962216761599489) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 4) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 5) ,
('Swap gain:', 0.705984065297919) ,
([0, 1, 2, 6, 4, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 3, 5],) ,
('saved value', 7.668200826897409) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', 0.3741848921953279) ,
([0, 1, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, 3],) ,
('saved value', 7.336401653794818) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 6, 5, 3, 4]) ,
('Current mapping', [0, 1, 2, 3, 5, 6, 4]) ,
('Gain after the hill-climbing', 2.331799173102591) ,
('Update triple match number to:', 9.294015934702081) ,
('Current mapping:', [0, 1, 2, 3, 5, 6, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 5, 6, 4],) ,
('saved value', 4.294015934702081) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 0, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 5, 6, 4],) ,
('saved value', 3.294015934702081) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -5.489908529797667) ,
([3, 1, 2, 0, 5, 6, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 5, 6, 4],) ,
('saved value', 3.804107404904414) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 0, 6, 4],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 6, 4],) ,
('saved value', 5.294015934702081) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 2, 3, 5, 0, 4],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 5, 0, 4],) ,
('saved value', 6.294015934702081) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -3.2940159347020805) ,
([4, 1, 2, 3, 5, 6, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 6, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 2, 1, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 5, 6, 4],) ,
('saved value', 4.294015934702081) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -4.956716355530828) ,
([0, 3, 2, 1, 5, 6, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 5, 6, 4],) ,
('saved value', 4.337299579171253) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -3.7295181111512337) ,
([0, 5, 2, 3, 1, 6, 4],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 1, 6, 4],) ,
('saved value', 5.564497823550847) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -2.200540771376336) ,
([0, 6, 2, 3, 5, 1, 4],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 5, 1, 4],) ,
('saved value', 7.093475163325746) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -2.22407481722965) ,
([0, 4, 2, 3, 5, 6, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 5, 6, 1],) ,
('saved value', 7.069941117472431) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, 5, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 6, 4],) ,
('saved value', 4.294015934702081) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 3, 2, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 6, 4],) ,
('saved value', 7.294015934702081) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 6, 3, 5, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 5, 2, 4],) ,
('saved value', 6.294015934702081) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 4) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -2.2940159347020805) ,
([0, 1, 4, 3, 5, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, 6, 2],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 5, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 6, 4],) ,
('saved value', 6.294015934702081) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 6) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -2.331799173102591) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 3, 4],) ,
('saved value', 6.96221676159949) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 4) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -2.6258151078046716) ,
([0, 1, 2, 4, 5, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 3],) ,
('saved value', 6.66820082689741) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', 0.294015934702081) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('saved value', 9.588031869404162) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 4) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 5) ,
('Swap gain:', 0.705984065297919) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('saved value', 10.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 4) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', 2.705984065297919) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('saved value', 12.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 3, 5, 6, 4]) ,
('Current mapping', [0, 1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 2.705984065297919) ,
('Update triple match number to:', 12.0) ,
('Current mapping:', [0, 1, 2, 3, 5, 4, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 0, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.489908529797667) ,
([3, 1, 2, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 5, 4, 6],) ,
('saved value', 5.510091470202333) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 0, 4, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 2, 3, 5, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0, 6],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 2, 3, 5, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 5, 4, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 1, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -4.956716355530828) ,
([0, 3, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 5, 4, 6],) ,
('saved value', 7.043283644469172) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -3.7295181111512337) ,
([0, 5, 2, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 1, 4, 6],) ,
('saved value', 8.270481888848767) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -2.7295181111512337) ,
([0, 4, 2, 3, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 5, 1, 6],) ,
('saved value', 9.270481888848767) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -4.401081542752672) ,
([0, 6, 2, 3, 5, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 5, 4, 1],) ,
('saved value', 7.598918457247328) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 3, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, 2, 6],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 6, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 5, 4, 2],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 4, 6],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, 6],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -4.663598346205182) ,
([0, 1, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, 3],) ,
('saved value', 7.336401653794818) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 3.0) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 15.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -3.7059840652979195) ,
([0, 1, 2, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 4, 5],) ,
('saved value', 8.294015934702081) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2.705984065297919) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('saved value', 9.294015934702081) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 3, 5, 4, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 15.0) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -7.0) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.489908529797667) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('saved value', 8.510091470202333) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -7.0) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.956716355530828) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('saved value', 9.043283644469172) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -5.459036222302467) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('saved value', 9.540963777697533) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6.401081542752671) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('saved value', 8.59891845724733) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('saved value', 11.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -7.0) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -5.663598346205182) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('saved value', 9.336401653794818) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('saved value', 12.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -5.411968130595838) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('saved value', 9.588031869404162) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('saved value', 10.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2.0) ,
('node_pair', (1, 6)) ,
('instance/attribute match', 0.7994592286236641) ,
('node_pair', (2, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 1)) ,
('instance/attribute match', 0.27048188884876645) ,
('node_pair', (5, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 3)) ,
('instance/attribute match', 0.6682008268974087) ,
('match computing complete, result:', 3.738141944369839) ,
('Node mapping at start', [0, 6, 5, 2, 1, 4, 3]) ,
('Triple match number at start:', 3.738141944369839) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 6) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 0, '-', 6, ',', 1, '-', 0) ,
('Swap gain:', -2.799459228623664) ,
([6, 0, 5, 2, 1, 4, 3],) ,
('Computing match for mapping',) ,
([6, 0, 5, 2, 1, 4, 3],) ,
('saved value', 0.9386827157461748) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([5, 6, 0, 2, 1, 4, 3],) ,
('Computing match for mapping',) ,
([5, 6, 0, 2, 1, 4, 3],) ,
('saved value', 1.738141944369839) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.7449542648988337) ,
([2, 6, 5, 0, 1, 4, 3],) ,
('Computing match for mapping',) ,
([2, 6, 5, 0, 1, 4, 3],) ,
('saved value', 1.9931876794710053) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -2.2704818888487663) ,
([1, 6, 5, 2, 0, 4, 3],) ,
('Computing match for mapping',) ,
([1, 6, 5, 2, 0, 4, 3],) ,
('saved value', 1.4676600555210726) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 6, 5, 2, 1, 0, 3],) ,
('Computing match for mapping',) ,
([4, 6, 5, 2, 1, 0, 3],) ,
('saved value', 1.738141944369839) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 3) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 6, '-', 0) ,
('Swap gain:', -2.4131550917962423) ,
([3, 6, 5, 2, 1, 4, 0],) ,
('Computing match for mapping',) ,
([3, 6, 5, 2, 1, 4, 0],) ,
('saved value', 1.3249868525735966) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 6, ',', 2, '-', 5) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 6) ,
('Swap gain:', -0.7994592286236637) ,
([0, 5, 6, 2, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 5, 6, 2, 1, 4, 3],) ,
('saved value', 2.9386827157461752) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 6, ',', 3, '-', 2) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 6) ,
('Swap gain:', -0.13125840172625547) ,
([0, 2, 5, 6, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 2, 5, 6, 1, 4, 3],) ,
('saved value', 3.6068835426435832) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 6, ',', 4, '-', 1) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 6) ,
('Swap gain:', 1.22407481722965) ,
([0, 1, 5, 2, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 6, 4, 3],) ,
('saved value', 4.962216761599489) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 6, ',', 5, '-', 4) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 6) ,
('Swap gain:', -0.5289773397748977) ,
([0, 4, 5, 2, 1, 6, 3],) ,
('Computing match for mapping',) ,
([0, 4, 5, 2, 1, 6, 3],) ,
('saved value', 3.209164604594941) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 6, ',', 6, '-', 3) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 6, '-', 6) ,
('Swap gain:', 2.0539817667135134) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('saved value', 5.792123711083352) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 2) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 6, 2, 5, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 6, 2, 5, 1, 4, 3],) ,
('saved value', 4.738141944369839) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 1) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 5) ,
('Swap gain:', -0.27048188884876645) ,
([0, 6, 1, 2, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 2, 5, 4, 3],) ,
('saved value', 3.4676600555210726) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 4) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 6, 4, 2, 1, 5, 3],) ,
('Computing match for mapping',) ,
([0, 6, 4, 2, 1, 5, 3],) ,
('saved value', 3.738141944369839) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 3) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 6, '-', 5) ,
('Swap gain:', -0.6682008268974087) ,
([0, 6, 3, 2, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 6, 3, 2, 1, 4, 5],) ,
('saved value', 3.06994111747243) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 1) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', 0.25115993338581966) ,
([0, 6, 5, 1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 6, 5, 1, 2, 4, 3],) ,
('saved value', 3.9893018777556586) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 4) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 6, 5, 4, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 6, 5, 4, 1, 2, 3],) ,
('saved value', 3.738141944369839) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 3) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 6, '-', 2) ,
('Swap gain:', 1.3317991731025913) ,
([0, 6, 5, 3, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 6, 5, 3, 1, 4, 2],) ,
('saved value', 5.06994111747243) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 4) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', 0.7295181111512337) ,
([0, 6, 5, 2, 4, 1, 3],) ,
('Computing match for mapping',) ,
([0, 6, 5, 2, 4, 1, 3],) ,
('saved value', 4.467660055521073) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 3) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 4, '-', 3, ',', 6, '-', 1) ,
('Swap gain:', -0.13922348712251098) ,
([0, 6, 5, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 5, 2, 3, 4, 1],) ,
('saved value', 3.598918457247328) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 4, ',', 6, '-', 3) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('After swapping:', 5, '-', 3, ',', 6, '-', 4) ,
('Swap gain:', -0.3741848921953279) ,
([0, 6, 5, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 6, 5, 2, 1, 3, 4],) ,
('saved value', 3.363957052174511) ,
('Use swap gain',) ,
('Original mapping', [0, 6, 5, 2, 1, 4, 3]) ,
('Current mapping', [0, 3, 5, 2, 1, 4, 6]) ,
('Gain after the hill-climbing', 2.0539817667135134) ,
('Update triple match number to:', 5.792123711083352) ,
('Current mapping:', [0, 3, 5, 2, 1, 4, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -3.2665960871334194) ,
([3, 0, 5, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([3, 0, 5, 2, 1, 4, 6],) ,
('saved value', 2.525527623949933) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([5, 3, 0, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 3, 0, 2, 1, 4, 6],) ,
('saved value', 4.792123711083352) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -0.7449542648988334) ,
([2, 3, 5, 0, 1, 4, 6],) ,
('Computing match for mapping',) ,
([2, 3, 5, 0, 1, 4, 6],) ,
('saved value', 5.047169446184519) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -3.2704818888487663) ,
([1, 3, 5, 2, 0, 4, 6],) ,
('Computing match for mapping',) ,
([1, 3, 5, 2, 0, 4, 6],) ,
('saved value', 2.521641822234586) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -1.0) ,
([4, 3, 5, 2, 1, 0, 6],) ,
('Computing match for mapping',) ,
([4, 3, 5, 2, 1, 0, 6],) ,
('saved value', 4.792123711083352) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 3, 5, 2, 1, 4, 0],) ,
('Computing match for mapping',) ,
([6, 3, 5, 2, 1, 4, 0],) ,
('saved value', 0.7921237110833523) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 5) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 3) ,
('Swap gain:', -1.521641822234586) ,
([0, 5, 3, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 5, 3, 2, 1, 4, 6],) ,
('saved value', 4.270481888848766) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 2) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', 1.478358177765414) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('saved value', 7.270481888848766) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 1) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', 1.2078762889166477) ,
([0, 1, 5, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 3, 4, 6],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 4) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -0.25115993338581966) ,
([0, 4, 5, 2, 1, 3, 6],) ,
('Computing match for mapping',) ,
([0, 4, 5, 2, 1, 3, 6],) ,
('saved value', 5.540963777697533) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 6) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -2.0539817667135134) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 6, 5, 2, 1, 4, 3],) ,
('saved value', 3.738141944369839) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 2) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 3, 2, 5, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 1, 4, 6],) ,
('saved value', 6.792123711083352) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 1) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 5) ,
('Swap gain:', -1.2704818888487663) ,
([0, 3, 1, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2, 5, 4, 6],) ,
('saved value', 4.521641822234586) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 4) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 3, 4, 2, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 1, 5, 6],) ,
('saved value', 5.792123711083352) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 6) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -3.0) ,
([0, 3, 6, 2, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 1, 4, 5],) ,
('saved value', 2.7921237110833523) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 1) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', 0.25115993338581966) ,
([0, 3, 5, 1, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 2, 4, 6],) ,
('saved value', 6.043283644469172) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 4) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 3, 5, 4, 1, 2, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 1, 2, 6],) ,
('saved value', 6.792123711083352) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 6) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -2.331799173102591) ,
([0, 3, 5, 6, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 3, 5, 6, 1, 4, 2],) ,
('saved value', 3.4603245379807612) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 4) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', 0.7295181111512336) ,
([0, 3, 5, 2, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 4, 1, 6],) ,
('saved value', 6.521641822234586) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 6) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -2.1770067255230217) ,
([0, 3, 5, 2, 6, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 6, 4, 1],) ,
('saved value', 3.6151169855603307) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 4, ',', 6, '-', 6) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2.7059840652979195) ,
([0, 3, 5, 2, 1, 6, 4],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 1, 6, 4],) ,
('saved value', 3.086139645785433) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 5, 2, 1, 4, 6]) ,
('Current mapping', [0, 2, 5, 3, 1, 4, 6]) ,
('Gain after the hill-climbing', 1.478358177765414) ,
('Update triple match number to:', 7.270481888848766) ,
('Current mapping:', [0, 2, 5, 3, 1, 4, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 0, 5, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([2, 0, 5, 3, 1, 4, 6],) ,
('saved value', 5.270481888848766) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 2, 0, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([5, 2, 0, 3, 1, 4, 6],) ,
('saved value', 4.270481888848766) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4.489908529797667) ,
([3, 2, 5, 0, 1, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 5, 0, 1, 4, 6],) ,
('saved value', 2.7805733590510995) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -3.2704818888487663) ,
([1, 2, 5, 3, 0, 4, 6],) ,
('Computing match for mapping',) ,
([1, 2, 5, 3, 0, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 2, 5, 3, 1, 0, 6],) ,
('Computing match for mapping',) ,
([4, 2, 5, 3, 1, 0, 6],) ,
('saved value', 5.270481888848766) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 2, 5, 3, 1, 4, 0],) ,
('Computing match for mapping',) ,
([6, 2, 5, 3, 1, 4, 0],) ,
('saved value', 2.2704818888487663) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 5) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 2) ,
('Swap gain:', 1.0000000000000009) ,
([0, 5, 2, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 1, 4, 6],) ,
('saved value', 8.270481888848767) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 3) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -1.478358177765414) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 2, 1, 4, 6],) ,
('saved value', 5.792123711083352) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 1) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', 2.7295181111512337) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 4) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', 1.2704818888487663) ,
([0, 4, 5, 3, 1, 2, 6],) ,
('Computing match for mapping',) ,
([0, 4, 5, 3, 1, 2, 6],) ,
('saved value', 8.540963777697533) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 2, ',', 6, '-', 6) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -2.2005407713763363) ,
([0, 6, 5, 3, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 6, 5, 3, 1, 4, 2],) ,
('saved value', 5.06994111747243) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 3) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 5) ,
('Swap gain:', -3.0) ,
([0, 2, 3, 5, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 3, 5, 1, 4, 6],) ,
('saved value', 4.270481888848766) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 1) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 5) ,
('Swap gain:', -1.2704818888487663) ,
([0, 2, 1, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 4) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 2, 4, 3, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 1, 5, 6],) ,
('saved value', 7.270481888848766) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 6) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 2, 6, 3, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 2, 6, 3, 1, 4, 5],) ,
('saved value', 3.2704818888487663) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 1) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', -1.7488400666141803) ,
([0, 2, 5, 1, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 5, 1, 3, 4, 6],) ,
('saved value', 5.521641822234586) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 2, 5, 4, 1, 3, 6],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 1, 3, 6],) ,
('saved value', 5.270481888848766) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -3.663598346205183) ,
([0, 2, 5, 6, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 2, 5, 6, 1, 4, 3],) ,
('saved value', 3.6068835426435832) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 4) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', 1.7295181111512337) ,
([0, 2, 5, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 2, 5, 3, 4, 1, 6],) ,
('saved value', 9.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 6) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -2.1770067255230217) ,
([0, 2, 5, 3, 6, 4, 1],) ,
('Computing match for mapping',) ,
([0, 2, 5, 3, 6, 4, 1],) ,
('saved value', 5.093475163325745) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 4, ',', 6, '-', 6) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2.7059840652979195) ,
([0, 2, 5, 3, 1, 6, 4],) ,
('Computing match for mapping',) ,
([0, 2, 5, 3, 1, 6, 4],) ,
('saved value', 4.564497823550846) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 5, 3, 1, 4, 6]) ,
('Current mapping', [0, 1, 5, 3, 2, 4, 6]) ,
('Gain after the hill-climbing', 2.7295181111512337) ,
('Update triple match number to:', 10.0) ,
('Current mapping:', [0, 1, 5, 3, 2, 4, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 5, 3, 2, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 0, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([5, 1, 0, 3, 2, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.489908529797667) ,
([3, 1, 5, 0, 2, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 5, 0, 2, 4, 6],) ,
('saved value', 3.510091470202333) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 5, 3, 0, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 5, 3, 0, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 5, 3, 2, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 5, 3, 2, 0, 6],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 5, 3, 2, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 5, 3, 2, 4, 0],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 5) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 5, 1, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 5, 1, 3, 2, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3.956716355530828) ,
([0, 3, 5, 1, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 2, 4, 6],) ,
('saved value', 6.043283644469172) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2.7295181111512337) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 5, 3, 1, 4, 6],) ,
('saved value', 7.270481888848766) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -1.7295181111512337) ,
([0, 4, 5, 3, 2, 1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 5, 3, 2, 1, 6],) ,
('saved value', 8.270481888848767) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -3.4010815427526717) ,
([0, 6, 5, 3, 2, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 5, 3, 2, 4, 1],) ,
('saved value', 6.598918457247328) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 3) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 1, 3, 5, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 2, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', 2.0) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 4) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 1.0) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('saved value', 11.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 6) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 1, 6, 3, 2, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 4, 5],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 3, 4, 6],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 4, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 3, 6],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -4.663598346205182) ,
([0, 1, 5, 6, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 6, 2, 4, 3],) ,
('saved value', 5.336401653794818) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 4) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', 2.0) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('saved value', 12.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 6) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -3.7059840652979195) ,
([0, 1, 5, 3, 6, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 6, 4, 2],) ,
('saved value', 6.294015934702081) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 4, ',', 6, '-', 6) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2.705984065297919) ,
([0, 1, 5, 3, 2, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 6, 4],) ,
('saved value', 7.294015934702081) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 5, 3, 2, 4, 6]) ,
('Current mapping', [0, 1, 2, 3, 5, 4, 6]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 12.0) ,
('Current mapping:', [0, 1, 2, 3, 5, 4, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([1, 0, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 0, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.489908529797667) ,
([3, 1, 2, 0, 5, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 5, 4, 6],) ,
('saved value', 5.510091470202333) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 0, 4, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 0, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 2, 3, 5, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 5, 0, 6],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 2, 3, 5, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 5, 4, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 2, 1, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 5, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -4.956716355530828) ,
([0, 3, 2, 1, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 5, 4, 6],) ,
('saved value', 7.043283644469172) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -3.7295181111512328) ,
([0, 5, 2, 3, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 1, 4, 6],) ,
('saved value', 8.270481888848767) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -2.7295181111512328) ,
([0, 4, 2, 3, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 5, 1, 6],) ,
('saved value', 9.270481888848767) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -4.401081542752672) ,
([0, 6, 2, 3, 5, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 5, 4, 1],) ,
('saved value', 7.598918457247328) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 3, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 5, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 4, 6],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 3, 5, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, 2, 6],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 6, 3, 5, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 5, 4, 2],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 5) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 5, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 4, 6],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 4, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, 6],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -4.663598346205182) ,
([0, 1, 2, 6, 5, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, 3],) ,
('saved value', 7.336401653794818) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 3.0) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('saved value', 15.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -3.705984065297919) ,
([0, 1, 2, 3, 6, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 4, 5],) ,
('saved value', 8.294015934702081) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2.705984065297919) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, 4],) ,
('saved value', 9.294015934702081) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 3, 5, 4, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 15.0) ,
('Current mapping:', [0, 1, 2, 3, 4, 5, 6]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -7.0) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3, 4, 5, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -6.489908529797667) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, 5, 6],) ,
('saved value', 8.510091470202333) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('Computing match for mapping',) ,
([5, 1, 2, 3, 4, 0, 6],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -7.0) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 4, 5, 0],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 5, 6],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.956716355530828) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 5, 6],) ,
('saved value', 9.043283644469172) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -5.459036222302467) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 5, 6],) ,
('saved value', 9.540963777697533) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 3, 4, 1, 6],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -6.401081542752671) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 5, 1],) ,
('saved value', 8.59891845724733) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 5, 6],) ,
('saved value', 11.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 2, 6],) ,
('saved value', 12.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -7.0) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5, 2],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 6],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 3) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 3, 6],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', -5.663598346205182) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 4, 5, 3],) ,
('saved value', 9.336401653794818) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 4, 6],) ,
('saved value', 12.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -5.411968130595838) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 5, 4],) ,
('saved value', 9.588031869404162) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 5, ',', 6, '-', 6) ,
([0, 1, 2, 3, 4, 5, 6],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 5],) ,
('saved value', 10.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Current mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 15.0) ,
('best node mapping', [0, 1, 2, 3, 4, 5, 6]) ,
('Best node mapping alignment:', 'a0(decide-01)-b0(decide-01) a1(and)-b1(and) a2(protect-01)-b2(protect-01) a3(thing)-b3(thing) a4(remain-01)-b4(remain-01) a5(polish)-b5(meddle-01) a6(they)-b6(they)') ,
('F-score:', 0.8823529411764706) ,
Smatch score F1 0.882
('AMR pair', 15) ,
('============================================',) ,
('AMR 1 (one-line):', '(o0 / out-05:ARG1 (e0 / event:mod (c0 / chapter:part-of (f0 / final):part-of (t0 / trilogy)):name (n0 / name:op1 "The":op2 "Matrix":op3 "Revolutions" )):time (d0 / date-entity:month 11 ))') ,
('AMR 2 (one-line):', '(r0 / release-01:ARG1 (f0 / film:mod (o0 / ordinal-entity:value 3 ):name (n0 / name:op1 "The":op2 "Matrix":op3 "Revolutions" )):time (d0 / date-entity:month 11 ))') ,
('Instance triples of AMR 1:', 7) ,
([('instance', 'a0', 'out-05'), ('instance', 'a1', 'event'), ('instance', 'a2', 'chapter'), ('instance', 'a3', 'final'), ('instance', 'a4', 'trilogy'), ('instance', 'a5', 'name'), ('instance', 'a6', 'date-entity')],) ,
('Attribute triples of AMR 1:', 5) ,
([('TOP', 'a0', 'out-05'), ('op1', 'a5', 'The_'), ('op2', 'a5', 'Matrix_'), ('op3', 'a5', 'Revolutions_'), ('month', 'a6', '11')],) ,
('Relation triples of AMR 1:', 6) ,
([('ARG1', 'a0', 'a1'), ('time', 'a0', 'a6'), ('mod', 'a1', 'a2'), ('name', 'a1', 'a5'), ('part', 'a3', 'a2'), ('part', 'a4', 'a2')],) ,
('Instance triples of AMR 2:', 5) ,
([('instance', 'b0', 'release-01'), ('instance', 'b1', 'film'), ('instance', 'b2', 'ordinal-entity'), ('instance', 'b3', 'name'), ('instance', 'b4', 'date-entity')],) ,
('Attribute triples of AMR 2:', 6) ,
([('TOP', 'b0', 'release-01'), ('value', 'b2', '3'), ('op1', 'b3', 'The_'), ('op2', 'b3', 'Matrix_'), ('op3', 'b3', 'Revolutions_'), ('month', 'b4', '11')],) ,
('Relation triples of AMR 2:', 4) ,
([('ARG1', 'b0', 'b1'), ('time', 'b0', 'b4'), ('mod', 'b1', 'b2'), ('name', 'b1', 'b3')],) ,
('Similarity', 'out-05', 'release-01', 0.0) ,
('Similarity', 'out-05', 'film', 0.0) ,
('Similarity', 'out-05', 'ordinal-entity', 0.0) ,
('Similarity', 'out-05', 'name', 0.0) ,
('Similarity', 'out-05', 'date-entity', 0.0) ,
('Similarity', 'event', 'release-01', 0.0) ,
('Similarity', 'event', 'film', 0.0) ,
('Similarity', 'event', 'ordinal-entity', 0.0) ,
('Similarity', 'event', 'name', 0.0) ,
('Similarity', 'event', 'date-entity', 0.5160941612809214) ,
('Similarity', 'chapter', 'release-01', 0.0) ,
('Similarity', 'chapter', 'film', 0.0) ,
('Similarity', 'chapter', 'ordinal-entity', 0.0) ,
('Similarity', 'chapter', 'name', 0.0) ,
('Similarity', 'chapter', 'date-entity', 0.0) ,
('Similarity', 'final', 'release-01', 0.0) ,
('Similarity', 'final', 'film', 0.0) ,
('Similarity', 'final', 'ordinal-entity', 0.0) ,
('Similarity', 'final', 'name', 0.0) ,
('Similarity', 'final', 'date-entity', 0.5115585140909603) ,
('Similarity', 'trilogy', 'release-01', 0.0) ,
('Similarity', 'trilogy', 'film', 0.5181293887971494) ,
('Similarity', 'trilogy', 'ordinal-entity', 0.0) ,
('Similarity', 'trilogy', 'name', 0.0) ,
('Similarity', 'trilogy', 'date-entity', 0.0) ,
('Similarity', 'name', 'release-01', 0.0) ,
('Similarity', 'name', 'film', 0.0) ,
('Similarity', 'name', 'ordinal-entity', 0.0) ,
('Similarity', 'name', 'name', 1.0) ,
('Similarity', 'name', 'date-entity', 0.6306523615517657) ,
('Similarity', 'date-entity', 'release-01', 0.0) ,
('Similarity', 'date-entity', 'film', 0.0) ,
('Similarity', 'date-entity', 'ordinal-entity', 0.6056487303110948) ,
('Similarity', 'date-entity', 'date-entity', 1.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.0, (1, 1): 1, (6, 4): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0}, (0, 3): {-1: 0.0}, (0, 4): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 0.0, (0, 0): 1, (2, 2): 1, (5, 3): 1}, (1, 2): {-1: 0.0}, (1, 3): {-1: 0.0}, (1, 4): {-1: 0.5160941612809214}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.0}, (2, 2): {-1: 0.0, (1, 1): 1}, (2, 3): {-1: 0.0}, (2, 4): {-1: 0.0}, (3, 0): {-1: 0.0}, (3, 1): {-1: 0.0}, (3, 2): {-1: 0.0}, (3, 3): {-1: 0.0}, (3, 4): {-1: 0.5115585140909603}, (4, 0): {-1: 0.0}, (4, 1): {-1: 0.5181293887971494}, (4, 2): {-1: 0.0}, (4, 3): {-1: 0.0}, (4, 4): {-1: 0.0}, (5, 0): {-1: 0.0}, (5, 1): {-1: 0.0}, (5, 2): {-1: 0.0}, (5, 3): {-1: 4.0, (1, 1): 1}, (5, 4): {-1: 0.6306523615517657}, (6, 0): {-1: 0.0}, (6, 1): {-1: 0.0}, (6, 2): {-1: 0.6056487303110948}, (6, 3): {-1: 0.6306523615517657}, (6, 4): {-1: 2.0, (0, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0.0) ,
('relation match with', (1, 1), 1) ,
('relation match with', (6, 4), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.0) ,
('relation match with', (2, 2), 1) ,
('relation match with', (5, 3), 1) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 3)) ,
('instance/attribute match', 4.0) ,
('node_pair', (6, 4)) ,
('instance/attribute match', 2.0) ,
('match computing complete, result:', 10.0) ,
('Node mapping at start', [0, 1, 2, -1, -1, 3, 4]) ,
('Triple match number at start:', 10.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -2.481870611202851) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('saved value', 7.518129388797149) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -5.483905838719078) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -3.3943512696889053) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('saved value', 6.605648730311095) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -2.4884414859090396) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('saved value', 7.511558514090961) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3.0) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -6.738695276896468) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('saved value', 3.2613047231035317) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 2)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [4, 1, 0, 3, 2, -1, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 1) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 4) ,
('Swap gain:', 0.5160941612809214) ,
([1, 4, 0, 3, 2, -1, -1],) ,
('Computing match for mapping',) ,
([1, 4, 0, 3, 2, -1, -1],) ,
('saved value', 0.5160941612809214) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 0) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 4, 3, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, -1, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 3) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', 0.5115585140909603) ,
([3, 1, 0, 4, 2, -1, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 2, -1, -1],) ,
('saved value', 0.5115585140909603) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 2) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 0.0) ,
([2, 1, 0, 3, 4, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', -1) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 0.6306523615517657) ,
([-1, 1, 0, 3, 2, 4, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 3, 2, 4, -1],) ,
('saved value', 0.6306523615517657) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', -1) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', 2.0) ,
([-1, 1, 0, 3, 2, -1, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 3, 2, -1, 4],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 0) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 0, 1, 3, 2, -1, -1],) ,
('Computing match for mapping',) ,
([4, 0, 1, 3, 2, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([4, 3, 0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([4, 3, 0, 1, 2, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', 0.5181293887971494) ,
([4, 2, 0, 3, 1, -1, -1],) ,
('Computing match for mapping',) ,
([4, 2, 0, 3, 1, -1, -1],) ,
('saved value', 0.5181293887971494) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([4, -1, 0, 3, 2, 1, -1],) ,
('Computing match for mapping',) ,
([4, -1, 0, 3, 2, 1, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', 0.0) ,
([4, -1, 0, 3, 2, -1, 1],) ,
('Computing match for mapping',) ,
([4, -1, 0, 3, 2, -1, 1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 3) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([4, 1, 3, 0, 2, -1, -1],) ,
('Computing match for mapping',) ,
([4, 1, 3, 0, 2, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 2) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', 1.0) ,
([4, 1, 2, 3, 0, -1, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 3, 0, -1, -1],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', -1) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([4, 1, -1, 3, 2, 0, -1],) ,
('Computing match for mapping',) ,
([4, 1, -1, 3, 2, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', -1) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([4, 1, -1, 3, 2, -1, 0],) ,
('Computing match for mapping',) ,
([4, 1, -1, 3, 2, -1, 0],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 2) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([4, 1, 0, 2, 3, -1, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, 2, 3, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', -1) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', 5.0) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', -1) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', 0.6306523615517657) ,
([4, 1, 0, -1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([4, 1, 0, -1, 2, -1, 3],) ,
('saved value', 0.6306523615517657) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', -1) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 1, 0, 3, -1, 2, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, -1, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', -1) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', 0.6056487303110948) ,
([4, 1, 0, 3, -1, -1, 2],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, -1, -1, 2],) ,
('saved value', 0.6056487303110948) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', -1) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', -1) ,
('Swap gain:', 0.0) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [4, 1, 0, 3, 2, -1, -1]) ,
('Current mapping', [4, 1, 0, -1, 2, 3, -1]) ,
('Gain after the hill-climbing', 5.0) ,
('Update triple match number to:', 5.0) ,
('Current mapping:', [4, 1, 0, -1, 2, 3, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 1) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 4) ,
('Swap gain:', -0.48390583871907855) ,
([1, 4, 0, -1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([1, 4, 0, -1, 2, 3, -1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 0) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 4) ,
('Swap gain:', 1.0) ,
([0, 1, 4, -1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 2, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', -1) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 4) ,
('Swap gain:', 0.5115585140909603) ,
([-1, 1, 0, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 4, 2, 3, -1],) ,
('saved value', 5.51155851409096) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 2) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', 0.0) ,
([2, 1, 0, -1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 4, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 3) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -4.369347638448234) ,
([3, 1, 0, -1, 2, 4, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, -1, 2, 4, -1],) ,
('saved value', 0.6306523615517658) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', -1) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', 2.0) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 0) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([4, 0, 1, -1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([4, 0, 1, -1, 2, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([4, -1, 0, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([4, -1, 0, 1, 2, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -0.4818706112028506) ,
([4, 2, 0, -1, 1, 3, -1],) ,
('Computing match for mapping',) ,
([4, 2, 0, -1, 1, 3, -1],) ,
('saved value', 4.518129388797149) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([4, 3, 0, -1, 2, 1, -1],) ,
('Computing match for mapping',) ,
([4, 3, 0, -1, 2, 1, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -1.0) ,
([4, -1, 0, -1, 2, 3, 1],) ,
('Computing match for mapping',) ,
([4, -1, 0, -1, 2, 3, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', -1) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([4, 1, -1, 0, 2, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, -1, 0, 2, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 2) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', 1.0) ,
([4, 1, 2, -1, 0, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, 0, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 3) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, 3, -1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([4, 1, 3, -1, 2, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', -1) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([4, 1, -1, -1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, -1, -1, 2, 3, 0],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 2) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([4, 1, 0, 2, -1, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, 2, -1, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 3) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, 2, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', -1, ',', 6, '-', -1) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', -1) ,
('Swap gain:', 0.0) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 3) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([4, 1, 0, -1, 3, 2, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, -1, 3, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', -1) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', 0.6056487303110948) ,
([4, 1, 0, -1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([4, 1, 0, -1, -1, 3, 2],) ,
('saved value', 5.605648730311095) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', -1) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -4.369347638448234) ,
([4, 1, 0, -1, 2, -1, 3],) ,
('Computing match for mapping',) ,
([4, 1, 0, -1, 2, -1, 3],) ,
('saved value', 0.6306523615517657) ,
('Use swap gain',) ,
('Original mapping', [4, 1, 0, -1, 2, 3, -1]) ,
('Current mapping', [-1, 1, 0, -1, 2, 3, 4]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 7.0) ,
('Current mapping:', [-1, 1, 0, -1, 2, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', -1, ',', 1, '-', 1) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', -1) ,
('Swap gain:', -1.0) ,
([1, -1, 0, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([1, -1, 0, -1, 2, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', -1, ',', 2, '-', 0) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', -1) ,
('Swap gain:', 2.0) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', -1, ',', 3, '-', -1) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', -1, ',', 4, '-', 2) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', -1, ',', 5, '-', 3) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([3, 1, 0, -1, 2, -1, 4],) ,
('Computing match for mapping',) ,
([3, 1, 0, -1, 2, -1, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', -1, ',', 6, '-', 4) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -2.0) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, -1, 2, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 0) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([-1, 0, 1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 0, 1, -1, 2, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([-1, -1, 0, 1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([-1, -1, 0, 1, 2, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -0.4818706112028506) ,
([-1, 2, 0, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 2, 0, -1, 1, 3, 4],) ,
('saved value', 6.518129388797149) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([-1, 3, 0, -1, 2, 1, 4],) ,
('Computing match for mapping',) ,
([-1, 3, 0, -1, 2, 1, 4],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -2.4839058387190787) ,
([-1, 4, 0, -1, 2, 3, 1],) ,
('Computing match for mapping',) ,
([-1, 4, 0, -1, 2, 3, 1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', -1) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([-1, 1, -1, 0, 2, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0, 2, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 2) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', 1.0) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 3) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([-1, 1, 3, -1, 2, 0, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 3, -1, 2, 0, 4],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 4) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 4, -1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 4, -1, 2, 3, 0],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 2) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([-1, 1, 0, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 3) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([-1, 1, 0, 3, 2, -1, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 3, 2, -1, 4],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', -1, ',', 6, '-', 4) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -1.48844148590904) ,
([-1, 1, 0, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 4, 2, 3, -1],) ,
('saved value', 5.51155851409096) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 3) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([-1, 1, 0, -1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 3, 2, 4],) ,
('saved value', 2.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 4) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -1.3943512696889053) ,
([-1, 1, 0, -1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 4, 3, 2],) ,
('saved value', 5.605648730311095) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -5.738695276896468) ,
([-1, 1, 0, -1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 2, 4, 3],) ,
('saved value', 1.2613047231035317) ,
('Use swap gain',) ,
('Original mapping', [-1, 1, 0, -1, 2, 3, 4]) ,
('Current mapping', [0, 1, -1, -1, 2, 3, 4]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 9.0) ,
('Current mapping:', [0, 1, -1, -1, 2, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 0, -1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1, 2, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 2, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, -1, 0, 2, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0, 2, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 1, -1, -1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, -1, -1, 0, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, -1, -1, 2, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, -1, -1, 2, 0, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, -1, -1, 2, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, -1, -1, 2, 3, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1, 2, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, -1, 1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1, 2, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -1.4818706112028506) ,
([0, 2, -1, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, -1, -1, 1, 3, 4],) ,
('saved value', 7.518129388797149) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, -1, -1, 2, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, -1, -1, 2, 1, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -4.483905838719078) ,
([0, 4, -1, -1, 2, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, -1, -1, 2, 3, 1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', 1.0) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', -1, ',', 5, '-', 3) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, 3, -1, 2, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, 2, -1, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', -1, ',', 6, '-', 4) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3.0) ,
([0, 1, 4, -1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, 2, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 3) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, -1, 3, 2, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, 2, -1, 4],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', -1, ',', 6, '-', 4) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -2.4884414859090396) ,
([0, 1, -1, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 2, 3, -1],) ,
('saved value', 6.511558514090961) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 3) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, -1, -1, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 3, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 4) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -2.3943512696889053) ,
([0, 1, -1, -1, 4, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 4, 3, 2],) ,
('saved value', 6.605648730311095) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -6.738695276896468) ,
([0, 1, -1, -1, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2, 4, 3],) ,
('saved value', 2.2613047231035317) ,
('Use swap gain',) ,
('Original mapping', [0, 1, -1, -1, 2, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 10.0) ,
('Current mapping:', [0, 1, 2, -1, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -2.481870611202851) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('saved value', 7.518129388797149) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -5.483905838719078) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -3.3943512696889053) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('saved value', 6.605648730311095) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -2.488441485909039) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('saved value', 7.511558514090961) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3.0) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -6.738695276896468) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('saved value', 3.2613047231035317) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 0.5115585140909603) ,
('node_pair', (4, 3)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.5115585140909603) ,
('Node mapping at start', [2, 1, 0, 4, 3, -1, -1]) ,
('Triple match number at start:', 0.5115585140909603) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 2, 0, 4, 3, -1, -1],) ,
('Computing match for mapping',) ,
([1, 2, 0, 4, 3, -1, -1],) ,
('saved value', 0.5115585140909603) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 2.0) ,
([0, 1, 2, 4, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1, -1],) ,
('saved value', 2.5115585140909604) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 4) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -0.5115585140909603) ,
([4, 1, 0, 2, 3, -1, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, 2, 3, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 3) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 1, 0, 4, 2, -1, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, 2, -1, -1],) ,
('saved value', 0.5115585140909603) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', -1) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([-1, 1, 0, 4, 3, 2, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 4, 3, 2, -1],) ,
('saved value', 0.5115585140909603) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', -1) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', 0.6056487303110948) ,
([-1, 1, 0, 4, 3, -1, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 4, 3, -1, 2],) ,
('saved value', 1.117207244402055) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 0) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([2, 0, 1, 4, 3, -1, -1],) ,
('Computing match for mapping',) ,
([2, 0, 1, 4, 3, -1, -1],) ,
('saved value', 0.5115585140909603) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', 0.004535647189961134) ,
([2, 4, 0, 1, 3, -1, -1],) ,
('Computing match for mapping',) ,
([2, 4, 0, 1, 3, -1, -1],) ,
('saved value', 0.5160941612809214) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', 0.5181293887971494) ,
([2, 3, 0, 4, 1, -1, -1],) ,
('Computing match for mapping',) ,
([2, 3, 0, 4, 1, -1, -1],) ,
('saved value', 1.0296879028881096) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([2, -1, 0, 4, 3, 1, -1],) ,
('Computing match for mapping',) ,
([2, -1, 0, 4, 3, 1, -1],) ,
('saved value', 0.5115585140909603) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', 0.0) ,
([2, -1, 0, 4, 3, -1, 1],) ,
('Computing match for mapping',) ,
([2, -1, 0, 4, 3, -1, 1],) ,
('saved value', 0.5115585140909603) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 4) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -0.5115585140909603) ,
([2, 1, 4, 0, 3, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 4, 0, 3, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 3) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 1, 3, 4, 0, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 3, 4, 0, -1, -1],) ,
('saved value', 0.5115585140909603) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', -1) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 1, -1, 4, 3, 0, -1],) ,
('Computing match for mapping',) ,
([2, 1, -1, 4, 3, 0, -1],) ,
('saved value', 0.5115585140909603) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', -1) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 1, -1, 4, 3, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 4, 3, -1, 0],) ,
('saved value', 0.5115585140909603) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', -0.5115585140909603) ,
([2, 1, 0, 3, 4, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', -1) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 0.11909384746080542) ,
([2, 1, 0, -1, 3, 4, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 3, 4, -1],) ,
('saved value', 0.6306523615517657) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', 1.4884414859090396) ,
([2, 1, 0, -1, 3, -1, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 3, -1, 4],) ,
('saved value', 2.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', -1) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', 5.0) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('saved value', 5.51155851409096) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', -1) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', 0.6306523615517657) ,
([2, 1, 0, 4, -1, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, -1, -1, 3],) ,
('saved value', 1.142210875642726) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', -1) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', -1) ,
('Swap gain:', 0.0) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('saved value', 0.5115585140909603) ,
('Use swap gain',) ,
('Original mapping', [2, 1, 0, 4, 3, -1, -1]) ,
('Current mapping', [2, 1, 0, 4, -1, 3, -1]) ,
('Gain after the hill-climbing', 5.0) ,
('Update triple match number to:', 5.51155851409096) ,
('Current mapping:', [2, 1, 0, 4, -1, 3, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -1.0) ,
([1, 2, 0, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([1, 2, 0, 4, -1, 3, -1],) ,
('saved value', 4.51155851409096) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 2.000000000000001) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('saved value', 7.511558514090961) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 4) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -0.51155851409096) ,
([4, 1, 0, 2, -1, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 0, 2, -1, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', -1) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([-1, 1, 0, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 4, 2, 3, -1],) ,
('saved value', 5.51155851409096) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 3) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([3, 1, 0, 4, -1, 2, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 4, -1, 2, -1],) ,
('saved value', 0.51155851409096) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', -1) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', 0.6056487303110948) ,
([-1, 1, 0, 4, -1, 3, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 4, -1, 3, 2],) ,
('saved value', 6.117207244402055) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 0) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([2, 0, 1, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([2, 0, 1, 4, -1, 3, -1],) ,
('saved value', 4.51155851409096) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -0.9954643528100389) ,
([2, 4, 0, 1, -1, 3, -1],) ,
('Computing match for mapping',) ,
([2, 4, 0, 1, -1, 3, -1],) ,
('saved value', 4.516094161280921) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -0.4818706112028506) ,
([2, -1, 0, 4, 1, 3, -1],) ,
('Computing match for mapping',) ,
([2, -1, 0, 4, 1, 3, -1],) ,
('saved value', 5.029687902888109) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([2, 3, 0, 4, -1, 1, -1],) ,
('Computing match for mapping',) ,
([2, 3, 0, 4, -1, 1, -1],) ,
('saved value', 0.51155851409096) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -1.0) ,
([2, -1, 0, 4, -1, 3, 1],) ,
('Computing match for mapping',) ,
([2, -1, 0, 4, -1, 3, 1],) ,
('saved value', 4.51155851409096) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 4) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -0.5115585140909603) ,
([2, 1, 4, 0, -1, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 4, 0, -1, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', -1) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 1, -1, 4, 0, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, -1, 4, 0, 3, -1],) ,
('saved value', 5.51155851409096) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 3) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 3, 4, -1, 0, -1],) ,
('Computing match for mapping',) ,
([2, 1, 3, 4, -1, 0, -1],) ,
('saved value', 0.51155851409096) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', -1) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 1, -1, 4, -1, 3, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 4, -1, 3, 0],) ,
('saved value', 5.51155851409096) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', -1) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 4) ,
('Swap gain:', -0.51155851409096) ,
([2, 1, 0, -1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 4, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 3) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -4.880906152539195) ,
([2, 1, 0, 3, -1, 4, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, -1, 4, -1],) ,
('saved value', 0.630652361551765) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', 1.48844148590904) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', -1, ',', 5, '-', 3) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 3, -1, -1],) ,
('saved value', 0.5115585140909603) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', -1, ',', 6, '-', -1) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', -1) ,
('Swap gain:', 0.0) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('saved value', 5.51155851409096) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', -1) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -4.369347638448234) ,
([2, 1, 0, 4, -1, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, -1, -1, 3],) ,
('saved value', 1.142210875642726) ,
('Use swap gain',) ,
('Original mapping', [2, 1, 0, 4, -1, 3, -1]) ,
('Current mapping', [0, 1, 2, 4, -1, 3, -1]) ,
('Gain after the hill-climbing', 2.000000000000001) ,
('Update triple match number to:', 7.511558514090961) ,
('Current mapping:', [0, 1, 2, 4, -1, 3, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 0, 2, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, -1, 3, -1],) ,
('saved value', 4.511558514090961) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -2.000000000000001) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, -1, 3, -1],) ,
('saved value', 5.51155851409096) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -1.5115585140909604) ,
([4, 1, 2, 0, -1, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, -1, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, 1, 2, 4, 0, 3, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, 0, 3, -1],) ,
('saved value', 6.511558514090961) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 1, 2, 4, -1, 0, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, -1, 0, -1],) ,
('saved value', 1.5115585140909609) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', -1) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, 1, 2, 4, -1, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 4, -1, 3, 0],) ,
('saved value', 6.511558514090961) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, -1, 3, -1],) ,
('saved value', 4.511558514090961) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -2.995464352810039) ,
([0, 4, 2, 1, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, -1, 3, -1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -2.481870611202851) ,
([0, -1, 2, 4, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, 1, 3, -1],) ,
('saved value', 5.02968790288811) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 3, 2, 4, -1, 1, -1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, -1, 1, -1],) ,
('saved value', 0.5115585140909609) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([0, -1, 2, 4, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 4, -1, 3, 1],) ,
('saved value', 4.511558514090961) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -1.5115585140909604) ,
([0, 1, 4, 2, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, -1, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 4, 2, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, 2, 3, -1],) ,
('saved value', 6.511558514090961) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 3, 4, -1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, -1, 2, -1],) ,
('saved value', 1.5115585140909609) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', -1) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', -0.3943512696889052) ,
([0, 1, -1, 4, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, -1, 3, 2],) ,
('saved value', 7.1172072444020555) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', -1) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 4) ,
('Swap gain:', -0.5115585140909609) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 3) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -4.880906152539195) ,
([0, 1, 2, 3, -1, 4, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, 4, -1],) ,
('saved value', 2.630652361551766) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', -1) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', 2.488441485909039) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 4, 3, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, -1, -1],) ,
('saved value', 2.5115585140909604) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', -1, ',', 6, '-', -1) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('saved value', 7.511558514090961) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', -1) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -4.369347638448234) ,
([0, 1, 2, 4, -1, -1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, -1, 3],) ,
('saved value', 3.1422108756427267) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, 4, -1, 3, -1]) ,
('Current mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Gain after the hill-climbing', 2.488441485909039) ,
('Update triple match number to:', 10.0) ,
('Current mapping:', [0, 1, 2, -1, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -2.481870611202851) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('saved value', 7.518129388797149) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -5.483905838719078) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -3.3943512696889053) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('saved value', 6.605648730311095) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -2.488441485909039) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('saved value', 7.511558514090961) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3.0) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -6.738695276896468) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('saved value', 3.2613047231035317) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('node_pair', (0, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 4)) ,
('instance/attribute match', 0.5160941612809214) ,
('node_pair', (2, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 1)) ,
('instance/attribute match', 0.5181293887971494) ,
('match computing complete, result:', 1.034223550078071) ,
('Node mapping at start', [3, 4, 0, 2, 1, -1, -1]) ,
('Triple match number at start:', 1.034223550078071) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 4) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 3) ,
('Swap gain:', -0.5160941612809214) ,
([4, 3, 0, 2, 1, -1, -1],) ,
('Computing match for mapping',) ,
([4, 3, 0, 2, 1, -1, -1],) ,
('saved value', 0.5181293887971495) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 0) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 4, 3, 2, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 4, 3, 2, 1, -1, -1],) ,
('saved value', 1.034223550078071) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 2) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', 0.0) ,
([2, 4, 0, 3, 1, -1, -1],) ,
('Computing match for mapping',) ,
([2, 4, 0, 3, 1, -1, -1],) ,
('saved value', 1.034223550078071) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 1) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', -0.5181293887971494) ,
([1, 4, 0, 2, 3, -1, -1],) ,
('Computing match for mapping',) ,
([1, 4, 0, 2, 3, -1, -1],) ,
('saved value', 0.5160941612809216) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', -1) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', 4.0) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('saved value', 5.034223550078071) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 3, ',', 6, '-', -1) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', 0.6306523615517657) ,
([-1, 4, 0, 2, 1, -1, 3],) ,
('Computing match for mapping',) ,
([-1, 4, 0, 2, 1, -1, 3],) ,
('saved value', 1.6648759116298368) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 0) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 4) ,
('Swap gain:', -0.5160941612809214) ,
([3, 0, 4, 2, 1, -1, -1],) ,
('Computing match for mapping',) ,
([3, 0, 4, 2, 1, -1, -1],) ,
('saved value', 0.5181293887971495) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 2) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -0.004535647189961134) ,
([3, 2, 0, 4, 1, -1, -1],) ,
('Computing match for mapping',) ,
([3, 2, 0, 4, 1, -1, -1],) ,
('saved value', 1.0296879028881099) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 1) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 4) ,
('Swap gain:', -1.034223550078071) ,
([3, 1, 0, 2, 4, -1, -1],) ,
('Computing match for mapping',) ,
([3, 1, 0, 2, 4, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 4, ',', 5, '-', -1) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 0.11455820027084429) ,
([3, -1, 0, 2, 1, 4, -1],) ,
('Computing match for mapping',) ,
([3, -1, 0, 2, 1, 4, -1],) ,
('saved value', 1.1487817503489153) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 4, ',', 6, '-', -1) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', 1.4839058387190787) ,
([3, -1, 0, 2, 1, -1, 4],) ,
('Computing match for mapping',) ,
([3, -1, 0, 2, 1, -1, 4],) ,
('saved value', 2.5181293887971496) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 2) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 4, 2, 0, 1, -1, -1],) ,
('Computing match for mapping',) ,
([3, 4, 2, 0, 1, -1, -1],) ,
('saved value', 1.034223550078071) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 1) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -0.5181293887971494) ,
([3, 4, 1, 2, 0, -1, -1],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 0, -1, -1],) ,
('saved value', 0.5160941612809216) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', -1) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 4, -1, 2, 1, 0, -1],) ,
('Computing match for mapping',) ,
([3, 4, -1, 2, 1, 0, -1],) ,
('saved value', 1.034223550078071) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', -1) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 4, -1, 2, 1, -1, 0],) ,
('Computing match for mapping',) ,
([3, 4, -1, 2, 1, -1, 0],) ,
('saved value', 1.034223550078071) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 1) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -0.5181293887971494) ,
([3, 4, 0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([3, 4, 0, 1, 2, -1, -1],) ,
('saved value', 0.5160941612809216) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', -1) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 4, 0, -1, 1, 2, -1],) ,
('Computing match for mapping',) ,
([3, 4, 0, -1, 1, 2, -1],) ,
('saved value', 1.034223550078071) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', -1) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', 0.6056487303110948) ,
([3, 4, 0, -1, 1, -1, 2],) ,
('Computing match for mapping',) ,
([3, 4, 0, -1, 1, -1, 2],) ,
('saved value', 1.6398722803891657) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', -1) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', -0.5181293887971494) ,
([3, 4, 0, 2, -1, 1, -1],) ,
('Computing match for mapping',) ,
([3, 4, 0, 2, -1, 1, -1],) ,
('saved value', 0.5160941612809216) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', -1) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -0.5181293887971494) ,
([3, 4, 0, 2, -1, -1, 1],) ,
('Computing match for mapping',) ,
([3, 4, 0, 2, -1, -1, 1],) ,
('saved value', 0.5160941612809216) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', -1) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', -1) ,
('Swap gain:', 0.0) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('Computing match for mapping',) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('saved value', 1.034223550078071) ,
('Use swap gain',) ,
('Original mapping', [3, 4, 0, 2, 1, -1, -1]) ,
('Current mapping', [-1, 4, 0, 2, 1, 3, -1]) ,
('Gain after the hill-climbing', 4.0) ,
('Update triple match number to:', 5.034223550078071) ,
('Current mapping:', [-1, 4, 0, 2, 1, 3, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', -1, ',', 1, '-', 4) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', -1) ,
('Swap gain:', -0.5160941612809214) ,
([4, -1, 0, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([4, -1, 0, 2, 1, 3, -1],) ,
('saved value', 4.518129388797149) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', -1, ',', 2, '-', 0) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 4, -1, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 4, -1, 2, 1, 3, -1],) ,
('saved value', 5.034223550078071) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', -1, ',', 3, '-', 2) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([2, 4, 0, -1, 1, 3, -1],) ,
('Computing match for mapping',) ,
([2, 4, 0, -1, 1, 3, -1],) ,
('saved value', 5.034223550078071) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', -1, ',', 4, '-', 1) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', -1) ,
('Swap gain:', -0.5181293887971494) ,
([1, 4, 0, 2, -1, 3, -1],) ,
('Computing match for mapping',) ,
([1, 4, 0, 2, -1, 3, -1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', -1, ',', 5, '-', 3) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -4.0) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('Computing match for mapping',) ,
([3, 4, 0, 2, 1, -1, -1],) ,
('saved value', 1.034223550078071) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', -1, ',', 6, '-', -1) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', -1) ,
('Swap gain:', 0.0) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('saved value', 5.034223550078071) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 0) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 4) ,
('Swap gain:', -0.5160941612809214) ,
([-1, 0, 4, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([-1, 0, 4, 2, 1, 3, -1],) ,
('saved value', 4.518129388797149) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 2) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 4) ,
('Swap gain:', -0.004535647189961134) ,
([-1, 2, 0, 4, 1, 3, -1],) ,
('Computing match for mapping',) ,
([-1, 2, 0, 4, 1, 3, -1],) ,
('saved value', 5.02968790288811) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 1) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 4) ,
('Swap gain:', -0.034223550078070875) ,
([-1, 1, 0, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2, 4, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 4, ',', 5, '-', 3) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -3.885441799729156) ,
([-1, 3, 0, 2, 1, 4, -1],) ,
('Computing match for mapping',) ,
([-1, 3, 0, 2, 1, 4, -1],) ,
('saved value', 1.148781750348915) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 4, ',', 6, '-', -1) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', 1.4839058387190787) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('saved value', 6.518129388797149) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 2) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([-1, 4, 2, 0, 1, 3, -1],) ,
('Computing match for mapping',) ,
([-1, 4, 2, 0, 1, 3, -1],) ,
('saved value', 5.034223550078071) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 1) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -0.5181293887971494) ,
([-1, 4, 1, 2, 0, 3, -1],) ,
('Computing match for mapping',) ,
([-1, 4, 1, 2, 0, 3, -1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 3) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 4, 3, 2, 1, 0, -1],) ,
('Computing match for mapping',) ,
([-1, 4, 3, 2, 1, 0, -1],) ,
('saved value', 1.034223550078071) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', -1) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([-1, 4, -1, 2, 1, 3, 0],) ,
('Computing match for mapping',) ,
([-1, 4, -1, 2, 1, 3, 0],) ,
('saved value', 5.034223550078071) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 1) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -0.5181293887971494) ,
([-1, 4, 0, 1, 2, 3, -1],) ,
('Computing match for mapping',) ,
([-1, 4, 0, 1, 2, 3, -1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -4.0) ,
([-1, 4, 0, 3, 1, 2, -1],) ,
('Computing match for mapping',) ,
([-1, 4, 0, 3, 1, 2, -1],) ,
('saved value', 1.034223550078071) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', -1) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', 0.6056487303110948) ,
([-1, 4, 0, -1, 1, 3, 2],) ,
('Computing match for mapping',) ,
([-1, 4, 0, -1, 1, 3, 2],) ,
('saved value', 5.639872280389166) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 3) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -4.518129388797149) ,
([-1, 4, 0, 2, 3, 1, -1],) ,
('Computing match for mapping',) ,
([-1, 4, 0, 2, 3, 1, -1],) ,
('saved value', 0.5160941612809218) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', -1) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -0.5181293887971494) ,
([-1, 4, 0, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([-1, 4, 0, 2, -1, 3, 1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', -1) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -3.369347638448234) ,
([-1, 4, 0, 2, 1, -1, 3],) ,
('Computing match for mapping',) ,
([-1, 4, 0, 2, 1, -1, 3],) ,
('saved value', 1.6648759116298368) ,
('Use swap gain',) ,
('Original mapping', [-1, 4, 0, 2, 1, 3, -1]) ,
('Current mapping', [-1, -1, 0, 2, 1, 3, 4]) ,
('Gain after the hill-climbing', 1.4839058387190787) ,
('Update triple match number to:', 6.518129388797149) ,
('Current mapping:', [-1, -1, 0, 2, 1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', -1, ',', 1, '-', -1) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', -1) ,
('Swap gain:', 0.0) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('saved value', 6.518129388797149) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', -1, ',', 2, '-', 0) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', -1) ,
('Swap gain:', 1.0) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('saved value', 7.518129388797149) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', -1, ',', 3, '-', 2) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([2, -1, 0, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([2, -1, 0, -1, 1, 3, 4],) ,
('saved value', 6.518129388797149) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', -1, ',', 4, '-', 1) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', -1) ,
('Swap gain:', -0.5181293887971494) ,
([1, -1, 0, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, -1, 0, 2, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', -1, ',', 5, '-', 3) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -3.9999999999999996) ,
([3, -1, 0, 2, 1, -1, 4],) ,
('Computing match for mapping',) ,
([3, -1, 0, 2, 1, -1, 4],) ,
('saved value', 2.5181293887971496) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', -1, ',', 6, '-', 4) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -2.0) ,
([4, -1, 0, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([4, -1, 0, 2, 1, 3, -1],) ,
('saved value', 4.518129388797149) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', 0) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', -1) ,
('Swap gain:', 0.0) ,
([-1, 0, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 0, -1, 2, 1, 3, 4],) ,
('saved value', 6.518129388797149) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', -1, ',', 3, '-', 2) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([-1, 2, 0, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 2, 0, -1, 1, 3, 4],) ,
('saved value', 6.518129388797149) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', -1, ',', 4, '-', 1) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', -1) ,
('Swap gain:', 0.4818706112028508) ,
([-1, 1, 0, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', -1, ',', 5, '-', 3) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -4.0) ,
([-1, 3, 0, 2, 1, -1, 4],) ,
('Computing match for mapping',) ,
([-1, 3, 0, 2, 1, -1, 4],) ,
('saved value', 2.518129388797149) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', -1, ',', 6, '-', 4) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -1.4839058387190782) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([-1, 4, 0, 2, 1, 3, -1],) ,
('saved value', 5.034223550078071) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', 2) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([-1, -1, 2, 0, 1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, -1, 2, 0, 1, 3, 4],) ,
('saved value', 6.518129388797149) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', 1) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -0.5181293887971494) ,
([-1, -1, 1, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, -1, 1, 2, 0, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 0, ',', 5, '-', 3) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, -1, 3, 2, 1, 0, 4],) ,
('Computing match for mapping',) ,
([-1, -1, 3, 2, 1, 0, 4],) ,
('saved value', 2.518129388797149) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 0, ',', 6, '-', 4) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, -1, 4, 2, 1, 3, 0],) ,
('Computing match for mapping',) ,
([-1, -1, 4, 2, 1, 3, 0],) ,
('saved value', 4.518129388797149) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 1) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -0.5181293887971492) ,
([-1, -1, 0, 1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([-1, -1, 0, 1, 2, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -4.0) ,
([-1, -1, 0, 3, 1, 2, 4],) ,
('Computing match for mapping',) ,
([-1, -1, 0, 3, 1, 2, 4],) ,
('saved value', 2.518129388797149) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 4) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -0.8827927555979449) ,
([-1, -1, 0, 4, 1, 3, 2],) ,
('Computing match for mapping',) ,
([-1, -1, 0, 4, 1, 3, 2],) ,
('saved value', 5.635336633199204) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 3) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -4.518129388797149) ,
([-1, -1, 0, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([-1, -1, 0, 2, 3, 1, 4],) ,
('saved value', 2.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 4) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -2.518129388797149) ,
([-1, -1, 0, 2, 4, 3, 1],) ,
('Computing match for mapping',) ,
([-1, -1, 0, 2, 4, 3, 1],) ,
('saved value', 4.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -4.738695276896468) ,
([-1, -1, 0, 2, 1, 4, 3],) ,
('Computing match for mapping',) ,
([-1, -1, 0, 2, 1, 4, 3],) ,
('saved value', 1.779434111900681) ,
('Use swap gain',) ,
('Original mapping', [-1, -1, 0, 2, 1, 3, 4]) ,
('Current mapping', [0, -1, -1, 2, 1, 3, 4]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 7.518129388797149) ,
('Current mapping:', [0, -1, -1, 2, 1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', -1) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, 0, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 0, -1, 2, 1, 3, 4],) ,
('saved value', 6.518129388797149) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, -1, 0, 2, 1, 3, 4],) ,
('saved value', 6.518129388797149) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.0) ,
([2, -1, -1, 0, 1, 3, 4],) ,
('Computing match for mapping',) ,
([2, -1, -1, 0, 1, 3, 4],) ,
('saved value', 6.518129388797149) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -1.5181293887971494) ,
([1, -1, -1, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([1, -1, -1, 2, 0, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([3, -1, -1, 2, 1, 0, 4],) ,
('Computing match for mapping',) ,
([3, -1, -1, 2, 1, 0, 4],) ,
('saved value', 2.518129388797149) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -3.0) ,
([4, -1, -1, 2, 1, 3, 0],) ,
('Computing match for mapping',) ,
([4, -1, -1, 2, 1, 3, 0],) ,
('saved value', 4.518129388797149) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', -1) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', -1) ,
('Swap gain:', 0.0) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('saved value', 7.518129388797149) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', -1, ',', 3, '-', 2) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 2, -1, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, -1, -1, 1, 3, 4],) ,
('saved value', 7.518129388797149) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', -1, ',', 4, '-', 1) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', -1) ,
('Swap gain:', 1.4818706112028508) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', -1, ',', 5, '-', 3) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -4.0) ,
([0, 3, -1, 2, 1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 3, -1, 2, 1, -1, 4],) ,
('saved value', 3.518129388797149) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', -1, ',', 6, '-', 4) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -2.483905838719078) ,
([0, 4, -1, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 4, -1, 2, 1, 3, -1],) ,
('saved value', 5.034223550078071) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('saved value', 7.518129388797149) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 1) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', -1) ,
('Swap gain:', -0.5181293887971494) ,
([0, -1, 1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', -1, ',', 5, '-', 3) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -4.0) ,
([0, -1, 3, 2, 1, -1, 4],) ,
('Computing match for mapping',) ,
([0, -1, 3, 2, 1, -1, 4],) ,
('saved value', 3.518129388797149) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', -1, ',', 6, '-', 4) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3.0) ,
([0, -1, 4, 2, 1, 3, -1],) ,
('Computing match for mapping',) ,
([0, -1, 4, 2, 1, 3, -1],) ,
('saved value', 4.518129388797149) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', 1) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -0.5181293887971492) ,
([0, -1, -1, 1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1, 2, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -4.0) ,
([0, -1, -1, 3, 1, 2, 4],) ,
('Computing match for mapping',) ,
([0, -1, -1, 3, 1, 2, 4],) ,
('saved value', 3.518129388797149) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 4) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -1.882792755597945) ,
([0, -1, -1, 4, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, -1, -1, 4, 1, 3, 2],) ,
('saved value', 5.635336633199204) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 3) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -4.518129388797149) ,
([0, -1, -1, 2, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, -1, -1, 2, 3, 1, 4],) ,
('saved value', 3.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 4) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -3.518129388797149) ,
([0, -1, -1, 2, 4, 3, 1],) ,
('Computing match for mapping',) ,
([0, -1, -1, 2, 4, 3, 1],) ,
('saved value', 4.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -5.738695276896468) ,
([0, -1, -1, 2, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, -1, -1, 2, 1, 4, 3],) ,
('saved value', 1.779434111900681) ,
('Use swap gain',) ,
('Original mapping', [0, -1, -1, 2, 1, 3, 4]) ,
('Current mapping', [0, 1, -1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 1.4818706112028508) ,
('Update triple match number to:', 9.0) ,
('Current mapping:', [0, 1, -1, 2, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 0, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 0, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, -1, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 2, 0, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, -1, 2, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, -1, 2, -1, 0, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, -1, 2, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, -1, 2, -1, 3, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, -1, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -1.4818706112028508) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('saved value', 7.518129388797149) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, -1, 2, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, -1, 2, -1, 1, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -4.483905838719078) ,
([0, 4, -1, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, -1, 2, -1, 3, 1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', 1.0) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', -1, ',', 5, '-', 3) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, -1, -1, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', -1, ',', 6, '-', 4) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 2, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, -1, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, -1, 3, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, -1, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 4) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -1.8827927555979445) ,
([0, 1, -1, 4, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, -1, 3, 2],) ,
('saved value', 7.1172072444020555) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', -1, ',', 5, '-', 3) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, -1, 2, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, -1, 4],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', -1, ',', 6, '-', 4) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3.0) ,
([0, 1, -1, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 4, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -6.738695276896468) ,
([0, 1, -1, 2, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 4, 3],) ,
('saved value', 2.2613047231035317) ,
('Use swap gain',) ,
('Original mapping', [0, 1, -1, 2, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 10.0) ,
('Current mapping:', [0, 1, 2, -1, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -2.481870611202851) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('saved value', 7.518129388797149) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -5.483905838719078) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -3.3943512696889053) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('saved value', 6.605648730311095) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -2.488441485909039) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('saved value', 7.511558514090961) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3.0) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -6.738695276896468) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('saved value', 3.2613047231035317) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [2, 1, 3, 0, 4, -1, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 2, 3, 0, 4, -1, -1],) ,
('Computing match for mapping',) ,
([1, 2, 3, 0, 4, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 3) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([3, 1, 2, 0, 4, -1, -1],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0, 4, -1, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 0) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 1, 3, 2, 4, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, 4, -1, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 4) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 1, 3, 0, 2, -1, -1],) ,
('Computing match for mapping',) ,
([4, 1, 3, 0, 2, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', -1) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([-1, 1, 3, 0, 4, 2, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 3, 0, 4, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', -1) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', 0.6056487303110948) ,
([-1, 1, 3, 0, 4, -1, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 3, 0, 4, -1, 2],) ,
('saved value', 0.6056487303110948) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([2, 3, 1, 0, 4, -1, -1],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0, 4, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 0) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([2, 0, 3, 1, 4, -1, -1],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1, 4, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', 1.034223550078071) ,
([2, 4, 3, 0, 1, -1, -1],) ,
('Computing match for mapping',) ,
([2, 4, 3, 0, 1, -1, -1],) ,
('saved value', 1.034223550078071) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', -1) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 5, '-', 1) ,
('Swap gain:', 0.0) ,
([2, -1, 3, 0, 4, 1, -1],) ,
('Computing match for mapping',) ,
([2, -1, 3, 0, 4, 1, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', 0.0) ,
([2, -1, 3, 0, 4, -1, 1],) ,
('Computing match for mapping',) ,
([2, -1, 3, 0, 4, -1, 1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 3, ',', 3, '-', 0) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', 0.0) ,
([2, 1, 0, 3, 4, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3, 4, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 3, ',', 4, '-', 4) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([2, 1, 4, 0, 3, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 4, 0, 3, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 3, ',', 5, '-', -1) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 5, '-', 3) ,
('Swap gain:', 5.0) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 3, ',', 6, '-', -1) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', 0.6306523615517657) ,
([2, 1, -1, 0, 4, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0, 4, -1, 3],) ,
('saved value', 0.6306523615517657) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', 4) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', 0.5115585140909603) ,
([2, 1, 3, 4, 0, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 3, 4, 0, -1, -1],) ,
('saved value', 0.5115585140909603) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 0, ',', 5, '-', -1) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 1, 3, -1, 4, 0, -1],) ,
('Computing match for mapping',) ,
([2, 1, 3, -1, 4, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 0, ',', 6, '-', -1) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 1, 3, -1, 4, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 3, -1, 4, -1, 0],) ,
('saved value', 0.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', -1) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 5, '-', 4) ,
('Swap gain:', 0.6306523615517657) ,
([2, 1, 3, 0, -1, 4, -1],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0, -1, 4, -1],) ,
('saved value', 0.6306523615517657) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', -1) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', 2.0) ,
([2, 1, 3, 0, -1, -1, 4],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0, -1, -1, 4],) ,
('saved value', 2.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', -1, ',', 6, '-', -1) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', -1) ,
('Swap gain:', 0.0) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [2, 1, 3, 0, 4, -1, -1]) ,
('Current mapping', [2, 1, -1, 0, 4, 3, -1]) ,
('Gain after the hill-climbing', 5.0) ,
('Update triple match number to:', 5.0) ,
('Current mapping:', [2, 1, -1, 0, 4, 3, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -1.0) ,
([1, 2, -1, 0, 4, 3, -1],) ,
('Computing match for mapping',) ,
([1, 2, -1, 0, 4, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', -1) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([-1, 1, 2, 0, 4, 3, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, 4, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 0) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 1, -1, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 4, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 4) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 1, -1, 0, 2, 3, -1],) ,
('Computing match for mapping',) ,
([4, 1, -1, 0, 2, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 3) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([3, 1, -1, 0, 4, 2, -1],) ,
('Computing match for mapping',) ,
([3, 1, -1, 0, 4, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', -1) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 0, '-', -1, ',', 6, '-', 2) ,
('Swap gain:', 0.6056487303110948) ,
([-1, 1, -1, 0, 4, 3, 2],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0, 4, 3, 2],) ,
('saved value', 5.605648730311095) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([2, -1, 1, 0, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, -1, 1, 0, 4, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 0) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([2, 0, -1, 1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, 0, -1, 1, 4, 3, -1],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', 0.034223550078070986) ,
([2, 4, -1, 0, 1, 3, -1],) ,
('Computing match for mapping',) ,
([2, 4, -1, 0, 1, 3, -1],) ,
('saved value', 5.034223550078071) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([2, 3, -1, 0, 4, 1, -1],) ,
('Computing match for mapping',) ,
([2, 3, -1, 0, 4, 1, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', -1) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 1, '-', -1, ',', 6, '-', 1) ,
('Swap gain:', -1.0) ,
([2, -1, -1, 0, 4, 3, 1],) ,
('Computing match for mapping',) ,
([2, -1, -1, 0, 4, 3, 1],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 0) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([2, 1, 0, -1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, 4, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 4) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([2, 1, 4, 0, -1, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 4, 0, -1, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', -1, ',', 5, '-', 3) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0, 4, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', -1, ',', 6, '-', -1) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 2, '-', -1, ',', 6, '-', -1) ,
('Swap gain:', 0.0) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', 4) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', 0.51155851409096) ,
([2, 1, -1, 4, 0, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, -1, 4, 0, 3, -1],) ,
('saved value', 5.51155851409096) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 0, ',', 5, '-', 3) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, -1, 3, 4, 0, -1],) ,
('Computing match for mapping',) ,
([2, 1, -1, 3, 4, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 0, ',', 6, '-', -1) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 3, '-', -1, ',', 6, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 1, -1, -1, 4, 3, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, -1, 4, 3, 0],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -4.369347638448234) ,
([2, 1, -1, 0, 3, 4, -1],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0, 3, 4, -1],) ,
('saved value', 0.6306523615517658) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 4, ',', 6, '-', -1) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 4, '-', -1, ',', 6, '-', 4) ,
('Swap gain:', 2.0) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', -1) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('After swapping:', 5, '-', -1, ',', 6, '-', 3) ,
('Swap gain:', -4.369347638448234) ,
([2, 1, -1, 0, 4, -1, 3],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0, 4, -1, 3],) ,
('saved value', 0.6306523615517657) ,
('Use swap gain',) ,
('Original mapping', [2, 1, -1, 0, 4, 3, -1]) ,
('Current mapping', [2, 1, -1, 0, -1, 3, 4]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 7.0) ,
('Current mapping:', [2, 1, -1, 0, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -1.0) ,
([1, 2, -1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 2, -1, 0, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', -1) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 0) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', 2.0) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', -1) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([-1, 1, -1, 0, 2, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0, 2, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 3) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([3, 1, -1, 0, -1, 2, 4],) ,
('Computing match for mapping',) ,
([3, 1, -1, 0, -1, 2, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 4) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -1.3943512696889053) ,
([4, 1, -1, 0, -1, 3, 2],) ,
('Computing match for mapping',) ,
([4, 1, -1, 0, -1, 3, 2],) ,
('saved value', 5.605648730311095) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([2, -1, 1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, -1, 1, 0, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 0) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([2, 0, -1, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 0, -1, 1, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -0.4818706112028508) ,
([2, -1, -1, 0, 1, 3, 4],) ,
('Computing match for mapping',) ,
([2, -1, -1, 0, 1, 3, 4],) ,
('saved value', 6.518129388797149) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -5.0) ,
([2, 3, -1, 0, -1, 1, 4],) ,
('Computing match for mapping',) ,
([2, 3, -1, 0, -1, 1, 4],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -2.4839058387190787) ,
([2, 4, -1, 0, -1, 3, 1],) ,
('Computing match for mapping',) ,
([2, 4, -1, 0, -1, 3, 1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 0) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', -1) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', -1, ',', 5, '-', 3) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([2, 1, 3, 0, -1, -1, 4],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0, -1, -1, 4],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', -1, ',', 6, '-', 4) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -2.0) ,
([2, 1, 4, 0, -1, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, 4, 0, -1, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', -1) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 1, -1, -1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, -1, -1, 0, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 0, ',', 5, '-', 3) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, -1, 3, -1, 0, 4],) ,
('Computing match for mapping',) ,
([2, 1, -1, 3, -1, 0, 4],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 0, ',', 6, '-', 4) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -1.48844148590904) ,
([2, 1, -1, 4, -1, 3, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 4, -1, 3, 0],) ,
('saved value', 5.51155851409096) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', -1, ',', 5, '-', 3) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([2, 1, -1, 0, 3, -1, 4],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0, 3, -1, 4],) ,
('saved value', 2.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', -1, ',', 6, '-', 4) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -2.0) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0, 4, 3, -1],) ,
('saved value', 5.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -5.738695276896468) ,
([2, 1, -1, 0, -1, 4, 3],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0, -1, 4, 3],) ,
('saved value', 1.2613047231035317) ,
('Use swap gain',) ,
('Original mapping', [2, 1, -1, 0, -1, 3, 4]) ,
('Current mapping', [0, 1, -1, 2, -1, 3, 4]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 9.0) ,
('Current mapping:', [0, 1, -1, 2, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 0, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 0, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, -1, 2, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 2, 0, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, -1, 2, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, -1, 2, -1, 0, 4],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, -1, 2, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, -1, 2, -1, 3, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, -1, 1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 2, -1, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -1.4818706112028508) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, -1, 2, 1, 3, 4],) ,
('saved value', 7.518129388797149) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -6.0) ,
([0, 3, -1, 2, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, -1, 2, -1, 1, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -4.483905838719078) ,
([0, 4, -1, 2, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, -1, 2, -1, 3, 1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', 1.0) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', -1, ',', 5, '-', 3) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, 3, 2, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2, -1, -1, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', -1, ',', 6, '-', 4) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3.0) ,
([0, 1, 4, 2, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, -1, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 2, ',', 4, '-', -1) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 2, ',', 5, '-', 3) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 1, -1, 3, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 3, -1, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 2, ',', 6, '-', 4) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -1.8827927555979445) ,
([0, 1, -1, 4, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 4, -1, 3, 2],) ,
('saved value', 7.1172072444020555) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', -1, ',', 5, '-', 3) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, -1, 2, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 3, -1, 4],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', -1, ',', 6, '-', 4) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3.0) ,
([0, 1, -1, 2, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, 4, 3, -1],) ,
('saved value', 6.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -6.738695276896468) ,
([0, 1, -1, 2, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 4, 3],) ,
('saved value', 2.2613047231035317) ,
('Use swap gain',) ,
('Original mapping', [0, 1, -1, 2, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 10.0) ,
('Current mapping:', [0, 1, 2, -1, -1, 3, 4]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1, 3, 4],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, -1, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('Computing match for mapping',) ,
([-1, 1, 2, -1, 0, 3, 4],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -7.0) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('Computing match for mapping',) ,
([3, 1, 2, -1, -1, 0, 4],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('Computing match for mapping',) ,
([4, 1, 2, -1, -1, 3, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, -1, 3, 4],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -2.481870611202851) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('Computing match for mapping',) ,
([0, -1, 2, -1, 1, 3, 4],) ,
('saved value', 7.518129388797149) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -7.0) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, -1, -1, 1, 4],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -5.483905838719078) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, -1, -1, 3, 1],) ,
('saved value', 4.516094161280922) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2, 3, 4],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 3, -1, -1, 2, 4],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -3.3943512696889053) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, -1, -1, 3, 2],) ,
('saved value', 6.605648730311095) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, -1, -1, 4],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -2.488441485909039) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, -1, 3, -1],) ,
('saved value', 7.511558514090961) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', -1, ',', 5, '-', 3) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', -1) ,
('Swap gain:', -5.0) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 3, -1, 4],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', -1, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', -1) ,
('Swap gain:', -3.0) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, 4, 3, -1],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 4) ,
([0, 1, 2, -1, -1, 3, 4],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', -6.738695276896468) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1, 4, 3],) ,
('saved value', 3.2613047231035317) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Current mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 10.0) ,
('best node mapping', [0, 1, 2, -1, -1, 3, 4]) ,
('Best node mapping alignment:', 'a0(out-05)-b0(release-01) a1(event)-b1(film) a2(chapter)-b2(ordinal-entity) a3(final)-Null a4(trilogy)-Null a5(name)-b3(name) a6(date-entity)-b4(date-entity)') ,
('F-score:', 0.606060606060606) ,
Smatch score F1 0.606
('AMR pair', 16) ,
('============================================',) ,
('AMR 1 (one-line):', '(r0 / rise-01:ARG1 (s0 / stock):ARG2 (m0 / monetary-quantity:quant 44:unit (c0 / cent)):time (d0 / day:mod (r1 / recent)))') ,
('AMR 2 (one-line):', '(r0 / rise-01:ARG1 (s0 / stock):ARG2 (s1 / session:mod (t0 / trade-01):time (b0 / before:op1 (n0 / now))):ARG2 (m0 / monetary-quantity:quant 4:unit (c0 / cent)))') ,
('Instance triples of AMR 1:', 6) ,
([('instance', 'a0', 'rise-01'), ('instance', 'a1', 'stock'), ('instance', 'a2', 'monetary-quantity'), ('instance', 'a3', 'cent'), ('instance', 'a4', 'day'), ('instance', 'a5', 'recent')],) ,
('Attribute triples of AMR 1:', 2) ,
([('TOP', 'a0', 'rise-01'), ('quant', 'a2', '44')],) ,
('Relation triples of AMR 1:', 5) ,
([('ARG1', 'a0', 'a1'), ('ARG2', 'a0', 'a2'), ('time', 'a0', 'a4'), ('unit', 'a2', 'a3'), ('mod', 'a4', 'a5')],) ,
('Instance triples of AMR 2:', 8) ,
([('instance', 'b0', 'rise-01'), ('instance', 'b1', 'stock'), ('instance', 'b2', 'session'), ('instance', 'b3', 'trade-01'), ('instance', 'b4', 'before'), ('instance', 'b5', 'now'), ('instance', 'b6', 'monetary-quantity'), ('instance', 'b7', 'cent')],) ,
('Attribute triples of AMR 2:', 2) ,
([('TOP', 'b0', 'rise-01'), ('quant', 'b6', '4')],) ,
('Relation triples of AMR 2:', 7) ,
([('ARG1', 'b0', 'b1'), ('ARG2', 'b0', 'b2'), ('ARG2', 'b0', 'b6'), ('mod', 'b2', 'b3'), ('time', 'b2', 'b4'), ('op1', 'b4', 'b5'), ('unit', 'b6', 'b7')],) ,
('Similarity', 'rise-01', 'rise-01', 1.0) ,
('Similarity', 'rise-01', 'stock', 0.289717645473795) ,
('Similarity', 'rise-01', 'session', 0.0) ,
('Similarity', 'rise-01', 'trade-01', 0.0) ,
('Similarity', 'rise-01', 'before', 0.0) ,
('Similarity', 'rise-01', 'now', 0.0) ,
('Similarity', 'rise-01', 'monetary-quantity', 0.0) ,
('Similarity', 'rise-01', 'cent', 0.0) ,
('Similarity', 'stock', 'stock', 1.0) ,
('Similarity', 'stock', 'session', 0.0) ,
('Similarity', 'stock', 'trade-01', 0.31363207184755604) ,
('Similarity', 'stock', 'before', 0.0) ,
('Similarity', 'stock', 'now', 0.0) ,
('Similarity', 'stock', 'monetary-quantity', 0.0) ,
('Similarity', 'stock', 'cent', 0.0) ,
('Similarity', 'monetary-quantity', 'session', 0.0) ,
('Similarity', 'monetary-quantity', 'trade-01', 0.0) ,
('Similarity', 'monetary-quantity', 'before', 0.0) ,
('Similarity', 'monetary-quantity', 'now', 0.0) ,
('Similarity', 'monetary-quantity', 'monetary-quantity', 1.0) ,
('Similarity', 'monetary-quantity', 'cent', 0.0) ,
('Similarity', 'cent', 'session', 0.0) ,
('Similarity', 'cent', 'trade-01', 0.0) ,
('Similarity', 'cent', 'before', 0.0) ,
('Similarity', 'cent', 'now', 0.0) ,
('Similarity', 'cent', 'cent', 1.0) ,
('Similarity', 'day', 'rise-01', 0.0) ,
('Similarity', 'day', 'stock', 0.0) ,
('Similarity', 'day', 'session', 0.6844726603886337) ,
('Similarity', 'day', 'trade-01', 0.0) ,
('Similarity', 'day', 'before', 0.807483334805497) ,
('Similarity', 'day', 'now', 0.6973950329665515) ,
('Similarity', 'day', 'monetary-quantity', 0.0) ,
('Similarity', 'day', 'cent', 0.0) ,
('Similarity', 'recent', 'rise-01', 0.0) ,
('Similarity', 'recent', 'stock', 0.5495531630219287) ,
('Similarity', 'recent', 'session', 0.0) ,
('Similarity', 'recent', 'trade-01', 0.0) ,
('Similarity', 'recent', 'before', 0.6202710499511404) ,
('Similarity', 'recent', 'now', 0.6316692534914087) ,
('Similarity', 'recent', 'monetary-quantity', 0.0) ,
('Similarity', 'recent', 'cent', 0.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2.0, (1, 1): 1, (2, 2): 1, (2, 6): 1}, (0, 1): {-1: 0.289717645473795}, (0, 2): {-1: 0.0, (4, 4): 1}, (0, 3): {-1: 0.0}, (0, 4): {-1: 0.0}, (0, 5): {-1: 0.0}, (0, 6): {-1: 0.0}, (0, 7): {-1: 0.0}, (1, 0): {-1: 0.289717645473795}, (1, 1): {-1: 1.0, (0, 0): 1}, (1, 2): {-1: 0.0}, (1, 3): {-1: 0.31363207184755604}, (1, 4): {-1: 0.0}, (1, 5): {-1: 0.0}, (1, 6): {-1: 0.0}, (1, 7): {-1: 0.0}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.0}, (2, 2): {-1: 0.0, (0, 0): 1}, (2, 3): {-1: 0.0}, (2, 4): {-1: 0.0}, (2, 5): {-1: 0.0}, (2, 6): {-1: 1.0, (0, 0): 1, (3, 7): 1}, (2, 7): {-1: 0.0}, (3, 0): {-1: 0.0}, (3, 1): {-1: 0.0}, (3, 2): {-1: 0.0}, (3, 3): {-1: 0.0}, (3, 4): {-1: 0.0}, (3, 5): {-1: 0.0}, (3, 6): {-1: 0.0}, (3, 7): {-1: 1.0, (2, 6): 1}, (4, 0): {-1: 0.0}, (4, 1): {-1: 0.0}, (4, 2): {-1: 0.6844726603886337, (5, 3): 1}, (4, 3): {-1: 0.0}, (4, 4): {-1: 0.807483334805497, (0, 2): 1}, (4, 5): {-1: 0.6973950329665515}, (4, 6): {-1: 0.0}, (4, 7): {-1: 0.0}, (5, 0): {-1: 0.0}, (5, 1): {-1: 0.5495531630219287}, (5, 2): {-1: 0.0}, (5, 3): {-1: 0.0, (4, 2): 1}, (5, 4): {-1: 0.6202710499511404}, (5, 5): {-1: 0.6316692534914087}, (5, 6): {-1: 0.0}, (5, 7): {-1: 0.0}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 2],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2.0) ,
('relation match with', (1, 1), 1) ,
('relation match with', (2, 6), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('node_pair', (2, 6)) ,
('instance/attribute match', 1.0) ,
('relation match with', (3, 7), 1) ,
('node_pair', (3, 7)) ,
('instance/attribute match', 1.0) ,
('node_pair', (4, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 2)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 8.0) ,
('Node mapping at start', [0, 1, 6, 7, 3, 2]) ,
('Triple match number at start:', 8.0) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 3, 2],) ,
('saved value', 4.0) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([5, 1, 6, 7, 3, 2],) ,
('saved value', 4.0) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 3, 2],) ,
('saved value', 6.0) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 3, 2],) ,
('saved value', 6.0) ,
('Remap node', 2, 'from ', 6, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 3, 2],) ,
('saved value', 5.0) ,
('Remap node', 2, 'from ', 6, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 3, 2],) ,
('saved value', 5.0) ,
('Remap node', 3, 'from ', 7, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 3, 2],) ,
('saved value', 6.0) ,
('Remap node', 3, 'from ', 7, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 3, 2],) ,
('saved value', 6.0) ,
('Remap node', 4, 'from ', 3, 'to', 4) ,
('Move gain:', 0.807483334805497) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 2],) ,
('saved value', 8.807483334805497) ,
('Remap node', 4, 'from ', 3, 'to', 5) ,
('Move gain:', 0.6973950329665515) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 2],) ,
('saved value', 8.69739503296655) ,
('Remap node', 5, 'from ', 2, 'to', 4) ,
('Move gain:', 0.6202710499511404) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 4],) ,
('saved value', 8.62027104995114) ,
('Remap node', 5, 'from ', 2, 'to', 5) ,
('Move gain:', 0.6316692534914087) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 5],) ,
('saved value', 8.631669253491408) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 3, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.42056470905241) ,
([1, 0, 6, 7, 3, 2],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 3, 2],) ,
('saved value', 3.5794352909475897) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 3, 2],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 0, 7, 3, 2],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 3, 2],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 3, 2],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([7, 1, 6, 0, 3, 2],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 3, 2],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 6, 7, 3, 2],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 6, 7, 0, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 0, 2],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 6, 7, 3, 2],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 6, 7, 3, 0],) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 3, 0],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 3, 2],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 6, 1, 7, 3, 2],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 3, 2],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 3, 2],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 6, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 3, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 6, 7, 3, 2],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -1.686367928152444) ,
([0, 3, 6, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 1, 2],) ,
('saved value', 6.313632071847556) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 6, 7, 3, 2],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -1.4504468369780712) ,
([0, 2, 6, 7, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 3, 1],) ,
('saved value', 6.549553163021929) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 3, 2],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 3, 2],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 3) ,
([0, 1, 6, 7, 3, 2],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 6) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 7, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 6, 2],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 2) ,
([0, 1, 6, 7, 3, 2],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 7, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 3, 6],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 3) ,
([0, 1, 6, 7, 3, 2],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 6, 3, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 7, 2],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 2) ,
([0, 1, 6, 7, 3, 2],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 6, 2, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 3, 7],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 2) ,
([0, 1, 6, 7, 3, 2],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 3) ,
('Swap gain:', 1.6844726603886337) ,
([0, 1, 6, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 3],) ,
('saved value', 9.684472660388634) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 6, 7, 3, 2]) ,
('Current mapping', [0, 1, 6, 7, 2, 3]) ,
('Gain after the hill-climbing', 1.6844726603886337) ,
('Update triple match number to:', 9.684472660388634) ,
('Current mapping:', [0, 1, 6, 7, 2, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 2, 3],) ,
('saved value', 5.684472660388634) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([5, 1, 6, 7, 2, 3],) ,
('saved value', 5.684472660388634) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 2, 3],) ,
('saved value', 7.684472660388634) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 2, 3],) ,
('saved value', 7.684472660388634) ,
('Remap node', 2, 'from ', 6, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 2, 3],) ,
('saved value', 6.684472660388634) ,
('Remap node', 2, 'from ', 6, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 2, 3],) ,
('saved value', 6.684472660388634) ,
('Remap node', 3, 'from ', 7, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 2, 3],) ,
('saved value', 7.684472660388634) ,
('Remap node', 3, 'from ', 7, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 2, 3],) ,
('saved value', 7.684472660388634) ,
('Remap node', 4, 'from ', 2, 'to', 4) ,
('Move gain:', -0.8769893255831367) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8.807483334805497) ,
('Remap node', 4, 'from ', 2, 'to', 5) ,
('Move gain:', -0.9870776274220823) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 3],) ,
('saved value', 8.697395032966552) ,
('Remap node', 5, 'from ', 3, 'to', 4) ,
('Move gain:', -0.37972895004885965) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 4],) ,
('saved value', 9.304743710339775) ,
('Remap node', 5, 'from ', 3, 'to', 5) ,
('Move gain:', -0.3683307465085913) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 5],) ,
('saved value', 9.316141913880042) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.42056470905241) ,
([1, 0, 6, 7, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 2, 3],) ,
('saved value', 5.263907951336224) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 0, 7, 2, 3],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 2, 3],) ,
('saved value', 3.684472660388634) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([7, 1, 6, 0, 2, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 2, 3],) ,
('saved value', 3.684472660388634) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5.684472660388634) ,
([2, 1, 6, 7, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 0, 3],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 6, 7, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 2, 0],) ,
('saved value', 4.684472660388634) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 6, 1, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 2, 3],) ,
('saved value', 4.684472660388634) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 6, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 2, 3],) ,
('saved value', 5.684472660388634) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3.684472660388634) ,
([0, 2, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 1, 3],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -2.136814765130515) ,
([0, 3, 6, 7, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 2, 1],) ,
('saved value', 7.547657895258119) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 2, 3],) ,
('saved value', 5.684472660388634) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -3.684472660388634) ,
([0, 1, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 3, 7, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 2, 6],) ,
('saved value', 5.684472660388634) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 7) ,
('Swap gain:', -3.684472660388634) ,
([0, 1, 6, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 7, 3],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 6, 3, 2, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 7],) ,
('saved value', 6.684472660388634) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1.684472660388634) ,
([0, 1, 6, 7, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 2],) ,
('saved value', 8.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 6, 7, 2, 3]) ,
('Current mapping', [0, 1, 6, 7, 2, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([2, 4, 1, 3, 6, 7],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 7)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [2, 4, 1, 3, 6, 7]) ,
('Triple match number at start:', 0.0) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 6, 7],) ,
('saved value', 2.0) ,
('Remap node', 0, 'from ', 2, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 4, 1, 3, 6, 7],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 4, 'to', 0) ,
('Move gain:', 0.289717645473795) ,
('Computing match for mapping',) ,
([2, 0, 1, 3, 6, 7],) ,
('saved value', 0.289717645473795) ,
('Remap node', 1, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 5, 1, 3, 6, 7],) ,
('saved value', 0.0) ,
('Remap node', 2, 'from ', 1, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 4, 0, 3, 6, 7],) ,
('saved value', 0.0) ,
('Remap node', 2, 'from ', 1, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 4, 5, 3, 6, 7],) ,
('saved value', 0.0) ,
('Remap node', 3, 'from ', 3, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 4, 1, 0, 6, 7],) ,
('saved value', 0.0) ,
('Remap node', 3, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 4, 1, 5, 6, 7],) ,
('saved value', 0.0) ,
('Remap node', 4, 'from ', 6, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 4, 1, 3, 0, 7],) ,
('saved value', 0.0) ,
('Remap node', 4, 'from ', 6, 'to', 5) ,
('Move gain:', 0.6973950329665515) ,
('Computing match for mapping',) ,
([2, 4, 1, 3, 5, 7],) ,
('saved value', 0.6973950329665515) ,
('Remap node', 5, 'from ', 7, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 4, 1, 3, 6, 0],) ,
('saved value', 0.0) ,
('Remap node', 5, 'from ', 7, 'to', 5) ,
('Move gain:', 0.6316692534914087) ,
('Computing match for mapping',) ,
([2, 4, 1, 3, 6, 5],) ,
('saved value', 0.6316692534914087) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 4) ,
([2, 4, 1, 3, 6, 7],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 2) ,
('Swap gain:', 0.0) ,
([4, 2, 1, 3, 6, 7],) ,
('Computing match for mapping',) ,
([4, 2, 1, 3, 6, 7],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 4, 1, 3, 6, 7],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 0.289717645473795) ,
([1, 4, 2, 3, 6, 7],) ,
('Computing match for mapping',) ,
([1, 4, 2, 3, 6, 7],) ,
('saved value', 0.289717645473795) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 3) ,
([2, 4, 1, 3, 6, 7],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 4, 1, 2, 6, 7],) ,
('Computing match for mapping',) ,
([3, 4, 1, 2, 6, 7],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 6) ,
([2, 4, 1, 3, 6, 7],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 2) ,
('Swap gain:', 0.6844726603886337) ,
([6, 4, 1, 3, 2, 7],) ,
('Computing match for mapping',) ,
([6, 4, 1, 3, 2, 7],) ,
('saved value', 0.6844726603886337) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 7) ,
([2, 4, 1, 3, 6, 7],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 2) ,
('Swap gain:', 0.0) ,
([7, 4, 1, 3, 6, 2],) ,
('Computing match for mapping',) ,
([7, 4, 1, 3, 6, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 1) ,
([2, 4, 1, 3, 6, 7],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 4) ,
('Swap gain:', 1.0) ,
([2, 1, 4, 3, 6, 7],) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 6, 7],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 3) ,
([2, 4, 1, 3, 6, 7],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', 0.31363207184755604) ,
([2, 3, 1, 4, 6, 7],) ,
('Computing match for mapping',) ,
([2, 3, 1, 4, 6, 7],) ,
('saved value', 0.31363207184755604) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 6) ,
([2, 4, 1, 3, 6, 7],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', 1.807483334805497) ,
([2, 6, 1, 3, 4, 7],) ,
('Computing match for mapping',) ,
([2, 6, 1, 3, 4, 7],) ,
('saved value', 1.807483334805497) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 4, ',', 5, '-', 7) ,
([2, 4, 1, 3, 6, 7],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', 0.6202710499511404) ,
([2, 7, 1, 3, 6, 4],) ,
('Computing match for mapping',) ,
([2, 7, 1, 3, 6, 4],) ,
('saved value', 0.6202710499511404) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 3) ,
([2, 4, 1, 3, 6, 7],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([2, 4, 3, 1, 6, 7],) ,
('Computing match for mapping',) ,
([2, 4, 3, 1, 6, 7],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 6) ,
([2, 4, 1, 3, 6, 7],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', 1.0) ,
([2, 4, 6, 3, 1, 7],) ,
('Computing match for mapping',) ,
([2, 4, 6, 3, 1, 7],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([2, 4, 1, 3, 6, 7],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', 0.5495531630219287) ,
([2, 4, 7, 3, 6, 1],) ,
('Computing match for mapping',) ,
([2, 4, 7, 3, 6, 1],) ,
('saved value', 0.5495531630219287) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 6) ,
([2, 4, 1, 3, 6, 7],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([2, 4, 1, 6, 3, 7],) ,
('Computing match for mapping',) ,
([2, 4, 1, 6, 3, 7],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 7) ,
([2, 4, 1, 3, 6, 7],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', 1.0) ,
([2, 4, 1, 7, 6, 3],) ,
('Computing match for mapping',) ,
([2, 4, 1, 7, 6, 3],) ,
('saved value', 1.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([2, 4, 1, 3, 6, 7],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([2, 4, 1, 3, 7, 6],) ,
('Computing match for mapping',) ,
([2, 4, 1, 3, 7, 6],) ,
('saved value', 0.0) ,
('Use move gain',) ,
('Original mapping', [2, 4, 1, 3, 6, 7]) ,
('Current mapping', [0, 4, 1, 3, 6, 7]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 2.0) ,
('Current mapping:', [0, 4, 1, 3, 6, 7]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 4, 1, 3, 6, 7],) ,
('saved value', 0.0) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 4, 1, 3, 6, 7],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 4, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 6, 7],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 1, 3, 6, 7],) ,
('saved value', 2.0) ,
('Remap node', 2, 'from ', 1, 'to', 2) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 6, 7],) ,
('saved value', 3.0) ,
('Remap node', 2, 'from ', 1, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 4, 5, 3, 6, 7],) ,
('saved value', 2.0) ,
('Remap node', 3, 'from ', 3, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 4, 1, 2, 6, 7],) ,
('saved value', 2.0) ,
('Remap node', 3, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 4, 1, 5, 6, 7],) ,
('saved value', 2.0) ,
('Remap node', 4, 'from ', 6, 'to', 2) ,
('Move gain:', 0.6844726603886337) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 2, 7],) ,
('saved value', 2.684472660388634) ,
('Remap node', 4, 'from ', 6, 'to', 5) ,
('Move gain:', 0.6973950329665515) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 5, 7],) ,
('saved value', 2.6973950329665515) ,
('Remap node', 5, 'from ', 7, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 6, 2],) ,
('saved value', 2.0) ,
('Remap node', 5, 'from ', 7, 'to', 5) ,
('Move gain:', 0.6316692534914087) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 6, 5],) ,
('saved value', 2.631669253491409) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 4) ,
([0, 4, 1, 3, 6, 7],) ,
('After swapping:', 0, '-', 4, ',', 1, '-', 0) ,
('Swap gain:', -1.710282354526205) ,
([4, 0, 1, 3, 6, 7],) ,
('Computing match for mapping',) ,
([4, 0, 1, 3, 6, 7],) ,
('saved value', 0.2897176454737951) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 4, 1, 3, 6, 7],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -1.710282354526205) ,
([1, 4, 0, 3, 6, 7],) ,
('Computing match for mapping',) ,
([1, 4, 0, 3, 6, 7],) ,
('saved value', 0.2897176454737951) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 4, 1, 3, 6, 7],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([3, 4, 1, 0, 6, 7],) ,
('Computing match for mapping',) ,
([3, 4, 1, 0, 6, 7],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 4, 1, 3, 6, 7],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([6, 4, 1, 3, 0, 7],) ,
('Computing match for mapping',) ,
([6, 4, 1, 3, 0, 7],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 4, 1, 3, 6, 7],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([7, 4, 1, 3, 6, 0],) ,
('Computing match for mapping',) ,
([7, 4, 1, 3, 6, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 4, ',', 2, '-', 1) ,
([0, 4, 1, 3, 6, 7],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 4) ,
('Swap gain:', 2.0) ,
([0, 1, 4, 3, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 6, 7],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 4, ',', 3, '-', 3) ,
([0, 4, 1, 3, 6, 7],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', 0.31363207184755604) ,
([0, 3, 1, 4, 6, 7],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 6, 7],) ,
('saved value', 2.313632071847556) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 4, ',', 4, '-', 6) ,
([0, 4, 1, 3, 6, 7],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', 0.807483334805497) ,
([0, 6, 1, 3, 4, 7],) ,
('Computing match for mapping',) ,
([0, 6, 1, 3, 4, 7],) ,
('saved value', 2.807483334805497) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 4, ',', 5, '-', 7) ,
([0, 4, 1, 3, 6, 7],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', 0.6202710499511404) ,
([0, 7, 1, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 7, 1, 3, 6, 4],) ,
('saved value', 2.6202710499511404) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 3) ,
([0, 4, 1, 3, 6, 7],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 4, 3, 1, 6, 7],) ,
('Computing match for mapping',) ,
([0, 4, 3, 1, 6, 7],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 6) ,
([0, 4, 1, 3, 6, 7],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', 2.0) ,
([0, 4, 6, 3, 1, 7],) ,
('Computing match for mapping',) ,
([0, 4, 6, 3, 1, 7],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([0, 4, 1, 3, 6, 7],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', 0.5495531630219287) ,
([0, 4, 7, 3, 6, 1],) ,
('Computing match for mapping',) ,
([0, 4, 7, 3, 6, 1],) ,
('saved value', 2.549553163021929) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 6) ,
([0, 4, 1, 3, 6, 7],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 4, 1, 6, 3, 7],) ,
('Computing match for mapping',) ,
([0, 4, 1, 6, 3, 7],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 7) ,
([0, 4, 1, 3, 6, 7],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', 1.0) ,
([0, 4, 1, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 4, 1, 7, 6, 3],) ,
('saved value', 3.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 4, 1, 3, 6, 7],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 4, 1, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 7, 6],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [0, 4, 1, 3, 6, 7]) ,
('Current mapping', [0, 1, 4, 3, 6, 7]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [0, 1, 4, 3, 6, 7]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([2, 1, 4, 3, 6, 7],) ,
('saved value', 1.0) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 1, 4, 3, 6, 7],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 6, 7],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 5, 4, 3, 6, 7],) ,
('saved value', 2.0) ,
('Remap node', 2, 'from ', 4, 'to', 2) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 6, 7],) ,
('saved value', 5.0) ,
('Remap node', 2, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 6, 7],) ,
('saved value', 4.0) ,
('Remap node', 3, 'from ', 3, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 6, 7],) ,
('saved value', 4.0) ,
('Remap node', 3, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 6, 7],) ,
('saved value', 4.0) ,
('Remap node', 4, 'from ', 6, 'to', 2) ,
('Move gain:', 0.6844726603886337) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 7],) ,
('saved value', 4.684472660388634) ,
('Remap node', 4, 'from ', 6, 'to', 5) ,
('Move gain:', 0.6973950329665515) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 5, 7],) ,
('saved value', 4.6973950329665515) ,
('Remap node', 5, 'from ', 7, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 6, 2],) ,
('saved value', 4.0) ,
('Remap node', 5, 'from ', 7, 'to', 5) ,
('Move gain:', 0.6316692534914087) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 6, 5],) ,
('saved value', 4.631669253491409) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 4, 3, 6, 7],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.42056470905241) ,
([1, 0, 4, 3, 6, 7],) ,
('Computing match for mapping',) ,
([1, 0, 4, 3, 6, 7],) ,
('saved value', 0.5794352909475902) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 4) ,
([0, 1, 4, 3, 6, 7],) ,
('After swapping:', 0, '-', 4, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 0, 3, 6, 7],) ,
('Computing match for mapping',) ,
([4, 1, 0, 3, 6, 7],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 4, 3, 6, 7],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 4, 0, 6, 7],) ,
('Computing match for mapping',) ,
([3, 1, 4, 0, 6, 7],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 1, 4, 3, 6, 7],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 4, 3, 0, 7],) ,
('Computing match for mapping',) ,
([6, 1, 4, 3, 0, 7],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 1, 4, 3, 6, 7],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 1, 4, 3, 6, 0],) ,
('Computing match for mapping',) ,
([7, 1, 4, 3, 6, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 4) ,
([0, 1, 4, 3, 6, 7],) ,
('After swapping:', 1, '-', 4, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 4, 1, 3, 6, 7],) ,
('Computing match for mapping',) ,
([0, 4, 1, 3, 6, 7],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 4, 3, 6, 7],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -1.686367928152444) ,
([0, 3, 4, 1, 6, 7],) ,
('Computing match for mapping',) ,
([0, 3, 4, 1, 6, 7],) ,
('saved value', 2.313632071847556) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 6) ,
([0, 1, 4, 3, 6, 7],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 6, 4, 3, 1, 7],) ,
('Computing match for mapping',) ,
([0, 6, 4, 3, 1, 7],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 7) ,
([0, 1, 4, 3, 6, 7],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -1.4504468369780712) ,
([0, 7, 4, 3, 6, 1],) ,
('Computing match for mapping',) ,
([0, 7, 4, 3, 6, 1],) ,
('saved value', 2.549553163021929) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 4, ',', 3, '-', 3) ,
([0, 1, 4, 3, 6, 7],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 4) ,
('Swap gain:', 0.0) ,
([0, 1, 3, 4, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 6, 7],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 4, ',', 4, '-', 6) ,
([0, 1, 4, 3, 6, 7],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', 2.807483334805497) ,
([0, 1, 6, 3, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 7],) ,
('saved value', 6.807483334805497) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 4, ',', 5, '-', 7) ,
([0, 1, 4, 3, 6, 7],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', 0.6202710499511404) ,
([0, 1, 7, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 6, 4],) ,
('saved value', 4.620271049951141) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 6) ,
([0, 1, 4, 3, 6, 7],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 1, 4, 6, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 3, 7],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 7) ,
([0, 1, 4, 3, 6, 7],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', 1.0) ,
([0, 1, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 6, 3],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 1, 4, 3, 6, 7],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 1, 4, 3, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 7, 6],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 4, 3, 6, 7]) ,
('Current mapping', [0, 1, 6, 3, 4, 7]) ,
('Gain after the hill-climbing', 2.807483334805497) ,
('Update triple match number to:', 6.807483334805497) ,
('Current mapping:', [0, 1, 6, 3, 4, 7]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([2, 1, 6, 3, 4, 7],) ,
('saved value', 3.8074833348054966) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([5, 1, 6, 3, 4, 7],) ,
('saved value', 2.8074833348054966) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 6, 3, 4, 7],) ,
('saved value', 4.807483334805497) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 3, 4, 7],) ,
('saved value', 4.807483334805497) ,
('Remap node', 2, 'from ', 6, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 7],) ,
('saved value', 5.807483334805497) ,
('Remap node', 2, 'from ', 6, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 7],) ,
('saved value', 4.807483334805497) ,
('Remap node', 3, 'from ', 3, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 4, 7],) ,
('saved value', 6.807483334805497) ,
('Remap node', 3, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 4, 7],) ,
('saved value', 6.807483334805497) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', -0.12301067441686264) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 7],) ,
('saved value', 6.684472660388634) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', -0.11008830183894558) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 5, 7],) ,
('saved value', 6.697395032966551) ,
('Remap node', 5, 'from ', 7, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 2],) ,
('saved value', 6.807483334805497) ,
('Remap node', 5, 'from ', 7, 'to', 5) ,
('Move gain:', 0.6316692534914087) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5],) ,
('saved value', 7.439152588296905) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 3, 4, 7],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.42056470905241) ,
([1, 0, 6, 3, 4, 7],) ,
('Computing match for mapping',) ,
([1, 0, 6, 3, 4, 7],) ,
('saved value', 2.3869186257530863) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 3, 4, 7],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 1, 0, 3, 4, 7],) ,
('Computing match for mapping',) ,
([6, 1, 0, 3, 4, 7],) ,
('saved value', 1.8074833348054966) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 6, 3, 4, 7],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 6, 0, 4, 7],) ,
('Computing match for mapping',) ,
([3, 1, 6, 0, 4, 7],) ,
('saved value', 2.8074833348054966) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 6, 3, 4, 7],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4.807483334805497) ,
([4, 1, 6, 3, 0, 7],) ,
('Computing match for mapping',) ,
([4, 1, 6, 3, 0, 7],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 1, 6, 3, 4, 7],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([7, 1, 6, 3, 4, 0],) ,
('Computing match for mapping',) ,
([7, 1, 6, 3, 4, 0],) ,
('saved value', 2.8074833348054966) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 3, 4, 7],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -3.9999999999999996) ,
([0, 6, 1, 3, 4, 7],) ,
('Computing match for mapping',) ,
([0, 6, 1, 3, 4, 7],) ,
('saved value', 2.807483334805497) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 6, 3, 4, 7],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -1.686367928152444) ,
([0, 3, 6, 1, 4, 7],) ,
('Computing match for mapping',) ,
([0, 3, 6, 1, 4, 7],) ,
('saved value', 5.121115406653052) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 6, 3, 4, 7],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2.8074833348054966) ,
([0, 4, 6, 3, 1, 7],) ,
('Computing match for mapping',) ,
([0, 4, 6, 3, 1, 7],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 7) ,
([0, 1, 6, 3, 4, 7],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -1.4504468369780712) ,
([0, 7, 6, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 7, 6, 3, 4, 1],) ,
('saved value', 5.357036497827425) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 3) ,
([0, 1, 6, 3, 4, 7],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 6, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 3, 6, 4, 7],) ,
('saved value', 4.807483334805497) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 1, 6, 3, 4, 7],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -2.8074833348054966) ,
([0, 1, 4, 3, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 6, 7],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 7) ,
([0, 1, 6, 3, 4, 7],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 1, 7, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 6],) ,
('saved value', 4.807483334805497) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 1, 6, 3, 4, 7],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -0.807483334805497) ,
([0, 1, 6, 4, 3, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 3, 7],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 7) ,
([0, 1, 6, 3, 4, 7],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 3) ,
('Swap gain:', 2.0) ,
([0, 1, 6, 7, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8.807483334805497) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 7) ,
([0, 1, 6, 3, 4, 7],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', -0.1872122848543567) ,
([0, 1, 6, 3, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 7, 4],) ,
('saved value', 6.62027104995114) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 6, 3, 4, 7]) ,
('Current mapping', [0, 1, 6, 7, 4, 3]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 8.807483334805497) ,
('Current mapping:', [0, 1, 6, 7, 4, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 4, 3],) ,
('saved value', 5.807483334805497) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([5, 1, 6, 7, 4, 3],) ,
('saved value', 4.807483334805497) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 4, 3],) ,
('saved value', 6.807483334805497) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 4, 3],) ,
('saved value', 6.807483334805497) ,
('Remap node', 2, 'from ', 6, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 3],) ,
('saved value', 6.807483334805497) ,
('Remap node', 2, 'from ', 6, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 4, 3],) ,
('saved value', 5.807483334805497) ,
('Remap node', 3, 'from ', 7, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 4, 3],) ,
('saved value', 6.807483334805497) ,
('Remap node', 3, 'from ', 7, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 4, 3],) ,
('saved value', 6.807483334805497) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', 0.8769893255831374) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 3],) ,
('saved value', 9.684472660388634) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', -0.11008830183894425) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 3],) ,
('saved value', 8.697395032966552) ,
('Remap node', 5, 'from ', 3, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 2],) ,
('saved value', 8.807483334805497) ,
('Remap node', 5, 'from ', 3, 'to', 5) ,
('Move gain:', 0.6316692534914087) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 5],) ,
('saved value', 9.439152588296905) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.42056470905241) ,
([1, 0, 6, 7, 4, 3],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 4, 3],) ,
('saved value', 4.386918625753086) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 0, 7, 4, 3],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 4, 3],) ,
('saved value', 2.8074833348054966) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([7, 1, 6, 0, 4, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 4, 3],) ,
('saved value', 2.8074833348054966) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4.807483334805497) ,
([4, 1, 6, 7, 0, 3],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 0, 3],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 6, 7, 4, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 4, 0],) ,
('saved value', 4.807483334805497) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 6, 1, 7, 4, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 4, 3],) ,
('saved value', 3.8074833348054966) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 6, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 4, 3],) ,
('saved value', 4.807483334805497) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2.807483334805497) ,
([0, 4, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 1, 3],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -1.1368147651305152) ,
([0, 3, 6, 7, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 4, 1],) ,
('saved value', 7.670668569674982) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, 3],) ,
('saved value', 4.807483334805497) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -3.8074833348054966) ,
([0, 1, 4, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 6, 3],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 4, 6],) ,
('saved value', 5.807483334805497) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2.807483334805497) ,
([0, 1, 6, 4, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 7, 3],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 6, 3, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 7],) ,
('saved value', 6.807483334805497) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 3) ,
([0, 1, 6, 7, 4, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -0.18721228485435581) ,
([0, 1, 6, 7, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 4],) ,
('saved value', 8.62027104995114) ,
('Use move gain',) ,
('Original mapping', [0, 1, 6, 7, 4, 3]) ,
('Current mapping', [0, 1, 6, 7, 2, 3]) ,
('Gain after the hill-climbing', 0.8769893255831374) ,
('Update triple match number to:', 9.684472660388634) ,
('Current mapping:', [0, 1, 6, 7, 2, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 2, 3],) ,
('saved value', 5.684472660388634) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([5, 1, 6, 7, 2, 3],) ,
('saved value', 5.684472660388634) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 2, 3],) ,
('saved value', 7.684472660388634) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 2, 3],) ,
('saved value', 7.684472660388634) ,
('Remap node', 2, 'from ', 6, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 2, 3],) ,
('saved value', 6.684472660388634) ,
('Remap node', 2, 'from ', 6, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 2, 3],) ,
('saved value', 6.684472660388634) ,
('Remap node', 3, 'from ', 7, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 2, 3],) ,
('saved value', 7.684472660388634) ,
('Remap node', 3, 'from ', 7, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 2, 3],) ,
('saved value', 7.684472660388634) ,
('Remap node', 4, 'from ', 2, 'to', 4) ,
('Move gain:', -0.8769893255831374) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8.807483334805497) ,
('Remap node', 4, 'from ', 2, 'to', 5) ,
('Move gain:', -0.9870776274220816) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 3],) ,
('saved value', 8.697395032966552) ,
('Remap node', 5, 'from ', 3, 'to', 4) ,
('Move gain:', -0.3797289500488592) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 4],) ,
('saved value', 9.304743710339775) ,
('Remap node', 5, 'from ', 3, 'to', 5) ,
('Move gain:', -0.3683307465085921) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 5],) ,
('saved value', 9.316141913880042) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.42056470905241) ,
([1, 0, 6, 7, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 2, 3],) ,
('saved value', 5.263907951336224) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 0, 7, 2, 3],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 2, 3],) ,
('saved value', 3.684472660388634) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([7, 1, 6, 0, 2, 3],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 2, 3],) ,
('saved value', 3.684472660388634) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5.684472660388634) ,
([2, 1, 6, 7, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 0, 3],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 1, 6, 7, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 2, 0],) ,
('saved value', 4.684472660388634) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 6, 1, 7, 2, 3],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 2, 3],) ,
('saved value', 4.684472660388634) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 6, 1, 2, 3],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 2, 3],) ,
('saved value', 5.684472660388634) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3.684472660388634) ,
([0, 2, 6, 7, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 1, 3],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -2.1368147651305147) ,
([0, 3, 6, 7, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 2, 1],) ,
('saved value', 7.547657895258119) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 2, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 2, 3],) ,
('saved value', 5.684472660388634) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 6) ,
('Swap gain:', -3.684472660388634) ,
([0, 1, 2, 7, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 6, 3],) ,
('saved value', 6.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 3, 7, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 2, 6],) ,
('saved value', 5.684472660388634) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 2) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 7) ,
('Swap gain:', -3.684472660388634) ,
([0, 1, 6, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 7, 3],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 6, 3, 2, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 7],) ,
('saved value', 6.684472660388634) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 3) ,
([0, 1, 6, 7, 2, 3],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1.684472660388634) ,
([0, 1, 6, 7, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 2],) ,
('saved value', 8.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 6, 7, 2, 3]) ,
('Current mapping', [0, 1, 6, 7, 2, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([3, 2, 6, 0, 4, 1],) ,
('node_pair', (0, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 6)) ,
('instance/attribute match', 1.0) ,
('node_pair', (3, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 4)) ,
('instance/attribute match', 0.807483334805497) ,
('node_pair', (5, 1)) ,
('instance/attribute match', 0.5495531630219287) ,
('match computing complete, result:', 2.357036497827426) ,
('Node mapping at start', [3, 2, 6, 0, 4, 1]) ,
('Triple match number at start:', 2.357036497827426) ,
('Remap node', 0, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 2, 6, 0, 4, 1],) ,
('saved value', 2.357036497827426) ,
('Remap node', 0, 'from ', 3, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([7, 2, 6, 0, 4, 1],) ,
('saved value', 2.357036497827426) ,
('Remap node', 1, 'from ', 2, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 5, 6, 0, 4, 1],) ,
('saved value', 2.357036497827426) ,
('Remap node', 1, 'from ', 2, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 7, 6, 0, 4, 1],) ,
('saved value', 2.357036497827426) ,
('Remap node', 2, 'from ', 6, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([3, 2, 5, 0, 4, 1],) ,
('saved value', 1.3570364978274259) ,
('Remap node', 2, 'from ', 6, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([3, 2, 7, 0, 4, 1],) ,
('saved value', 1.3570364978274259) ,
('Remap node', 3, 'from ', 0, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 2, 6, 5, 4, 1],) ,
('saved value', 2.357036497827426) ,
('Remap node', 3, 'from ', 0, 'to', 7) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([3, 2, 6, 7, 4, 1],) ,
('saved value', 4.357036497827426) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', -0.11008830183894558) ,
('Computing match for mapping',) ,
([3, 2, 6, 0, 5, 1],) ,
('saved value', 2.2469481959884803) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -0.807483334805497) ,
('Computing match for mapping',) ,
([3, 2, 6, 0, 7, 1],) ,
('saved value', 1.5495531630219288) ,
('Remap node', 5, 'from ', 1, 'to', 5) ,
('Move gain:', 0.08211609046947999) ,
('Computing match for mapping',) ,
([3, 2, 6, 0, 4, 5],) ,
('saved value', 2.439152588296906) ,
('Remap node', 5, 'from ', 1, 'to', 7) ,
('Move gain:', -0.5495531630219287) ,
('Computing match for mapping',) ,
([3, 2, 6, 0, 4, 7],) ,
('saved value', 1.807483334805497) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 2) ,
([3, 2, 6, 0, 4, 1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 3) ,
('Swap gain:', 1.313632071847556) ,
([2, 3, 6, 0, 4, 1],) ,
('Computing match for mapping',) ,
([2, 3, 6, 0, 4, 1],) ,
('saved value', 3.670668569674982) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 6) ,
([3, 2, 6, 0, 4, 1],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 3) ,
('Swap gain:', -1.0) ,
([6, 2, 3, 0, 4, 1],) ,
('Computing match for mapping',) ,
([6, 2, 3, 0, 4, 1],) ,
('saved value', 1.3570364978274259) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 0) ,
([3, 2, 6, 0, 4, 1],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', 3.0) ,
([0, 2, 6, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 2, 6, 3, 4, 1],) ,
('saved value', 5.357036497827426) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 3, ',', 4, '-', 4) ,
([3, 2, 6, 0, 4, 1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -0.807483334805497) ,
([4, 2, 6, 0, 3, 1],) ,
('Computing match for mapping',) ,
([4, 2, 6, 0, 3, 1],) ,
('saved value', 1.5495531630219288) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 3, ',', 5, '-', 1) ,
([3, 2, 6, 0, 4, 1],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 3) ,
('Swap gain:', -0.25983551754813367) ,
([1, 2, 6, 0, 4, 3],) ,
('Computing match for mapping',) ,
([1, 2, 6, 0, 4, 3],) ,
('saved value', 2.0972009802792924) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 6) ,
([3, 2, 6, 0, 4, 1],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 2) ,
('Swap gain:', -1.0) ,
([3, 6, 2, 0, 4, 1],) ,
('Computing match for mapping',) ,
([3, 6, 2, 0, 4, 1],) ,
('saved value', 1.3570364978274259) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 0) ,
([3, 2, 6, 0, 4, 1],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', 0.289717645473795) ,
([3, 0, 6, 2, 4, 1],) ,
('Computing match for mapping',) ,
([3, 0, 6, 2, 4, 1],) ,
('saved value', 2.6467541433012207) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([3, 2, 6, 0, 4, 1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -0.12301067441686331) ,
([3, 4, 6, 0, 2, 1],) ,
('Computing match for mapping',) ,
([3, 4, 6, 0, 2, 1],) ,
('saved value', 2.2340258234105628) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 1) ,
([3, 2, 6, 0, 4, 1],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 2) ,
('Swap gain:', 0.4504468369780713) ,
([3, 1, 6, 0, 4, 2],) ,
('Computing match for mapping',) ,
([3, 1, 6, 0, 4, 2],) ,
('saved value', 2.807483334805497) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 0) ,
([3, 2, 6, 0, 4, 1],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 6) ,
('Swap gain:', -1.0) ,
([3, 2, 0, 6, 4, 1],) ,
('Computing match for mapping',) ,
([3, 2, 0, 6, 4, 1],) ,
('saved value', 1.3570364978274259) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([3, 2, 6, 0, 4, 1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -1.807483334805497) ,
([3, 2, 4, 0, 6, 1],) ,
('Computing match for mapping',) ,
([3, 2, 4, 0, 6, 1],) ,
('saved value', 0.5495531630219288) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 1) ,
([3, 2, 6, 0, 4, 1],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 6) ,
('Swap gain:', -1.5495531630219288) ,
([3, 2, 1, 0, 4, 6],) ,
('Computing match for mapping',) ,
([3, 2, 1, 0, 4, 6],) ,
('saved value', 0.807483334805497) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 0, ',', 4, '-', 4) ,
([3, 2, 6, 0, 4, 1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -0.807483334805497) ,
([3, 2, 6, 4, 0, 1],) ,
('Computing match for mapping',) ,
([3, 2, 6, 4, 0, 1],) ,
('saved value', 1.5495531630219288) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 0, ',', 5, '-', 1) ,
([3, 2, 6, 0, 4, 1],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', -0.5495531630219287) ,
([3, 2, 6, 1, 4, 0],) ,
('Computing match for mapping',) ,
([3, 2, 6, 1, 4, 0],) ,
('saved value', 1.807483334805497) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 1) ,
([3, 2, 6, 0, 4, 1],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', -0.7367654478762854) ,
([3, 2, 6, 0, 1, 4],) ,
('Computing match for mapping',) ,
([3, 2, 6, 0, 1, 4],) ,
('saved value', 1.6202710499511404) ,
('Use swap gain',) ,
('Original mapping', [3, 2, 6, 0, 4, 1]) ,
('Current mapping', [0, 2, 6, 3, 4, 1]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 5.357036497827426) ,
('Current mapping:', [0, 2, 6, 3, 4, 1]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 2, 6, 3, 4, 1],) ,
('saved value', 2.3570364978274263) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([7, 2, 6, 3, 4, 1],) ,
('saved value', 2.3570364978274263) ,
('Remap node', 1, 'from ', 2, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 3, 4, 1],) ,
('saved value', 5.357036497827426) ,
('Remap node', 1, 'from ', 2, 'to', 7) ,
('Move gain:', -8.881784197001252e-16) ,
('Computing match for mapping',) ,
([0, 7, 6, 3, 4, 1],) ,
('saved value', 5.357036497827425) ,
('Remap node', 2, 'from ', 6, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 5, 3, 4, 1],) ,
('saved value', 3.3570364978274263) ,
('Remap node', 2, 'from ', 6, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, 4, 1],) ,
('saved value', 3.3570364978274263) ,
('Remap node', 3, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 6, 5, 4, 1],) ,
('saved value', 5.357036497827426) ,
('Remap node', 3, 'from ', 3, 'to', 7) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 4, 1],) ,
('saved value', 7.357036497827426) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', -0.11008830183894558) ,
('Computing match for mapping',) ,
([0, 2, 6, 3, 5, 1],) ,
('saved value', 5.24694819598848) ,
('Remap node', 4, 'from ', 4, 'to', 7) ,
('Move gain:', -0.807483334805497) ,
('Computing match for mapping',) ,
([0, 2, 6, 3, 7, 1],) ,
('saved value', 4.54955316302193) ,
('Remap node', 5, 'from ', 1, 'to', 5) ,
('Move gain:', 0.08211609046947999) ,
('Computing match for mapping',) ,
([0, 2, 6, 3, 4, 5],) ,
('saved value', 5.439152588296906) ,
('Remap node', 5, 'from ', 1, 'to', 7) ,
('Move gain:', -0.5495531630219297) ,
('Computing match for mapping',) ,
([0, 2, 6, 3, 4, 7],) ,
('saved value', 4.807483334805497) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 6, 3, 4, 1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -1.710282354526205) ,
([2, 0, 6, 3, 4, 1],) ,
('Computing match for mapping',) ,
([2, 0, 6, 3, 4, 1],) ,
('saved value', 3.646754143301221) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 2, 6, 3, 4, 1],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([6, 2, 0, 3, 4, 1],) ,
('Computing match for mapping',) ,
([6, 2, 0, 3, 4, 1],) ,
('saved value', 1.3570364978274263) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 2, 6, 3, 4, 1],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.0000000000000004) ,
([3, 2, 6, 0, 4, 1],) ,
('Computing match for mapping',) ,
([3, 2, 6, 0, 4, 1],) ,
('saved value', 2.357036497827426) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 2, 6, 3, 4, 1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.807483334805497) ,
([4, 2, 6, 3, 0, 1],) ,
('Computing match for mapping',) ,
([4, 2, 6, 3, 0, 1],) ,
('saved value', 1.5495531630219292) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 1) ,
([0, 2, 6, 3, 4, 1],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', -3.259835517548134) ,
([1, 2, 6, 3, 4, 0],) ,
('Computing match for mapping',) ,
([1, 2, 6, 3, 4, 0],) ,
('saved value', 2.0972009802792924) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 6) ,
([0, 2, 6, 3, 4, 1],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 6, 2, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 3, 4, 1],) ,
('saved value', 4.357036497827426) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 3) ,
([0, 2, 6, 3, 4, 1],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', 0.31363207184755604) ,
([0, 3, 6, 2, 4, 1],) ,
('Computing match for mapping',) ,
([0, 3, 6, 2, 4, 1],) ,
('saved value', 5.670668569674982) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([0, 2, 6, 3, 4, 1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -0.12301067441686331) ,
([0, 4, 6, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 4, 6, 3, 2, 1],) ,
('saved value', 5.234025823410563) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 1) ,
([0, 2, 6, 3, 4, 1],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 2) ,
('Swap gain:', 1.4504468369780703) ,
([0, 1, 6, 3, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 2],) ,
('saved value', 6.807483334805497) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 3) ,
([0, 2, 6, 3, 4, 1],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 2, 3, 6, 4, 1],) ,
('Computing match for mapping',) ,
([0, 2, 3, 6, 4, 1],) ,
('saved value', 3.3570364978274263) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 2, 6, 3, 4, 1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -2.807483334805497) ,
([0, 2, 4, 3, 6, 1],) ,
('Computing match for mapping',) ,
([0, 2, 4, 3, 6, 1],) ,
('saved value', 2.5495531630219292) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 1) ,
([0, 2, 6, 3, 4, 1],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 6) ,
('Swap gain:', -2.549553163021929) ,
([0, 2, 1, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3, 4, 6],) ,
('saved value', 2.8074833348054975) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 4) ,
([0, 2, 6, 3, 4, 1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 3) ,
('Swap gain:', -0.807483334805497) ,
([0, 2, 6, 4, 3, 1],) ,
('Computing match for mapping',) ,
([0, 2, 6, 4, 3, 1],) ,
('saved value', 4.54955316302193) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 1) ,
([0, 2, 6, 3, 4, 1],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 3) ,
('Swap gain:', -0.5495531630219287) ,
([0, 2, 6, 1, 4, 3],) ,
('Computing match for mapping',) ,
([0, 2, 6, 1, 4, 3],) ,
('saved value', 4.8074833348054975) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 1) ,
([0, 2, 6, 3, 4, 1],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', -0.7367654478762854) ,
([0, 2, 6, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 2, 6, 3, 1, 4],) ,
('saved value', 4.620271049951141) ,
('Use move gain',) ,
('Original mapping', [0, 2, 6, 3, 4, 1]) ,
('Current mapping', [0, 2, 6, 7, 4, 1]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 7.357036497827426) ,
('Current mapping:', [0, 2, 6, 7, 4, 1]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([3, 2, 6, 7, 4, 1],) ,
('saved value', 4.357036497827426) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 2, 6, 7, 4, 1],) ,
('saved value', 4.357036497827426) ,
('Remap node', 1, 'from ', 2, 'to', 3) ,
('Move gain:', 0.3136320718475556) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 4, 1],) ,
('saved value', 7.670668569674982) ,
('Remap node', 1, 'from ', 2, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 4, 1],) ,
('saved value', 7.357036497827426) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 2, 3, 7, 4, 1],) ,
('saved value', 4.357036497827426) ,
('Remap node', 2, 'from ', 6, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 2, 5, 7, 4, 1],) ,
('saved value', 4.357036497827426) ,
('Remap node', 3, 'from ', 7, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 6, 3, 4, 1],) ,
('saved value', 5.357036497827426) ,
('Remap node', 3, 'from ', 7, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 6, 5, 4, 1],) ,
('saved value', 5.357036497827426) ,
('Remap node', 4, 'from ', 4, 'to', 3) ,
('Move gain:', -0.8074833348054975) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 3, 1],) ,
('saved value', 6.549553163021929) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', -0.11008830183894558) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 5, 1],) ,
('saved value', 7.24694819598848) ,
('Remap node', 5, 'from ', 1, 'to', 3) ,
('Move gain:', -0.5495531630219297) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 4, 3],) ,
('saved value', 6.807483334805497) ,
('Remap node', 5, 'from ', 1, 'to', 5) ,
('Move gain:', 0.08211609046947999) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 4, 5],) ,
('saved value', 7.439152588296906) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 6, 7, 4, 1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -1.710282354526205) ,
([2, 0, 6, 7, 4, 1],) ,
('Computing match for mapping',) ,
([2, 0, 6, 7, 4, 1],) ,
('saved value', 5.646754143301221) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 2, 6, 7, 4, 1],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 2, 0, 7, 4, 1],) ,
('Computing match for mapping',) ,
([6, 2, 0, 7, 4, 1],) ,
('saved value', 2.3570364978274263) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 2, 6, 7, 4, 1],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([7, 2, 6, 0, 4, 1],) ,
('Computing match for mapping',) ,
([7, 2, 6, 0, 4, 1],) ,
('saved value', 2.357036497827426) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 2, 6, 7, 4, 1],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -3.807483334805497) ,
([4, 2, 6, 7, 0, 1],) ,
('Computing match for mapping',) ,
([4, 2, 6, 7, 0, 1],) ,
('saved value', 3.5495531630219292) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 1) ,
([0, 2, 6, 7, 4, 1],) ,
('After swapping:', 0, '-', 1, ',', 5, '-', 0) ,
('Swap gain:', -3.259835517548134) ,
([1, 2, 6, 7, 4, 0],) ,
('Computing match for mapping',) ,
([1, 2, 6, 7, 4, 0],) ,
('saved value', 4.097200980279292) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 6) ,
([0, 2, 6, 7, 4, 1],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 6, 2, 7, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 7, 4, 1],) ,
('saved value', 5.357036497827426) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', 7) ,
([0, 2, 6, 7, 4, 1],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 7, 6, 2, 4, 1],) ,
('Computing match for mapping',) ,
([0, 7, 6, 2, 4, 1],) ,
('saved value', 5.357036497827426) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', 4) ,
([0, 2, 6, 7, 4, 1],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 2) ,
('Swap gain:', -0.12301067441686331) ,
([0, 4, 6, 7, 2, 1],) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 2, 1],) ,
('saved value', 7.234025823410563) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 2, ',', 5, '-', 1) ,
([0, 2, 6, 7, 4, 1],) ,
('After swapping:', 1, '-', 1, ',', 5, '-', 2) ,
('Swap gain:', 1.4504468369780703) ,
([0, 1, 6, 7, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 2],) ,
('saved value', 8.807483334805497) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 2, 6, 7, 4, 1],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 2, 7, 6, 4, 1],) ,
('Computing match for mapping',) ,
([0, 2, 7, 6, 4, 1],) ,
('saved value', 3.3570364978274263) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 2, 6, 7, 4, 1],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -3.807483334805497) ,
([0, 2, 4, 7, 6, 1],) ,
('Computing match for mapping',) ,
([0, 2, 4, 7, 6, 1],) ,
('saved value', 3.5495531630219292) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 1) ,
([0, 2, 6, 7, 4, 1],) ,
('After swapping:', 2, '-', 1, ',', 5, '-', 6) ,
('Swap gain:', -3.549553163021929) ,
([0, 2, 1, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 1, 7, 4, 6],) ,
('saved value', 3.8074833348054975) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 4) ,
([0, 2, 6, 7, 4, 1],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2.807483334805497) ,
([0, 2, 6, 4, 7, 1],) ,
('Computing match for mapping',) ,
([0, 2, 6, 4, 7, 1],) ,
('saved value', 4.54955316302193) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 1) ,
([0, 2, 6, 7, 4, 1],) ,
('After swapping:', 3, '-', 1, ',', 5, '-', 7) ,
('Swap gain:', -2.549553163021929) ,
([0, 2, 6, 1, 4, 7],) ,
('Computing match for mapping',) ,
([0, 2, 6, 1, 4, 7],) ,
('saved value', 4.8074833348054975) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 1) ,
([0, 2, 6, 7, 4, 1],) ,
('After swapping:', 4, '-', 1, ',', 5, '-', 4) ,
('Swap gain:', -0.7367654478762854) ,
([0, 2, 6, 7, 1, 4],) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 1, 4],) ,
('saved value', 6.620271049951141) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 6, 7, 4, 1]) ,
('Current mapping', [0, 1, 6, 7, 4, 2]) ,
('Gain after the hill-climbing', 1.4504468369780703) ,
('Update triple match number to:', 8.807483334805497) ,
('Current mapping:', [0, 1, 6, 7, 4, 2]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 4, 2],) ,
('saved value', 4.807483334805497) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([5, 1, 6, 7, 4, 2],) ,
('saved value', 4.807483334805497) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -1.686367928152444) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 4, 2],) ,
('saved value', 7.121115406653052) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 4, 2],) ,
('saved value', 6.807483334805497) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 4, 2],) ,
('saved value', 5.807483334805497) ,
('Remap node', 2, 'from ', 6, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 4, 2],) ,
('saved value', 5.807483334805497) ,
('Remap node', 3, 'from ', 7, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 2],) ,
('saved value', 6.807483334805497) ,
('Remap node', 3, 'from ', 7, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 4, 2],) ,
('saved value', 6.807483334805497) ,
('Remap node', 4, 'from ', 4, 'to', 3) ,
('Move gain:', -0.8074833348054966) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 2],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 4, 'to', 5) ,
('Move gain:', -0.11008830183894602) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 2],) ,
('saved value', 8.69739503296655) ,
('Remap node', 5, 'from ', 2, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8.807483334805497) ,
('Remap node', 5, 'from ', 2, 'to', 5) ,
('Move gain:', 0.6316692534914079) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 5],) ,
('saved value', 9.439152588296905) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 4, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.42056470905241) ,
([1, 0, 6, 7, 4, 2],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 4, 2],) ,
('saved value', 4.386918625753086) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 2],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 0, 7, 4, 2],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 4, 2],) ,
('saved value', 2.8074833348054966) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 2],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([7, 1, 6, 0, 4, 2],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 4, 2],) ,
('saved value', 2.8074833348054966) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 2],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4.807483334805497) ,
([4, 1, 6, 7, 0, 2],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 0, 2],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 6, 7, 4, 2],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 1, 6, 7, 4, 0],) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 4, 0],) ,
('saved value', 5.807483334805497) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 2],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 6, 1, 7, 4, 2],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 4, 2],) ,
('saved value', 3.8074833348054966) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 2],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 6, 1, 4, 2],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 4, 2],) ,
('saved value', 4.807483334805497) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 2],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2.807483334805497) ,
([0, 4, 6, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 1, 2],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 6, 7, 4, 2],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -1.4504468369780703) ,
([0, 2, 6, 7, 4, 1],) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 4, 1],) ,
('saved value', 7.357036497827426) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 2],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, 2],) ,
('saved value', 4.807483334805497) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 2],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -3.807483334805497) ,
([0, 1, 4, 7, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 6, 2],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 2) ,
([0, 1, 6, 7, 4, 2],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 6],) ,
('saved value', 6.807483334805497) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 2],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2.807483334805497) ,
([0, 1, 6, 4, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 7, 2],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 2) ,
([0, 1, 6, 7, 4, 2],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 1, 6, 2, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 4, 7],) ,
('saved value', 6.807483334805497) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 2) ,
([0, 1, 6, 7, 4, 2],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', 0.49726037553427815) ,
([0, 1, 6, 7, 2, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 4],) ,
('saved value', 9.304743710339775) ,
('Use move gain',) ,
('Original mapping', [0, 1, 6, 7, 4, 2]) ,
('Current mapping', [0, 1, 6, 7, 4, 5]) ,
('Gain after the hill-climbing', 0.6316692534914079) ,
('Update triple match number to:', 9.439152588296905) ,
('Current mapping:', [0, 1, 6, 7, 4, 5]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 4, 5],) ,
('saved value', 6.4391525882969045) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 4, 5],) ,
('saved value', 5.4391525882969045) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -1.9999999999999982) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 4, 5],) ,
('saved value', 7.439152588296906) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -1.686367928152444) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 4, 5],) ,
('saved value', 7.75278466014446) ,
('Remap node', 2, 'from ', 6, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 5],) ,
('saved value', 7.4391525882969045) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 4, 5],) ,
('saved value', 6.4391525882969045) ,
('Remap node', 3, 'from ', 7, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 4, 5],) ,
('saved value', 7.4391525882969045) ,
('Remap node', 3, 'from ', 7, 'to', 3) ,
('Move gain:', -1.9999999999999991) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5],) ,
('saved value', 7.439152588296905) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', -0.12301067441686264) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 5],) ,
('saved value', 9.316141913880042) ,
('Remap node', 4, 'from ', 4, 'to', 3) ,
('Move gain:', -0.8074833348054966) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 5],) ,
('saved value', 8.631669253491408) ,
('Remap node', 5, 'from ', 5, 'to', 2) ,
('Move gain:', -0.6316692534914079) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 2],) ,
('saved value', 8.807483334805497) ,
('Remap node', 5, 'from ', 5, 'to', 3) ,
('Move gain:', -0.6316692534914079) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8.807483334805497) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.42056470905241) ,
([1, 0, 6, 7, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 4, 5],) ,
('saved value', 5.018587879244494) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 0, 7, 4, 5],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 4, 5],) ,
('saved value', 3.4391525882969045) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([7, 1, 6, 0, 4, 5],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 4, 5],) ,
('saved value', 3.4391525882969045) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4.807483334805497) ,
([4, 1, 6, 7, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 0, 5],) ,
('saved value', 4.631669253491408) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4.631669253491409) ,
([5, 1, 6, 7, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 6, 7, 4, 0],) ,
('saved value', 4.807483334805496) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 6, 1, 7, 4, 5],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 4, 5],) ,
('saved value', 4.4391525882969045) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 6, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 4, 5],) ,
('saved value', 5.4391525882969045) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2.807483334805497) ,
([0, 4, 6, 7, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 1, 5],) ,
('saved value', 6.631669253491408) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -2.082116090469478) ,
([0, 5, 6, 7, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 4, 1],) ,
('saved value', 7.357036497827426) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, 5],) ,
('saved value', 5.4391525882969045) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -3.807483334805497) ,
([0, 1, 4, 7, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 6, 5],) ,
('saved value', 5.631669253491408) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 5) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 6) ,
('Swap gain:', -3.631669253491409) ,
([0, 1, 5, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 4, 6],) ,
('saved value', 5.807483334805496) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2.807483334805497) ,
([0, 1, 6, 4, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 7, 5],) ,
('saved value', 6.631669253491408) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 5) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 7) ,
('Swap gain:', -2.631669253491408) ,
([0, 1, 6, 5, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 4, 7],) ,
('saved value', 6.807483334805497) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -0.1214865053792139) ,
([0, 1, 6, 7, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 4],) ,
('saved value', 9.317666082917691) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 6, 7, 4, 5]) ,
('Current mapping', [0, 1, 6, 7, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([6, 5, 1, 4, 0, 7],) ,
('node_pair', (0, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 7)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [6, 5, 1, 4, 0, 7]) ,
('Triple match number at start:', 0.0) ,
('Remap node', 0, 'from ', 6, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 5, 1, 4, 0, 7],) ,
('saved value', 0.0) ,
('Remap node', 0, 'from ', 6, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 5, 1, 4, 0, 7],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 5, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 2, 1, 4, 0, 7],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 5, 'to', 3) ,
('Move gain:', 0.31363207184755604) ,
('Computing match for mapping',) ,
([6, 3, 1, 4, 0, 7],) ,
('saved value', 0.31363207184755604) ,
('Remap node', 2, 'from ', 1, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 5, 2, 4, 0, 7],) ,
('saved value', 0.0) ,
('Remap node', 2, 'from ', 1, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 5, 3, 4, 0, 7],) ,
('saved value', 0.0) ,
('Remap node', 3, 'from ', 4, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 5, 1, 2, 0, 7],) ,
('saved value', 0.0) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 5, 1, 3, 0, 7],) ,
('saved value', 0.0) ,
('Remap node', 4, 'from ', 0, 'to', 2) ,
('Move gain:', 0.6844726603886337) ,
('Computing match for mapping',) ,
([6, 5, 1, 4, 2, 7],) ,
('saved value', 0.6844726603886337) ,
('Remap node', 4, 'from ', 0, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 5, 1, 4, 3, 7],) ,
('saved value', 0.0) ,
('Remap node', 5, 'from ', 7, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 5, 1, 4, 0, 2],) ,
('saved value', 0.0) ,
('Remap node', 5, 'from ', 7, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 5, 1, 4, 0, 3],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 6, ',', 1, '-', 5) ,
([6, 5, 1, 4, 0, 7],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 6) ,
('Swap gain:', 0.0) ,
([5, 6, 1, 4, 0, 7],) ,
('Computing match for mapping',) ,
([5, 6, 1, 4, 0, 7],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 6, ',', 2, '-', 1) ,
([6, 5, 1, 4, 0, 7],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 6) ,
('Swap gain:', 1.289717645473795) ,
([1, 5, 6, 4, 0, 7],) ,
('Computing match for mapping',) ,
([1, 5, 6, 4, 0, 7],) ,
('saved value', 1.289717645473795) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 6, ',', 3, '-', 4) ,
([6, 5, 1, 4, 0, 7],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 6) ,
('Swap gain:', 0.0) ,
([4, 5, 1, 6, 0, 7],) ,
('Computing match for mapping',) ,
([4, 5, 1, 6, 0, 7],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 6, ',', 4, '-', 0) ,
([6, 5, 1, 4, 0, 7],) ,
('After swapping:', 0, '-', 0, ',', 4, '-', 6) ,
('Swap gain:', 2.0) ,
([0, 5, 1, 4, 6, 7],) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 6, 7],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 6, ',', 5, '-', 7) ,
([6, 5, 1, 4, 0, 7],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([7, 5, 1, 4, 0, 6],) ,
('Computing match for mapping',) ,
([7, 5, 1, 4, 0, 6],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 1) ,
([6, 5, 1, 4, 0, 7],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 5) ,
('Swap gain:', 1.0) ,
([6, 1, 5, 4, 0, 7],) ,
('Computing match for mapping',) ,
([6, 1, 5, 4, 0, 7],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 4) ,
([6, 5, 1, 4, 0, 7],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', 0.0) ,
([6, 4, 1, 5, 0, 7],) ,
('Computing match for mapping',) ,
([6, 4, 1, 5, 0, 7],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 0) ,
([6, 5, 1, 4, 0, 7],) ,
('After swapping:', 1, '-', 0, ',', 4, '-', 5) ,
('Swap gain:', 0.9871126784403466) ,
([6, 0, 1, 4, 5, 7],) ,
('Computing match for mapping',) ,
([6, 0, 1, 4, 5, 7],) ,
('saved value', 0.9871126784403466) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 5, ',', 5, '-', 7) ,
([6, 5, 1, 4, 0, 7],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', 0.6316692534914087) ,
([6, 7, 1, 4, 0, 5],) ,
('Computing match for mapping',) ,
([6, 7, 1, 4, 0, 5],) ,
('saved value', 0.6316692534914087) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 4) ,
([6, 5, 1, 4, 0, 7],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([6, 5, 4, 1, 0, 7],) ,
('Computing match for mapping',) ,
([6, 5, 4, 1, 0, 7],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 0) ,
([6, 5, 1, 4, 0, 7],) ,
('After swapping:', 2, '-', 0, ',', 4, '-', 1) ,
('Swap gain:', 0.0) ,
([6, 5, 0, 4, 1, 7],) ,
('Computing match for mapping',) ,
([6, 5, 0, 4, 1, 7],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([6, 5, 1, 4, 0, 7],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', 0.5495531630219287) ,
([6, 5, 7, 4, 0, 1],) ,
('Computing match for mapping',) ,
([6, 5, 7, 4, 0, 1],) ,
('saved value', 0.5495531630219287) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 0) ,
([6, 5, 1, 4, 0, 7],) ,
('After swapping:', 3, '-', 0, ',', 4, '-', 4) ,
('Swap gain:', 0.807483334805497) ,
([6, 5, 1, 0, 4, 7],) ,
('Computing match for mapping',) ,
([6, 5, 1, 0, 4, 7],) ,
('saved value', 0.807483334805497) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 7) ,
([6, 5, 1, 4, 0, 7],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', 1.6202710499511404) ,
([6, 5, 1, 7, 0, 4],) ,
('Computing match for mapping',) ,
([6, 5, 1, 7, 0, 4],) ,
('saved value', 1.6202710499511404) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 0, ',', 5, '-', 7) ,
([6, 5, 1, 4, 0, 7],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', 0.0) ,
([6, 5, 1, 4, 7, 0],) ,
('Computing match for mapping',) ,
([6, 5, 1, 4, 7, 0],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [6, 5, 1, 4, 0, 7]) ,
('Current mapping', [0, 5, 1, 4, 6, 7]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 2.0) ,
('Current mapping:', [0, 5, 1, 4, 6, 7]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 5, 1, 4, 6, 7],) ,
('saved value', 0.0) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([3, 5, 1, 4, 6, 7],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 5, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 6, 7],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 5, 'to', 3) ,
('Move gain:', 0.31363207184755604) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 6, 7],) ,
('saved value', 2.313632071847556) ,
('Remap node', 2, 'from ', 1, 'to', 2) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 6, 7],) ,
('saved value', 3.0) ,
('Remap node', 2, 'from ', 1, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 3, 4, 6, 7],) ,
('saved value', 2.0) ,
('Remap node', 3, 'from ', 4, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 1, 2, 6, 7],) ,
('saved value', 2.0) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 1, 3, 6, 7],) ,
('saved value', 2.0) ,
('Remap node', 4, 'from ', 6, 'to', 2) ,
('Move gain:', 0.6844726603886337) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 2, 7],) ,
('saved value', 2.684472660388634) ,
('Remap node', 4, 'from ', 6, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 3, 7],) ,
('saved value', 2.0) ,
('Remap node', 5, 'from ', 7, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 6, 2],) ,
('saved value', 2.0) ,
('Remap node', 5, 'from ', 7, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 6, 3],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 5) ,
([0, 5, 1, 4, 6, 7],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 0) ,
('Swap gain:', -1.710282354526205) ,
([5, 0, 1, 4, 6, 7],) ,
('Computing match for mapping',) ,
([5, 0, 1, 4, 6, 7],) ,
('saved value', 0.2897176454737951) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 5, 1, 4, 6, 7],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -1.710282354526205) ,
([1, 5, 0, 4, 6, 7],) ,
('Computing match for mapping',) ,
([1, 5, 0, 4, 6, 7],) ,
('saved value', 0.2897176454737951) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 5, 1, 4, 6, 7],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([4, 5, 1, 0, 6, 7],) ,
('Computing match for mapping',) ,
([4, 5, 1, 0, 6, 7],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 5, 1, 4, 6, 7],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([6, 5, 1, 4, 0, 7],) ,
('Computing match for mapping',) ,
([6, 5, 1, 4, 0, 7],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 5, 1, 4, 6, 7],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([7, 5, 1, 4, 6, 0],) ,
('Computing match for mapping',) ,
([7, 5, 1, 4, 6, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 1) ,
([0, 5, 1, 4, 6, 7],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 5) ,
('Swap gain:', 2.0) ,
([0, 1, 5, 4, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 6, 7],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 4) ,
([0, 5, 1, 4, 6, 7],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 4, 1, 5, 6, 7],) ,
('Computing match for mapping',) ,
([0, 4, 1, 5, 6, 7],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 6) ,
([0, 5, 1, 4, 6, 7],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', 0.6973950329665515) ,
([0, 6, 1, 4, 5, 7],) ,
('Computing match for mapping',) ,
([0, 6, 1, 4, 5, 7],) ,
('saved value', 2.6973950329665515) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 5, ',', 5, '-', 7) ,
([0, 5, 1, 4, 6, 7],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', 0.6316692534914087) ,
([0, 7, 1, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 7, 1, 4, 6, 5],) ,
('saved value', 2.631669253491409) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 4) ,
([0, 5, 1, 4, 6, 7],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 5, 4, 1, 6, 7],) ,
('Computing match for mapping',) ,
([0, 5, 4, 1, 6, 7],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 6) ,
([0, 5, 1, 4, 6, 7],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', 2.0) ,
([0, 5, 6, 4, 1, 7],) ,
('Computing match for mapping',) ,
([0, 5, 6, 4, 1, 7],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 1, ',', 5, '-', 7) ,
([0, 5, 1, 4, 6, 7],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', 0.5495531630219287) ,
([0, 5, 7, 4, 6, 1],) ,
('Computing match for mapping',) ,
([0, 5, 7, 4, 6, 1],) ,
('saved value', 2.549553163021929) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 6) ,
([0, 5, 1, 4, 6, 7],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', 0.807483334805497) ,
([0, 5, 1, 6, 4, 7],) ,
('Computing match for mapping',) ,
([0, 5, 1, 6, 4, 7],) ,
('saved value', 2.807483334805497) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 7) ,
([0, 5, 1, 4, 6, 7],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', 1.6202710499511404) ,
([0, 5, 1, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 5, 1, 7, 6, 4],) ,
('saved value', 3.6202710499511404) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 5, 1, 4, 6, 7],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 5, 1, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 7, 6],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [0, 5, 1, 4, 6, 7]) ,
('Current mapping', [0, 1, 5, 4, 6, 7]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [0, 1, 5, 4, 6, 7]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([2, 1, 5, 4, 6, 7],) ,
('saved value', 1.0) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([3, 1, 5, 4, 6, 7],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 6, 7],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -1.686367928152444) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 6, 7],) ,
('saved value', 2.313632071847556) ,
('Remap node', 2, 'from ', 5, 'to', 2) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 7],) ,
('saved value', 5.0) ,
('Remap node', 2, 'from ', 5, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 6, 7],) ,
('saved value', 4.0) ,
('Remap node', 3, 'from ', 4, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 6, 7],) ,
('saved value', 4.0) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 6, 7],) ,
('saved value', 4.0) ,
('Remap node', 4, 'from ', 6, 'to', 2) ,
('Move gain:', 0.6844726603886337) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 7],) ,
('saved value', 4.684472660388634) ,
('Remap node', 4, 'from ', 6, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 3, 7],) ,
('saved value', 4.0) ,
('Remap node', 5, 'from ', 7, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 6, 2],) ,
('saved value', 4.0) ,
('Remap node', 5, 'from ', 7, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 6, 3],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 5, 4, 6, 7],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.42056470905241) ,
([1, 0, 5, 4, 6, 7],) ,
('Computing match for mapping',) ,
([1, 0, 5, 4, 6, 7],) ,
('saved value', 0.5794352909475902) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 1, 5, 4, 6, 7],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 1, 0, 4, 6, 7],) ,
('Computing match for mapping',) ,
([5, 1, 0, 4, 6, 7],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 5, 4, 6, 7],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 1, 5, 0, 6, 7],) ,
('Computing match for mapping',) ,
([4, 1, 5, 0, 6, 7],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 6) ,
([0, 1, 5, 4, 6, 7],) ,
('After swapping:', 0, '-', 6, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([6, 1, 5, 4, 0, 7],) ,
('Computing match for mapping',) ,
([6, 1, 5, 4, 0, 7],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 1, 5, 4, 6, 7],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([7, 1, 5, 4, 6, 0],) ,
('Computing match for mapping',) ,
([7, 1, 5, 4, 6, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 5) ,
([0, 1, 5, 4, 6, 7],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 5, 1, 4, 6, 7],) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 6, 7],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 5, 4, 6, 7],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 4, 5, 1, 6, 7],) ,
('Computing match for mapping',) ,
([0, 4, 5, 1, 6, 7],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 6) ,
([0, 1, 5, 4, 6, 7],) ,
('After swapping:', 1, '-', 6, ',', 4, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 6, 5, 4, 1, 7],) ,
('Computing match for mapping',) ,
([0, 6, 5, 4, 1, 7],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 7) ,
([0, 1, 5, 4, 6, 7],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -1.4504468369780712) ,
([0, 7, 5, 4, 6, 1],) ,
('Computing match for mapping',) ,
([0, 7, 5, 4, 6, 1],) ,
('saved value', 2.549553163021929) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 4) ,
([0, 1, 5, 4, 6, 7],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', 0.0) ,
([0, 1, 4, 5, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 6, 7],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 6) ,
([0, 1, 5, 4, 6, 7],) ,
('After swapping:', 2, '-', 6, ',', 4, '-', 5) ,
('Swap gain:', 2.6973950329665515) ,
([0, 1, 6, 4, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 7],) ,
('saved value', 6.6973950329665515) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 7) ,
([0, 1, 5, 4, 6, 7],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', 0.6316692534914087) ,
([0, 1, 7, 4, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 6, 5],) ,
('saved value', 4.631669253491409) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 6) ,
([0, 1, 5, 4, 6, 7],) ,
('After swapping:', 3, '-', 6, ',', 4, '-', 4) ,
('Swap gain:', 0.807483334805497) ,
([0, 1, 5, 6, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 5, 6, 4, 7],) ,
('saved value', 4.807483334805497) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 7) ,
([0, 1, 5, 4, 6, 7],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', 1.6202710499511404) ,
([0, 1, 5, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 6, 4],) ,
('saved value', 5.620271049951141) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 6, ',', 5, '-', 7) ,
([0, 1, 5, 4, 6, 7],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 1, 5, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 6],) ,
('saved value', 4.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 5, 4, 6, 7]) ,
('Current mapping', [0, 1, 6, 4, 5, 7]) ,
('Gain after the hill-climbing', 2.6973950329665515) ,
('Update triple match number to:', 6.6973950329665515) ,
('Current mapping:', [0, 1, 6, 4, 5, 7]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([2, 1, 6, 4, 5, 7],) ,
('saved value', 2.6973950329665515) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([3, 1, 6, 4, 5, 7],) ,
('saved value', 2.6973950329665515) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 6, 4, 5, 7],) ,
('saved value', 4.6973950329665515) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -1.686367928152444) ,
('Computing match for mapping',) ,
([0, 3, 6, 4, 5, 7],) ,
('saved value', 5.011027104814108) ,
('Remap node', 2, 'from ', 6, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7],) ,
('saved value', 5.6973950329665515) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 7],) ,
('saved value', 4.6973950329665515) ,
('Remap node', 3, 'from ', 4, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 7],) ,
('saved value', 6.6973950329665515) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -8.881784197001252e-16) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 5, 7],) ,
('saved value', 6.697395032966551) ,
('Remap node', 4, 'from ', 5, 'to', 2) ,
('Move gain:', -0.012922372577917729) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 2, 7],) ,
('saved value', 6.684472660388634) ,
('Remap node', 4, 'from ', 5, 'to', 3) ,
('Move gain:', -0.6973950329665515) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 3, 7],) ,
('saved value', 6.0) ,
('Remap node', 5, 'from ', 7, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2],) ,
('saved value', 6.6973950329665515) ,
('Remap node', 5, 'from ', 7, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 3],) ,
('saved value', 6.6973950329665515) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 4, 5, 7],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.42056470905241) ,
([1, 0, 6, 4, 5, 7],) ,
('Computing match for mapping',) ,
([1, 0, 6, 4, 5, 7],) ,
('saved value', 2.276830323914141) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 4, 5, 7],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 1, 0, 4, 5, 7],) ,
('Computing match for mapping',) ,
([6, 1, 0, 4, 5, 7],) ,
('saved value', 1.6973950329665515) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 6, 4, 5, 7],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 1, 6, 0, 5, 7],) ,
('Computing match for mapping',) ,
([4, 1, 6, 0, 5, 7],) ,
('saved value', 2.6973950329665515) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 6, 4, 5, 7],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4.6973950329665515) ,
([5, 1, 6, 4, 0, 7],) ,
('Computing match for mapping',) ,
([5, 1, 6, 4, 0, 7],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 7) ,
([0, 1, 6, 4, 5, 7],) ,
('After swapping:', 0, '-', 7, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([7, 1, 6, 4, 5, 0],) ,
('Computing match for mapping',) ,
([7, 1, 6, 4, 5, 0],) ,
('saved value', 2.6973950329665515) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 4, 5, 7],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 6, 1, 4, 5, 7],) ,
('Computing match for mapping',) ,
([0, 6, 1, 4, 5, 7],) ,
('saved value', 2.6973950329665515) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 6, 4, 5, 7],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 4, 6, 1, 5, 7],) ,
('Computing match for mapping',) ,
([0, 4, 6, 1, 5, 7],) ,
('saved value', 4.6973950329665515) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 6, 4, 5, 7],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2.6973950329665515) ,
([0, 5, 6, 4, 1, 7],) ,
('Computing match for mapping',) ,
([0, 5, 6, 4, 1, 7],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 7) ,
([0, 1, 6, 4, 5, 7],) ,
('After swapping:', 1, '-', 7, ',', 5, '-', 1) ,
('Swap gain:', -1.4504468369780712) ,
([0, 7, 6, 4, 5, 1],) ,
('Computing match for mapping',) ,
([0, 7, 6, 4, 5, 1],) ,
('saved value', 5.24694819598848) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 4) ,
([0, 1, 6, 4, 5, 7],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 6, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 4, 6, 5, 7],) ,
('saved value', 4.6973950329665515) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 5) ,
([0, 1, 6, 4, 5, 7],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 6) ,
('Swap gain:', -2.6973950329665515) ,
([0, 1, 5, 4, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 6, 7],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 7) ,
([0, 1, 6, 4, 5, 7],) ,
('After swapping:', 2, '-', 7, ',', 5, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 1, 7, 4, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6],) ,
('saved value', 4.6973950329665515) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 6, 4, 5, 7],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', 0.11008830183894514) ,
([0, 1, 6, 5, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 4, 7],) ,
('saved value', 6.807483334805497) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 7) ,
([0, 1, 6, 4, 5, 7],) ,
('After swapping:', 3, '-', 7, ',', 5, '-', 4) ,
('Swap gain:', 2.62027104995114) ,
([0, 1, 6, 7, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 4],) ,
('saved value', 9.317666082917691) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 7) ,
([0, 1, 6, 4, 5, 7],) ,
('After swapping:', 4, '-', 7, ',', 5, '-', 5) ,
('Swap gain:', -0.06572577947514358) ,
([0, 1, 6, 4, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 7, 5],) ,
('saved value', 6.631669253491408) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 6, 4, 5, 7]) ,
('Current mapping', [0, 1, 6, 7, 5, 4]) ,
('Gain after the hill-climbing', 2.62027104995114) ,
('Update triple match number to:', 9.317666082917691) ,
('Current mapping:', [0, 1, 6, 7, 5, 4]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 5, 4],) ,
('saved value', 5.317666082917691) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 5, 4],) ,
('saved value', 5.317666082917691) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 5, 4],) ,
('saved value', 7.317666082917691) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -1.686367928152444) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 5, 4],) ,
('saved value', 7.631298154765247) ,
('Remap node', 2, 'from ', 6, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 4],) ,
('saved value', 7.317666082917691) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 5, 4],) ,
('saved value', 6.317666082917691) ,
('Remap node', 3, 'from ', 7, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 4],) ,
('saved value', 7.317666082917691) ,
('Remap node', 3, 'from ', 7, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 5, 4],) ,
('saved value', 7.317666082917691) ,
('Remap node', 4, 'from ', 5, 'to', 2) ,
('Move gain:', -0.012922372577916619) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 4],) ,
('saved value', 9.304743710339775) ,
('Remap node', 4, 'from ', 5, 'to', 3) ,
('Move gain:', -0.6973950329665506) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 4],) ,
('saved value', 8.62027104995114) ,
('Remap node', 5, 'from ', 4, 'to', 2) ,
('Move gain:', -0.6202710499511408) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 2],) ,
('saved value', 8.69739503296655) ,
('Remap node', 5, 'from ', 4, 'to', 3) ,
('Move gain:', -0.620271049951139) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 3],) ,
('saved value', 8.697395032966552) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.42056470905241) ,
([1, 0, 6, 7, 5, 4],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 5, 4],) ,
('saved value', 4.897101373865281) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 0, 7, 5, 4],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 5, 4],) ,
('saved value', 3.3176660829176914) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([7, 1, 6, 0, 5, 4],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 5, 4],) ,
('saved value', 3.3176660829176914) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4.6973950329665515) ,
([5, 1, 6, 7, 0, 4],) ,
('Computing match for mapping',) ,
([5, 1, 6, 7, 0, 4],) ,
('saved value', 4.62027104995114) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -4.620271049951141) ,
([4, 1, 6, 7, 5, 0],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 5, 0],) ,
('saved value', 4.697395032966551) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 6, 1, 7, 5, 4],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 5, 4],) ,
('saved value', 4.317666082917691) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 6, 1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 5, 4],) ,
('saved value', 5.317666082917691) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2.6973950329665515) ,
([0, 5, 6, 7, 1, 4],) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 1, 4],) ,
('saved value', 6.62027104995114) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -2.0707178869292115) ,
([0, 4, 6, 7, 5, 1],) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 5, 1],) ,
('saved value', 7.24694819598848) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 4],) ,
('saved value', 5.317666082917691) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 5) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 6) ,
('Swap gain:', -3.6973950329665506) ,
([0, 1, 5, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 6, 4],) ,
('saved value', 5.620271049951141) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 4) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 6) ,
('Swap gain:', -3.6202710499511404) ,
([0, 1, 4, 7, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 6],) ,
('saved value', 5.697395032966551) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 5) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -2.6973950329665515) ,
([0, 1, 6, 5, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 7, 4],) ,
('saved value', 6.62027104995114) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 4) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 7) ,
('Swap gain:', -2.62027104995114) ,
([0, 1, 6, 4, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 7],) ,
('saved value', 6.6973950329665515) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 0.12148650537921313) ,
([0, 1, 6, 7, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 5],) ,
('saved value', 9.439152588296905) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 6, 7, 5, 4]) ,
('Current mapping', [0, 1, 6, 7, 4, 5]) ,
('Gain after the hill-climbing', 0.12148650537921313) ,
('Update triple match number to:', 9.439152588296905) ,
('Current mapping:', [0, 1, 6, 7, 4, 5]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 4, 5],) ,
('saved value', 6.4391525882969045) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 4, 5],) ,
('saved value', 5.4391525882969045) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -1.9999999999999982) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 4, 5],) ,
('saved value', 7.439152588296906) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -1.6863679281524444) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 4, 5],) ,
('saved value', 7.75278466014446) ,
('Remap node', 2, 'from ', 6, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 5],) ,
('saved value', 7.4391525882969045) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 4, 5],) ,
('saved value', 6.4391525882969045) ,
('Remap node', 3, 'from ', 7, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 4, 5],) ,
('saved value', 7.4391525882969045) ,
('Remap node', 3, 'from ', 7, 'to', 3) ,
('Move gain:', -1.9999999999999991) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5],) ,
('saved value', 7.439152588296905) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', -0.12301067441686264) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 5],) ,
('saved value', 9.316141913880042) ,
('Remap node', 4, 'from ', 4, 'to', 3) ,
('Move gain:', -0.8074833348054966) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 5],) ,
('saved value', 8.631669253491408) ,
('Remap node', 5, 'from ', 5, 'to', 2) ,
('Move gain:', -0.6316692534914079) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 2],) ,
('saved value', 8.807483334805497) ,
('Remap node', 5, 'from ', 5, 'to', 3) ,
('Move gain:', -0.6316692534914079) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8.807483334805497) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.42056470905241) ,
([1, 0, 6, 7, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 4, 5],) ,
('saved value', 5.018587879244494) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 0, 7, 4, 5],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 4, 5],) ,
('saved value', 3.4391525882969045) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([7, 1, 6, 0, 4, 5],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 4, 5],) ,
('saved value', 3.4391525882969045) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4.807483334805497) ,
([4, 1, 6, 7, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 0, 5],) ,
('saved value', 4.631669253491408) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4.631669253491409) ,
([5, 1, 6, 7, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 6, 7, 4, 0],) ,
('saved value', 4.807483334805496) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 6, 1, 7, 4, 5],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 4, 5],) ,
('saved value', 4.4391525882969045) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 6, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 4, 5],) ,
('saved value', 5.4391525882969045) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2.8074833348054966) ,
([0, 4, 6, 7, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 1, 5],) ,
('saved value', 6.631669253491408) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -2.082116090469478) ,
([0, 5, 6, 7, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 4, 1],) ,
('saved value', 7.357036497827426) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, 5],) ,
('saved value', 5.4391525882969045) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -3.8074833348054966) ,
([0, 1, 4, 7, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 6, 5],) ,
('saved value', 5.631669253491408) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 5) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 6) ,
('Swap gain:', -3.631669253491409) ,
([0, 1, 5, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 4, 6],) ,
('saved value', 5.807483334805496) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2.8074833348054966) ,
([0, 1, 6, 4, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 7, 5],) ,
('saved value', 6.631669253491408) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 5) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 7) ,
('Swap gain:', -2.631669253491408) ,
([0, 1, 6, 5, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 4, 7],) ,
('saved value', 6.807483334805497) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -0.12148650537921313) ,
([0, 1, 6, 7, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 4],) ,
('saved value', 9.317666082917691) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 6, 7, 4, 5]) ,
('Current mapping', [0, 1, 6, 7, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([1, 7, 6, 5, 0, 2],) ,
('node_pair', (0, 1)) ,
('instance/attribute match', 0.289717645473795) ,
('node_pair', (1, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 6)) ,
('instance/attribute match', 1.0) ,
('node_pair', (3, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 2)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 1.289717645473795) ,
('Node mapping at start', [1, 7, 6, 5, 0, 2]) ,
('Triple match number at start:', 1.289717645473795) ,
('Remap node', 0, 'from ', 1, 'to', 3) ,
('Move gain:', -0.289717645473795) ,
('Computing match for mapping',) ,
([3, 7, 6, 5, 0, 2],) ,
('saved value', 1.0) ,
('Remap node', 0, 'from ', 1, 'to', 4) ,
('Move gain:', -0.289717645473795) ,
('Computing match for mapping',) ,
([4, 7, 6, 5, 0, 2],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 7, 'to', 3) ,
('Move gain:', 0.31363207184755604) ,
('Computing match for mapping',) ,
([1, 3, 6, 5, 0, 2],) ,
('saved value', 1.6033497173213511) ,
('Remap node', 1, 'from ', 7, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 4, 6, 5, 0, 2],) ,
('saved value', 1.289717645473795) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 7, 3, 5, 0, 2],) ,
('saved value', 0.2897176454737951) ,
('Remap node', 2, 'from ', 6, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([1, 7, 4, 5, 0, 2],) ,
('saved value', 0.2897176454737951) ,
('Remap node', 3, 'from ', 5, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 7, 6, 3, 0, 2],) ,
('saved value', 1.289717645473795) ,
('Remap node', 3, 'from ', 5, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 7, 6, 4, 0, 2],) ,
('saved value', 1.289717645473795) ,
('Remap node', 4, 'from ', 0, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 7, 6, 5, 3, 2],) ,
('saved value', 1.289717645473795) ,
('Remap node', 4, 'from ', 0, 'to', 4) ,
('Move gain:', 0.807483334805497) ,
('Computing match for mapping',) ,
([1, 7, 6, 5, 4, 2],) ,
('saved value', 2.0972009802792924) ,
('Remap node', 5, 'from ', 2, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 7, 6, 5, 0, 3],) ,
('saved value', 1.289717645473795) ,
('Remap node', 5, 'from ', 2, 'to', 4) ,
('Move gain:', 0.6202710499511404) ,
('Computing match for mapping',) ,
([1, 7, 6, 5, 0, 4],) ,
('saved value', 1.9099886954249354) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 7) ,
([1, 7, 6, 5, 0, 2],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 1) ,
('Swap gain:', 0.7102823545262049) ,
([7, 1, 6, 5, 0, 2],) ,
('Computing match for mapping',) ,
([7, 1, 6, 5, 0, 2],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 6) ,
([1, 7, 6, 5, 0, 2],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -1.289717645473795) ,
([6, 7, 1, 5, 0, 2],) ,
('Computing match for mapping',) ,
([6, 7, 1, 5, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', 5) ,
([1, 7, 6, 5, 0, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 1) ,
('Swap gain:', -0.289717645473795) ,
([5, 7, 6, 1, 0, 2],) ,
('Computing match for mapping',) ,
([5, 7, 6, 1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', 0) ,
([1, 7, 6, 5, 0, 2],) ,
('After swapping:', 0, '-', 0, ',', 4, '-', 1) ,
('Swap gain:', 2.710282354526205) ,
([0, 7, 6, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 6, 5, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 1, ',', 5, '-', 2) ,
([1, 7, 6, 5, 0, 2],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', 0.25983551754813367) ,
([2, 7, 6, 5, 0, 1],) ,
('Computing match for mapping',) ,
([2, 7, 6, 5, 0, 1],) ,
('saved value', 1.5495531630219288) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 6) ,
([1, 7, 6, 5, 0, 2],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 7) ,
('Swap gain:', -1.0) ,
([1, 6, 7, 5, 0, 2],) ,
('Computing match for mapping',) ,
([1, 6, 7, 5, 0, 2],) ,
('saved value', 0.2897176454737951) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 5) ,
([1, 7, 6, 5, 0, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 7) ,
('Swap gain:', 2.0) ,
([1, 5, 6, 7, 0, 2],) ,
('Computing match for mapping',) ,
([1, 5, 6, 7, 0, 2],) ,
('saved value', 3.289717645473795) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 0) ,
([1, 7, 6, 5, 0, 2],) ,
('After swapping:', 1, '-', 0, ',', 4, '-', 7) ,
('Swap gain:', 0.289717645473795) ,
([1, 0, 6, 5, 7, 2],) ,
('Computing match for mapping',) ,
([1, 0, 6, 5, 7, 2],) ,
('saved value', 1.5794352909475902) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 2) ,
([1, 7, 6, 5, 0, 2],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', 0.0) ,
([1, 2, 6, 5, 0, 7],) ,
('Computing match for mapping',) ,
([1, 2, 6, 5, 0, 7],) ,
('saved value', 1.289717645473795) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 5) ,
([1, 7, 6, 5, 0, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 6) ,
('Swap gain:', -1.0) ,
([1, 7, 5, 6, 0, 2],) ,
('Computing match for mapping',) ,
([1, 7, 5, 6, 0, 2],) ,
('saved value', 0.2897176454737951) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 0) ,
([1, 7, 6, 5, 0, 2],) ,
('After swapping:', 2, '-', 0, ',', 4, '-', 6) ,
('Swap gain:', -1.0) ,
([1, 7, 0, 5, 6, 2],) ,
('Computing match for mapping',) ,
([1, 7, 0, 5, 6, 2],) ,
('saved value', 0.2897176454737951) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 2) ,
([1, 7, 6, 5, 0, 2],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 6) ,
('Swap gain:', -1.0) ,
([1, 7, 2, 5, 0, 6],) ,
('Computing match for mapping',) ,
([1, 7, 2, 5, 0, 6],) ,
('saved value', 0.2897176454737951) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 0) ,
([1, 7, 6, 5, 0, 2],) ,
('After swapping:', 3, '-', 0, ',', 4, '-', 5) ,
('Swap gain:', 0.6973950329665515) ,
([1, 7, 6, 0, 5, 2],) ,
('Computing match for mapping',) ,
([1, 7, 6, 0, 5, 2],) ,
('saved value', 1.9871126784403466) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 2) ,
([1, 7, 6, 5, 0, 2],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', 0.6316692534914087) ,
([1, 7, 6, 2, 0, 5],) ,
('Computing match for mapping',) ,
([1, 7, 6, 2, 0, 5],) ,
('saved value', 1.9213868989652036) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 0, ',', 5, '-', 2) ,
([1, 7, 6, 5, 0, 2],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', 0.6844726603886337) ,
([1, 7, 6, 5, 2, 0],) ,
('Computing match for mapping',) ,
([1, 7, 6, 5, 2, 0],) ,
('saved value', 1.9741903058624288) ,
('Use swap gain',) ,
('Original mapping', [1, 7, 6, 5, 0, 2]) ,
('Current mapping', [0, 7, 6, 5, 1, 2]) ,
('Gain after the hill-climbing', 2.710282354526205) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [0, 7, 6, 5, 1, 2]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([3, 7, 6, 5, 1, 2],) ,
('saved value', 1.0) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 5, 1, 2],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 7, 'to', 3) ,
('Move gain:', 0.31363207184755604) ,
('Computing match for mapping',) ,
([0, 3, 6, 5, 1, 2],) ,
('saved value', 4.313632071847556) ,
('Remap node', 1, 'from ', 7, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 4, 6, 5, 1, 2],) ,
('saved value', 4.0) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 7, 3, 5, 1, 2],) ,
('saved value', 2.0) ,
('Remap node', 2, 'from ', 6, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 7, 4, 5, 1, 2],) ,
('saved value', 2.0) ,
('Remap node', 3, 'from ', 5, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 7, 6, 3, 1, 2],) ,
('saved value', 4.0) ,
('Remap node', 3, 'from ', 5, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 7, 6, 4, 1, 2],) ,
('saved value', 4.0) ,
('Remap node', 4, 'from ', 1, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 7, 6, 5, 3, 2],) ,
('saved value', 4.0) ,
('Remap node', 4, 'from ', 1, 'to', 4) ,
('Move gain:', 0.807483334805497) ,
('Computing match for mapping',) ,
([0, 7, 6, 5, 4, 2],) ,
('saved value', 4.807483334805497) ,
('Remap node', 5, 'from ', 2, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 7, 6, 5, 1, 3],) ,
('saved value', 4.0) ,
('Remap node', 5, 'from ', 2, 'to', 4) ,
('Move gain:', 0.6202710499511404) ,
('Computing match for mapping',) ,
([0, 7, 6, 5, 1, 4],) ,
('saved value', 4.620271049951141) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 7) ,
([0, 7, 6, 5, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 0) ,
('Swap gain:', -2.710282354526205) ,
([7, 0, 6, 5, 1, 2],) ,
('Computing match for mapping',) ,
([7, 0, 6, 5, 1, 2],) ,
('saved value', 1.2897176454737949) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 7, 6, 5, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([6, 7, 0, 5, 1, 2],) ,
('Computing match for mapping',) ,
([6, 7, 0, 5, 1, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 5) ,
([0, 7, 6, 5, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([5, 7, 6, 0, 1, 2],) ,
('Computing match for mapping',) ,
([5, 7, 6, 0, 1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 7, 6, 5, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -2.710282354526205) ,
([1, 7, 6, 5, 0, 2],) ,
('Computing match for mapping',) ,
([1, 7, 6, 5, 0, 2],) ,
('saved value', 1.289717645473795) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 7, 6, 5, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 7, 6, 5, 1, 0],) ,
('Computing match for mapping',) ,
([2, 7, 6, 5, 1, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 6) ,
([0, 7, 6, 5, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 6, 7, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 7, 5, 1, 2],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 5) ,
([0, 7, 6, 5, 1, 2],) ,
('After swapping:', 1, '-', 5, ',', 3, '-', 7) ,
('Swap gain:', 2.0) ,
([0, 5, 6, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 1, 2],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 1) ,
([0, 7, 6, 5, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 7) ,
('Swap gain:', 2.0) ,
([0, 1, 6, 5, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 7, 2],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 2) ,
([0, 7, 6, 5, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 2, 6, 5, 1, 7],) ,
('Computing match for mapping',) ,
([0, 2, 6, 5, 1, 7],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 5) ,
([0, 7, 6, 5, 1, 2],) ,
('After swapping:', 2, '-', 5, ',', 3, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 7, 5, 6, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 5, 6, 1, 2],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 1) ,
([0, 7, 6, 5, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 7, 1, 5, 6, 2],) ,
('Computing match for mapping',) ,
([0, 7, 1, 5, 6, 2],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 2) ,
([0, 7, 6, 5, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 6) ,
('Swap gain:', -1.0) ,
([0, 7, 2, 5, 1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 2, 5, 1, 6],) ,
('saved value', 3.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 5, ',', 4, '-', 1) ,
([0, 7, 6, 5, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 5) ,
('Swap gain:', 0.6973950329665515) ,
([0, 7, 6, 1, 5, 2],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 5, 2],) ,
('saved value', 4.6973950329665515) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 5, ',', 5, '-', 2) ,
([0, 7, 6, 5, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', 0.6316692534914087) ,
([0, 7, 6, 2, 1, 5],) ,
('Computing match for mapping',) ,
([0, 7, 6, 2, 1, 5],) ,
('saved value', 4.631669253491409) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 2) ,
([0, 7, 6, 5, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', 1.2340258234105623) ,
([0, 7, 6, 5, 2, 1],) ,
('Computing match for mapping',) ,
([0, 7, 6, 5, 2, 1],) ,
('saved value', 5.234025823410562) ,
('Use swap gain',) ,
('Original mapping', [0, 7, 6, 5, 1, 2]) ,
('Current mapping', [0, 5, 6, 7, 1, 2]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 5, 6, 7, 1, 2]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([3, 5, 6, 7, 1, 2],) ,
('saved value', 3.0) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([4, 5, 6, 7, 1, 2],) ,
('saved value', 3.0) ,
('Remap node', 1, 'from ', 5, 'to', 3) ,
('Move gain:', 0.3136320718475556) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 1, 2],) ,
('saved value', 6.313632071847556) ,
('Remap node', 1, 'from ', 5, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 1, 2],) ,
('saved value', 6.0) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 5, 3, 7, 1, 2],) ,
('saved value', 3.0) ,
('Remap node', 2, 'from ', 6, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 5, 4, 7, 1, 2],) ,
('saved value', 3.0) ,
('Remap node', 3, 'from ', 7, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 3, 1, 2],) ,
('saved value', 4.0) ,
('Remap node', 3, 'from ', 7, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 4, 1, 2],) ,
('saved value', 4.0) ,
('Remap node', 4, 'from ', 1, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 3, 2],) ,
('saved value', 6.0) ,
('Remap node', 4, 'from ', 1, 'to', 4) ,
('Move gain:', 0.8074833348054966) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 4, 2],) ,
('saved value', 6.807483334805497) ,
('Remap node', 5, 'from ', 2, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 1, 3],) ,
('saved value', 6.0) ,
('Remap node', 5, 'from ', 2, 'to', 4) ,
('Move gain:', 0.6202710499511399) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 1, 4],) ,
('saved value', 6.62027104995114) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 5) ,
([0, 5, 6, 7, 1, 2],) ,
('After swapping:', 0, '-', 5, ',', 1, '-', 0) ,
('Swap gain:', -2.710282354526205) ,
([5, 0, 6, 7, 1, 2],) ,
('Computing match for mapping',) ,
([5, 0, 6, 7, 1, 2],) ,
('saved value', 3.289717645473795) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 5, 6, 7, 1, 2],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 5, 0, 7, 1, 2],) ,
('Computing match for mapping',) ,
([6, 5, 0, 7, 1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 5, 6, 7, 1, 2],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([7, 5, 6, 0, 1, 2],) ,
('Computing match for mapping',) ,
([7, 5, 6, 0, 1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 5, 6, 7, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -2.710282354526205) ,
([1, 5, 6, 7, 0, 2],) ,
('Computing match for mapping',) ,
([1, 5, 6, 7, 0, 2],) ,
('saved value', 3.289717645473795) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 5, 6, 7, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 5, 6, 7, 1, 0],) ,
('Computing match for mapping',) ,
([2, 5, 6, 7, 1, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 5, ',', 2, '-', 6) ,
([0, 5, 6, 7, 1, 2],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 5) ,
('Swap gain:', -3.0) ,
([0, 6, 5, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 6, 5, 7, 1, 2],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 5, ',', 3, '-', 7) ,
([0, 5, 6, 7, 1, 2],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 7, 6, 5, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 6, 5, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 5, ',', 4, '-', 1) ,
([0, 5, 6, 7, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 5) ,
('Swap gain:', 2.6973950329665506) ,
([0, 1, 6, 7, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 2],) ,
('saved value', 8.69739503296655) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 5, ',', 5, '-', 2) ,
([0, 5, 6, 7, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', 0.6316692534914087) ,
([0, 2, 6, 7, 1, 5],) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 1, 5],) ,
('saved value', 6.631669253491409) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 5, 6, 7, 1, 2],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 5, 7, 6, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 7, 6, 1, 2],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 1) ,
([0, 5, 6, 7, 1, 2],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 6) ,
('Swap gain:', -3.0) ,
([0, 5, 1, 7, 6, 2],) ,
('Computing match for mapping',) ,
([0, 5, 1, 7, 6, 2],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 2) ,
([0, 5, 6, 7, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 5, 2, 7, 1, 6],) ,
('Computing match for mapping',) ,
([0, 5, 2, 7, 1, 6],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 1) ,
([0, 5, 6, 7, 1, 2],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 5, 6, 1, 7, 2],) ,
('Computing match for mapping',) ,
([0, 5, 6, 1, 7, 2],) ,
('saved value', 4.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 2) ,
([0, 5, 6, 7, 1, 2],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -2.0) ,
([0, 5, 6, 2, 1, 7],) ,
('Computing match for mapping',) ,
([0, 5, 6, 2, 1, 7],) ,
('saved value', 4.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 2) ,
([0, 5, 6, 7, 1, 2],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', 1.2340258234105623) ,
([0, 5, 6, 7, 2, 1],) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 2, 1],) ,
('saved value', 7.234025823410562) ,
('Use swap gain',) ,
('Original mapping', [0, 5, 6, 7, 1, 2]) ,
('Current mapping', [0, 1, 6, 7, 5, 2]) ,
('Gain after the hill-climbing', 2.6973950329665506) ,
('Update triple match number to:', 8.69739503296655) ,
('Current mapping:', [0, 1, 6, 7, 5, 2]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 5, 2],) ,
('saved value', 4.697395032966551) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 5, 2],) ,
('saved value', 4.697395032966551) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -1.686367928152444) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 5, 2],) ,
('saved value', 7.011027104814106) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 5, 2],) ,
('saved value', 6.697395032966551) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 5, 2],) ,
('saved value', 5.697395032966551) ,
('Remap node', 2, 'from ', 6, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 2],) ,
('saved value', 5.697395032966551) ,
('Remap node', 3, 'from ', 7, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 5, 2],) ,
('saved value', 6.697395032966551) ,
('Remap node', 3, 'from ', 7, 'to', 4) ,
('Move gain:', -1.9999999999999991) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2],) ,
('saved value', 6.6973950329665515) ,
('Remap node', 4, 'from ', 5, 'to', 3) ,
('Move gain:', -0.6973950329665506) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 2],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 5, 'to', 4) ,
('Move gain:', 0.11008830183894602) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 2],) ,
('saved value', 8.807483334805497) ,
('Remap node', 5, 'from ', 2, 'to', 3) ,
('Move gain:', 1.7763568394002505e-15) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 3],) ,
('saved value', 8.697395032966552) ,
('Remap node', 5, 'from ', 2, 'to', 4) ,
('Move gain:', 0.6202710499511408) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 4],) ,
('saved value', 9.317666082917691) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 5, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.42056470905241) ,
([1, 0, 6, 7, 5, 2],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 5, 2],) ,
('saved value', 4.27683032391414) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 5, 2],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 0, 7, 5, 2],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 5, 2],) ,
('saved value', 2.6973950329665506) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 5, 2],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([7, 1, 6, 0, 5, 2],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 5, 2],) ,
('saved value', 2.6973950329665506) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 6, 7, 5, 2],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4.6973950329665515) ,
([5, 1, 6, 7, 0, 2],) ,
('Computing match for mapping',) ,
([5, 1, 6, 7, 0, 2],) ,
('saved value', 3.999999999999999) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 6, 7, 5, 2],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 1, 6, 7, 5, 0],) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 5, 0],) ,
('saved value', 4.697395032966551) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 5, 2],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 6, 1, 7, 5, 2],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 5, 2],) ,
('saved value', 3.6973950329665506) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 5, 2],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -3.999999999999999) ,
([0, 7, 6, 1, 5, 2],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 5, 2],) ,
('saved value', 4.6973950329665515) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 6, 7, 5, 2],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2.6973950329665506) ,
([0, 5, 6, 7, 1, 2],) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 1, 2],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 6, 7, 5, 2],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -1.4504468369780703) ,
([0, 2, 6, 7, 5, 1],) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 5, 1],) ,
('saved value', 7.24694819598848) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 5, 2],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 5, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 2],) ,
('saved value', 4.697395032966551) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 5) ,
([0, 1, 6, 7, 5, 2],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 6) ,
('Swap gain:', -3.6973950329665515) ,
([0, 1, 5, 7, 6, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 6, 2],) ,
('saved value', 4.999999999999999) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 2) ,
([0, 1, 6, 7, 5, 2],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 7, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 6],) ,
('saved value', 6.697395032966551) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 5) ,
([0, 1, 6, 7, 5, 2],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -2.6973950329665506) ,
([0, 1, 6, 5, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 7, 2],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 2) ,
([0, 1, 6, 7, 5, 2],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -1.9999999999999991) ,
([0, 1, 6, 2, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 7],) ,
('saved value', 6.6973950329665515) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 2) ,
([0, 1, 6, 7, 5, 2],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 5) ,
('Swap gain:', 0.6187468809134913) ,
([0, 1, 6, 7, 2, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 5],) ,
('saved value', 9.316141913880042) ,
('Use move gain',) ,
('Original mapping', [0, 1, 6, 7, 5, 2]) ,
('Current mapping', [0, 1, 6, 7, 5, 4]) ,
('Gain after the hill-climbing', 0.6202710499511408) ,
('Update triple match number to:', 9.317666082917691) ,
('Current mapping:', [0, 1, 6, 7, 5, 4]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 5, 4],) ,
('saved value', 5.317666082917691) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 5, 4],) ,
('saved value', 5.317666082917691) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 5, 4],) ,
('saved value', 7.317666082917691) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -1.6863679281524444) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 5, 4],) ,
('saved value', 7.631298154765247) ,
('Remap node', 2, 'from ', 6, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 4],) ,
('saved value', 7.317666082917691) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 5, 4],) ,
('saved value', 6.317666082917691) ,
('Remap node', 3, 'from ', 7, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 5, 4],) ,
('saved value', 7.317666082917691) ,
('Remap node', 3, 'from ', 7, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 5, 4],) ,
('saved value', 7.317666082917691) ,
('Remap node', 4, 'from ', 5, 'to', 2) ,
('Move gain:', -0.012922372577916619) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 4],) ,
('saved value', 9.304743710339775) ,
('Remap node', 4, 'from ', 5, 'to', 3) ,
('Move gain:', -0.6973950329665506) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 4],) ,
('saved value', 8.62027104995114) ,
('Remap node', 5, 'from ', 4, 'to', 2) ,
('Move gain:', -0.6202710499511408) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 2],) ,
('saved value', 8.69739503296655) ,
('Remap node', 5, 'from ', 4, 'to', 3) ,
('Move gain:', -0.620271049951139) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 3],) ,
('saved value', 8.697395032966552) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.42056470905241) ,
([1, 0, 6, 7, 5, 4],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 5, 4],) ,
('saved value', 4.897101373865281) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 0, 7, 5, 4],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 5, 4],) ,
('saved value', 3.3176660829176914) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([7, 1, 6, 0, 5, 4],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 5, 4],) ,
('saved value', 3.3176660829176914) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -4.6973950329665515) ,
([5, 1, 6, 7, 0, 4],) ,
('Computing match for mapping',) ,
([5, 1, 6, 7, 0, 4],) ,
('saved value', 4.62027104995114) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 4) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 0, '-', 4, ',', 5, '-', 0) ,
('Swap gain:', -4.620271049951141) ,
([4, 1, 6, 7, 5, 0],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 5, 0],) ,
('saved value', 4.697395032966551) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 6, 1, 7, 5, 4],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 5, 4],) ,
('saved value', 4.317666082917691) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 6, 1, 5, 4],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 5, 4],) ,
('saved value', 5.317666082917691) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2.6973950329665515) ,
([0, 5, 6, 7, 1, 4],) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 1, 4],) ,
('saved value', 6.62027104995114) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 4) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 1, '-', 4, ',', 5, '-', 1) ,
('Swap gain:', -2.070717886929211) ,
([0, 4, 6, 7, 5, 1],) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 5, 1],) ,
('saved value', 7.24694819598848) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 5, 4],) ,
('saved value', 5.317666082917691) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 5) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 6) ,
('Swap gain:', -3.6973950329665506) ,
([0, 1, 5, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 6, 4],) ,
('saved value', 5.620271049951141) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 4) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 2, '-', 4, ',', 5, '-', 6) ,
('Swap gain:', -3.620271049951141) ,
([0, 1, 4, 7, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 5, 6],) ,
('saved value', 5.697395032966551) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 5) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 7) ,
('Swap gain:', -2.6973950329665515) ,
([0, 1, 6, 5, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 7, 4],) ,
('saved value', 6.62027104995114) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 4) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 3, '-', 4, ',', 5, '-', 7) ,
('Swap gain:', -2.62027104995114) ,
([0, 1, 6, 4, 5, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 7],) ,
('saved value', 6.6973950329665515) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 4) ,
([0, 1, 6, 7, 5, 4],) ,
('After swapping:', 4, '-', 4, ',', 5, '-', 5) ,
('Swap gain:', 0.12148650537921313) ,
([0, 1, 6, 7, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 5],) ,
('saved value', 9.439152588296905) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 6, 7, 5, 4]) ,
('Current mapping', [0, 1, 6, 7, 4, 5]) ,
('Gain after the hill-climbing', 0.12148650537921313) ,
('Update triple match number to:', 9.439152588296905) ,
('Current mapping:', [0, 1, 6, 7, 4, 5]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([2, 1, 6, 7, 4, 5],) ,
('saved value', 6.4391525882969045) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([3, 1, 6, 7, 4, 5],) ,
('saved value', 5.4391525882969045) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -1.9999999999999982) ,
('Computing match for mapping',) ,
([0, 2, 6, 7, 4, 5],) ,
('saved value', 7.439152588296906) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -1.6863679281524444) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 4, 5],) ,
('saved value', 7.75278466014446) ,
('Remap node', 2, 'from ', 6, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 4, 5],) ,
('saved value', 7.4391525882969045) ,
('Remap node', 2, 'from ', 6, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 4, 5],) ,
('saved value', 6.4391525882969045) ,
('Remap node', 3, 'from ', 7, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 4, 5],) ,
('saved value', 7.4391525882969045) ,
('Remap node', 3, 'from ', 7, 'to', 3) ,
('Move gain:', -1.9999999999999991) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 4, 5],) ,
('saved value', 7.439152588296905) ,
('Remap node', 4, 'from ', 4, 'to', 2) ,
('Move gain:', -0.12301067441686264) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 2, 5],) ,
('saved value', 9.316141913880042) ,
('Remap node', 4, 'from ', 4, 'to', 3) ,
('Move gain:', -0.8074833348054966) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 5],) ,
('saved value', 8.631669253491408) ,
('Remap node', 5, 'from ', 5, 'to', 2) ,
('Move gain:', -0.6316692534914079) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 2],) ,
('saved value', 8.807483334805497) ,
('Remap node', 5, 'from ', 5, 'to', 3) ,
('Move gain:', -0.6316692534914079) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 4, 3],) ,
('saved value', 8.807483334805497) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.42056470905241) ,
([1, 0, 6, 7, 4, 5],) ,
('Computing match for mapping',) ,
([1, 0, 6, 7, 4, 5],) ,
('saved value', 5.018587879244494) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 0, 7, 4, 5],) ,
('Computing match for mapping',) ,
([6, 1, 0, 7, 4, 5],) ,
('saved value', 3.4391525882969045) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([7, 1, 6, 0, 4, 5],) ,
('Computing match for mapping',) ,
([7, 1, 6, 0, 4, 5],) ,
('saved value', 3.4391525882969045) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 0, '-', 4, ',', 4, '-', 0) ,
('Swap gain:', -4.807483334805497) ,
([4, 1, 6, 7, 0, 5],) ,
('Computing match for mapping',) ,
([4, 1, 6, 7, 0, 5],) ,
('saved value', 4.631669253491408) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 5) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 0, '-', 5, ',', 5, '-', 0) ,
('Swap gain:', -4.631669253491409) ,
([5, 1, 6, 7, 4, 0],) ,
('Computing match for mapping',) ,
([5, 1, 6, 7, 4, 0],) ,
('saved value', 4.807483334805496) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 6, 1, 7, 4, 5],) ,
('Computing match for mapping',) ,
([0, 6, 1, 7, 4, 5],) ,
('saved value', 4.4391525882969045) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 6, 1, 4, 5],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 4, 5],) ,
('saved value', 5.4391525882969045) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 1, '-', 4, ',', 4, '-', 1) ,
('Swap gain:', -2.8074833348054966) ,
([0, 4, 6, 7, 1, 5],) ,
('Computing match for mapping',) ,
([0, 4, 6, 7, 1, 5],) ,
('saved value', 6.631669253491408) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 5) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 1, '-', 5, ',', 5, '-', 1) ,
('Swap gain:', -2.082116090469478) ,
([0, 5, 6, 7, 4, 1],) ,
('Computing match for mapping',) ,
([0, 5, 6, 7, 4, 1],) ,
('saved value', 7.357036497827426) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 7) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 6, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 4, 5],) ,
('saved value', 5.4391525882969045) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 2, '-', 4, ',', 4, '-', 6) ,
('Swap gain:', -3.8074833348054966) ,
([0, 1, 4, 7, 6, 5],) ,
('Computing match for mapping',) ,
([0, 1, 4, 7, 6, 5],) ,
('saved value', 5.631669253491408) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 5) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 2, '-', 5, ',', 5, '-', 6) ,
('Swap gain:', -3.631669253491409) ,
([0, 1, 5, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 4, 6],) ,
('saved value', 5.807483334805496) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 4) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 3, '-', 4, ',', 4, '-', 7) ,
('Swap gain:', -2.8074833348054966) ,
([0, 1, 6, 4, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 7, 5],) ,
('saved value', 6.631669253491408) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 5) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 3, '-', 5, ',', 5, '-', 7) ,
('Swap gain:', -2.631669253491408) ,
([0, 1, 6, 5, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 4, 7],) ,
('saved value', 6.807483334805497) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 4, ',', 5, '-', 5) ,
([0, 1, 6, 7, 4, 5],) ,
('After swapping:', 4, '-', 5, ',', 5, '-', 4) ,
('Swap gain:', -0.12148650537921313) ,
([0, 1, 6, 7, 5, 4],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 5, 4],) ,
('saved value', 9.317666082917691) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 6, 7, 4, 5]) ,
('Current mapping', [0, 1, 6, 7, 4, 5]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 9.684472660388634) ,
('best node mapping', [0, 1, 6, 7, 2, 3]) ,
('Best node mapping alignment:', 'a0(rise-01)-b0(rise-01) a1(stock)-b1(stock) a2(monetary-quantity)-b6(monetary-quantity) a3(cent)-b7(cent) a4(day)-b2(session) a5(recent)-b3(trade-01)') ,
('F-score:', 0.6456315106925756) ,
Smatch score F1 0.646
('AMR pair', 17) ,
('============================================',) ,
('AMR 1 (one-line):', '(m0 / marry-01:ARG1 (h0 / he):ARG2 (p0 / person:ARG0-of (h1 / have-rel-role-91:ARG1 (p1 / person:name (n1 / name:op1 "Pablo":op2 "Casals" )):ARG2 (w0 / widow)):name (n0 / name:op1 "Marta":op2 "Casals" )))') ,
('AMR 2 (one-line):', '(m0 / marry-01:ARG1 (h0 / he):ARG2 (p0 / person:ARG1-of (d0 / die-01):ARG0-of (h1 / have-rel-role-91:ARG0 (p1 / person:name (n1 / name:op1 "Casals" )):ARG2 (w0 / widow)):name (n0 / name:op1 "Marta" )):time (a0 / after))') ,
('Instance triples of AMR 1:', 8) ,
([('instance', 'a0', 'marry-01'), ('instance', 'a1', 'he'), ('instance', 'a2', 'person'), ('instance', 'a3', 'have-rel-role-91'), ('instance', 'a4', 'person'), ('instance', 'a5', 'name'), ('instance', 'a6', 'widow'), ('instance', 'a7', 'name')],) ,
('Attribute triples of AMR 1:', 5) ,
([('TOP', 'a0', 'marry-01'), ('op1', 'a5', 'Pablo_'), ('op2', 'a5', 'Casals_'), ('op1', 'a7', 'Marta_'), ('op2', 'a7', 'Casals_')],) ,
('Relation triples of AMR 1:', 7) ,
([('ARG1', 'a0', 'a1'), ('ARG2', 'a0', 'a2'), ('name', 'a2', 'a7'), ('ARG0', 'a3', 'a2'), ('ARG1', 'a3', 'a4'), ('ARG2', 'a3', 'a6'), ('name', 'a4', 'a5')],) ,
('Instance triples of AMR 2:', 10) ,
([('instance', 'b0', 'marry-01'), ('instance', 'b1', 'he'), ('instance', 'b2', 'person'), ('instance', 'b3', 'die-01'), ('instance', 'b4', 'have-rel-role-91'), ('instance', 'b5', 'person'), ('instance', 'b6', 'name'), ('instance', 'b7', 'widow'), ('instance', 'b8', 'name'), ('instance', 'b9', 'after')],) ,
('Attribute triples of AMR 2:', 3) ,
([('TOP', 'b0', 'marry-01'), ('op1', 'b6', 'Casals_'), ('op1', 'b8', 'Marta_')],) ,
('Relation triples of AMR 2:', 9) ,
([('ARG1', 'b0', 'b1'), ('ARG2', 'b0', 'b2'), ('time', 'b0', 'b9'), ('name', 'b2', 'b8'), ('ARG1', 'b3', 'b2'), ('ARG0', 'b4', 'b2'), ('ARG0', 'b4', 'b5'), ('ARG2', 'b4', 'b7'), ('name', 'b5', 'b6')],) ,
('Similarity', 'marry-01', 'marry-01', 1.0) ,
('Similarity', 'marry-01', 'he', 0.0) ,
('Similarity', 'marry-01', 'person', 0.0) ,
('Similarity', 'marry-01', 'die-01', 0.0) ,
('Similarity', 'marry-01', 'have-rel-role-91', 0.0) ,
('Similarity', 'marry-01', 'name', 0.0) ,
('Similarity', 'marry-01', 'widow', 0.28533220487186556) ,
('Similarity', 'marry-01', 'after', 0.0) ,
('Similarity', 'he', 'he', 1.0) ,
('Similarity', 'he', 'person', 0.6219057025428483) ,
('Similarity', 'he', 'die-01', 0.0) ,
('Similarity', 'he', 'have-rel-role-91', 0.0) ,
('Similarity', 'he', 'name', 0.6059073705797922) ,
('Similarity', 'he', 'widow', 0.0) ,
('Similarity', 'he', 'after', 0.7504280831587989) ,
('Similarity', 'person', 'person', 1.0) ,
('Similarity', 'person', 'die-01', 0.0) ,
('Similarity', 'person', 'have-rel-role-91', 0.0) ,
('Similarity', 'person', 'name', 0.5223025907899909) ,
('Similarity', 'person', 'widow', 0.0) ,
('Similarity', 'person', 'after', 0.0) ,
('Similarity', 'have-rel-role-91', 'die-01', 0.0) ,
('Similarity', 'have-rel-role-91', 'have-rel-role-91', 1.0) ,
('Similarity', 'have-rel-role-91', 'name', 0.0) ,
('Similarity', 'have-rel-role-91', 'widow', 0.0) ,
('Similarity', 'have-rel-role-91', 'after', 0.0) ,
('Similarity', 'name', 'die-01', 0.0) ,
('Similarity', 'name', 'name', 1.0) ,
('Similarity', 'name', 'widow', 0.0) ,
('Similarity', 'name', 'after', 0.5179041944633578) ,
('Similarity', 'widow', 'die-01', 0.25291718569411326) ,
('Similarity', 'widow', 'widow', 1.0) ,
('Similarity', 'widow', 'after', 0.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2.0, (1, 1): 1, (2, 2): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0}, (0, 3): {-1: 0.0, (1, 2): 1}, (0, 4): {-1: 0.0, (2, 7): 1}, (0, 5): {-1: 0.0}, (0, 6): {-1: 0.0}, (0, 7): {-1: 0.28533220487186556}, (0, 8): {-1: 0.0}, (0, 9): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 1.0, (0, 0): 1}, (1, 2): {-1: 0.6219057025428483, (0, 3): 1}, (1, 3): {-1: 0.0}, (1, 4): {-1: 0.0}, (1, 5): {-1: 0.6219057025428483}, (1, 6): {-1: 0.6059073705797922}, (1, 7): {-1: 0.0}, (1, 8): {-1: 0.6059073705797922}, (1, 9): {-1: 0.7504280831587989}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.6219057025428483}, (2, 2): {-1: 1.0, (0, 0): 1, (7, 8): 1, (3, 4): 1}, (2, 3): {-1: 0.0}, (2, 4): {-1: 0.0}, (2, 5): {-1: 1.0, (7, 6): 1, (3, 4): 1}, (2, 6): {-1: 0.5223025907899909}, (2, 7): {-1: 0.0, (0, 4): 1}, (2, 8): {-1: 0.5223025907899909}, (2, 9): {-1: 0.0}, (3, 0): {-1: 0.0, (4, 1): 1, (6, 2): 1}, (3, 1): {-1: 0.0}, (3, 2): {-1: 0.0}, (3, 3): {-1: 0.0, (4, 2): 1}, (3, 4): {-1: 1.0, (2, 2): 1, (2, 5): 1, (6, 7): 1}, (3, 5): {-1: 0.0}, (3, 6): {-1: 0.0}, (3, 7): {-1: 0.0}, (3, 8): {-1: 0.0}, (3, 9): {-1: 0.0}, (4, 0): {-1: 0.0}, (4, 1): {-1: 0.6219057025428483, (3, 0): 1}, (4, 2): {-1: 1.0, (3, 3): 1, (5, 8): 1}, (4, 3): {-1: 0.0}, (4, 4): {-1: 0.0}, (4, 5): {-1: 1.0, (5, 6): 1}, (4, 6): {-1: 0.5223025907899909}, (4, 7): {-1: 0.0}, (4, 8): {-1: 0.5223025907899909}, (4, 9): {-1: 0.0}, (5, 0): {-1: 0.0}, (5, 1): {-1: 0.6059073705797922}, (5, 2): {-1: 0.5223025907899909}, (5, 3): {-1: 0.0}, (5, 4): {-1: 0.0}, (5, 5): {-1: 0.5223025907899909}, (5, 6): {-1: 1.0, (4, 5): 1}, (5, 7): {-1: 0.0}, (5, 8): {-1: 1.0, (4, 2): 1}, (5, 9): {-1: 0.5179041944633578}, (6, 0): {-1: 0.28533220487186556}, (6, 1): {-1: 0.0}, (6, 2): {-1: 0.0, (3, 0): 1}, (6, 3): {-1: 0.25291718569411326}, (6, 4): {-1: 0.0}, (6, 5): {-1: 0.0}, (6, 6): {-1: 0.0}, (6, 7): {-1: 1.0, (3, 4): 1}, (6, 8): {-1: 0.0}, (6, 9): {-1: 0.0}, (7, 0): {-1: 0.0}, (7, 1): {-1: 0.6059073705797922}, (7, 2): {-1: 0.5223025907899909}, (7, 3): {-1: 0.0}, (7, 4): {-1: 0.0}, (7, 5): {-1: 0.5223025907899909}, (7, 6): {-1: 1.0, (2, 5): 1}, (7, 7): {-1: 0.0}, (7, 8): {-1: 2.0, (2, 2): 1}, (7, 9): {-1: 0.5179041944633578}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2.0) ,
('relation match with', (1, 1), 1) ,
('relation match with', (2, 2), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1.0) ,
('relation match with', (7, 8), 1) ,
('relation match with', (3, 4), 1) ,
('node_pair', (3, 4)) ,
('instance/attribute match', 1.0) ,
('relation match with', (6, 7), 1) ,
('node_pair', (4, 5)) ,
('instance/attribute match', 1.0) ,
('relation match with', (5, 6), 1) ,
('node_pair', (5, 6)) ,
('instance/attribute match', 1.0) ,
('node_pair', (6, 7)) ,
('instance/attribute match', 1.0) ,
('node_pair', (7, 8)) ,
('instance/attribute match', 2.0) ,
('match computing complete, result:', 16.0) ,
('Node mapping at start', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Triple match number at start:', 16.0) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -1.2495719168412012) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('saved value', 14.750428083158798) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, 7, 8],) ,
('saved value', 13.0) ,
('Remap node', 3, 'from ', 4, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 5, 6, 7, 8],) ,
('saved value', 13.0) ,
('Remap node', 4, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 4, 'from ', 5, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 9, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 5, 'from ', 6, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 5, 'from ', 6, 'to', 9) ,
('Move gain:', -1.4820958055366422) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('saved value', 14.517904194463357) ,
('Remap node', 6, 'from ', 7, 'to', 3) ,
('Move gain:', -1.7470828143058867) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 3, 8],) ,
('saved value', 14.252917185694113) ,
('Remap node', 6, 'from ', 7, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 9, 8],) ,
('saved value', 14.0) ,
('Remap node', 7, 'from ', 8, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('saved value', 13.0) ,
('Remap node', 7, 'from ', 8, 'to', 9) ,
('Move gain:', -2.482095805536642) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 9],) ,
('saved value', 13.517904194463359) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -7.0) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -5.429335590256269) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('saved value', 10.570664409743731) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.7561885949143035) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('saved value', 11.243811405085697) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2.7561885949143035) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('saved value', 13.243811405085697) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -2.7881852588404157) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('saved value', 13.211814741159584) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('saved value', 12.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -3.7881852588404157) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('saved value', 12.211814741159584) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('saved value', 13.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('saved value', 11.044605181579982) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('saved value', 11.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -1.9553948184200183) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('saved value', 14.044605181579982) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('saved value', 12.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -3.955394818420018) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('saved value', 12.044605181579982) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('saved value', 12.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('saved value', 13.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('saved value', 11.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 8)) ,
('instance/attribute match', 0.6059073705797922) ,
('node_pair', (2, 9)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 1)) ,
('instance/attribute match', 0.6219057025428483) ,
('node_pair', (5, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (7, 3)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 1.2278130731226404) ,
('Node mapping at start', [2, 8, 9, 7, 1, 0, 5, 3]) ,
('Triple match number at start:', 1.2278130731226404) ,
('Remap node', 0, 'from ', 2, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 8, 9, 7, 1, 0, 5, 3],) ,
('saved value', 1.2278130731226404) ,
('Remap node', 0, 'from ', 2, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 8, 9, 7, 1, 0, 5, 3],) ,
('saved value', 1.2278130731226404) ,
('Remap node', 1, 'from ', 8, 'to', 4) ,
('Move gain:', -0.6059073705797922) ,
('Computing match for mapping',) ,
([2, 4, 9, 7, 1, 0, 5, 3],) ,
('saved value', 0.6219057025428483) ,
('Remap node', 1, 'from ', 8, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 6, 9, 7, 1, 0, 5, 3],) ,
('saved value', 1.2278130731226404) ,
('Remap node', 2, 'from ', 9, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 8, 4, 7, 1, 0, 5, 3],) ,
('saved value', 1.2278130731226404) ,
('Remap node', 2, 'from ', 9, 'to', 6) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([2, 8, 6, 7, 1, 0, 5, 3],) ,
('saved value', 1.7501156639126312) ,
('Remap node', 3, 'from ', 7, 'to', 4) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([2, 8, 9, 4, 1, 0, 5, 3],) ,
('saved value', 2.2278130731226407) ,
('Remap node', 3, 'from ', 7, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 8, 9, 6, 1, 0, 5, 3],) ,
('saved value', 1.2278130731226404) ,
('Remap node', 4, 'from ', 1, 'to', 4) ,
('Move gain:', -0.6219057025428483) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 4, 0, 5, 3],) ,
('saved value', 0.6059073705797922) ,
('Remap node', 4, 'from ', 1, 'to', 6) ,
('Move gain:', -0.09960311175285741) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 6, 0, 5, 3],) ,
('saved value', 1.128209961369783) ,
('Remap node', 5, 'from ', 0, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 1, 4, 5, 3],) ,
('saved value', 1.2278130731226404) ,
('Remap node', 5, 'from ', 0, 'to', 6) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 1, 6, 5, 3],) ,
('saved value', 2.2278130731226407) ,
('Remap node', 6, 'from ', 5, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 1, 0, 4, 3],) ,
('saved value', 1.2278130731226404) ,
('Remap node', 6, 'from ', 5, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 1, 0, 6, 3],) ,
('saved value', 1.2278130731226404) ,
('Remap node', 7, 'from ', 3, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 1, 0, 5, 4],) ,
('saved value', 1.2278130731226404) ,
('Remap node', 7, 'from ', 3, 'to', 6) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 1, 0, 5, 6],) ,
('saved value', 2.2278130731226407) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 8) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 0, '-', 8, ',', 1, '-', 2) ,
('Swap gain:', 0.01599833196305611) ,
([8, 2, 9, 7, 1, 0, 5, 3],) ,
('Computing match for mapping',) ,
([8, 2, 9, 7, 1, 0, 5, 3],) ,
('saved value', 1.2438114050856965) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 9) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 0, '-', 9, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([9, 8, 2, 7, 1, 0, 5, 3],) ,
('Computing match for mapping',) ,
([9, 8, 2, 7, 1, 0, 5, 3],) ,
('saved value', 2.2278130731226407) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 7) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 2) ,
('Swap gain:', 0.28533220487186556) ,
([7, 8, 9, 2, 1, 0, 5, 3],) ,
('Computing match for mapping',) ,
([7, 8, 9, 2, 1, 0, 5, 3],) ,
('saved value', 1.513145277994506) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 2, ',', 4, '-', 1) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', 0.37809429745715173) ,
([1, 8, 9, 7, 2, 0, 5, 3],) ,
('Computing match for mapping',) ,
([1, 8, 9, 7, 2, 0, 5, 3],) ,
('saved value', 1.6059073705797922) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 2, ',', 5, '-', 0) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 0, '-', 0, ',', 5, '-', 2) ,
('Swap gain:', 2.522302590789991) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('saved value', 3.7501156639126316) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 2, ',', 6, '-', 5) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 0, '-', 5, ',', 6, '-', 2) ,
('Swap gain:', 0.0) ,
([5, 8, 9, 7, 1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([5, 8, 9, 7, 1, 0, 2, 3],) ,
('saved value', 1.2278130731226404) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 2, ',', 7, '-', 3) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', 0.5223025907899909) ,
([3, 8, 9, 7, 1, 0, 5, 2],) ,
('Computing match for mapping',) ,
([3, 8, 9, 7, 1, 0, 5, 2],) ,
('saved value', 1.7501156639126312) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 8, ',', 2, '-', 9) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 1, '-', 9, ',', 2, '-', 8) ,
('Swap gain:', 0.6668233033689976) ,
([2, 9, 8, 7, 1, 0, 5, 3],) ,
('Computing match for mapping',) ,
([2, 9, 8, 7, 1, 0, 5, 3],) ,
('saved value', 1.894636376491638) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 8, ',', 3, '-', 7) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 8) ,
('Swap gain:', -0.6059073705797922) ,
([2, 7, 9, 8, 1, 0, 5, 3],) ,
('Computing match for mapping',) ,
([2, 7, 9, 8, 1, 0, 5, 3],) ,
('saved value', 0.6219057025428483) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 8, ',', 4, '-', 1) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 8) ,
('Swap gain:', 0.29448951766735054) ,
([2, 1, 9, 7, 8, 0, 5, 3],) ,
('Computing match for mapping',) ,
([2, 1, 9, 7, 8, 0, 5, 3],) ,
('saved value', 1.522302590789991) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 8, ',', 5, '-', 0) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 1, '-', 0, ',', 5, '-', 8) ,
('Swap gain:', 0.39409262942020784) ,
([2, 0, 9, 7, 1, 8, 5, 3],) ,
('Computing match for mapping',) ,
([2, 0, 9, 7, 1, 8, 5, 3],) ,
('saved value', 1.6219057025428483) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 8, ',', 6, '-', 5) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 1, '-', 5, ',', 6, '-', 8) ,
('Swap gain:', 0.01599833196305611) ,
([2, 5, 9, 7, 1, 0, 8, 3],) ,
('Computing match for mapping',) ,
([2, 5, 9, 7, 1, 0, 8, 3],) ,
('saved value', 1.2438114050856965) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 8, ',', 7, '-', 3) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 8) ,
('Swap gain:', 1.3940926294202078) ,
([2, 3, 9, 7, 1, 0, 5, 8],) ,
('Computing match for mapping',) ,
([2, 3, 9, 7, 1, 0, 5, 8],) ,
('saved value', 2.6219057025428483) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 9, ',', 3, '-', 7) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 9) ,
('Swap gain:', 0.0) ,
([2, 8, 7, 9, 1, 0, 5, 3],) ,
('Computing match for mapping',) ,
([2, 8, 7, 9, 1, 0, 5, 3],) ,
('saved value', 1.2278130731226404) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 9, ',', 4, '-', 1) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 9) ,
('Swap gain:', 0.0) ,
([2, 8, 1, 7, 9, 0, 5, 3],) ,
('Computing match for mapping',) ,
([2, 8, 1, 7, 9, 0, 5, 3],) ,
('saved value', 1.2278130731226404) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 9, ',', 5, '-', 0) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 2, '-', 0, ',', 5, '-', 9) ,
('Swap gain:', 0.5179041944633578) ,
([2, 8, 0, 7, 1, 9, 5, 3],) ,
('Computing match for mapping',) ,
([2, 8, 0, 7, 1, 9, 5, 3],) ,
('saved value', 1.7457172675859982) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 9, ',', 6, '-', 5) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 2, '-', 5, ',', 6, '-', 9) ,
('Swap gain:', 1.0) ,
([2, 8, 5, 7, 1, 0, 9, 3],) ,
('Computing match for mapping',) ,
([2, 8, 5, 7, 1, 0, 9, 3],) ,
('saved value', 2.2278130731226407) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 9, ',', 7, '-', 3) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 9) ,
('Swap gain:', 0.5179041944633578) ,
([2, 8, 3, 7, 1, 0, 5, 9],) ,
('Computing match for mapping',) ,
([2, 8, 3, 7, 1, 0, 5, 9],) ,
('saved value', 1.7457172675859982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 1) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 7) ,
('Swap gain:', -0.6219057025428483) ,
([2, 8, 9, 1, 7, 0, 5, 3],) ,
('Computing match for mapping',) ,
([2, 8, 9, 1, 7, 0, 5, 3],) ,
('saved value', 0.6059073705797922) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 0) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 3, '-', 0, ',', 5, '-', 7) ,
('Swap gain:', 1.0) ,
([2, 8, 9, 0, 1, 7, 5, 3],) ,
('Computing match for mapping',) ,
([2, 8, 9, 0, 1, 7, 5, 3],) ,
('saved value', 2.2278130731226407) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 7, ',', 6, '-', 5) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 3, '-', 5, ',', 6, '-', 7) ,
('Swap gain:', 1.0) ,
([2, 8, 9, 5, 1, 0, 7, 3],) ,
('Computing match for mapping',) ,
([2, 8, 9, 5, 1, 0, 7, 3],) ,
('saved value', 2.2278130731226407) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 7, ',', 7, '-', 3) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', 0.0) ,
([2, 8, 9, 3, 1, 0, 5, 7],) ,
('Computing match for mapping',) ,
([2, 8, 9, 3, 1, 0, 5, 7],) ,
('saved value', 1.2278130731226404) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 0) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 4, '-', 0, ',', 5, '-', 1) ,
('Swap gain:', -0.01599833196305611) ,
([2, 8, 9, 7, 0, 1, 5, 3],) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 0, 1, 5, 3],) ,
('saved value', 1.2118147411595843) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 5) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 4, '-', 5, ',', 6, '-', 1) ,
('Swap gain:', 0.37809429745715173) ,
([2, 8, 9, 7, 5, 0, 1, 3],) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 5, 0, 1, 3],) ,
('saved value', 1.6059073705797922) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 1, ',', 7, '-', 3) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -0.01599833196305611) ,
([2, 8, 9, 7, 3, 0, 5, 1],) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 3, 0, 5, 1],) ,
('saved value', 1.2118147411595843) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 0, ',', 6, '-', 5) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 5, '-', 5, ',', 6, '-', 0) ,
('Swap gain:', 0.8076347956618564) ,
([2, 8, 9, 7, 1, 5, 0, 3],) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 1, 5, 0, 3],) ,
('saved value', 2.035447868784497) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 0, ',', 7, '-', 3) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 8, 9, 7, 1, 3, 5, 0],) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 1, 3, 5, 0],) ,
('saved value', 1.2278130731226404) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 5, ',', 7, '-', 3) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', 0.7752197764841041) ,
([2, 8, 9, 7, 1, 0, 3, 5],) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 1, 0, 3, 5],) ,
('saved value', 2.0030328496067447) ,
('Use swap gain',) ,
('Original mapping', [2, 8, 9, 7, 1, 0, 5, 3]) ,
('Current mapping', [0, 8, 9, 7, 1, 2, 5, 3]) ,
('Gain after the hill-climbing', 2.522302590789991) ,
('Update triple match number to:', 3.7501156639126316) ,
('Current mapping:', [0, 8, 9, 7, 1, 2, 5, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 8, 9, 7, 1, 2, 5, 3],) ,
('saved value', 1.7501156639126316) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([6, 8, 9, 7, 1, 2, 5, 3],) ,
('saved value', 1.7501156639126316) ,
('Remap node', 1, 'from ', 8, 'to', 4) ,
('Move gain:', -0.6059073705797922) ,
('Computing match for mapping',) ,
([0, 4, 9, 7, 1, 2, 5, 3],) ,
('saved value', 3.1442082933328397) ,
('Remap node', 1, 'from ', 8, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 9, 7, 1, 2, 5, 3],) ,
('saved value', 3.7501156639126316) ,
('Remap node', 2, 'from ', 9, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 8, 4, 7, 1, 2, 5, 3],) ,
('saved value', 3.7501156639126316) ,
('Remap node', 2, 'from ', 9, 'to', 6) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 8, 6, 7, 1, 2, 5, 3],) ,
('saved value', 4.272418254702623) ,
('Remap node', 3, 'from ', 7, 'to', 4) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 8, 9, 4, 1, 2, 5, 3],) ,
('saved value', 4.750115663912632) ,
('Remap node', 3, 'from ', 7, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 8, 9, 6, 1, 2, 5, 3],) ,
('saved value', 3.7501156639126316) ,
('Remap node', 4, 'from ', 1, 'to', 4) ,
('Move gain:', -0.6219057025428483) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 4, 2, 5, 3],) ,
('saved value', 3.1282099613697834) ,
('Remap node', 4, 'from ', 1, 'to', 6) ,
('Move gain:', -0.09960311175285741) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 6, 2, 5, 3],) ,
('saved value', 3.6505125521597743) ,
('Remap node', 5, 'from ', 2, 'to', 4) ,
('Move gain:', -0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 1, 4, 5, 3],) ,
('saved value', 3.2278130731226407) ,
('Remap node', 5, 'from ', 2, 'to', 6) ,
('Move gain:', 0.47769740921000914) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 1, 6, 5, 3],) ,
('saved value', 4.227813073122641) ,
('Remap node', 6, 'from ', 5, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 1, 2, 4, 3],) ,
('saved value', 3.7501156639126316) ,
('Remap node', 6, 'from ', 5, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 1, 2, 6, 3],) ,
('saved value', 3.7501156639126316) ,
('Remap node', 7, 'from ', 3, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 1, 2, 5, 4],) ,
('saved value', 3.7501156639126316) ,
('Remap node', 7, 'from ', 3, 'to', 6) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 1, 2, 5, 6],) ,
('saved value', 4.750115663912632) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 8) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 0, '-', 8, ',', 1, '-', 0) ,
('Swap gain:', -2.605907370579792) ,
([8, 0, 9, 7, 1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([8, 0, 9, 7, 1, 2, 5, 3],) ,
('saved value', 1.1442082933328397) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 9) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 0, '-', 9, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([9, 8, 0, 7, 1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([9, 8, 0, 7, 1, 2, 5, 3],) ,
('saved value', 1.7501156639126316) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -0.7146677951281344) ,
([7, 8, 9, 0, 1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([7, 8, 9, 0, 1, 2, 5, 3],) ,
('saved value', 3.0354478687844972) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -2.6219057025428483) ,
([1, 8, 9, 7, 0, 2, 5, 3],) ,
('Computing match for mapping',) ,
([1, 8, 9, 7, 0, 2, 5, 3],) ,
('saved value', 1.1282099613697834) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -2.522302590789991) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('Computing match for mapping',) ,
([2, 8, 9, 7, 1, 0, 5, 3],) ,
('saved value', 1.2278130731226404) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 5) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 0, '-', 5, ',', 6, '-', 0) ,
('Swap gain:', -1.7146677951281344) ,
([5, 8, 9, 7, 1, 2, 0, 3],) ,
('Computing match for mapping',) ,
([5, 8, 9, 7, 1, 2, 0, 3],) ,
('saved value', 2.0354478687844972) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -2.0) ,
([3, 8, 9, 7, 1, 2, 5, 0],) ,
('Computing match for mapping',) ,
([3, 8, 9, 7, 1, 2, 5, 0],) ,
('saved value', 1.7501156639126316) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 8, ',', 2, '-', 9) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 1, '-', 9, ',', 2, '-', 8) ,
('Swap gain:', 0.6668233033689976) ,
([0, 9, 8, 7, 1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 9, 8, 7, 1, 2, 5, 3],) ,
('saved value', 4.416938967281629) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 8, ',', 3, '-', 7) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 8) ,
('Swap gain:', -0.6059073705797922) ,
([0, 7, 9, 8, 1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 7, 9, 8, 1, 2, 5, 3],) ,
('saved value', 3.1442082933328397) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 8, ',', 4, '-', 1) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 8) ,
('Swap gain:', 1.2944895176673505) ,
([0, 1, 9, 7, 8, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 9, 7, 8, 2, 5, 3],) ,
('saved value', 5.044605181579982) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 8, ',', 5, '-', 2) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 8) ,
('Swap gain:', 0.49369574117306525) ,
([0, 2, 9, 7, 1, 8, 5, 3],) ,
('Computing match for mapping',) ,
([0, 2, 9, 7, 1, 8, 5, 3],) ,
('saved value', 4.2438114050856965) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 8, ',', 6, '-', 5) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 1, '-', 5, ',', 6, '-', 8) ,
('Swap gain:', 0.01599833196305611) ,
([0, 5, 9, 7, 1, 2, 8, 3],) ,
('Computing match for mapping',) ,
([0, 5, 9, 7, 1, 2, 8, 3],) ,
('saved value', 3.7661139958756875) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 8, ',', 7, '-', 3) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 8) ,
('Swap gain:', 1.3940926294202078) ,
([0, 3, 9, 7, 1, 2, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 9, 7, 1, 2, 5, 8],) ,
('saved value', 5.14420829333284) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 9, ',', 3, '-', 7) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 9) ,
('Swap gain:', 0.0) ,
([0, 8, 7, 9, 1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 8, 7, 9, 1, 2, 5, 3],) ,
('saved value', 3.7501156639126316) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 9, ',', 4, '-', 1) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 9) ,
('Swap gain:', 0.0) ,
([0, 8, 1, 7, 9, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 8, 1, 7, 9, 2, 5, 3],) ,
('saved value', 3.7501156639126316) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 9, ',', 5, '-', 2) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 9) ,
('Swap gain:', 1.995601603673367) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('saved value', 5.745717267585999) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 9, ',', 6, '-', 5) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 2, '-', 5, ',', 6, '-', 9) ,
('Swap gain:', 1.0) ,
([0, 8, 5, 7, 1, 2, 9, 3],) ,
('Computing match for mapping',) ,
([0, 8, 5, 7, 1, 2, 9, 3],) ,
('saved value', 4.750115663912632) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 9, ',', 7, '-', 3) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 9) ,
('Swap gain:', 0.5179041944633578) ,
([0, 8, 3, 7, 1, 2, 5, 9],) ,
('Computing match for mapping',) ,
([0, 8, 3, 7, 1, 2, 5, 9],) ,
('saved value', 4.26801985837599) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 1) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 7) ,
('Swap gain:', -0.6219057025428483) ,
([0, 8, 9, 1, 7, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 8, 9, 1, 7, 2, 5, 3],) ,
('saved value', 3.1282099613697834) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 2) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', -0.5223025907899909) ,
([0, 8, 9, 2, 1, 7, 5, 3],) ,
('Computing match for mapping',) ,
([0, 8, 9, 2, 1, 7, 5, 3],) ,
('saved value', 3.2278130731226407) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 7, ',', 6, '-', 5) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 3, '-', 5, ',', 6, '-', 7) ,
('Swap gain:', 1.0) ,
([0, 8, 9, 5, 1, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 8, 9, 5, 1, 2, 7, 3],) ,
('saved value', 4.750115663912632) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 7, ',', 7, '-', 3) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 8, 9, 3, 1, 2, 5, 7],) ,
('Computing match for mapping',) ,
([0, 8, 9, 3, 1, 2, 5, 7],) ,
('saved value', 3.7501156639126316) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 2) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', 0.461699077246953) ,
([0, 8, 9, 7, 2, 1, 5, 3],) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 2, 1, 5, 3],) ,
('saved value', 4.211814741159585) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 5) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 4, '-', 5, ',', 6, '-', 1) ,
('Swap gain:', 0.37809429745715173) ,
([0, 8, 9, 7, 5, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 5, 2, 1, 3],) ,
('saved value', 4.128209961369784) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 1, ',', 7, '-', 3) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -0.01599833196305611) ,
([0, 8, 9, 7, 3, 2, 5, 1],) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 3, 2, 5, 1],) ,
('saved value', 3.7341173319495757) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', 5) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 5, '-', 5, ',', 6, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 8, 9, 7, 1, 5, 2, 3],) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 1, 5, 2, 3],) ,
('saved value', 3.7501156639126316) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 3) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 8, 9, 7, 1, 3, 5, 2],) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 1, 3, 5, 2],) ,
('saved value', 3.7501156639126316) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 5, ',', 7, '-', 3) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', 0.7752197764841041) ,
([0, 8, 9, 7, 1, 2, 3, 5],) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 1, 2, 3, 5],) ,
('saved value', 4.525335440396736) ,
('Use swap gain',) ,
('Original mapping', [0, 8, 9, 7, 1, 2, 5, 3]) ,
('Current mapping', [0, 8, 2, 7, 1, 9, 5, 3]) ,
('Gain after the hill-climbing', 1.995601603673367) ,
('Update triple match number to:', 5.745717267585999) ,
('Current mapping:', [0, 8, 2, 7, 1, 9, 5, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([4, 8, 2, 7, 1, 9, 5, 3],) ,
('saved value', 2.7457172675859987) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([6, 8, 2, 7, 1, 9, 5, 3],) ,
('saved value', 2.7457172675859987) ,
('Remap node', 1, 'from ', 8, 'to', 4) ,
('Move gain:', -0.6059073705797922) ,
('Computing match for mapping',) ,
([0, 4, 2, 7, 1, 9, 5, 3],) ,
('saved value', 5.139809897006207) ,
('Remap node', 1, 'from ', 8, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 6, 2, 7, 1, 9, 5, 3],) ,
('saved value', 5.745717267585999) ,
('Remap node', 2, 'from ', 2, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 8, 4, 7, 1, 9, 5, 3],) ,
('saved value', 3.7457172675859987) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -1.477697409210009) ,
('Computing match for mapping',) ,
([0, 8, 6, 7, 1, 9, 5, 3],) ,
('saved value', 4.26801985837599) ,
('Remap node', 3, 'from ', 7, 'to', 4) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 1, 9, 5, 3],) ,
('saved value', 7.745717267585999) ,
('Remap node', 3, 'from ', 7, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 8, 2, 6, 1, 9, 5, 3],) ,
('saved value', 5.745717267585999) ,
('Remap node', 4, 'from ', 1, 'to', 4) ,
('Move gain:', -0.6219057025428483) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 4, 9, 5, 3],) ,
('saved value', 5.12381156504315) ,
('Remap node', 4, 'from ', 1, 'to', 6) ,
('Move gain:', -0.09960311175285741) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 6, 9, 5, 3],) ,
('saved value', 5.646114155833141) ,
('Remap node', 5, 'from ', 9, 'to', 4) ,
('Move gain:', -0.5179041944633578) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 1, 4, 5, 3],) ,
('saved value', 5.227813073122641) ,
('Remap node', 5, 'from ', 9, 'to', 6) ,
('Move gain:', 0.4820958055366422) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 1, 6, 5, 3],) ,
('saved value', 6.227813073122641) ,
('Remap node', 6, 'from ', 5, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 1, 9, 4, 3],) ,
('saved value', 5.745717267585999) ,
('Remap node', 6, 'from ', 5, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 1, 9, 6, 3],) ,
('saved value', 5.745717267585999) ,
('Remap node', 7, 'from ', 3, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 1, 9, 5, 4],) ,
('saved value', 5.745717267585999) ,
('Remap node', 7, 'from ', 3, 'to', 6) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 1, 9, 5, 6],) ,
('saved value', 6.745717267585999) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 8) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 0, '-', 8, ',', 1, '-', 0) ,
('Swap gain:', -3.605907370579792) ,
([8, 0, 2, 7, 1, 9, 5, 3],) ,
('Computing match for mapping',) ,
([8, 0, 2, 7, 1, 9, 5, 3],) ,
('saved value', 2.1398098970062067) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 8, 0, 7, 1, 9, 5, 3],) ,
('Computing match for mapping',) ,
([2, 8, 0, 7, 1, 9, 5, 3],) ,
('saved value', 1.7457172675859982) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -1.7146677951281344) ,
([7, 8, 2, 0, 1, 9, 5, 3],) ,
('Computing match for mapping',) ,
([7, 8, 2, 0, 1, 9, 5, 3],) ,
('saved value', 4.031049472457864) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -3.6219057025428483) ,
([1, 8, 2, 7, 0, 9, 5, 3],) ,
('Computing match for mapping',) ,
([1, 8, 2, 7, 0, 9, 5, 3],) ,
('saved value', 2.1238115650431504) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 9) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 0, '-', 9, ',', 5, '-', 0) ,
('Swap gain:', -3.517904194463358) ,
([9, 8, 2, 7, 1, 0, 5, 3],) ,
('Computing match for mapping',) ,
([9, 8, 2, 7, 1, 0, 5, 3],) ,
('saved value', 2.2278130731226407) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 5) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 0, '-', 5, ',', 6, '-', 0) ,
('Swap gain:', -2.7146677951281344) ,
([5, 8, 2, 7, 1, 9, 0, 3],) ,
('Computing match for mapping',) ,
([5, 8, 2, 7, 1, 9, 0, 3],) ,
('saved value', 3.0310494724578643) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 3) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 0, '-', 3, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 8, 2, 7, 1, 9, 5, 0],) ,
('Computing match for mapping',) ,
([3, 8, 2, 7, 1, 9, 5, 0],) ,
('saved value', 2.7457172675859987) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 8, ',', 2, '-', 2) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 8) ,
('Swap gain:', -1.461699077246953) ,
([0, 2, 8, 7, 1, 9, 5, 3],) ,
('Computing match for mapping',) ,
([0, 2, 8, 7, 1, 9, 5, 3],) ,
('saved value', 4.2840181903390455) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 8, ',', 3, '-', 7) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 8) ,
('Swap gain:', -0.6059073705797922) ,
([0, 7, 2, 8, 1, 9, 5, 3],) ,
('Computing match for mapping',) ,
([0, 7, 2, 8, 1, 9, 5, 3],) ,
('saved value', 5.139809897006207) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 8, ',', 4, '-', 1) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 8) ,
('Swap gain:', 1.2944895176673505) ,
([0, 1, 2, 7, 8, 9, 5, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 8, 9, 5, 3],) ,
('saved value', 7.040206785253349) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 8, ',', 5, '-', 9) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 1, '-', 9, ',', 5, '-', 8) ,
('Swap gain:', 0.6266165181156489) ,
([0, 9, 2, 7, 1, 8, 5, 3],) ,
('Computing match for mapping',) ,
([0, 9, 2, 7, 1, 8, 5, 3],) ,
('saved value', 6.372333785701647) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 8, ',', 6, '-', 5) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 1, '-', 5, ',', 6, '-', 8) ,
('Swap gain:', 0.01599833196305611) ,
([0, 5, 2, 7, 1, 9, 8, 3],) ,
('Computing match for mapping',) ,
([0, 5, 2, 7, 1, 9, 8, 3],) ,
('saved value', 5.7617155995490545) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 8, ',', 7, '-', 3) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 1, '-', 3, ',', 7, '-', 8) ,
('Swap gain:', 2.394092629420208) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('saved value', 8.139809897006206) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 7) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 8, 7, 2, 1, 9, 5, 3],) ,
('Computing match for mapping',) ,
([0, 8, 7, 2, 1, 9, 5, 3],) ,
('saved value', 3.7457172675859987) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 1) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 8, 1, 7, 2, 9, 5, 3],) ,
('Computing match for mapping',) ,
([0, 8, 1, 7, 2, 9, 5, 3],) ,
('saved value', 4.745717267585999) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 9) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 2, '-', 9, ',', 5, '-', 2) ,
('Swap gain:', -1.995601603673367) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('Computing match for mapping',) ,
([0, 8, 9, 7, 1, 2, 5, 3],) ,
('saved value', 3.7501156639126316) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 5) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 2, '-', 5, ',', 6, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 8, 5, 7, 1, 9, 2, 3],) ,
('Computing match for mapping',) ,
([0, 8, 5, 7, 1, 9, 2, 3],) ,
('saved value', 4.745717267585999) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 3) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 2, '-', 3, ',', 7, '-', 2) ,
('Swap gain:', -1.477697409210009) ,
([0, 8, 3, 7, 1, 9, 5, 2],) ,
('Computing match for mapping',) ,
([0, 8, 3, 7, 1, 9, 5, 2],) ,
('saved value', 4.26801985837599) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 1) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 7) ,
('Swap gain:', -0.6219057025428483) ,
([0, 8, 2, 1, 7, 9, 5, 3],) ,
('Computing match for mapping',) ,
([0, 8, 2, 1, 7, 9, 5, 3],) ,
('saved value', 5.12381156504315) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 9) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 3, '-', 9, ',', 5, '-', 7) ,
('Swap gain:', -0.5179041944633578) ,
([0, 8, 2, 9, 1, 7, 5, 3],) ,
('Computing match for mapping',) ,
([0, 8, 2, 9, 1, 7, 5, 3],) ,
('saved value', 5.227813073122641) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 7, ',', 6, '-', 5) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 3, '-', 5, ',', 6, '-', 7) ,
('Swap gain:', 1.0) ,
([0, 8, 2, 5, 1, 9, 7, 3],) ,
('Computing match for mapping',) ,
([0, 8, 2, 5, 1, 9, 7, 3],) ,
('saved value', 6.745717267585999) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 7, ',', 7, '-', 3) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 3, '-', 3, ',', 7, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 8, 2, 3, 1, 9, 5, 7],) ,
('Computing match for mapping',) ,
([0, 8, 2, 3, 1, 9, 5, 7],) ,
('saved value', 5.745717267585999) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 9) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 4, '-', 9, ',', 5, '-', 1) ,
('Swap gain:', -0.5339025264264139) ,
([0, 8, 2, 7, 9, 1, 5, 3],) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 9, 1, 5, 3],) ,
('saved value', 5.211814741159585) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 5) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 4, '-', 5, ',', 6, '-', 1) ,
('Swap gain:', 0.37809429745715173) ,
([0, 8, 2, 7, 5, 9, 1, 3],) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 5, 9, 1, 3],) ,
('saved value', 6.12381156504315) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 1, ',', 7, '-', 3) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 4, '-', 3, ',', 7, '-', 1) ,
('Swap gain:', -0.01599833196305611) ,
([0, 8, 2, 7, 3, 9, 5, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 3, 9, 5, 1],) ,
('saved value', 5.729718935622943) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 9, ',', 6, '-', 5) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 5, '-', 5, ',', 6, '-', 9) ,
('Swap gain:', 0.0043983963266330806) ,
([0, 8, 2, 7, 1, 5, 9, 3],) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 1, 5, 9, 3],) ,
('saved value', 5.750115663912632) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 9, ',', 7, '-', 3) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 5, '-', 3, ',', 7, '-', 9) ,
('Swap gain:', 0.0) ,
([0, 8, 2, 7, 1, 3, 5, 9],) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 1, 3, 5, 9],) ,
('saved value', 5.745717267585999) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 5, ',', 7, '-', 3) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('After swapping:', 6, '-', 3, ',', 7, '-', 5) ,
('Swap gain:', 0.7752197764841041) ,
([0, 8, 2, 7, 1, 9, 3, 5],) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 1, 9, 3, 5],) ,
('saved value', 6.520937044070103) ,
('Use swap gain',) ,
('Original mapping', [0, 8, 2, 7, 1, 9, 5, 3]) ,
('Current mapping', [0, 3, 2, 7, 1, 9, 5, 8]) ,
('Gain after the hill-climbing', 2.394092629420208) ,
('Update triple match number to:', 8.139809897006206) ,
('Current mapping:', [0, 3, 2, 7, 1, 9, 5, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([4, 3, 2, 7, 1, 9, 5, 8],) ,
('saved value', 5.139809897006206) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([6, 3, 2, 7, 1, 9, 5, 8],) ,
('saved value', 5.139809897006206) ,
('Remap node', 1, 'from ', 3, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 4, 2, 7, 1, 9, 5, 8],) ,
('saved value', 8.139809897006206) ,
('Remap node', 1, 'from ', 3, 'to', 6) ,
('Move gain:', 0.6059073705797922) ,
('Computing match for mapping',) ,
([0, 6, 2, 7, 1, 9, 5, 8],) ,
('saved value', 8.745717267585999) ,
('Remap node', 2, 'from ', 2, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 3, 4, 7, 1, 9, 5, 8],) ,
('saved value', 5.139809897006206) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -2.477697409210009) ,
('Computing match for mapping',) ,
([0, 3, 6, 7, 1, 9, 5, 8],) ,
('saved value', 5.662112487796197) ,
('Remap node', 3, 'from ', 7, 'to', 4) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('saved value', 10.139809897006206) ,
('Remap node', 3, 'from ', 7, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 6, 1, 9, 5, 8],) ,
('saved value', 8.139809897006206) ,
('Remap node', 4, 'from ', 1, 'to', 4) ,
('Move gain:', -0.6219057025428483) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 4, 9, 5, 8],) ,
('saved value', 7.517904194463357) ,
('Remap node', 4, 'from ', 1, 'to', 6) ,
('Move gain:', -0.09960311175285741) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 6, 9, 5, 8],) ,
('saved value', 8.040206785253348) ,
('Remap node', 5, 'from ', 9, 'to', 4) ,
('Move gain:', -0.5179041944633578) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 1, 4, 5, 8],) ,
('saved value', 7.621905702542848) ,
('Remap node', 5, 'from ', 9, 'to', 6) ,
('Move gain:', 0.4820958055366422) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 1, 6, 5, 8],) ,
('saved value', 8.621905702542849) ,
('Remap node', 6, 'from ', 5, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 1, 9, 4, 8],) ,
('saved value', 8.139809897006206) ,
('Remap node', 6, 'from ', 5, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 1, 9, 6, 8],) ,
('saved value', 8.139809897006206) ,
('Remap node', 7, 'from ', 8, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 1, 9, 5, 4],) ,
('saved value', 5.139809897006206) ,
('Remap node', 7, 'from ', 8, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 1, 9, 5, 6],) ,
('saved value', 6.139809897006206) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 0, 2, 7, 1, 9, 5, 8],) ,
('Computing match for mapping',) ,
([3, 0, 2, 7, 1, 9, 5, 8],) ,
('saved value', 5.139809897006206) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 3, 0, 7, 1, 9, 5, 8],) ,
('Computing match for mapping',) ,
([2, 3, 0, 7, 1, 9, 5, 8],) ,
('saved value', 3.139809897006206) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 7) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 0, '-', 7, ',', 3, '-', 0) ,
('Swap gain:', -1.7146677951281344) ,
([7, 3, 2, 0, 1, 9, 5, 8],) ,
('Computing match for mapping',) ,
([7, 3, 2, 0, 1, 9, 5, 8],) ,
('saved value', 6.425142101878071) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -3.6219057025428483) ,
([1, 3, 2, 7, 0, 9, 5, 8],) ,
('Computing match for mapping',) ,
([1, 3, 2, 7, 0, 9, 5, 8],) ,
('saved value', 4.517904194463357) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 9) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 0, '-', 9, ',', 5, '-', 0) ,
('Swap gain:', -3.517904194463358) ,
([9, 3, 2, 7, 1, 0, 5, 8],) ,
('Computing match for mapping',) ,
([9, 3, 2, 7, 1, 0, 5, 8],) ,
('saved value', 4.621905702542848) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 5) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 0, '-', 5, ',', 6, '-', 0) ,
('Swap gain:', -2.7146677951281344) ,
([5, 3, 2, 7, 1, 9, 0, 8],) ,
('Computing match for mapping',) ,
([5, 3, 2, 7, 1, 9, 0, 8],) ,
('saved value', 5.425142101878071) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -6.0) ,
([8, 3, 2, 7, 1, 9, 5, 0],) ,
('Computing match for mapping',) ,
([8, 3, 2, 7, 1, 9, 5, 0],) ,
('saved value', 2.139809897006206) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -2.3780942974571517) ,
([0, 2, 3, 7, 1, 9, 5, 8],) ,
('Computing match for mapping',) ,
([0, 2, 3, 7, 1, 9, 5, 8],) ,
('saved value', 5.7617155995490545) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 7) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 1, '-', 7, ',', 3, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 7, 2, 3, 1, 9, 5, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 3, 1, 9, 5, 8],) ,
('saved value', 8.139809897006206) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 1) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', 1.3780942974571517) ,
([0, 1, 2, 7, 3, 9, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 3, 9, 5, 8],) ,
('saved value', 9.517904194463357) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 9) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 1, '-', 9, ',', 5, '-', 3) ,
('Swap gain:', 0.23252388869544116) ,
([0, 9, 2, 7, 1, 3, 5, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 7, 1, 3, 5, 8],) ,
('saved value', 8.372333785701647) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 5) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 1, '-', 5, ',', 6, '-', 3) ,
('Swap gain:', 0.8748228882369615) ,
([0, 5, 2, 7, 1, 9, 3, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 7, 1, 9, 3, 8],) ,
('saved value', 9.014632785243167) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 8) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -2.394092629420207) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('Computing match for mapping',) ,
([0, 8, 2, 7, 1, 9, 5, 3],) ,
('saved value', 5.745717267585999) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 7) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 2, '-', 7, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 3, 7, 2, 1, 9, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 7, 2, 1, 9, 5, 8],) ,
('saved value', 5.139809897006206) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 1) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 3, 1, 7, 2, 9, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 1, 7, 2, 9, 5, 8],) ,
('saved value', 6.139809897006206) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 9) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 2, '-', 9, ',', 5, '-', 2) ,
('Swap gain:', -2.995601603673366) ,
([0, 3, 9, 7, 1, 2, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 9, 7, 1, 2, 5, 8],) ,
('saved value', 5.14420829333284) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 5) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 2, '-', 5, ',', 6, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 3, 5, 7, 1, 9, 2, 8],) ,
('Computing match for mapping',) ,
([0, 3, 5, 7, 1, 9, 2, 8],) ,
('saved value', 6.139809897006206) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -3.955394818420018) ,
([0, 3, 8, 7, 1, 9, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 7, 1, 9, 5, 2],) ,
('saved value', 4.184415078586188) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 7, ',', 4, '-', 1) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 7) ,
('Swap gain:', -0.6219057025428483) ,
([0, 3, 2, 1, 7, 9, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 7, 9, 5, 8],) ,
('saved value', 7.517904194463357) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 7, ',', 5, '-', 9) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 3, '-', 9, ',', 5, '-', 7) ,
('Swap gain:', -0.5179041944633578) ,
([0, 3, 2, 9, 1, 7, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 9, 1, 7, 5, 8],) ,
('saved value', 7.621905702542848) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 7, ',', 6, '-', 5) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 3, '-', 5, ',', 6, '-', 7) ,
('Swap gain:', 1.0) ,
([0, 3, 2, 5, 1, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 1, 9, 7, 8],) ,
('saved value', 9.139809897006206) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 7, ',', 7, '-', 8) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 3, 2, 8, 1, 9, 5, 7],) ,
('Computing match for mapping',) ,
([0, 3, 2, 8, 1, 9, 5, 7],) ,
('saved value', 5.139809897006206) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 9) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 4, '-', 9, ',', 5, '-', 1) ,
('Swap gain:', -0.5339025264264139) ,
([0, 3, 2, 7, 9, 1, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 9, 1, 5, 8],) ,
('saved value', 7.605907370579792) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 5) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 4, '-', 5, ',', 6, '-', 1) ,
('Swap gain:', 0.37809429745715173) ,
([0, 3, 2, 7, 5, 9, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 5, 9, 1, 8],) ,
('saved value', 8.517904194463357) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 1, ',', 7, '-', 8) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -2.4936957411730654) ,
([0, 3, 2, 7, 8, 9, 5, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 8, 9, 5, 1],) ,
('saved value', 5.646114155833141) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 9, ',', 6, '-', 5) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 5, '-', 5, ',', 6, '-', 9) ,
('Swap gain:', 0.0043983963266330806) ,
([0, 3, 2, 7, 1, 5, 9, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 1, 5, 9, 8],) ,
('saved value', 8.14420829333284) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 9, ',', 7, '-', 8) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 9) ,
('Swap gain:', -2.0) ,
([0, 3, 2, 7, 1, 8, 5, 9],) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 1, 8, 5, 9],) ,
('saved value', 6.139809897006206) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 5, ',', 7, '-', 8) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -2.477697409210009) ,
([0, 3, 2, 7, 1, 9, 8, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 1, 9, 8, 5],) ,
('saved value', 5.662112487796197) ,
('Use move gain',) ,
('Original mapping', [0, 3, 2, 7, 1, 9, 5, 8]) ,
('Current mapping', [0, 3, 2, 4, 1, 9, 5, 8]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 10.139809897006206) ,
('Current mapping:', [0, 3, 2, 4, 1, 9, 5, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([6, 3, 2, 4, 1, 9, 5, 8],) ,
('saved value', 7.139809897006206) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -2.7146677951281344) ,
('Computing match for mapping',) ,
([7, 3, 2, 4, 1, 9, 5, 8],) ,
('saved value', 7.425142101878071) ,
('Remap node', 1, 'from ', 3, 'to', 6) ,
('Move gain:', 0.6059073705797922) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 1, 9, 5, 8],) ,
('saved value', 10.745717267585999) ,
('Remap node', 1, 'from ', 3, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 1, 9, 5, 8],) ,
('saved value', 10.139809897006206) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 3, 6, 4, 1, 9, 5, 8],) ,
('saved value', 6.662112487796197) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 1, 9, 5, 8],) ,
('saved value', 6.139809897006206) ,
('Remap node', 3, 'from ', 4, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 6, 1, 9, 5, 8],) ,
('saved value', 8.139809897006206) ,
('Remap node', 3, 'from ', 4, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 1, 9, 5, 8],) ,
('saved value', 8.139809897006206) ,
('Remap node', 4, 'from ', 1, 'to', 6) ,
('Move gain:', -0.09960311175285741) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 6, 9, 5, 8],) ,
('saved value', 10.040206785253348) ,
('Remap node', 4, 'from ', 1, 'to', 7) ,
('Move gain:', -0.6219057025428483) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 7, 9, 5, 8],) ,
('saved value', 9.517904194463357) ,
('Remap node', 5, 'from ', 9, 'to', 6) ,
('Move gain:', 0.4820958055366422) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 6, 5, 8],) ,
('saved value', 10.621905702542849) ,
('Remap node', 5, 'from ', 9, 'to', 7) ,
('Move gain:', -0.5179041944633578) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 7, 5, 8],) ,
('saved value', 9.621905702542849) ,
('Remap node', 6, 'from ', 5, 'to', 6) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 9, 6, 8],) ,
('saved value', 10.139809897006206) ,
('Remap node', 6, 'from ', 5, 'to', 7) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('saved value', 12.139809897006206) ,
('Remap node', 7, 'from ', 8, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 9, 5, 6],) ,
('saved value', 8.139809897006206) ,
('Remap node', 7, 'from ', 8, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 9, 5, 7],) ,
('saved value', 7.139809897006206) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 0, 2, 4, 1, 9, 5, 8],) ,
('Computing match for mapping',) ,
([3, 0, 2, 4, 1, 9, 5, 8],) ,
('saved value', 7.139809897006206) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 3, 0, 4, 1, 9, 5, 8],) ,
('Computing match for mapping',) ,
([2, 3, 0, 4, 1, 9, 5, 8],) ,
('saved value', 4.139809897006206) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 3, 2, 0, 1, 9, 5, 8],) ,
('Computing match for mapping',) ,
([4, 3, 2, 0, 1, 9, 5, 8],) ,
('saved value', 6.139809897006206) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -3.6219057025428483) ,
([1, 3, 2, 4, 0, 9, 5, 8],) ,
('Computing match for mapping',) ,
([1, 3, 2, 4, 0, 9, 5, 8],) ,
('saved value', 6.517904194463357) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 9) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 0, '-', 9, ',', 5, '-', 0) ,
('Swap gain:', -3.517904194463358) ,
([9, 3, 2, 4, 1, 0, 5, 8],) ,
('Computing match for mapping',) ,
([9, 3, 2, 4, 1, 0, 5, 8],) ,
('saved value', 6.621905702542848) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 5) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 0, '-', 5, ',', 6, '-', 0) ,
('Swap gain:', -2.7146677951281344) ,
([5, 3, 2, 4, 1, 9, 0, 8],) ,
('Computing match for mapping',) ,
([5, 3, 2, 4, 1, 9, 0, 8],) ,
('saved value', 7.425142101878071) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -6.0) ,
([8, 3, 2, 4, 1, 9, 5, 0],) ,
('Computing match for mapping',) ,
([8, 3, 2, 4, 1, 9, 5, 0],) ,
('saved value', 4.139809897006206) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -3.3780942974571517) ,
([0, 2, 3, 4, 1, 9, 5, 8],) ,
('Computing match for mapping',) ,
([0, 2, 3, 4, 1, 9, 5, 8],) ,
('saved value', 6.7617155995490545) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 4) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 4, 2, 3, 1, 9, 5, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 9, 5, 8],) ,
('saved value', 8.139809897006206) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 1) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', 1.3780942974571517) ,
([0, 1, 2, 4, 3, 9, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 9, 5, 8],) ,
('saved value', 11.517904194463357) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 9) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 1, '-', 9, ',', 5, '-', 3) ,
('Swap gain:', 0.23252388869544116) ,
([0, 9, 2, 4, 1, 3, 5, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 3, 5, 8],) ,
('saved value', 10.372333785701647) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 5) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 1, '-', 5, ',', 6, '-', 3) ,
('Swap gain:', 0.8748228882369615) ,
([0, 5, 2, 4, 1, 9, 3, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 9, 3, 8],) ,
('saved value', 11.014632785243167) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 8) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -2.394092629420207) ,
([0, 8, 2, 4, 1, 9, 5, 3],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 1, 9, 5, 3],) ,
('saved value', 7.745717267585999) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 3, 4, 2, 1, 9, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 1, 9, 5, 8],) ,
('saved value', 5.139809897006206) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 1) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 3, 1, 4, 2, 9, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 2, 9, 5, 8],) ,
('saved value', 7.139809897006206) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 9) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 2, '-', 9, ',', 5, '-', 2) ,
('Swap gain:', -3.995601603673367) ,
([0, 3, 9, 4, 1, 2, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 9, 4, 1, 2, 5, 8],) ,
('saved value', 6.144208293332839) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 5) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 2, '-', 5, ',', 6, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 3, 5, 4, 1, 9, 2, 8],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 1, 9, 2, 8],) ,
('saved value', 8.139809897006206) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 3, 8, 4, 1, 9, 5, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 4, 1, 9, 5, 2],) ,
('saved value', 5.184415078586188) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 1) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 4) ,
('Swap gain:', -2.6219057025428483) ,
([0, 3, 2, 1, 4, 9, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 9, 5, 8],) ,
('saved value', 7.517904194463357) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 9) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 3, '-', 9, ',', 5, '-', 4) ,
('Swap gain:', -2.517904194463358) ,
([0, 3, 2, 9, 1, 4, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 9, 1, 4, 5, 8],) ,
('saved value', 7.621905702542848) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 5) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 3, '-', 5, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 3, 2, 5, 1, 9, 4, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 1, 9, 4, 8],) ,
('saved value', 8.139809897006206) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 3, 2, 8, 1, 9, 5, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 8, 1, 9, 5, 4],) ,
('saved value', 5.139809897006206) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 9) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 4, '-', 9, ',', 5, '-', 1) ,
('Swap gain:', -0.5339025264264139) ,
([0, 3, 2, 4, 9, 1, 5, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 9, 1, 5, 8],) ,
('saved value', 9.605907370579793) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 5) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 4, '-', 5, ',', 6, '-', 1) ,
('Swap gain:', 0.37809429745715173) ,
([0, 3, 2, 4, 5, 9, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 9, 1, 8],) ,
('saved value', 10.517904194463357) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 1, ',', 7, '-', 8) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -2.4936957411730654) ,
([0, 3, 2, 4, 8, 9, 5, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 8, 9, 5, 1],) ,
('saved value', 7.646114155833141) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 9, ',', 6, '-', 5) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 5, '-', 5, ',', 6, '-', 9) ,
('Swap gain:', 0.0043983963266330806) ,
([0, 3, 2, 4, 1, 5, 9, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 5, 9, 8],) ,
('saved value', 10.14420829333284) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 9, ',', 7, '-', 8) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 9) ,
('Swap gain:', -2.0) ,
([0, 3, 2, 4, 1, 8, 5, 9],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 8, 5, 9],) ,
('saved value', 8.139809897006206) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 5, ',', 7, '-', 8) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -2.477697409210009) ,
([0, 3, 2, 4, 1, 9, 8, 5],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 9, 8, 5],) ,
('saved value', 7.662112487796197) ,
('Use move gain',) ,
('Original mapping', [0, 3, 2, 4, 1, 9, 5, 8]) ,
('Current mapping', [0, 3, 2, 4, 1, 9, 7, 8]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 12.139809897006206) ,
('Current mapping:', [0, 3, 2, 4, 1, 9, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 3, 2, 4, 1, 9, 7, 8],) ,
('saved value', 9.139809897006206) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([6, 3, 2, 4, 1, 9, 7, 8],) ,
('saved value', 9.139809897006206) ,
('Remap node', 1, 'from ', 3, 'to', 5) ,
('Move gain:', 0.6219057025428483) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 9, 7, 8],) ,
('saved value', 12.761715599549055) ,
('Remap node', 1, 'from ', 3, 'to', 6) ,
('Move gain:', 0.6059073705797922) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 1, 9, 7, 8],) ,
('saved value', 12.745717267585999) ,
('Remap node', 2, 'from ', 2, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 1, 9, 7, 8],) ,
('saved value', 10.139809897006206) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 3, 6, 4, 1, 9, 7, 8],) ,
('saved value', 8.662112487796197) ,
('Remap node', 3, 'from ', 4, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 5, 1, 9, 7, 8],) ,
('saved value', 9.139809897006206) ,
('Remap node', 3, 'from ', 4, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 6, 1, 9, 7, 8],) ,
('saved value', 9.139809897006206) ,
('Remap node', 4, 'from ', 1, 'to', 5) ,
('Move gain:', 0.37809429745715173) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 9, 7, 8],) ,
('saved value', 12.517904194463357) ,
('Remap node', 4, 'from ', 1, 'to', 6) ,
('Move gain:', -0.09960311175285741) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 6, 9, 7, 8],) ,
('saved value', 12.040206785253348) ,
('Remap node', 5, 'from ', 9, 'to', 5) ,
('Move gain:', 0.0043983963266330806) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 5, 7, 8],) ,
('saved value', 12.14420829333284) ,
('Remap node', 5, 'from ', 9, 'to', 6) ,
('Move gain:', 0.4820958055366422) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 6, 7, 8],) ,
('saved value', 12.621905702542849) ,
('Remap node', 6, 'from ', 7, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 9, 5, 8],) ,
('saved value', 10.139809897006206) ,
('Remap node', 6, 'from ', 7, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 9, 6, 8],) ,
('saved value', 10.139809897006206) ,
('Remap node', 7, 'from ', 8, 'to', 5) ,
('Move gain:', -2.477697409210009) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 9, 7, 5],) ,
('saved value', 9.662112487796197) ,
('Remap node', 7, 'from ', 8, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 9, 7, 6],) ,
('saved value', 10.139809897006206) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 0, 2, 4, 1, 9, 7, 8],) ,
('Computing match for mapping',) ,
([3, 0, 2, 4, 1, 9, 7, 8],) ,
('saved value', 9.139809897006206) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 3, 0, 4, 1, 9, 7, 8],) ,
('Computing match for mapping',) ,
([2, 3, 0, 4, 1, 9, 7, 8],) ,
('saved value', 6.139809897006206) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 3, 2, 0, 1, 9, 7, 8],) ,
('Computing match for mapping',) ,
([4, 3, 2, 0, 1, 9, 7, 8],) ,
('saved value', 7.139809897006206) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -3.6219057025428483) ,
([1, 3, 2, 4, 0, 9, 7, 8],) ,
('Computing match for mapping',) ,
([1, 3, 2, 4, 0, 9, 7, 8],) ,
('saved value', 8.517904194463357) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 9) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 0, '-', 9, ',', 5, '-', 0) ,
('Swap gain:', -3.517904194463358) ,
([9, 3, 2, 4, 1, 0, 7, 8],) ,
('Computing match for mapping',) ,
([9, 3, 2, 4, 1, 0, 7, 8],) ,
('saved value', 8.621905702542847) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -4.429335590256269) ,
([7, 3, 2, 4, 1, 9, 0, 8],) ,
('Computing match for mapping',) ,
([7, 3, 2, 4, 1, 9, 0, 8],) ,
('saved value', 7.710474306749937) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -6.0) ,
([8, 3, 2, 4, 1, 9, 7, 0],) ,
('Computing match for mapping',) ,
([8, 3, 2, 4, 1, 9, 7, 0],) ,
('saved value', 6.139809897006206) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -3.3780942974571517) ,
([0, 2, 3, 4, 1, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 3, 4, 1, 9, 7, 8],) ,
('saved value', 8.761715599549055) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 4) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 4, 2, 3, 1, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 3, 1, 9, 7, 8],) ,
('saved value', 9.139809897006206) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 3, ',', 4, '-', 1) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 3) ,
('Swap gain:', 1.3780942974571517) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('saved value', 13.517904194463357) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 3, ',', 5, '-', 9) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 1, '-', 9, ',', 5, '-', 3) ,
('Swap gain:', 0.23252388869544116) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('saved value', 12.372333785701647) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 3, ',', 6, '-', 7) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', -1.7470828143058867) ,
([0, 7, 2, 4, 1, 9, 3, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 1, 9, 3, 8],) ,
('saved value', 10.392727082700318) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 3, ',', 7, '-', 8) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -2.394092629420208) ,
([0, 8, 2, 4, 1, 9, 7, 3],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 1, 9, 7, 3],) ,
('saved value', 9.745717267585999) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 3, 4, 2, 1, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 3, 4, 2, 1, 9, 7, 8],) ,
('saved value', 6.139809897006206) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 1) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 3, 1, 4, 2, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 3, 1, 4, 2, 9, 7, 8],) ,
('saved value', 9.139809897006206) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 9) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 2, '-', 9, ',', 5, '-', 2) ,
('Swap gain:', -3.995601603673367) ,
([0, 3, 9, 4, 1, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 3, 9, 4, 1, 2, 7, 8],) ,
('saved value', 8.144208293332838) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 3, 7, 4, 1, 9, 2, 8],) ,
('Computing match for mapping',) ,
([0, 3, 7, 4, 1, 9, 2, 8],) ,
('saved value', 6.139809897006206) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 3, 8, 4, 1, 9, 7, 2],) ,
('Computing match for mapping',) ,
([0, 3, 8, 4, 1, 9, 7, 2],) ,
('saved value', 7.184415078586188) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 1) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 4) ,
('Swap gain:', -3.6219057025428483) ,
([0, 3, 2, 1, 4, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 4, 9, 7, 8],) ,
('saved value', 8.517904194463357) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 9) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 3, '-', 9, ',', 5, '-', 4) ,
('Swap gain:', -3.517904194463358) ,
([0, 3, 2, 9, 1, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 9, 1, 4, 7, 8],) ,
('saved value', 8.621905702542847) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 3, 2, 7, 1, 9, 4, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 7, 1, 9, 4, 8],) ,
('saved value', 8.139809897006206) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -6.0) ,
([0, 3, 2, 8, 1, 9, 7, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 8, 1, 9, 7, 4],) ,
('saved value', 6.139809897006206) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 9) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 4, '-', 9, ',', 5, '-', 1) ,
('Swap gain:', -0.5339025264264139) ,
([0, 3, 2, 4, 9, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 9, 1, 7, 8],) ,
('saved value', 11.605907370579793) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 7) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -2.6219057025428483) ,
([0, 3, 2, 4, 7, 9, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 7, 9, 1, 8],) ,
('saved value', 9.517904194463357) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 1, ',', 7, '-', 8) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -2.4936957411730654) ,
([0, 3, 2, 4, 8, 9, 7, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 8, 9, 7, 1],) ,
('saved value', 9.646114155833141) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 9, ',', 6, '-', 7) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 9) ,
('Swap gain:', -2.517904194463358) ,
([0, 3, 2, 4, 1, 7, 9, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 7, 9, 8],) ,
('saved value', 9.621905702542847) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 9, ',', 7, '-', 8) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 9) ,
('Swap gain:', -2.0) ,
([0, 3, 2, 4, 1, 8, 7, 9],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 8, 7, 9],) ,
('saved value', 10.139809897006206) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 3, 2, 4, 1, 9, 8, 7],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 9, 8, 7],) ,
('saved value', 7.139809897006206) ,
('Use swap gain',) ,
('Original mapping', [0, 3, 2, 4, 1, 9, 7, 8]) ,
('Current mapping', [0, 1, 2, 4, 3, 9, 7, 8]) ,
('Gain after the hill-climbing', 1.3780942974571517) ,
('Update triple match number to:', 13.517904194463357) ,
('Current mapping:', [0, 1, 2, 4, 3, 9, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 3, 9, 7, 8],) ,
('saved value', 9.517904194463357) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 3, 9, 7, 8],) ,
('saved value', 9.517904194463357) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -1.3780942974571517) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 3, 9, 7, 8],) ,
('saved value', 12.139809897006206) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -1.3940926294202078) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 3, 9, 7, 8],) ,
('saved value', 12.12381156504315) ,
('Remap node', 2, 'from ', 2, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 3, 9, 7, 8],) ,
('saved value', 11.517904194463357) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 3, 9, 7, 8],) ,
('saved value', 10.040206785253348) ,
('Remap node', 3, 'from ', 4, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 9, 7, 8],) ,
('saved value', 10.517904194463357) ,
('Remap node', 3, 'from ', 4, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 3, 9, 7, 8],) ,
('saved value', 10.517904194463357) ,
('Remap node', 4, 'from ', 3, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('saved value', 14.517904194463357) ,
('Remap node', 4, 'from ', 3, 'to', 6) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 9, 7, 8],) ,
('saved value', 14.040206785253348) ,
('Remap node', 5, 'from ', 9, 'to', 5) ,
('Move gain:', 0.0043983963266330806) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 7, 8],) ,
('saved value', 13.522302590789991) ,
('Remap node', 5, 'from ', 9, 'to', 6) ,
('Move gain:', 0.4820958055366429) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 6, 'from ', 7, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 9, 5, 8],) ,
('saved value', 11.517904194463357) ,
('Remap node', 6, 'from ', 7, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 9, 6, 8],) ,
('saved value', 11.517904194463357) ,
('Remap node', 7, 'from ', 8, 'to', 5) ,
('Move gain:', -2.477697409210009) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 9, 7, 5],) ,
('saved value', 11.040206785253348) ,
('Remap node', 7, 'from ', 8, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 9, 7, 6],) ,
('saved value', 11.517904194463357) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, 4, 3, 9, 7, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 3, 9, 7, 8],) ,
('saved value', 8.517904194463357) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -7.0) ,
([2, 1, 0, 4, 3, 9, 7, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 3, 9, 7, 8],) ,
('saved value', 6.517904194463357) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 2, 0, 3, 9, 7, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3, 9, 7, 8],) ,
('saved value', 6.517904194463357) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 2, 4, 0, 9, 7, 8],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0, 9, 7, 8],) ,
('saved value', 9.517904194463357) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 9) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 0, '-', 9, ',', 5, '-', 0) ,
('Swap gain:', -4.517904194463358) ,
([9, 1, 2, 4, 3, 0, 7, 8],) ,
('Computing match for mapping',) ,
([9, 1, 2, 4, 3, 0, 7, 8],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -5.429335590256269) ,
([7, 1, 2, 4, 3, 9, 0, 8],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 3, 9, 0, 8],) ,
('saved value', 8.088568604207088) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([8, 1, 2, 4, 3, 9, 7, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 3, 9, 7, 0],) ,
('saved value', 6.517904194463357) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.7561885949143035) ,
([0, 2, 1, 4, 3, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 3, 9, 7, 8],) ,
('saved value', 8.761715599549053) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 4, 2, 1, 3, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3, 9, 7, 8],) ,
('saved value', 8.517904194463357) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -1.3780942974571513) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('saved value', 12.139809897006206) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 9) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 1, '-', 9, ',', 5, '-', 1) ,
('Swap gain:', -1.1615687407247666) ,
([0, 9, 2, 4, 3, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 3, 1, 7, 8],) ,
('saved value', 12.356335453738591) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 2, 4, 3, 9, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 3, 9, 1, 8],) ,
('saved value', 9.517904194463357) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -3.7881852588404157) ,
([0, 8, 2, 4, 3, 9, 7, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 3, 9, 7, 1],) ,
('saved value', 9.729718935622941) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 4, 2, 3, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, 9, 7, 8],) ,
('saved value', 7.517904194463357) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 4, 2, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, 9, 7, 8],) ,
('saved value', 10.517904194463357) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 9) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 2, '-', 9, ',', 5, '-', 2) ,
('Swap gain:', -3.995601603673367) ,
([0, 1, 9, 4, 3, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 9, 4, 3, 2, 7, 8],) ,
('saved value', 9.522302590789991) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 4, 3, 9, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 9, 2, 8],) ,
('saved value', 7.517904194463357) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 1, 8, 4, 3, 9, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 3, 9, 7, 2],) ,
('saved value', 8.562509376043339) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 3, 4, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 9, 7, 8],) ,
('saved value', 10.517904194463357) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 9) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 3, '-', 9, ',', 5, '-', 4) ,
('Swap gain:', -3.517904194463358) ,
([0, 1, 2, 9, 3, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 3, 4, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 7, 3, 9, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 3, 9, 4, 8],) ,
('saved value', 9.517904194463357) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 8, 3, 9, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 3, 9, 7, 4],) ,
('saved value', 7.517904194463357) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 9) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 4, '-', 9, ',', 5, '-', 3) ,
('Swap gain:', -0.5179041944633578) ,
([0, 1, 2, 4, 9, 3, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 9, 3, 7, 8],) ,
('saved value', 13.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 7) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', -1.7470828143058867) ,
([0, 1, 2, 4, 7, 9, 3, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 9, 3, 8],) ,
('saved value', 11.77082138015747) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 3, ',', 7, '-', 8) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -2.477697409210009) ,
([0, 1, 2, 4, 8, 9, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 8, 9, 7, 3],) ,
('saved value', 11.040206785253348) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 9, ',', 6, '-', 7) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 9) ,
('Swap gain:', -2.517904194463358) ,
([0, 1, 2, 4, 3, 7, 9, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 7, 9, 8],) ,
('saved value', 11.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 9, ',', 7, '-', 8) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 9) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 3, 8, 7, 9],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 8, 7, 9],) ,
('saved value', 11.517904194463357) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 4, 3, 9, 8, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 9, 8, 7],) ,
('saved value', 8.517904194463357) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 4, 3, 9, 7, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 9, 7, 8]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 14.517904194463357) ,
('Current mapping:', [0, 1, 2, 4, 5, 9, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 9, 7, 8],) ,
('saved value', 10.517904194463357) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 5, 9, 7, 8],) ,
('saved value', 10.517904194463357) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 9, 7, 8],) ,
('saved value', 12.517904194463357) ,
('Remap node', 1, 'from ', 1, 'to', 6) ,
('Move gain:', -1.3940926294202078) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 9, 7, 8],) ,
('saved value', 13.12381156504315) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 9, 7, 8],) ,
('saved value', 10.517904194463357) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 9, 7, 8],) ,
('saved value', 11.040206785253348) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 9, 7, 8],) ,
('saved value', 11.517904194463357) ,
('Remap node', 3, 'from ', 4, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 9, 7, 8],) ,
('saved value', 11.517904194463357) ,
('Remap node', 4, 'from ', 5, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('saved value', 13.517904194463357) ,
('Remap node', 4, 'from ', 5, 'to', 6) ,
('Move gain:', -0.477697409210009) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 9, 7, 8],) ,
('saved value', 14.040206785253348) ,
('Remap node', 5, 'from ', 9, 'to', 3) ,
('Move gain:', -0.5179041944633571) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 5, 'from ', 9, 'to', 6) ,
('Move gain:', 1.4820958055366429) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 16.0) ,
('Remap node', 6, 'from ', 7, 'to', 3) ,
('Move gain:', -1.7470828143058867) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 9, 3, 8],) ,
('saved value', 12.77082138015747) ,
('Remap node', 6, 'from ', 7, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 9, 6, 8],) ,
('saved value', 12.517904194463357) ,
('Remap node', 7, 'from ', 8, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 9, 7, 3],) ,
('saved value', 11.517904194463357) ,
('Remap node', 7, 'from ', 8, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 9, 7, 6],) ,
('saved value', 12.517904194463357) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, 4, 5, 9, 7, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 9, 7, 8],) ,
('saved value', 9.517904194463357) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -7.0) ,
([2, 1, 0, 4, 5, 9, 7, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 9, 7, 8],) ,
('saved value', 7.517904194463357) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 2, 0, 5, 9, 7, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 9, 7, 8],) ,
('saved value', 7.517904194463357) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 2, 4, 0, 9, 7, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 9, 7, 8],) ,
('saved value', 9.517904194463357) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 9) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 0, '-', 9, ',', 5, '-', 0) ,
('Swap gain:', -4.517904194463358) ,
([9, 1, 2, 4, 5, 0, 7, 8],) ,
('Computing match for mapping',) ,
([9, 1, 2, 4, 5, 0, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -5.429335590256269) ,
([7, 1, 2, 4, 5, 9, 0, 8],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 9, 0, 8],) ,
('saved value', 9.088568604207088) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([8, 1, 2, 4, 5, 9, 7, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 5, 9, 7, 0],) ,
('saved value', 7.517904194463357) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.7561885949143035) ,
([0, 2, 1, 4, 5, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 9, 7, 8],) ,
('saved value', 9.761715599549053) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 4, 2, 1, 5, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 9, 7, 8],) ,
('saved value', 9.517904194463357) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -1.7561885949143026) ,
([0, 5, 2, 4, 1, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 9, 7, 8],) ,
('saved value', 12.761715599549055) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 9) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 1, '-', 9, ',', 5, '-', 1) ,
('Swap gain:', -1.1615687407247666) ,
([0, 9, 2, 4, 5, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 1, 7, 8],) ,
('saved value', 13.356335453738591) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 2, 4, 5, 9, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 9, 1, 8],) ,
('saved value', 10.517904194463357) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -3.7881852588404157) ,
([0, 8, 2, 4, 5, 9, 7, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 5, 9, 7, 1],) ,
('saved value', 10.729718935622941) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 4, 2, 5, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 9, 7, 8],) ,
('saved value', 8.517904194463357) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 4, 2, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 9, 7, 8],) ,
('saved value', 12.517904194463357) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 9) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 2, '-', 9, ',', 5, '-', 2) ,
('Swap gain:', -3.995601603673367) ,
([0, 1, 9, 4, 5, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 9, 4, 5, 2, 7, 8],) ,
('saved value', 10.522302590789991) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 4, 5, 9, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 9, 2, 8],) ,
('saved value', 8.517904194463357) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 1, 8, 4, 5, 9, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 5, 9, 7, 2],) ,
('saved value', 9.562509376043339) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 5, 4, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 9, 7, 8],) ,
('saved value', 10.517904194463357) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 9) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 3, '-', 9, ',', 5, '-', 4) ,
('Swap gain:', -3.517904194463358) ,
([0, 1, 2, 9, 5, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 5, 4, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 7, 5, 9, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 9, 4, 8],) ,
('saved value', 10.517904194463357) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 8, 5, 9, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 5, 9, 7, 4],) ,
('saved value', 8.517904194463357) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 9) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 4, '-', 9, ',', 5, '-', 5) ,
('Swap gain:', -0.9956016036733669) ,
([0, 1, 2, 4, 9, 5, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 9, 5, 7, 8],) ,
('saved value', 13.522302590789991) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 4, 7, 9, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 9, 5, 8],) ,
('saved value', 11.517904194463357) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -2.955394818420018) ,
([0, 1, 2, 4, 8, 9, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 8, 9, 7, 5],) ,
('saved value', 11.562509376043339) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 9, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 9) ,
('Swap gain:', -2.517904194463358) ,
([0, 1, 2, 4, 5, 7, 9, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 9, 8],) ,
('saved value', 12.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 9, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 9) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 5, 8, 7, 9],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, 7, 9],) ,
('saved value', 12.517904194463357) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 4, 5, 9, 8, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 9, 8, 7],) ,
('saved value', 9.517904194463357) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 4, 5, 9, 7, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 1.4820958055366429) ,
('Update triple match number to:', 16.0) ,
('Current mapping:', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -1.2495719168412016) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('saved value', 14.750428083158798) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, 7, 8],) ,
('saved value', 13.0) ,
('Remap node', 3, 'from ', 4, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 5, 6, 7, 8],) ,
('saved value', 13.0) ,
('Remap node', 4, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 4, 'from ', 5, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 9, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 5, 'from ', 6, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 5, 'from ', 6, 'to', 9) ,
('Move gain:', -1.4820958055366429) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('saved value', 14.517904194463357) ,
('Remap node', 6, 'from ', 7, 'to', 3) ,
('Move gain:', -1.7470828143058874) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 3, 8],) ,
('saved value', 14.252917185694113) ,
('Remap node', 6, 'from ', 7, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 9, 8],) ,
('saved value', 14.0) ,
('Remap node', 7, 'from ', 8, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('saved value', 13.0) ,
('Remap node', 7, 'from ', 8, 'to', 9) ,
('Move gain:', -2.482095805536641) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 9],) ,
('saved value', 13.517904194463359) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -7.0) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -5.429335590256269) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('saved value', 10.570664409743731) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.756188594914303) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('saved value', 11.243811405085697) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2.7561885949143026) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('saved value', 13.243811405085697) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -2.788185258840416) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('saved value', 13.211814741159584) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('saved value', 12.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -3.788185258840416) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('saved value', 12.211814741159584) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('saved value', 13.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('saved value', 11.044605181579982) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('saved value', 11.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -1.955394818420018) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('saved value', 14.044605181579982) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('saved value', 12.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -3.955394818420018) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('saved value', 12.044605181579982) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('saved value', 12.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('saved value', 13.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('saved value', 11.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('node_pair', (0, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('node_pair', (2, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 8)) ,
('instance/attribute match', 0.5223025907899909) ,
('node_pair', (5, 2)) ,
('instance/attribute match', 0.5223025907899909) ,
('node_pair', (6, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (7, 0)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 2.044605181579982) ,
('Node mapping at start', [6, 1, 7, 3, 8, 2, 4, 0]) ,
('Triple match number at start:', 2.044605181579982) ,
('Remap node', 0, 'from ', 6, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 1, 7, 3, 8, 2, 4, 0],) ,
('saved value', 2.044605181579982) ,
('Remap node', 0, 'from ', 6, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([9, 1, 7, 3, 8, 2, 4, 0],) ,
('saved value', 2.044605181579982) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -0.37809429745715173) ,
('Computing match for mapping',) ,
([6, 5, 7, 3, 8, 2, 4, 0],) ,
('saved value', 1.6665108841228302) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -0.24957191684120106) ,
('Computing match for mapping',) ,
([6, 9, 7, 3, 8, 2, 4, 0],) ,
('saved value', 1.7950332647387808) ,
('Remap node', 2, 'from ', 7, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([6, 1, 5, 3, 8, 2, 4, 0],) ,
('saved value', 3.044605181579982) ,
('Remap node', 2, 'from ', 7, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 1, 9, 3, 8, 2, 4, 0],) ,
('saved value', 2.044605181579982) ,
('Remap node', 3, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 1, 7, 5, 8, 2, 4, 0],) ,
('saved value', 2.044605181579982) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 1, 7, 9, 8, 2, 4, 0],) ,
('saved value', 2.044605181579982) ,
('Remap node', 4, 'from ', 8, 'to', 5) ,
('Move gain:', 0.47769740921000914) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 5, 2, 4, 0],) ,
('saved value', 2.522302590789991) ,
('Remap node', 4, 'from ', 8, 'to', 9) ,
('Move gain:', -0.5223025907899909) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 9, 2, 4, 0],) ,
('saved value', 1.522302590789991) ,
('Remap node', 5, 'from ', 2, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 8, 5, 4, 0],) ,
('saved value', 2.044605181579982) ,
('Remap node', 5, 'from ', 2, 'to', 9) ,
('Move gain:', -0.0043983963266330806) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 8, 9, 4, 0],) ,
('saved value', 2.040206785253349) ,
('Remap node', 6, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 8, 2, 5, 0],) ,
('saved value', 2.044605181579982) ,
('Remap node', 6, 'from ', 4, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 8, 2, 9, 0],) ,
('saved value', 2.044605181579982) ,
('Remap node', 7, 'from ', 0, 'to', 5) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 8, 2, 4, 5],) ,
('saved value', 2.566907772369973) ,
('Remap node', 7, 'from ', 0, 'to', 9) ,
('Move gain:', 0.5179041944633578) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 8, 2, 4, 9],) ,
('saved value', 2.56250937604334) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 6, ',', 1, '-', 1) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 6) ,
('Swap gain:', -0.39409262942020784) ,
([1, 6, 7, 3, 8, 2, 4, 0],) ,
('Computing match for mapping',) ,
([1, 6, 7, 3, 8, 2, 4, 0],) ,
('saved value', 1.650512552159774) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 6, ',', 2, '-', 7) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 6) ,
('Swap gain:', 0.8076347956618564) ,
([7, 1, 6, 3, 8, 2, 4, 0],) ,
('Computing match for mapping',) ,
([7, 1, 6, 3, 8, 2, 4, 0],) ,
('saved value', 2.8522399772418385) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 6, ',', 3, '-', 3) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 6) ,
('Swap gain:', 0.0) ,
([3, 1, 7, 6, 8, 2, 4, 0],) ,
('Computing match for mapping',) ,
([3, 1, 7, 6, 8, 2, 4, 0],) ,
('saved value', 2.044605181579982) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 6, ',', 4, '-', 8) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 0, '-', 8, ',', 4, '-', 6) ,
('Swap gain:', 0.0) ,
([8, 1, 7, 3, 6, 2, 4, 0],) ,
('Computing match for mapping',) ,
([8, 1, 7, 3, 6, 2, 4, 0],) ,
('saved value', 2.044605181579982) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 6, ',', 5, '-', 2) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 6) ,
('Swap gain:', 0.47769740921000914) ,
([2, 1, 7, 3, 8, 6, 4, 0],) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 8, 6, 4, 0],) ,
('saved value', 2.522302590789991) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 6, ',', 6, '-', 4) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 6) ,
('Swap gain:', 1.0) ,
([4, 1, 7, 3, 8, 2, 6, 0],) ,
('Computing match for mapping',) ,
([4, 1, 7, 3, 8, 2, 6, 0],) ,
('saved value', 3.044605181579982) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 6, ',', 7, '-', 0) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 0, '-', 0, ',', 7, '-', 6) ,
('Swap gain:', 4.0) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('saved value', 6.044605181579982) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -0.37809429745715173) ,
([6, 7, 1, 3, 8, 2, 4, 0],) ,
('Computing match for mapping',) ,
([6, 7, 1, 3, 8, 2, 4, 0],) ,
('saved value', 1.6665108841228302) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([6, 3, 7, 1, 8, 2, 4, 0],) ,
('Computing match for mapping',) ,
([6, 3, 7, 1, 8, 2, 4, 0],) ,
('saved value', 1.044605181579982) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 8) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 1, '-', 8, ',', 4, '-', 1) ,
('Swap gain:', -0.29448951766735043) ,
([6, 8, 7, 3, 1, 2, 4, 0],) ,
('Computing match for mapping',) ,
([6, 8, 7, 3, 1, 2, 4, 0],) ,
('saved value', 1.7501156639126316) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -0.29448951766735043) ,
([6, 2, 7, 3, 8, 1, 4, 0],) ,
('Computing match for mapping',) ,
([6, 2, 7, 3, 8, 1, 4, 0],) ,
('saved value', 1.7501156639126316) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -1.0) ,
([6, 4, 7, 3, 8, 2, 1, 0],) ,
('Computing match for mapping',) ,
([6, 4, 7, 3, 8, 2, 1, 0],) ,
('saved value', 1.044605181579982) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 0) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 1, '-', 0, ',', 7, '-', 1) ,
('Swap gain:', -0.39409262942020784) ,
([6, 0, 7, 3, 8, 2, 4, 1],) ,
('Computing match for mapping',) ,
([6, 0, 7, 3, 8, 2, 4, 1],) ,
('saved value', 1.650512552159774) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 3) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 7) ,
('Swap gain:', 0.0) ,
([6, 1, 3, 7, 8, 2, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 3, 7, 8, 2, 4, 0],) ,
('saved value', 2.044605181579982) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 8) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 2, '-', 8, ',', 4, '-', 7) ,
('Swap gain:', 0.0) ,
([6, 1, 8, 3, 7, 2, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 8, 3, 7, 2, 4, 0],) ,
('saved value', 2.044605181579982) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 2) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', 0.47769740921000914) ,
([6, 1, 2, 3, 8, 7, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 2, 3, 8, 7, 4, 0],) ,
('saved value', 2.522302590789991) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 4) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', 1.0) ,
([6, 1, 4, 3, 8, 2, 7, 0],) ,
('Computing match for mapping',) ,
([6, 1, 4, 3, 8, 2, 7, 0],) ,
('saved value', 3.044605181579982) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 0) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 2, '-', 0, ',', 7, '-', 7) ,
('Swap gain:', 0.0) ,
([6, 1, 0, 3, 8, 2, 4, 7],) ,
('Computing match for mapping',) ,
([6, 1, 0, 3, 8, 2, 4, 7],) ,
('saved value', 2.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 8) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 3, '-', 8, ',', 4, '-', 3) ,
('Swap gain:', -0.5223025907899909) ,
([6, 1, 7, 8, 3, 2, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 8, 3, 2, 4, 0],) ,
('saved value', 1.522302590789991) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 2) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 3) ,
('Swap gain:', -0.5223025907899909) ,
([6, 1, 7, 2, 8, 3, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 2, 8, 3, 4, 0],) ,
('saved value', 1.522302590789991) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 4) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', 1.2529171856941133) ,
([6, 1, 7, 4, 8, 2, 3, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 4, 8, 2, 3, 0],) ,
('saved value', 3.2975223672740954) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 3, ',', 7, '-', 0) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 3, '-', 0, ',', 7, '-', 3) ,
('Swap gain:', 0.0) ,
([6, 1, 7, 0, 8, 2, 4, 3],) ,
('Computing match for mapping',) ,
([6, 1, 7, 0, 8, 2, 4, 3],) ,
('saved value', 2.044605181579982) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 8, ',', 5, '-', 2) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 8) ,
('Swap gain:', 2.955394818420018) ,
([6, 1, 7, 3, 2, 8, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 2, 8, 4, 0],) ,
('saved value', 5.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 8, ',', 6, '-', 4) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 8) ,
('Swap gain:', -0.5223025907899909) ,
([6, 1, 7, 3, 4, 2, 8, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 4, 2, 8, 0],) ,
('saved value', 1.522302590789991) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 8, ',', 7, '-', 0) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 4, '-', 0, ',', 7, '-', 8) ,
('Swap gain:', 1.477697409210009) ,
([6, 1, 7, 3, 0, 2, 4, 8],) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 0, 2, 4, 8],) ,
('saved value', 3.522302590789991) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', 4) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -0.5223025907899909) ,
([6, 1, 7, 3, 8, 4, 2, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 8, 4, 2, 0],) ,
('saved value', 1.522302590789991) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 0) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 5, '-', 0, ',', 7, '-', 2) ,
('Swap gain:', 0.0) ,
([6, 1, 7, 3, 8, 0, 4, 2],) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 8, 0, 4, 2],) ,
('saved value', 2.044605181579982) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 0) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('After swapping:', 6, '-', 0, ',', 7, '-', 4) ,
('Swap gain:', 0.28533220487186556) ,
([6, 1, 7, 3, 8, 2, 0, 4],) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 8, 2, 0, 4],) ,
('saved value', 2.3299373864518476) ,
('Use swap gain',) ,
('Original mapping', [6, 1, 7, 3, 8, 2, 4, 0]) ,
('Current mapping', [0, 1, 7, 3, 8, 2, 4, 6]) ,
('Gain after the hill-climbing', 4.0) ,
('Update triple match number to:', 6.044605181579982) ,
('Current mapping:', [0, 1, 7, 3, 8, 2, 4, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 1, 7, 3, 8, 2, 4, 6],) ,
('saved value', 3.044605181579982) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([9, 1, 7, 3, 8, 2, 4, 6],) ,
('saved value', 3.044605181579982) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -1.3780942974571517) ,
('Computing match for mapping',) ,
([0, 5, 7, 3, 8, 2, 4, 6],) ,
('saved value', 4.666510884122831) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -1.2495719168412012) ,
('Computing match for mapping',) ,
([0, 9, 7, 3, 8, 2, 4, 6],) ,
('saved value', 4.79503326473878) ,
('Remap node', 2, 'from ', 7, 'to', 5) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 8, 2, 4, 6],) ,
('saved value', 8.044605181579982) ,
('Remap node', 2, 'from ', 7, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 3, 8, 2, 4, 6],) ,
('saved value', 6.044605181579982) ,
('Remap node', 3, 'from ', 3, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 8, 2, 4, 6],) ,
('saved value', 6.044605181579982) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 9, 8, 2, 4, 6],) ,
('saved value', 6.044605181579982) ,
('Remap node', 4, 'from ', 8, 'to', 5) ,
('Move gain:', 0.47769740921000914) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 2, 4, 6],) ,
('saved value', 6.522302590789991) ,
('Remap node', 4, 'from ', 8, 'to', 9) ,
('Move gain:', -0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 9, 2, 4, 6],) ,
('saved value', 5.522302590789991) ,
('Remap node', 5, 'from ', 2, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 8, 5, 4, 6],) ,
('saved value', 6.044605181579982) ,
('Remap node', 5, 'from ', 2, 'to', 9) ,
('Move gain:', -0.0043983963266330806) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 8, 9, 4, 6],) ,
('saved value', 6.040206785253349) ,
('Remap node', 6, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 8, 2, 5, 6],) ,
('saved value', 6.044605181579982) ,
('Remap node', 6, 'from ', 4, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 8, 2, 9, 6],) ,
('saved value', 6.044605181579982) ,
('Remap node', 7, 'from ', 6, 'to', 5) ,
('Move gain:', -0.47769740921000914) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 8, 2, 4, 5],) ,
('saved value', 5.566907772369973) ,
('Remap node', 7, 'from ', 6, 'to', 9) ,
('Move gain:', -0.4820958055366422) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 8, 2, 4, 9],) ,
('saved value', 5.56250937604334) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 7, 3, 8, 2, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 3, 8, 2, 4, 6],) ,
('saved value', 2.044605181579982) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -2.7146677951281344) ,
([7, 1, 0, 3, 8, 2, 4, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 3, 8, 2, 4, 6],) ,
('saved value', 3.3299373864518476) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 7, 0, 8, 2, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 0, 8, 2, 4, 6],) ,
('saved value', 3.044605181579982) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 8) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 0, '-', 8, ',', 4, '-', 0) ,
('Swap gain:', -3.522302590789991) ,
([8, 1, 7, 3, 0, 2, 4, 6],) ,
('Computing match for mapping',) ,
([8, 1, 7, 3, 0, 2, 4, 6],) ,
('saved value', 2.522302590789991) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -3.522302590789991) ,
([2, 1, 7, 3, 8, 0, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 8, 0, 4, 6],) ,
('saved value', 2.522302590789991) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -1.7146677951281344) ,
([4, 1, 7, 3, 8, 2, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 7, 3, 8, 2, 0, 6],) ,
('saved value', 4.329937386451848) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 6) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', -4.0) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 8, 2, 4, 0],) ,
('saved value', 2.044605181579982) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -1.3780942974571517) ,
([0, 7, 1, 3, 8, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 3, 8, 2, 4, 6],) ,
('saved value', 4.666510884122831) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 3, 7, 1, 8, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 1, 8, 2, 4, 6],) ,
('saved value', 4.044605181579982) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 8) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 1, '-', 8, ',', 4, '-', 1) ,
('Swap gain:', -1.2944895176673503) ,
([0, 8, 7, 3, 1, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 8, 7, 3, 1, 2, 4, 6],) ,
('saved value', 4.750115663912632) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -1.2944895176673503) ,
([0, 2, 7, 3, 8, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, 8, 1, 4, 6],) ,
('saved value', 4.750115663912632) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 4, 7, 3, 8, 2, 1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 7, 3, 8, 2, 1, 6],) ,
('saved value', 4.044605181579982) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 6) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 1) ,
('Swap gain:', -1.7881852588404157) ,
([0, 6, 7, 3, 8, 2, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 3, 8, 2, 4, 1],) ,
('saved value', 4.256419922739566) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 3) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 1, 3, 7, 8, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 8, 2, 4, 6],) ,
('saved value', 6.044605181579982) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 8) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 2, '-', 8, ',', 4, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 1, 8, 3, 7, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 7, 2, 4, 6],) ,
('saved value', 6.044605181579982) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 2) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', 1.477697409210009) ,
([0, 1, 2, 3, 8, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 8, 7, 4, 6],) ,
('saved value', 7.522302590789991) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 4) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', 1.0) ,
([0, 1, 4, 3, 8, 2, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 8, 2, 7, 6],) ,
('saved value', 7.044605181579982) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 6) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 7) ,
('Swap gain:', -0.47769740921000914) ,
([0, 1, 6, 3, 8, 2, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 8, 2, 4, 7],) ,
('saved value', 5.566907772369973) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 8) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 3, '-', 8, ',', 4, '-', 3) ,
('Swap gain:', -0.5223025907899909) ,
([0, 1, 7, 8, 3, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 8, 3, 2, 4, 6],) ,
('saved value', 5.522302590789991) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 2) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 3) ,
('Swap gain:', -0.5223025907899909) ,
([0, 1, 7, 2, 8, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 8, 3, 4, 6],) ,
('saved value', 5.522302590789991) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 4) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', 1.2529171856941133) ,
([0, 1, 7, 4, 8, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 8, 2, 3, 6],) ,
('saved value', 7.297522367274095) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 3, ',', 7, '-', 6) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 3) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 6, 8, 2, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 8, 2, 4, 3],) ,
('saved value', 5.044605181579982) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 8, ',', 5, '-', 2) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 8) ,
('Swap gain:', 2.955394818420018) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('saved value', 9.0) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 8, ',', 6, '-', 4) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 8) ,
('Swap gain:', -0.5223025907899909) ,
([0, 1, 7, 3, 4, 2, 8, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 2, 8, 6],) ,
('saved value', 5.522302590789991) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 8, ',', 7, '-', 6) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 8) ,
('Swap gain:', 1.0) ,
([0, 1, 7, 3, 6, 2, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 6, 2, 4, 8],) ,
('saved value', 7.044605181579982) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', 4) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -0.5223025907899909) ,
([0, 1, 7, 3, 8, 4, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 8, 4, 2, 6],) ,
('saved value', 5.522302590789991) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 6) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 1, 7, 3, 8, 6, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 8, 6, 4, 2],) ,
('saved value', 6.044605181579982) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 6) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 3, 8, 2, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 8, 2, 6, 4],) ,
('saved value', 5.044605181579982) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 7, 3, 8, 2, 4, 6]) ,
('Current mapping', [0, 1, 7, 3, 2, 8, 4, 6]) ,
('Gain after the hill-climbing', 2.955394818420018) ,
('Update triple match number to:', 9.0) ,
('Current mapping:', [0, 1, 7, 3, 2, 8, 4, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 1, 7, 3, 2, 8, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([9, 1, 7, 3, 2, 8, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -1.3780942974571517) ,
('Computing match for mapping',) ,
([0, 5, 7, 3, 2, 8, 4, 6],) ,
('saved value', 7.621905702542849) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -1.2495719168412012) ,
('Computing match for mapping',) ,
([0, 9, 7, 3, 2, 8, 4, 6],) ,
('saved value', 7.750428083158798) ,
('Remap node', 2, 'from ', 7, 'to', 5) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('saved value', 11.0) ,
('Remap node', 2, 'from ', 7, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 3, 2, 8, 4, 6],) ,
('saved value', 9.0) ,
('Remap node', 3, 'from ', 3, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 5, 2, 8, 4, 6],) ,
('saved value', 8.0) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 9, 2, 8, 4, 6],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 2, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 5, 8, 4, 6],) ,
('saved value', 7.0) ,
('Remap node', 4, 'from ', 2, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 9, 8, 4, 6],) ,
('saved value', 6.0) ,
('Remap node', 5, 'from ', 8, 'to', 5) ,
('Move gain:', -1.477697409210009) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 5, 4, 6],) ,
('saved value', 7.522302590789991) ,
('Remap node', 5, 'from ', 8, 'to', 9) ,
('Move gain:', -1.4820958055366422) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 9, 4, 6],) ,
('saved value', 7.517904194463358) ,
('Remap node', 6, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 8, 5, 6],) ,
('saved value', 9.0) ,
('Remap node', 6, 'from ', 4, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 8, 9, 6],) ,
('saved value', 9.0) ,
('Remap node', 7, 'from ', 6, 'to', 5) ,
('Move gain:', -0.47769740921000914) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 8, 4, 5],) ,
('saved value', 8.522302590789991) ,
('Remap node', 7, 'from ', 6, 'to', 9) ,
('Move gain:', -0.4820958055366422) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 8, 4, 9],) ,
('saved value', 8.517904194463357) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 7, 3, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 7, 3, 2, 8, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -2.7146677951281344) ,
([7, 1, 0, 3, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([7, 1, 0, 3, 2, 8, 4, 6],) ,
('saved value', 6.285332204871866) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 7, 0, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 7, 0, 2, 8, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 7, 3, 0, 8, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 7, 3, 0, 8, 4, 6],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([8, 1, 7, 3, 2, 0, 4, 6],) ,
('Computing match for mapping',) ,
([8, 1, 7, 3, 2, 0, 4, 6],) ,
('saved value', 4.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -1.7146677951281344) ,
([4, 1, 7, 3, 2, 8, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 7, 3, 2, 8, 0, 6],) ,
('saved value', 7.285332204871866) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 6) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', -4.0) ,
([6, 1, 7, 3, 2, 8, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 7, 3, 2, 8, 4, 0],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 7) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 1) ,
('Swap gain:', -1.3780942974571517) ,
([0, 7, 1, 3, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 7, 1, 3, 2, 8, 4, 6],) ,
('saved value', 7.621905702542849) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 3, 7, 1, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 7, 1, 2, 8, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3.7561885949143035) ,
([0, 2, 7, 3, 1, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 7, 3, 1, 8, 4, 6],) ,
('saved value', 5.2438114050856965) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 8) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -2.7881852588404157) ,
([0, 8, 7, 3, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 8, 7, 3, 2, 1, 4, 6],) ,
('saved value', 6.211814741159584) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 4, 7, 3, 2, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 7, 3, 2, 8, 1, 6],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 6) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 1) ,
('Swap gain:', -1.7881852588404157) ,
([0, 6, 7, 3, 2, 8, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 7, 3, 2, 8, 4, 1],) ,
('saved value', 7.211814741159584) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 3) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 7) ,
('Swap gain:', -1.0) ,
([0, 1, 3, 7, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 7, 2, 8, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 2) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 7) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 3, 7, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 7, 8, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 8) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 7) ,
('Swap gain:', -1.477697409210009) ,
([0, 1, 8, 3, 2, 7, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 2, 7, 4, 6],) ,
('saved value', 7.522302590789991) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 4) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 7) ,
('Swap gain:', 1.0) ,
([0, 1, 4, 3, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 8, 7, 6],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 6) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 7) ,
('Swap gain:', -0.47769740921000914) ,
([0, 1, 6, 3, 2, 8, 4, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 8, 4, 7],) ,
('saved value', 8.522302590789991) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 2) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 2, 3, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 2, 3, 8, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 8) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 8, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 8, 2, 3, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 4) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', 0.25291718569411326) ,
([0, 1, 7, 4, 2, 8, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 8, 3, 6],) ,
('saved value', 9.252917185694113) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 3, ',', 7, '-', 6) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 1, 7, 6, 2, 8, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 7, 6, 2, 8, 4, 3],) ,
('saved value', 7.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 8) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -2.955394818420018) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 8, 2, 4, 6],) ,
('saved value', 6.044605181579982) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 4) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 7, 3, 4, 8, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 4, 8, 2, 6],) ,
('saved value', 6.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 6) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 2) ,
('Swap gain:', -2.955394818420018) ,
([0, 1, 7, 3, 6, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 6, 8, 4, 2],) ,
('saved value', 6.044605181579982) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 4) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 8) ,
('Swap gain:', -2.0) ,
([0, 1, 7, 3, 2, 4, 8, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 4, 8, 6],) ,
('saved value', 7.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 6) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 8) ,
('Swap gain:', 0.0) ,
([0, 1, 7, 3, 2, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 6, 4, 8],) ,
('saved value', 9.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 6) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', -1.0) ,
([0, 1, 7, 3, 2, 8, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 8, 6, 4],) ,
('saved value', 8.0) ,
('Use move gain',) ,
('Original mapping', [0, 1, 7, 3, 2, 8, 4, 6]) ,
('Current mapping', [0, 1, 5, 3, 2, 8, 4, 6]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 11.0) ,
('Current mapping:', [0, 1, 5, 3, 2, 8, 4, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -2.7146677951281344) ,
('Computing match for mapping',) ,
([7, 1, 5, 3, 2, 8, 4, 6],) ,
('saved value', 8.285332204871866) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([9, 1, 5, 3, 2, 8, 4, 6],) ,
('saved value', 8.0) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 7, 5, 3, 2, 8, 4, 6],) ,
('saved value', 9.0) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -1.2495719168412012) ,
('Computing match for mapping',) ,
([0, 9, 5, 3, 2, 8, 4, 6],) ,
('saved value', 9.750428083158798) ,
('Remap node', 2, 'from ', 5, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 3, 2, 8, 4, 6],) ,
('saved value', 9.0) ,
('Remap node', 2, 'from ', 5, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 3, 2, 8, 4, 6],) ,
('saved value', 9.0) ,
('Remap node', 3, 'from ', 3, 'to', 7) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 2, 8, 4, 6],) ,
('saved value', 10.0) ,
('Remap node', 3, 'from ', 3, 'to', 9) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 9, 2, 8, 4, 6],) ,
('saved value', 10.0) ,
('Remap node', 4, 'from ', 2, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 7, 8, 4, 6],) ,
('saved value', 8.0) ,
('Remap node', 4, 'from ', 2, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 9, 8, 4, 6],) ,
('saved value', 8.0) ,
('Remap node', 5, 'from ', 8, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 7, 4, 6],) ,
('saved value', 9.0) ,
('Remap node', 5, 'from ', 8, 'to', 9) ,
('Move gain:', -1.4820958055366422) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 9, 4, 6],) ,
('saved value', 9.517904194463357) ,
('Remap node', 6, 'from ', 4, 'to', 7) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 8, 7, 6],) ,
('saved value', 12.0) ,
('Remap node', 6, 'from ', 4, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 8, 9, 6],) ,
('saved value', 11.0) ,
('Remap node', 7, 'from ', 6, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 8, 4, 7],) ,
('saved value', 9.0) ,
('Remap node', 7, 'from ', 6, 'to', 9) ,
('Move gain:', -1.4820958055366422) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 8, 4, 9],) ,
('saved value', 9.517904194463357) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 5, 3, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([1, 0, 5, 3, 2, 8, 4, 6],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 1, 0, 3, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([5, 1, 0, 3, 2, 8, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 5, 0, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([3, 1, 5, 0, 2, 8, 4, 6],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 5, 3, 0, 8, 4, 6],) ,
('Computing match for mapping',) ,
([2, 1, 5, 3, 0, 8, 4, 6],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([8, 1, 5, 3, 2, 0, 4, 6],) ,
('Computing match for mapping',) ,
([8, 1, 5, 3, 2, 0, 4, 6],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 4) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 0, '-', 4, ',', 6, '-', 0) ,
('Swap gain:', -2.7146677951281344) ,
([4, 1, 5, 3, 2, 8, 0, 6],) ,
('Computing match for mapping',) ,
([4, 1, 5, 3, 2, 8, 0, 6],) ,
('saved value', 8.285332204871866) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 6) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 1, 5, 3, 2, 8, 4, 0],) ,
('Computing match for mapping',) ,
([6, 1, 5, 3, 2, 8, 4, 0],) ,
('saved value', 6.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 5) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', -2.7561885949143035) ,
([0, 5, 1, 3, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 5, 1, 3, 2, 8, 4, 6],) ,
('saved value', 8.243811405085697) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 3, 5, 1, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 1, 2, 8, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3.7561885949143035) ,
([0, 2, 5, 3, 1, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 2, 5, 3, 1, 8, 4, 6],) ,
('saved value', 7.2438114050856965) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 8) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -2.7881852588404157) ,
([0, 8, 5, 3, 2, 1, 4, 6],) ,
('Computing match for mapping',) ,
([0, 8, 5, 3, 2, 1, 4, 6],) ,
('saved value', 8.211814741159584) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 4) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 1, '-', 4, ',', 6, '-', 1) ,
('Swap gain:', -2.0) ,
([0, 4, 5, 3, 2, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 4, 5, 3, 2, 8, 1, 6],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 6) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 1) ,
('Swap gain:', -2.7881852588404157) ,
([0, 6, 5, 3, 2, 8, 4, 1],) ,
('Computing match for mapping',) ,
([0, 6, 5, 3, 2, 8, 4, 1],) ,
('saved value', 8.211814741159584) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 3) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 5) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 5, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 5, 2, 8, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 3, 5, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 8, 4, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 8) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 5) ,
('Swap gain:', -2.955394818420018) ,
([0, 1, 8, 3, 2, 5, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 8, 3, 2, 5, 4, 6],) ,
('saved value', 8.044605181579982) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 4) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 2, '-', 4, ',', 6, '-', 5) ,
('Swap gain:', -2.0) ,
([0, 1, 4, 3, 2, 8, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 3, 2, 8, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 6) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 5) ,
('Swap gain:', -1.9553948184200183) ,
([0, 1, 6, 3, 2, 8, 4, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 2, 8, 4, 5],) ,
('saved value', 9.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 3, ',', 4, '-', 2) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 2, 3, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 3, 8, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 3, ',', 5, '-', 8) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 8, 2, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 8, 2, 3, 4, 6],) ,
('saved value', 8.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 3, ',', 6, '-', 4) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 3, '-', 4, ',', 6, '-', 3) ,
('Swap gain:', 1.2529171856941135) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('saved value', 12.252917185694113) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 3, ',', 7, '-', 6) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 3) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 6, 2, 8, 4, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 6, 2, 8, 4, 3],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 8) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -2.955394818420018) ,
([0, 1, 5, 3, 8, 2, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 8, 2, 4, 6],) ,
('saved value', 8.044605181579982) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 4) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 4, '-', 4, ',', 6, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 3, 4, 8, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 4, 8, 2, 6],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 6) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 2) ,
('Swap gain:', -3.955394818420018) ,
([0, 1, 5, 3, 6, 8, 4, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 6, 8, 4, 2],) ,
('saved value', 7.044605181579982) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 4) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 5, '-', 4, ',', 6, '-', 8) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 3, 2, 4, 8, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 4, 8, 6],) ,
('saved value', 9.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 6) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 8) ,
('Swap gain:', -1.0) ,
([0, 1, 5, 3, 2, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 6, 4, 8],) ,
('saved value', 10.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 4, ',', 7, '-', 6) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 1, 5, 3, 2, 8, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 8, 6, 4],) ,
('saved value', 9.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 5, 3, 2, 8, 4, 6]) ,
('Current mapping', [0, 1, 5, 4, 2, 8, 3, 6]) ,
('Gain after the hill-climbing', 1.2529171856941135) ,
('Update triple match number to:', 12.252917185694113) ,
('Current mapping:', [0, 1, 5, 4, 2, 8, 3, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -2.7146677951281344) ,
('Computing match for mapping',) ,
([7, 1, 5, 4, 2, 8, 3, 6],) ,
('saved value', 9.538249390565978) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([9, 1, 5, 4, 2, 8, 3, 6],) ,
('saved value', 9.252917185694113) ,
('Remap node', 1, 'from ', 1, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 7, 5, 4, 2, 8, 3, 6],) ,
('saved value', 10.252917185694113) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -1.2495719168412012) ,
('Computing match for mapping',) ,
([0, 9, 5, 4, 2, 8, 3, 6],) ,
('saved value', 11.003345268852911) ,
('Remap node', 2, 'from ', 5, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 8, 3, 6],) ,
('saved value', 9.252917185694113) ,
('Remap node', 2, 'from ', 5, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 4, 2, 8, 3, 6],) ,
('saved value', 9.252917185694113) ,
('Remap node', 3, 'from ', 4, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 2, 8, 3, 6],) ,
('saved value', 10.252917185694113) ,
('Remap node', 3, 'from ', 4, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 9, 2, 8, 3, 6],) ,
('saved value', 10.252917185694113) ,
('Remap node', 4, 'from ', 2, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 8, 3, 6],) ,
('saved value', 10.252917185694113) ,
('Remap node', 4, 'from ', 2, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 9, 8, 3, 6],) ,
('saved value', 10.252917185694113) ,
('Remap node', 5, 'from ', 8, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 7, 3, 6],) ,
('saved value', 10.252917185694113) ,
('Remap node', 5, 'from ', 8, 'to', 9) ,
('Move gain:', -1.4820958055366422) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 9, 3, 6],) ,
('saved value', 10.77082138015747) ,
('Remap node', 6, 'from ', 3, 'to', 7) ,
('Move gain:', 1.7470828143058867) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('saved value', 14.0) ,
('Remap node', 6, 'from ', 3, 'to', 9) ,
('Move gain:', -0.25291718569411326) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 9, 6],) ,
('saved value', 12.0) ,
('Remap node', 7, 'from ', 6, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 3, 7],) ,
('saved value', 10.252917185694113) ,
('Remap node', 7, 'from ', 6, 'to', 9) ,
('Move gain:', -1.4820958055366422) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 3, 9],) ,
('saved value', 10.77082138015747) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 5, 4, 2, 8, 3, 6],) ,
('Computing match for mapping',) ,
([1, 0, 5, 4, 2, 8, 3, 6],) ,
('saved value', 8.252917185694113) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([5, 1, 0, 4, 2, 8, 3, 6],) ,
('Computing match for mapping',) ,
([5, 1, 0, 4, 2, 8, 3, 6],) ,
('saved value', 6.252917185694113) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 1, 5, 0, 2, 8, 3, 6],) ,
('Computing match for mapping',) ,
([4, 1, 5, 0, 2, 8, 3, 6],) ,
('saved value', 7.252917185694113) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 5, 4, 0, 8, 3, 6],) ,
('Computing match for mapping',) ,
([2, 1, 5, 4, 0, 8, 3, 6],) ,
('saved value', 7.252917185694113) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([8, 1, 5, 4, 2, 0, 3, 6],) ,
('Computing match for mapping',) ,
([8, 1, 5, 4, 2, 0, 3, 6],) ,
('saved value', 7.252917185694113) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 3) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 0, '-', 3, ',', 6, '-', 0) ,
('Swap gain:', -2.967584980822248) ,
([3, 1, 5, 4, 2, 8, 0, 6],) ,
('Computing match for mapping',) ,
([3, 1, 5, 4, 2, 8, 0, 6],) ,
('saved value', 9.285332204871864) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 1, 5, 4, 2, 8, 3, 0],) ,
('Computing match for mapping',) ,
([6, 1, 5, 4, 2, 8, 3, 0],) ,
('saved value', 7.252917185694113) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 5) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', -3.7561885949143035) ,
([0, 5, 1, 4, 2, 8, 3, 6],) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 2, 8, 3, 6],) ,
('saved value', 8.49672859077981) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 4, 5, 1, 2, 8, 3, 6],) ,
('Computing match for mapping',) ,
([0, 4, 5, 1, 2, 8, 3, 6],) ,
('saved value', 8.252917185694113) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2.7561885949143035) ,
([0, 2, 5, 4, 1, 8, 3, 6],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 1, 8, 3, 6],) ,
('saved value', 9.49672859077981) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -2.7881852588404157) ,
([0, 8, 5, 4, 2, 1, 3, 6],) ,
('Computing match for mapping',) ,
([0, 8, 5, 4, 2, 1, 3, 6],) ,
('saved value', 9.464731926853696) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 3) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 1, '-', 3, ',', 6, '-', 1) ,
('Swap gain:', -2.2529171856941135) ,
([0, 3, 5, 4, 2, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 2, 8, 1, 6],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 1) ,
('Swap gain:', -2.7881852588404157) ,
([0, 6, 5, 4, 2, 8, 3, 1],) ,
('Computing match for mapping',) ,
([0, 6, 5, 4, 2, 8, 3, 1],) ,
('saved value', 9.464731926853696) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 1, 4, 5, 2, 8, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 8, 3, 6],) ,
('saved value', 8.252917185694113) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 4, 5, 8, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, 3, 6],) ,
('saved value', 11.252917185694113) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 5) ,
('Swap gain:', -3.955394818420018) ,
([0, 1, 8, 4, 2, 5, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 2, 5, 3, 6],) ,
('saved value', 8.297522367274095) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 3) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 2, '-', 3, ',', 6, '-', 5) ,
('Swap gain:', -3.2529171856941135) ,
([0, 1, 3, 4, 2, 8, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, 8, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 5) ,
('Swap gain:', -2.955394818420018) ,
([0, 1, 6, 4, 2, 8, 3, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 2, 8, 3, 5],) ,
('saved value', 9.297522367274095) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 5, 2, 4, 8, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 4, 8, 3, 6],) ,
('saved value', 8.252917185694113) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 5, 8, 2, 4, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 8, 2, 4, 3, 6],) ,
('saved value', 8.252917185694113) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 3) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 3, '-', 3, ',', 6, '-', 4) ,
('Swap gain:', -1.2529171856941126) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 8, 4, 6],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 5, 6, 2, 8, 3, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 6, 2, 8, 3, 4],) ,
('saved value', 8.252917185694113) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1.9553948184200183) ,
([0, 1, 5, 4, 8, 2, 3, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 8, 2, 3, 6],) ,
('saved value', 10.297522367274095) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 3) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 4, '-', 3, ',', 6, '-', 2) ,
('Swap gain:', -2.2529171856941135) ,
([0, 1, 5, 4, 3, 8, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 3, 8, 2, 6],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 2) ,
('Swap gain:', -2.955394818420018) ,
([0, 1, 5, 4, 6, 8, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 6, 8, 3, 2],) ,
('saved value', 9.297522367274095) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 3) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 5, '-', 3, ',', 6, '-', 8) ,
('Swap gain:', -2.2529171856941135) ,
([0, 1, 5, 4, 2, 3, 8, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 3, 8, 6],) ,
('saved value', 10.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 8) ,
('Swap gain:', -1.0) ,
([0, 1, 5, 4, 2, 6, 3, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, 3, 8],) ,
('saved value', 11.252917185694113) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 3, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', 3) ,
('Swap gain:', -2.2529171856941135) ,
([0, 1, 5, 4, 2, 8, 6, 3],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 6, 3],) ,
('saved value', 10.0) ,
('Use move gain',) ,
('Original mapping', [0, 1, 5, 4, 2, 8, 3, 6]) ,
('Current mapping', [0, 1, 5, 4, 2, 8, 7, 6]) ,
('Gain after the hill-climbing', 1.7470828143058867) ,
('Update triple match number to:', 14.0) ,
('Current mapping:', [0, 1, 5, 4, 2, 8, 7, 6]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([3, 1, 5, 4, 2, 8, 7, 6],) ,
('saved value', 11.0) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([9, 1, 5, 4, 2, 8, 7, 6],) ,
('saved value', 11.0) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 5, 4, 2, 8, 7, 6],) ,
('saved value', 12.0) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -1.2495719168412012) ,
('Computing match for mapping',) ,
([0, 9, 5, 4, 2, 8, 7, 6],) ,
('saved value', 12.750428083158798) ,
('Remap node', 2, 'from ', 5, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, 8, 7, 6],) ,
('saved value', 11.0) ,
('Remap node', 2, 'from ', 5, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 4, 2, 8, 7, 6],) ,
('saved value', 11.0) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 3, 2, 8, 7, 6],) ,
('saved value', 12.0) ,
('Remap node', 3, 'from ', 4, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 9, 2, 8, 7, 6],) ,
('saved value', 11.0) ,
('Remap node', 4, 'from ', 2, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 3, 8, 7, 6],) ,
('saved value', 12.0) ,
('Remap node', 4, 'from ', 2, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 9, 8, 7, 6],) ,
('saved value', 12.0) ,
('Remap node', 5, 'from ', 8, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 3, 7, 6],) ,
('saved value', 12.0) ,
('Remap node', 5, 'from ', 8, 'to', 9) ,
('Move gain:', -1.4820958055366422) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 9, 7, 6],) ,
('saved value', 12.517904194463357) ,
('Remap node', 6, 'from ', 7, 'to', 3) ,
('Move gain:', -1.7470828143058874) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 3, 6],) ,
('saved value', 12.252917185694113) ,
('Remap node', 6, 'from ', 7, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 9, 6],) ,
('saved value', 12.0) ,
('Remap node', 7, 'from ', 6, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 7, 3],) ,
('saved value', 12.0) ,
('Remap node', 7, 'from ', 6, 'to', 9) ,
('Move gain:', -1.4820958055366422) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 7, 9],) ,
('saved value', 12.517904194463357) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 5, 4, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([1, 0, 5, 4, 2, 8, 7, 6],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 5) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 0, '-', 5, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([5, 1, 0, 4, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([5, 1, 0, 4, 2, 8, 7, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([4, 1, 5, 0, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([4, 1, 5, 0, 2, 8, 7, 6],) ,
('saved value', 8.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, 5, 4, 0, 8, 7, 6],) ,
('Computing match for mapping',) ,
([2, 1, 5, 4, 0, 8, 7, 6],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 0, '-', 8, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([8, 1, 5, 4, 2, 0, 7, 6],) ,
('Computing match for mapping',) ,
([8, 1, 5, 4, 2, 0, 7, 6],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -4.429335590256269) ,
([7, 1, 5, 4, 2, 8, 0, 6],) ,
('Computing match for mapping',) ,
([7, 1, 5, 4, 2, 8, 0, 6],) ,
('saved value', 9.570664409743731) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 0, '-', 6, ',', 7, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 1, 5, 4, 2, 8, 7, 0],) ,
('Computing match for mapping',) ,
([6, 1, 5, 4, 2, 8, 7, 0],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 5) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 1, '-', 5, ',', 2, '-', 1) ,
('Swap gain:', -3.7561885949143035) ,
([0, 5, 1, 4, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 5, 1, 4, 2, 8, 7, 6],) ,
('saved value', 10.243811405085697) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 4, 5, 1, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 4, 5, 1, 2, 8, 7, 6],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -2.7561885949143035) ,
([0, 2, 5, 4, 1, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 2, 5, 4, 1, 8, 7, 6],) ,
('saved value', 11.243811405085697) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 1, '-', 8, ',', 5, '-', 1) ,
('Swap gain:', -2.7881852588404157) ,
([0, 8, 5, 4, 2, 1, 7, 6],) ,
('Computing match for mapping',) ,
([0, 8, 5, 4, 2, 1, 7, 6],) ,
('saved value', 11.211814741159584) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 5, 4, 2, 8, 1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 5, 4, 2, 8, 1, 6],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 1, '-', 6, ',', 7, '-', 1) ,
('Swap gain:', -2.7881852588404157) ,
([0, 6, 5, 4, 2, 8, 7, 1],) ,
('Computing match for mapping',) ,
([0, 6, 5, 4, 2, 8, 7, 1],) ,
('saved value', 11.211814741159584) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 5, ',', 3, '-', 4) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 1, 4, 5, 2, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 4, 5, 2, 8, 7, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 5, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 5) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('saved value', 13.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 5, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 2, '-', 8, ',', 5, '-', 5) ,
('Swap gain:', -3.955394818420018) ,
([0, 1, 8, 4, 2, 5, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 2, 5, 7, 6],) ,
('saved value', 10.044605181579982) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 5, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -5.0) ,
([0, 1, 7, 4, 2, 8, 5, 6],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 2, 8, 5, 6],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 5, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 2, '-', 6, ',', 7, '-', 5) ,
('Swap gain:', -2.955394818420018) ,
([0, 1, 6, 4, 2, 8, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 2, 8, 7, 5],) ,
('saved value', 11.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 2) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 5, 2, 4, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 2, 4, 8, 7, 6],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 3, '-', 8, ',', 5, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 5, 8, 2, 4, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 8, 2, 4, 7, 6],) ,
('saved value', 9.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 5, 7, 2, 8, 4, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 7, 2, 8, 4, 6],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 3, '-', 6, ',', 7, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 5, 6, 2, 8, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 5, 6, 2, 8, 7, 4],) ,
('saved value', 9.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 2, ',', 5, '-', 8) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 4, '-', 8, ',', 5, '-', 2) ,
('Swap gain:', -1.9553948184200183) ,
([0, 1, 5, 4, 8, 2, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 8, 2, 7, 6],) ,
('saved value', 12.044605181579982) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 2, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 5, 4, 7, 8, 2, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 7, 8, 2, 6],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 2, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 4, '-', 6, ',', 7, '-', 2) ,
('Swap gain:', -2.955394818420018) ,
([0, 1, 5, 4, 6, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 6, 8, 7, 2],) ,
('saved value', 11.044605181579982) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 8, ',', 6, '-', 7) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 8) ,
('Swap gain:', -4.0) ,
([0, 1, 5, 4, 2, 7, 8, 6],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 7, 8, 6],) ,
('saved value', 10.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 8, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 5, '-', 6, ',', 7, '-', 8) ,
('Swap gain:', -1.0) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('saved value', 13.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 6) ,
([0, 1, 5, 4, 2, 8, 7, 6],) ,
('After swapping:', 6, '-', 6, ',', 7, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 1, 5, 4, 2, 8, 6, 7],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 8, 6, 7],) ,
('saved value', 10.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 5, 4, 2, 8, 7, 6]) ,
('Current mapping', [0, 1, 5, 4, 2, 8, 7, 6]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('node_pair', (0, 4)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 6)) ,
('instance/attribute match', 0.5223025907899909) ,
('node_pair', (3, 9)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (5, 2)) ,
('instance/attribute match', 0.5223025907899909) ,
('node_pair', (6, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (7, 8)) ,
('instance/attribute match', 2.0) ,
('match computing complete, result:', 3.044605181579982) ,
('Node mapping at start', [4, 7, 6, 9, 3, 2, 1, 8]) ,
('Triple match number at start:', 3.044605181579982) ,
('Remap node', 0, 'from ', 4, 'to', 0) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('saved value', 5.044605181579982) ,
('Remap node', 0, 'from ', 4, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 7, 6, 9, 3, 2, 1, 8],) ,
('saved value', 3.044605181579982) ,
('Remap node', 1, 'from ', 7, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 0, 6, 9, 3, 2, 1, 8],) ,
('saved value', 3.044605181579982) ,
('Remap node', 1, 'from ', 7, 'to', 5) ,
('Move gain:', 0.6219057025428483) ,
('Computing match for mapping',) ,
([4, 5, 6, 9, 3, 2, 1, 8],) ,
('saved value', 3.66651088412283) ,
('Remap node', 2, 'from ', 6, 'to', 0) ,
('Move gain:', -0.5223025907899909) ,
('Computing match for mapping',) ,
([4, 7, 0, 9, 3, 2, 1, 8],) ,
('saved value', 2.522302590789991) ,
('Remap node', 2, 'from ', 6, 'to', 5) ,
('Move gain:', 0.47769740921000914) ,
('Computing match for mapping',) ,
([4, 7, 5, 9, 3, 2, 1, 8],) ,
('saved value', 3.522302590789991) ,
('Remap node', 3, 'from ', 9, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 0, 3, 2, 1, 8],) ,
('saved value', 3.044605181579982) ,
('Remap node', 3, 'from ', 9, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 5, 3, 2, 1, 8],) ,
('saved value', 3.044605181579982) ,
('Remap node', 4, 'from ', 3, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 0, 2, 1, 8],) ,
('saved value', 3.044605181579982) ,
('Remap node', 4, 'from ', 3, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 5, 2, 1, 8],) ,
('saved value', 4.044605181579982) ,
('Remap node', 5, 'from ', 2, 'to', 0) ,
('Move gain:', -0.5223025907899909) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 3, 0, 1, 8],) ,
('saved value', 2.522302590789991) ,
('Remap node', 5, 'from ', 2, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 3, 5, 1, 8],) ,
('saved value', 3.044605181579982) ,
('Remap node', 6, 'from ', 1, 'to', 0) ,
('Move gain:', 0.28533220487186556) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 3, 2, 0, 8],) ,
('saved value', 3.3299373864518476) ,
('Remap node', 6, 'from ', 1, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 3, 2, 5, 8],) ,
('saved value', 3.044605181579982) ,
('Remap node', 7, 'from ', 8, 'to', 0) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 3, 2, 1, 0],) ,
('saved value', 1.044605181579982) ,
('Remap node', 7, 'from ', 8, 'to', 5) ,
('Move gain:', -1.477697409210009) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 3, 2, 1, 5],) ,
('saved value', 1.566907772369973) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 4, ',', 1, '-', 7) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 4) ,
('Swap gain:', 0.28533220487186556) ,
([7, 4, 6, 9, 3, 2, 1, 8],) ,
('Computing match for mapping',) ,
([7, 4, 6, 9, 3, 2, 1, 8],) ,
('saved value', 3.3299373864518476) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 4, ',', 2, '-', 6) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 4) ,
('Swap gain:', -0.5223025907899909) ,
([6, 7, 4, 9, 3, 2, 1, 8],) ,
('Computing match for mapping',) ,
([6, 7, 4, 9, 3, 2, 1, 8],) ,
('saved value', 2.522302590789991) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 4, ',', 3, '-', 9) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 4) ,
('Swap gain:', 1.0) ,
([9, 7, 6, 4, 3, 2, 1, 8],) ,
('Computing match for mapping',) ,
([9, 7, 6, 4, 3, 2, 1, 8],) ,
('saved value', 4.044605181579982) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 4, ',', 4, '-', 3) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', 0.0) ,
([3, 7, 6, 9, 4, 2, 1, 8],) ,
('Computing match for mapping',) ,
([3, 7, 6, 9, 4, 2, 1, 8],) ,
('saved value', 3.044605181579982) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 4, ',', 5, '-', 2) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 4) ,
('Swap gain:', -0.5223025907899909) ,
([2, 7, 6, 9, 3, 4, 1, 8],) ,
('Computing match for mapping',) ,
([2, 7, 6, 9, 3, 4, 1, 8],) ,
('saved value', 2.522302590789991) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 4, ',', 6, '-', 1) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 0, '-', 1, ',', 6, '-', 4) ,
('Swap gain:', 0.0) ,
([1, 7, 6, 9, 3, 2, 4, 8],) ,
('Computing match for mapping',) ,
([1, 7, 6, 9, 3, 2, 4, 8],) ,
('saved value', 3.044605181579982) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 4, ',', 7, '-', 8) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -2.0) ,
([8, 7, 6, 9, 3, 2, 1, 4],) ,
('Computing match for mapping',) ,
([8, 7, 6, 9, 3, 2, 1, 4],) ,
('saved value', 1.044605181579982) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 6) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 7) ,
('Swap gain:', 1.0836047797898014) ,
([4, 6, 7, 9, 3, 2, 1, 8],) ,
('Computing match for mapping',) ,
([4, 6, 7, 9, 3, 2, 1, 8],) ,
('saved value', 4.128209961369784) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 9) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 7) ,
('Swap gain:', 0.7504280831587989) ,
([4, 9, 6, 7, 3, 2, 1, 8],) ,
('Computing match for mapping',) ,
([4, 9, 6, 7, 3, 2, 1, 8],) ,
('saved value', 3.7950332647387808) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 3) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 7) ,
('Swap gain:', 0.0) ,
([4, 3, 6, 9, 7, 2, 1, 8],) ,
('Computing match for mapping',) ,
([4, 3, 6, 9, 7, 2, 1, 8],) ,
('saved value', 3.044605181579982) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 2) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', 0.09960311175285741) ,
([4, 2, 6, 9, 3, 7, 1, 8],) ,
('Computing match for mapping',) ,
([4, 2, 6, 9, 3, 7, 1, 8],) ,
('saved value', 3.1442082933328392) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', 1) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 1, '-', 1, ',', 6, '-', 7) ,
('Swap gain:', 2.0) ,
([4, 1, 6, 9, 3, 2, 7, 8],) ,
('Computing match for mapping',) ,
([4, 1, 6, 9, 3, 2, 7, 8],) ,
('saved value', 5.044605181579982) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 8) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -1.3940926294202078) ,
([4, 8, 6, 9, 3, 2, 1, 7],) ,
('Computing match for mapping',) ,
([4, 8, 6, 9, 3, 2, 1, 7],) ,
('saved value', 1.650512552159774) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 9) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 6) ,
('Swap gain:', -0.5223025907899909) ,
([4, 7, 9, 6, 3, 2, 1, 8],) ,
('Computing match for mapping',) ,
([4, 7, 9, 6, 3, 2, 1, 8],) ,
('saved value', 2.522302590789991) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 3) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 6) ,
('Swap gain:', 0.0) ,
([4, 7, 3, 9, 6, 2, 1, 8],) ,
('Computing match for mapping',) ,
([4, 7, 3, 9, 6, 2, 1, 8],) ,
('saved value', 3.044605181579982) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 2) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 6) ,
('Swap gain:', 1.955394818420018) ,
([4, 7, 2, 9, 3, 6, 1, 8],) ,
('Computing match for mapping',) ,
([4, 7, 2, 9, 3, 6, 1, 8],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 1) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 2, '-', 1, ',', 6, '-', 6) ,
('Swap gain:', 0.09960311175285741) ,
([4, 7, 1, 9, 3, 2, 6, 8],) ,
('Computing match for mapping',) ,
([4, 7, 1, 9, 3, 2, 6, 8],) ,
('saved value', 3.1442082933328392) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 6, ',', 7, '-', 8) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -1.0) ,
([4, 7, 8, 9, 3, 2, 1, 6],) ,
('Computing match for mapping',) ,
([4, 7, 8, 9, 3, 2, 1, 6],) ,
('saved value', 2.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 3) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 9) ,
('Swap gain:', 0.0) ,
([4, 7, 6, 3, 9, 2, 1, 8],) ,
('Computing match for mapping',) ,
([4, 7, 6, 3, 9, 2, 1, 8],) ,
('saved value', 3.044605181579982) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 2) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 9) ,
('Swap gain:', -0.0043983963266330806) ,
([4, 7, 6, 2, 3, 9, 1, 8],) ,
('Computing match for mapping',) ,
([4, 7, 6, 2, 3, 9, 1, 8],) ,
('saved value', 3.040206785253349) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 1) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 3, '-', 1, ',', 6, '-', 9) ,
('Swap gain:', 0.0) ,
([4, 7, 6, 1, 3, 2, 9, 8],) ,
('Computing match for mapping',) ,
([4, 7, 6, 1, 3, 2, 9, 8],) ,
('saved value', 3.044605181579982) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 9, ',', 7, '-', 8) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 9) ,
('Swap gain:', -1.4820958055366422) ,
([4, 7, 6, 8, 3, 2, 1, 9],) ,
('Computing match for mapping',) ,
([4, 7, 6, 8, 3, 2, 1, 9],) ,
('saved value', 1.5625093760433397) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 2) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 3) ,
('Swap gain:', 0.47769740921000914) ,
([4, 7, 6, 9, 2, 3, 1, 8],) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 2, 3, 1, 8],) ,
('saved value', 3.522302590789991) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 1) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 4, '-', 1, ',', 6, '-', 3) ,
('Swap gain:', 0.8748228882369615) ,
([4, 7, 6, 9, 1, 2, 3, 8],) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 1, 2, 3, 8],) ,
('saved value', 3.9194280698169432) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 3, ',', 7, '-', 8) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -1.477697409210009) ,
([4, 7, 6, 9, 8, 2, 1, 3],) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 8, 2, 1, 3],) ,
('saved value', 1.566907772369973) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', 1) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 5, '-', 1, ',', 6, '-', 2) ,
('Swap gain:', 0.0836047797898013) ,
([4, 7, 6, 9, 3, 1, 2, 8],) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 3, 1, 2, 8],) ,
('saved value', 3.1282099613697834) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 8) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -1.0) ,
([4, 7, 6, 9, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 3, 8, 1, 2],) ,
('saved value', 2.044605181579982) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 1, ',', 7, '-', 8) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -1.3940926294202078) ,
([4, 7, 6, 9, 3, 2, 8, 1],) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 3, 2, 8, 1],) ,
('saved value', 1.650512552159774) ,
('Use move gain',) ,
('Original mapping', [4, 7, 6, 9, 3, 2, 1, 8]) ,
('Current mapping', [0, 7, 6, 9, 3, 2, 1, 8]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 5.044605181579982) ,
('Current mapping:', [0, 7, 6, 9, 3, 2, 1, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([4, 7, 6, 9, 3, 2, 1, 8],) ,
('saved value', 3.044605181579982) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 7, 6, 9, 3, 2, 1, 8],) ,
('saved value', 3.044605181579982) ,
('Remap node', 1, 'from ', 7, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 4, 6, 9, 3, 2, 1, 8],) ,
('saved value', 5.044605181579982) ,
('Remap node', 1, 'from ', 7, 'to', 5) ,
('Move gain:', 0.6219057025428483) ,
('Computing match for mapping',) ,
([0, 5, 6, 9, 3, 2, 1, 8],) ,
('saved value', 5.666510884122831) ,
('Remap node', 2, 'from ', 6, 'to', 4) ,
('Move gain:', -0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 7, 4, 9, 3, 2, 1, 8],) ,
('saved value', 4.522302590789991) ,
('Remap node', 2, 'from ', 6, 'to', 5) ,
('Move gain:', 0.47769740921000914) ,
('Computing match for mapping',) ,
([0, 7, 5, 9, 3, 2, 1, 8],) ,
('saved value', 5.522302590789991) ,
('Remap node', 3, 'from ', 9, 'to', 4) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 7, 6, 4, 3, 2, 1, 8],) ,
('saved value', 6.044605181579982) ,
('Remap node', 3, 'from ', 9, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 7, 6, 5, 3, 2, 1, 8],) ,
('saved value', 5.044605181579982) ,
('Remap node', 4, 'from ', 3, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 4, 2, 1, 8],) ,
('saved value', 5.044605181579982) ,
('Remap node', 4, 'from ', 3, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 5, 2, 1, 8],) ,
('saved value', 6.044605181579982) ,
('Remap node', 5, 'from ', 2, 'to', 4) ,
('Move gain:', -0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 3, 4, 1, 8],) ,
('saved value', 4.522302590789991) ,
('Remap node', 5, 'from ', 2, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 3, 5, 1, 8],) ,
('saved value', 5.044605181579982) ,
('Remap node', 6, 'from ', 1, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 3, 2, 4, 8],) ,
('saved value', 5.044605181579982) ,
('Remap node', 6, 'from ', 1, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 3, 2, 5, 8],) ,
('saved value', 5.044605181579982) ,
('Remap node', 7, 'from ', 8, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 3, 2, 1, 4],) ,
('saved value', 3.044605181579982) ,
('Remap node', 7, 'from ', 8, 'to', 5) ,
('Move gain:', -1.477697409210009) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 3, 2, 1, 5],) ,
('saved value', 3.566907772369973) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 7) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 0, '-', 7, ',', 1, '-', 0) ,
('Swap gain:', -1.7146677951281344) ,
([7, 0, 6, 9, 3, 2, 1, 8],) ,
('Computing match for mapping',) ,
([7, 0, 6, 9, 3, 2, 1, 8],) ,
('saved value', 3.3299373864518476) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -2.522302590789991) ,
([6, 7, 0, 9, 3, 2, 1, 8],) ,
('Computing match for mapping',) ,
([6, 7, 0, 9, 3, 2, 1, 8],) ,
('saved value', 2.522302590789991) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 9) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([9, 7, 6, 0, 3, 2, 1, 8],) ,
('Computing match for mapping',) ,
([9, 7, 6, 0, 3, 2, 1, 8],) ,
('saved value', 3.044605181579982) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([3, 7, 6, 9, 0, 2, 1, 8],) ,
('Computing match for mapping',) ,
([3, 7, 6, 9, 0, 2, 1, 8],) ,
('saved value', 3.044605181579982) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -2.522302590789991) ,
([2, 7, 6, 9, 3, 0, 1, 8],) ,
('Computing match for mapping',) ,
([2, 7, 6, 9, 3, 0, 1, 8],) ,
('saved value', 2.522302590789991) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 1) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 0, '-', 1, ',', 6, '-', 0) ,
('Swap gain:', -1.7146677951281344) ,
([1, 7, 6, 9, 3, 2, 0, 8],) ,
('Computing match for mapping',) ,
([1, 7, 6, 9, 3, 2, 0, 8],) ,
('saved value', 3.3299373864518476) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -4.0) ,
([8, 7, 6, 9, 3, 2, 1, 0],) ,
('Computing match for mapping',) ,
([8, 7, 6, 9, 3, 2, 1, 0],) ,
('saved value', 1.044605181579982) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 7, ',', 2, '-', 6) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 7) ,
('Swap gain:', 0.0836047797898013) ,
([0, 6, 7, 9, 3, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 6, 7, 9, 3, 2, 1, 8],) ,
('saved value', 5.128209961369783) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 7, ',', 3, '-', 9) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 7) ,
('Swap gain:', 0.7504280831587989) ,
([0, 9, 6, 7, 3, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 9, 6, 7, 3, 2, 1, 8],) ,
('saved value', 5.795033264738781) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 7, ',', 4, '-', 3) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 3, 6, 9, 7, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 3, 6, 9, 7, 2, 1, 8],) ,
('saved value', 5.044605181579982) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 7, ',', 5, '-', 2) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 7) ,
('Swap gain:', 0.09960311175285741) ,
([0, 2, 6, 9, 3, 7, 1, 8],) ,
('Computing match for mapping',) ,
([0, 2, 6, 9, 3, 7, 1, 8],) ,
('saved value', 5.14420829333284) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 7, ',', 6, '-', 1) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 1, '-', 1, ',', 6, '-', 7) ,
('Swap gain:', 3.0) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('saved value', 8.044605181579982) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 7, ',', 7, '-', 8) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -1.3940926294202078) ,
([0, 8, 6, 9, 3, 2, 1, 7],) ,
('Computing match for mapping',) ,
([0, 8, 6, 9, 3, 2, 1, 7],) ,
('saved value', 3.650512552159774) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 9) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 6) ,
('Swap gain:', -0.5223025907899909) ,
([0, 7, 9, 6, 3, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 9, 6, 3, 2, 1, 8],) ,
('saved value', 4.522302590789991) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 3) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 7, 3, 9, 6, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 3, 9, 6, 2, 1, 8],) ,
('saved value', 5.044605181579982) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 2) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 6) ,
('Swap gain:', 2.955394818420018) ,
([0, 7, 2, 9, 3, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 9, 3, 6, 1, 8],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 1) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 2, '-', 1, ',', 6, '-', 6) ,
('Swap gain:', 0.09960311175285741) ,
([0, 7, 1, 9, 3, 2, 6, 8],) ,
('Computing match for mapping',) ,
([0, 7, 1, 9, 3, 2, 6, 8],) ,
('saved value', 5.14420829333284) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 6, ',', 7, '-', 8) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -1.0) ,
([0, 7, 8, 9, 3, 2, 1, 6],) ,
('Computing match for mapping',) ,
([0, 7, 8, 9, 3, 2, 1, 6],) ,
('saved value', 4.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 3) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 9) ,
('Swap gain:', 0.0) ,
([0, 7, 6, 3, 9, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 6, 3, 9, 2, 1, 8],) ,
('saved value', 5.044605181579982) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 2) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 9) ,
('Swap gain:', -0.0043983963266330806) ,
([0, 7, 6, 2, 3, 9, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 6, 2, 3, 9, 1, 8],) ,
('saved value', 5.040206785253349) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 1) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 3, '-', 1, ',', 6, '-', 9) ,
('Swap gain:', 0.0) ,
([0, 7, 6, 1, 3, 2, 9, 8],) ,
('Computing match for mapping',) ,
([0, 7, 6, 1, 3, 2, 9, 8],) ,
('saved value', 5.044605181579982) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 9, ',', 7, '-', 8) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 9) ,
('Swap gain:', -1.4820958055366422) ,
([0, 7, 6, 8, 3, 2, 1, 9],) ,
('Computing match for mapping',) ,
([0, 7, 6, 8, 3, 2, 1, 9],) ,
('saved value', 3.56250937604334) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 2) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 3) ,
('Swap gain:', 0.47769740921000914) ,
([0, 7, 6, 9, 2, 3, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 2, 3, 1, 8],) ,
('saved value', 5.522302590789991) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 1) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 4, '-', 1, ',', 6, '-', 3) ,
('Swap gain:', 0.8748228882369615) ,
([0, 7, 6, 9, 1, 2, 3, 8],) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 1, 2, 3, 8],) ,
('saved value', 5.919428069816943) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 3, ',', 7, '-', 8) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -1.477697409210009) ,
([0, 7, 6, 9, 8, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 8, 2, 1, 3],) ,
('saved value', 3.566907772369973) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', 1) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 5, '-', 1, ',', 6, '-', 2) ,
('Swap gain:', 0.0836047797898013) ,
([0, 7, 6, 9, 3, 1, 2, 8],) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 3, 1, 2, 8],) ,
('saved value', 5.128209961369783) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 8) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 7, 6, 9, 3, 8, 1, 2],) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 3, 8, 1, 2],) ,
('saved value', 4.044605181579982) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 1, ',', 7, '-', 8) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -1.3940926294202078) ,
([0, 7, 6, 9, 3, 2, 8, 1],) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 3, 2, 8, 1],) ,
('saved value', 3.650512552159774) ,
('Use swap gain',) ,
('Original mapping', [0, 7, 6, 9, 3, 2, 1, 8]) ,
('Current mapping', [0, 1, 6, 9, 3, 2, 7, 8]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 8.044605181579982) ,
('Current mapping:', [0, 1, 6, 9, 3, 2, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([4, 1, 6, 9, 3, 2, 7, 8],) ,
('saved value', 5.044605181579982) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 1, 6, 9, 3, 2, 7, 8],) ,
('saved value', 5.044605181579982) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 4, 6, 9, 3, 2, 7, 8],) ,
('saved value', 6.044605181579982) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -1.3780942974571517) ,
('Computing match for mapping',) ,
([0, 5, 6, 9, 3, 2, 7, 8],) ,
('saved value', 6.666510884122831) ,
('Remap node', 2, 'from ', 6, 'to', 4) ,
('Move gain:', -0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 1, 4, 9, 3, 2, 7, 8],) ,
('saved value', 7.522302590789991) ,
('Remap node', 2, 'from ', 6, 'to', 5) ,
('Move gain:', 0.47769740921000914) ,
('Computing match for mapping',) ,
([0, 1, 5, 9, 3, 2, 7, 8],) ,
('saved value', 8.522302590789991) ,
('Remap node', 3, 'from ', 9, 'to', 4) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 3, 2, 7, 8],) ,
('saved value', 10.044605181579982) ,
('Remap node', 3, 'from ', 9, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 5, 3, 2, 7, 8],) ,
('saved value', 8.044605181579982) ,
('Remap node', 4, 'from ', 3, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 4, 2, 7, 8],) ,
('saved value', 8.044605181579982) ,
('Remap node', 4, 'from ', 3, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 5, 2, 7, 8],) ,
('saved value', 9.044605181579982) ,
('Remap node', 5, 'from ', 2, 'to', 4) ,
('Move gain:', -0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 3, 4, 7, 8],) ,
('saved value', 7.522302590789991) ,
('Remap node', 5, 'from ', 2, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 3, 5, 7, 8],) ,
('saved value', 8.044605181579982) ,
('Remap node', 6, 'from ', 7, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 3, 2, 4, 8],) ,
('saved value', 7.044605181579982) ,
('Remap node', 6, 'from ', 7, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 3, 2, 5, 8],) ,
('saved value', 7.044605181579982) ,
('Remap node', 7, 'from ', 8, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 3, 2, 7, 4],) ,
('saved value', 6.044605181579982) ,
('Remap node', 7, 'from ', 8, 'to', 5) ,
('Move gain:', -1.477697409210009) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 3, 2, 7, 5],) ,
('saved value', 6.566907772369973) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, 6, 9, 3, 2, 7, 8],) ,
('Computing match for mapping',) ,
([1, 0, 6, 9, 3, 2, 7, 8],) ,
('saved value', 4.044605181579982) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 6) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 2, '-', 0) ,
('Swap gain:', -3.522302590789991) ,
([6, 1, 0, 9, 3, 2, 7, 8],) ,
('Computing match for mapping',) ,
([6, 1, 0, 9, 3, 2, 7, 8],) ,
('saved value', 4.522302590789991) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 9) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([9, 1, 6, 0, 3, 2, 7, 8],) ,
('Computing match for mapping',) ,
([9, 1, 6, 0, 3, 2, 7, 8],) ,
('saved value', 5.044605181579982) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 6, 9, 0, 2, 7, 8],) ,
('Computing match for mapping',) ,
([3, 1, 6, 9, 0, 2, 7, 8],) ,
('saved value', 5.044605181579982) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 2) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 5, '-', 0) ,
('Swap gain:', -3.522302590789991) ,
([2, 1, 6, 9, 3, 0, 7, 8],) ,
('Computing match for mapping',) ,
([2, 1, 6, 9, 3, 0, 7, 8],) ,
('saved value', 4.522302590789991) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -3.4293355902562688) ,
([7, 1, 6, 9, 3, 2, 0, 8],) ,
('Computing match for mapping',) ,
([7, 1, 6, 9, 3, 2, 0, 8],) ,
('saved value', 4.615269591323713) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -5.0) ,
([8, 1, 6, 9, 3, 2, 7, 0],) ,
('Computing match for mapping',) ,
([8, 1, 6, 9, 3, 2, 7, 0],) ,
('saved value', 3.044605181579982) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 6) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 2, '-', 1) ,
('Swap gain:', -1.2944895176673503) ,
([0, 6, 1, 9, 3, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 6, 1, 9, 3, 2, 7, 8],) ,
('saved value', 6.750115663912632) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 9) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 1) ,
('Swap gain:', -1.2495719168412012) ,
([0, 9, 6, 1, 3, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 6, 1, 3, 2, 7, 8],) ,
('saved value', 6.79503326473878) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -1.3780942974571517) ,
([0, 3, 6, 9, 1, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 3, 6, 9, 1, 2, 7, 8],) ,
('saved value', 6.666510884122831) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 2) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 5, '-', 1) ,
('Swap gain:', -1.2944895176673503) ,
([0, 2, 6, 9, 3, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 6, 9, 3, 1, 7, 8],) ,
('saved value', 6.750115663912632) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 6, 9, 3, 2, 1, 8],) ,
('saved value', 5.044605181579982) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -2.7881852588404157) ,
([0, 8, 6, 9, 3, 2, 7, 1],) ,
('Computing match for mapping',) ,
([0, 8, 6, 9, 3, 2, 7, 1],) ,
('saved value', 5.256419922739566) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 6, ',', 3, '-', 9) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 6) ,
('Swap gain:', -0.5223025907899909) ,
([0, 1, 9, 6, 3, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 9, 6, 3, 2, 7, 8],) ,
('saved value', 7.522302590789991) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 6, ',', 4, '-', 3) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 6) ,
('Swap gain:', 0.0) ,
([0, 1, 3, 9, 6, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 3, 9, 6, 2, 7, 8],) ,
('saved value', 8.044605181579982) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 6, ',', 5, '-', 2) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 2, '-', 2, ',', 5, '-', 6) ,
('Swap gain:', 2.955394818420018) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 6, ',', 6, '-', 7) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -1.522302590789991) ,
([0, 1, 7, 9, 3, 2, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 9, 3, 2, 6, 8],) ,
('saved value', 6.522302590789991) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 6, ',', 7, '-', 8) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -1.0) ,
([0, 1, 8, 9, 3, 2, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 3, 2, 7, 6],) ,
('saved value', 7.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 3) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 9) ,
('Swap gain:', 0.0) ,
([0, 1, 6, 3, 9, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 3, 9, 2, 7, 8],) ,
('saved value', 8.044605181579982) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 2) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 3, '-', 2, ',', 5, '-', 9) ,
('Swap gain:', -0.0043983963266330806) ,
([0, 1, 6, 2, 3, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 2, 3, 9, 7, 8],) ,
('saved value', 8.040206785253348) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 7) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 9) ,
('Swap gain:', -1.0) ,
([0, 1, 6, 7, 3, 2, 9, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 7, 3, 2, 9, 8],) ,
('saved value', 7.044605181579982) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 9, ',', 7, '-', 8) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 9) ,
('Swap gain:', -1.4820958055366422) ,
([0, 1, 6, 8, 3, 2, 7, 9],) ,
('Computing match for mapping',) ,
([0, 1, 6, 8, 3, 2, 7, 9],) ,
('saved value', 6.56250937604334) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 2) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 4, '-', 2, ',', 5, '-', 3) ,
('Swap gain:', 0.47769740921000914) ,
([0, 1, 6, 9, 2, 3, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 2, 3, 7, 8],) ,
('saved value', 8.522302590789991) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 7) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', -0.7470828143058867) ,
([0, 1, 6, 9, 7, 2, 3, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 7, 2, 3, 8],) ,
('saved value', 7.297522367274095) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 3, ',', 7, '-', 8) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -1.477697409210009) ,
([0, 1, 6, 9, 8, 2, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 8, 2, 7, 3],) ,
('saved value', 6.566907772369973) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 2, ',', 6, '-', 7) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -1.522302590789991) ,
([0, 1, 6, 9, 3, 7, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 3, 7, 2, 8],) ,
('saved value', 6.522302590789991) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 2, ',', 7, '-', 8) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -1.0) ,
([0, 1, 6, 9, 3, 8, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 3, 8, 7, 2],) ,
('saved value', 7.044605181579982) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -3.0) ,
([0, 1, 6, 9, 3, 2, 8, 7],) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 3, 2, 8, 7],) ,
('saved value', 5.044605181579982) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 6, 9, 3, 2, 7, 8]) ,
('Current mapping', [0, 1, 2, 9, 3, 6, 7, 8]) ,
('Gain after the hill-climbing', 2.955394818420018) ,
('Update triple match number to:', 11.0) ,
('Current mapping:', [0, 1, 2, 9, 3, 6, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 4) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([4, 1, 2, 9, 3, 6, 7, 8],) ,
('saved value', 7.0) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 9, 3, 6, 7, 8],) ,
('saved value', 7.0) ,
('Remap node', 1, 'from ', 1, 'to', 4) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 4, 2, 9, 3, 6, 7, 8],) ,
('saved value', 9.0) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -1.3780942974571517) ,
('Computing match for mapping',) ,
([0, 5, 2, 9, 3, 6, 7, 8],) ,
('saved value', 9.621905702542849) ,
('Remap node', 2, 'from ', 2, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 4, 9, 3, 6, 7, 8],) ,
('saved value', 8.0) ,
('Remap node', 2, 'from ', 2, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 9, 3, 6, 7, 8],) ,
('saved value', 9.0) ,
('Remap node', 3, 'from ', 9, 'to', 4) ,
('Move gain:', 3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 3, 'from ', 9, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 6, 7, 8],) ,
('saved value', 11.0) ,
('Remap node', 4, 'from ', 3, 'to', 4) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 4, 6, 7, 8],) ,
('saved value', 11.0) ,
('Remap node', 4, 'from ', 3, 'to', 5) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 5, 6, 7, 8],) ,
('saved value', 13.0) ,
('Remap node', 5, 'from ', 6, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 3, 4, 7, 8],) ,
('saved value', 10.0) ,
('Remap node', 5, 'from ', 6, 'to', 5) ,
('Move gain:', -0.47769740921000914) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 3, 5, 7, 8],) ,
('saved value', 10.522302590789991) ,
('Remap node', 6, 'from ', 7, 'to', 4) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 3, 6, 4, 8],) ,
('saved value', 10.0) ,
('Remap node', 6, 'from ', 7, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 3, 6, 5, 8],) ,
('saved value', 10.0) ,
('Remap node', 7, 'from ', 8, 'to', 4) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 3, 6, 7, 4],) ,
('saved value', 8.0) ,
('Remap node', 7, 'from ', 8, 'to', 5) ,
('Move gain:', -2.477697409210009) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 3, 6, 7, 5],) ,
('saved value', 8.522302590789991) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, 9, 3, 6, 7, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 9, 3, 6, 7, 8],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 1, 0, 9, 3, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 9, 3, 6, 7, 8],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 9) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 0, '-', 9, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([9, 1, 2, 0, 3, 6, 7, 8],) ,
('Computing match for mapping',) ,
([9, 1, 2, 0, 3, 6, 7, 8],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 2, 9, 0, 6, 7, 8],) ,
('Computing match for mapping',) ,
([3, 1, 2, 9, 0, 6, 7, 8],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 1, 2, 9, 3, 0, 7, 8],) ,
('Computing match for mapping',) ,
([6, 1, 2, 9, 3, 0, 7, 8],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -4.429335590256269) ,
([7, 1, 2, 9, 3, 6, 0, 8],) ,
('Computing match for mapping',) ,
([7, 1, 2, 9, 3, 6, 0, 8],) ,
('saved value', 6.570664409743731) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([8, 1, 2, 9, 3, 6, 7, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 9, 3, 6, 7, 0],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -3.7561885949143035) ,
([0, 2, 1, 9, 3, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 9, 3, 6, 7, 8],) ,
('saved value', 7.2438114050856965) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 9) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 1, '-', 9, ',', 3, '-', 1) ,
('Swap gain:', -1.2495719168412012) ,
([0, 9, 2, 1, 3, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 3, 6, 7, 8],) ,
('saved value', 9.750428083158798) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -1.3780942974571517) ,
([0, 3, 2, 9, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 9, 1, 6, 7, 8],) ,
('saved value', 9.621905702542849) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -1.7881852588404157) ,
([0, 6, 2, 9, 3, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 9, 3, 1, 7, 8],) ,
('saved value', 9.211814741159584) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 7, 2, 9, 3, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 9, 3, 6, 1, 8],) ,
('saved value', 8.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -3.7881852588404157) ,
([0, 8, 2, 9, 3, 6, 7, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 9, 3, 6, 7, 1],) ,
('saved value', 7.211814741159584) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 9) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 2, '-', 9, ',', 3, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 9, 2, 3, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 9, 2, 3, 6, 7, 8],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 1, 3, 9, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 3, 9, 2, 6, 7, 8],) ,
('saved value', 9.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -2.955394818420018) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 9, 3, 2, 7, 8],) ,
('saved value', 8.044605181579982) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 1, 7, 9, 3, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 9, 3, 6, 2, 8],) ,
('saved value', 7.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -3.955394818420018) ,
([0, 1, 8, 9, 3, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 9, 3, 6, 7, 2],) ,
('saved value', 7.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 9, ',', 4, '-', 3) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 9) ,
('Swap gain:', 0.0) ,
([0, 1, 2, 3, 9, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 9, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 9, ',', 5, '-', 6) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 9) ,
('Swap gain:', -0.4820958055366429) ,
([0, 1, 2, 6, 3, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 3, 9, 7, 8],) ,
('saved value', 10.517904194463357) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 9, ',', 6, '-', 7) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 9) ,
('Swap gain:', -1.0) ,
([0, 1, 2, 7, 3, 6, 9, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 3, 6, 9, 8],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 9, ',', 7, '-', 8) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 9) ,
('Swap gain:', -2.482095805536642) ,
([0, 1, 2, 8, 3, 6, 7, 9],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 3, 6, 7, 9],) ,
('saved value', 8.517904194463359) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 6) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -0.47769740921000914) ,
([0, 1, 2, 9, 6, 3, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 6, 3, 7, 8],) ,
('saved value', 10.522302590789991) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 7) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', -0.7470828143058867) ,
([0, 1, 2, 9, 7, 6, 3, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 7, 6, 3, 8],) ,
('saved value', 10.252917185694113) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 3, ',', 7, '-', 8) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -2.477697409210009) ,
([0, 1, 2, 9, 8, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 8, 6, 7, 3],) ,
('saved value', 8.522302590789991) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 9, 3, 7, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 3, 7, 6, 8],) ,
('saved value', 9.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 9, 3, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 3, 8, 7, 6],) ,
('saved value', 9.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 9, 3, 6, 8, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 3, 6, 8, 7],) ,
('saved value', 7.0) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 9, 3, 6, 7, 8]) ,
('Current mapping', [0, 1, 2, 4, 3, 6, 7, 8]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 14.0) ,
('Current mapping:', [0, 1, 2, 4, 3, 6, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 3, 6, 7, 8],) ,
('saved value', 10.0) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 4, 3, 6, 7, 8],) ,
('saved value', 10.0) ,
('Remap node', 1, 'from ', 1, 'to', 5) ,
('Move gain:', -1.3780942974571517) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 3, 6, 7, 8],) ,
('saved value', 12.621905702542849) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -1.2495719168412012) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 3, 6, 7, 8],) ,
('saved value', 12.750428083158798) ,
('Remap node', 2, 'from ', 2, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 3, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 4, 3, 6, 7, 8],) ,
('saved value', 10.0) ,
('Remap node', 3, 'from ', 4, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 3, 6, 7, 8],) ,
('saved value', 11.0) ,
('Remap node', 3, 'from ', 4, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 3, 6, 7, 8],) ,
('saved value', 11.0) ,
('Remap node', 4, 'from ', 3, 'to', 5) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 16.0) ,
('Remap node', 4, 'from ', 3, 'to', 9) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 9, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 5, 'from ', 6, 'to', 5) ,
('Move gain:', -0.477697409210009) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 5, 7, 8],) ,
('saved value', 13.522302590789991) ,
('Remap node', 5, 'from ', 6, 'to', 9) ,
('Move gain:', -0.4820958055366429) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 9, 7, 8],) ,
('saved value', 13.517904194463357) ,
('Remap node', 6, 'from ', 7, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6, 5, 8],) ,
('saved value', 12.0) ,
('Remap node', 6, 'from ', 7, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6, 9, 8],) ,
('saved value', 12.0) ,
('Remap node', 7, 'from ', 8, 'to', 5) ,
('Move gain:', -2.477697409210009) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6, 7, 5],) ,
('saved value', 11.522302590789991) ,
('Remap node', 7, 'from ', 8, 'to', 9) ,
('Move gain:', -2.482095805536642) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6, 7, 9],) ,
('saved value', 11.517904194463359) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, 4, 3, 6, 7, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 3, 6, 7, 8],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -7.0) ,
([2, 1, 0, 4, 3, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 3, 6, 7, 8],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 2, 0, 3, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 3, 6, 7, 8],) ,
('saved value', 7.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 0, '-', 3, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([3, 1, 2, 4, 0, 6, 7, 8],) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 0, 6, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 1, 2, 4, 3, 0, 7, 8],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 3, 0, 7, 8],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -5.429335590256269) ,
([7, 1, 2, 4, 3, 6, 0, 8],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 3, 6, 0, 8],) ,
('saved value', 8.570664409743731) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([8, 1, 2, 4, 3, 6, 7, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 3, 6, 7, 0],) ,
('saved value', 7.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.7561885949143035) ,
([0, 2, 1, 4, 3, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 3, 6, 7, 8],) ,
('saved value', 9.243811405085697) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 4, 2, 1, 3, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 3, 6, 7, 8],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 1, '-', 3, ',', 4, '-', 1) ,
('Swap gain:', -1.3780942974571513) ,
([0, 3, 2, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 6, 7, 8],) ,
('saved value', 12.621905702542849) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -1.7881852588404157) ,
([0, 6, 2, 4, 3, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 3, 1, 7, 8],) ,
('saved value', 12.211814741159584) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 2, 4, 3, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 3, 6, 1, 8],) ,
('saved value', 10.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -3.7881852588404157) ,
([0, 8, 2, 4, 3, 6, 7, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 3, 6, 7, 1],) ,
('saved value', 10.211814741159584) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 4, 2, 3, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 3, 6, 7, 8],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 2, '-', 3, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 3, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 2, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3.955394818420018) ,
([0, 1, 6, 4, 3, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 3, 2, 7, 8],) ,
('saved value', 10.044605181579982) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 4, 3, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 3, 6, 2, 8],) ,
('saved value', 8.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 1, 8, 4, 3, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 3, 6, 7, 2],) ,
('saved value', 9.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 3) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 3, '-', 3, ',', 4, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 3, 4, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 4, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 6, 3, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 3, 4, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 7, 3, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 3, 6, 4, 8],) ,
('saved value', 10.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 8, 3, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 3, 6, 7, 4],) ,
('saved value', 8.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 3, ',', 5, '-', 6) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 3) ,
('Swap gain:', -0.47769740921000914) ,
([0, 1, 2, 4, 6, 3, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 3, 7, 8],) ,
('saved value', 13.522302590789991) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 3, ',', 6, '-', 7) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', -1.7470828143058867) ,
([0, 1, 2, 4, 7, 6, 3, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 6, 3, 8],) ,
('saved value', 12.252917185694113) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 3, ',', 7, '-', 8) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -2.477697409210009) ,
([0, 1, 2, 4, 8, 6, 7, 3],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 8, 6, 7, 3],) ,
('saved value', 11.522302590789991) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 4, 3, 7, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 7, 6, 8],) ,
('saved value', 11.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 1, 2, 4, 3, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 8, 7, 6],) ,
('saved value', 12.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 4, 3, 6, 8, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6, 8, 7],) ,
('saved value', 9.0) ,
('Use move gain',) ,
('Original mapping', [0, 1, 2, 4, 3, 6, 7, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 16.0) ,
('Current mapping:', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -1.2495719168412016) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('saved value', 14.750428083158798) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, 7, 8],) ,
('saved value', 13.0) ,
('Remap node', 3, 'from ', 4, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 5, 6, 7, 8],) ,
('saved value', 13.0) ,
('Remap node', 4, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 4, 'from ', 5, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 9, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 5, 'from ', 6, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 5, 'from ', 6, 'to', 9) ,
('Move gain:', -1.4820958055366429) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('saved value', 14.517904194463357) ,
('Remap node', 6, 'from ', 7, 'to', 3) ,
('Move gain:', -1.7470828143058874) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 3, 8],) ,
('saved value', 14.252917185694113) ,
('Remap node', 6, 'from ', 7, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 9, 8],) ,
('saved value', 14.0) ,
('Remap node', 7, 'from ', 8, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('saved value', 13.0) ,
('Remap node', 7, 'from ', 8, 'to', 9) ,
('Move gain:', -2.482095805536641) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 9],) ,
('saved value', 13.517904194463359) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -7.0) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -5.429335590256269) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('saved value', 10.570664409743731) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.756188594914303) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('saved value', 11.243811405085697) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2.7561885949143026) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('saved value', 13.243811405085697) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -2.788185258840416) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('saved value', 13.211814741159584) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('saved value', 12.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -3.788185258840416) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('saved value', 12.211814741159584) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('saved value', 13.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('saved value', 11.044605181579982) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('saved value', 11.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -1.955394818420018) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('saved value', 14.044605181579982) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('saved value', 12.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -3.955394818420018) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('saved value', 12.044605181579982) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('saved value', 12.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('saved value', 13.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('saved value', 11.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('node_pair', (0, 5)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 9)) ,
('instance/attribute match', 0.7504280831587989) ,
('node_pair', (2, 7)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 8)) ,
('instance/attribute match', 0.5223025907899909) ,
('node_pair', (5, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (6, 6)) ,
('instance/attribute match', 0.0) ,
('node_pair', (7, 4)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 1.2727306739487898) ,
('Node mapping at start', [5, 9, 7, 1, 8, 3, 6, 4]) ,
('Triple match number at start:', 1.2727306739487898) ,
('Remap node', 0, 'from ', 5, 'to', 0) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('saved value', 3.27273067394879) ,
('Remap node', 0, 'from ', 5, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 9, 7, 1, 8, 3, 6, 4],) ,
('saved value', 1.2727306739487898) ,
('Remap node', 1, 'from ', 9, 'to', 0) ,
('Move gain:', -0.7504280831587989) ,
('Computing match for mapping',) ,
([5, 0, 7, 1, 8, 3, 6, 4],) ,
('saved value', 0.5223025907899909) ,
('Remap node', 1, 'from ', 9, 'to', 2) ,
('Move gain:', -0.12852238061595067) ,
('Computing match for mapping',) ,
([5, 2, 7, 1, 8, 3, 6, 4],) ,
('saved value', 1.1442082933328392) ,
('Remap node', 2, 'from ', 7, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 9, 0, 1, 8, 3, 6, 4],) ,
('saved value', 1.2727306739487898) ,
('Remap node', 2, 'from ', 7, 'to', 2) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([5, 9, 2, 1, 8, 3, 6, 4],) ,
('saved value', 2.27273067394879) ,
('Remap node', 3, 'from ', 1, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 9, 7, 0, 8, 3, 6, 4],) ,
('saved value', 1.2727306739487898) ,
('Remap node', 3, 'from ', 1, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 9, 7, 2, 8, 3, 6, 4],) ,
('saved value', 1.2727306739487898) ,
('Remap node', 4, 'from ', 8, 'to', 0) ,
('Move gain:', -0.5223025907899909) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 0, 3, 6, 4],) ,
('saved value', 0.7504280831587989) ,
('Remap node', 4, 'from ', 8, 'to', 2) ,
('Move gain:', 0.47769740921000914) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 2, 3, 6, 4],) ,
('saved value', 1.7504280831587988) ,
('Remap node', 5, 'from ', 3, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 8, 0, 6, 4],) ,
('saved value', 1.2727306739487898) ,
('Remap node', 5, 'from ', 3, 'to', 2) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 8, 2, 6, 4],) ,
('saved value', 1.7950332647387808) ,
('Remap node', 6, 'from ', 6, 'to', 0) ,
('Move gain:', 0.28533220487186556) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 8, 3, 0, 4],) ,
('saved value', 1.5580628788206554) ,
('Remap node', 6, 'from ', 6, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 8, 3, 2, 4],) ,
('saved value', 1.2727306739487898) ,
('Remap node', 7, 'from ', 4, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 8, 3, 6, 0],) ,
('saved value', 1.2727306739487898) ,
('Remap node', 7, 'from ', 4, 'to', 2) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 8, 3, 6, 2],) ,
('saved value', 1.7950332647387808) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 5, ',', 1, '-', 9) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 9, ',', 1, '-', 5) ,
('Swap gain:', -0.12852238061595067) ,
([9, 5, 7, 1, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([9, 5, 7, 1, 8, 3, 6, 4],) ,
('saved value', 1.1442082933328392) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 5, ',', 2, '-', 7) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 5) ,
('Swap gain:', 1.2853322048718656) ,
([7, 9, 5, 1, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([7, 9, 5, 1, 8, 3, 6, 4],) ,
('saved value', 2.5580628788206554) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 5, ',', 3, '-', 1) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 5) ,
('Swap gain:', 0.0) ,
([1, 9, 7, 5, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([1, 9, 7, 5, 8, 3, 6, 4],) ,
('saved value', 1.2727306739487898) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 5, ',', 4, '-', 8) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 8, ',', 4, '-', 5) ,
('Swap gain:', 0.47769740921000914) ,
([8, 9, 7, 1, 5, 3, 6, 4],) ,
('Computing match for mapping',) ,
([8, 9, 7, 1, 5, 3, 6, 4],) ,
('saved value', 1.7504280831587988) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 5, ',', 5, '-', 3) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 5) ,
('Swap gain:', 0.5223025907899909) ,
([3, 9, 7, 1, 8, 5, 6, 4],) ,
('Computing match for mapping',) ,
([3, 9, 7, 1, 8, 5, 6, 4],) ,
('saved value', 1.7950332647387808) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 5, ',', 6, '-', 6) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 5) ,
('Swap gain:', 0.0) ,
([6, 9, 7, 1, 8, 3, 5, 4],) ,
('Computing match for mapping',) ,
([6, 9, 7, 1, 8, 3, 5, 4],) ,
('saved value', 1.2727306739487898) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 5, ',', 7, '-', 4) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 4, ',', 7, '-', 5) ,
('Swap gain:', 1.522302590789991) ,
([4, 9, 7, 1, 8, 3, 6, 5],) ,
('Computing match for mapping',) ,
([4, 9, 7, 1, 8, 3, 6, 5],) ,
('saved value', 2.7950332647387808) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 9, ',', 2, '-', 7) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 9) ,
('Swap gain:', -0.7504280831587989) ,
([5, 7, 9, 1, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([5, 7, 9, 1, 8, 3, 6, 4],) ,
('saved value', 0.5223025907899909) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 9, ',', 3, '-', 1) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 9) ,
('Swap gain:', 0.24957191684120106) ,
([5, 1, 7, 9, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([5, 1, 7, 9, 8, 3, 6, 4],) ,
('saved value', 1.522302590789991) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 9, ',', 4, '-', 8) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 8, ',', 4, '-', 9) ,
('Swap gain:', -0.6668233033689976) ,
([5, 8, 7, 1, 9, 3, 6, 4],) ,
('Computing match for mapping',) ,
([5, 8, 7, 1, 9, 3, 6, 4],) ,
('saved value', 0.6059073705797922) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 9, ',', 5, '-', 3) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 9) ,
('Swap gain:', -0.23252388869544116) ,
([5, 3, 7, 1, 8, 9, 6, 4],) ,
('Computing match for mapping',) ,
([5, 3, 7, 1, 8, 9, 6, 4],) ,
('saved value', 1.0402067852533485) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 9, ',', 6, '-', 6) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 9) ,
('Swap gain:', -0.14452071257900678) ,
([5, 6, 7, 1, 8, 3, 9, 4],) ,
('Computing match for mapping',) ,
([5, 6, 7, 1, 8, 3, 9, 4],) ,
('saved value', 1.128209961369783) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 9, ',', 7, '-', 4) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 4, ',', 7, '-', 9) ,
('Swap gain:', -0.23252388869544116) ,
([5, 4, 7, 1, 8, 3, 6, 9],) ,
('Computing match for mapping',) ,
([5, 4, 7, 1, 8, 3, 6, 9],) ,
('saved value', 1.0402067852533485) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 1) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 7) ,
('Swap gain:', 0.6219057025428483) ,
([5, 9, 1, 7, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([5, 9, 1, 7, 8, 3, 6, 4],) ,
('saved value', 1.894636376491638) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 8) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 2, '-', 8, ',', 4, '-', 7) ,
('Swap gain:', 0.0) ,
([5, 9, 8, 1, 7, 3, 6, 4],) ,
('Computing match for mapping',) ,
([5, 9, 8, 1, 7, 3, 6, 4],) ,
('saved value', 1.2727306739487898) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 3) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', 0.0) ,
([5, 9, 3, 1, 8, 7, 6, 4],) ,
('Computing match for mapping',) ,
([5, 9, 3, 1, 8, 7, 6, 4],) ,
('saved value', 1.2727306739487898) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', 1.522302590789991) ,
([5, 9, 6, 1, 8, 3, 7, 4],) ,
('Computing match for mapping',) ,
([5, 9, 6, 1, 8, 3, 7, 4],) ,
('saved value', 2.7950332647387808) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 4) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 2, '-', 4, ',', 7, '-', 7) ,
('Swap gain:', 0.0) ,
([5, 9, 4, 1, 8, 3, 6, 7],) ,
('Computing match for mapping',) ,
([5, 9, 4, 1, 8, 3, 6, 7],) ,
('saved value', 1.2727306739487898) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 8) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 3, '-', 8, ',', 4, '-', 1) ,
('Swap gain:', 0.09960311175285741) ,
([5, 9, 7, 8, 1, 3, 6, 4],) ,
('Computing match for mapping',) ,
([5, 9, 7, 8, 1, 3, 6, 4],) ,
('saved value', 1.372333785701647) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 3) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', 0.6059073705797922) ,
([5, 9, 7, 3, 8, 1, 6, 4],) ,
('Computing match for mapping',) ,
([5, 9, 7, 3, 8, 1, 6, 4],) ,
('saved value', 1.878638044528582) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 6) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', 0.0) ,
([5, 9, 7, 6, 8, 3, 1, 4],) ,
('Computing match for mapping',) ,
([5, 9, 7, 6, 8, 3, 1, 4],) ,
('saved value', 1.2727306739487898) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 4) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 3, '-', 4, ',', 7, '-', 1) ,
('Swap gain:', 1.6059073705797922) ,
([5, 9, 7, 4, 8, 3, 6, 1],) ,
('Computing match for mapping',) ,
([5, 9, 7, 4, 8, 3, 6, 1],) ,
('saved value', 2.878638044528582) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 8, ',', 5, '-', 3) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 8) ,
('Swap gain:', 0.47769740921000914) ,
([5, 9, 7, 1, 3, 8, 6, 4],) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 3, 8, 6, 4],) ,
('saved value', 1.7504280831587988) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 8, ',', 6, '-', 6) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 8) ,
('Swap gain:', 0.0) ,
([5, 9, 7, 1, 6, 3, 8, 4],) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 6, 3, 8, 4],) ,
('saved value', 1.2727306739487898) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 8, ',', 7, '-', 4) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 4, '-', 4, ',', 7, '-', 8) ,
('Swap gain:', 1.477697409210009) ,
([5, 9, 7, 1, 4, 3, 6, 8],) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 4, 3, 6, 8],) ,
('saved value', 2.750428083158799) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', 1.2529171856941133) ,
([5, 9, 7, 1, 8, 6, 3, 4],) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 8, 6, 3, 4],) ,
('saved value', 2.525647859642903) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', 4) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 5, '-', 4, ',', 7, '-', 3) ,
('Swap gain:', 0.0) ,
([5, 9, 7, 1, 8, 4, 6, 3],) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 8, 4, 6, 3],) ,
('saved value', 1.2727306739487898) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 4) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 6, '-', 4, ',', 7, '-', 6) ,
('Swap gain:', 1.0) ,
([5, 9, 7, 1, 8, 3, 4, 6],) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 8, 3, 4, 6],) ,
('saved value', 2.27273067394879) ,
('Use move gain',) ,
('Original mapping', [5, 9, 7, 1, 8, 3, 6, 4]) ,
('Current mapping', [0, 9, 7, 1, 8, 3, 6, 4]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 3.27273067394879) ,
('Current mapping:', [0, 9, 7, 1, 8, 3, 6, 4]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 9, 7, 1, 8, 3, 6, 4],) ,
('saved value', 1.2727306739487898) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([5, 9, 7, 1, 8, 3, 6, 4],) ,
('saved value', 1.2727306739487898) ,
('Remap node', 1, 'from ', 9, 'to', 2) ,
('Move gain:', -0.12852238061595067) ,
('Computing match for mapping',) ,
([0, 2, 7, 1, 8, 3, 6, 4],) ,
('saved value', 3.1442082933328392) ,
('Remap node', 1, 'from ', 9, 'to', 5) ,
('Move gain:', -0.12852238061595067) ,
('Computing match for mapping',) ,
([0, 5, 7, 1, 8, 3, 6, 4],) ,
('saved value', 3.1442082933328392) ,
('Remap node', 2, 'from ', 7, 'to', 2) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('saved value', 5.272730673948789) ,
('Remap node', 2, 'from ', 7, 'to', 5) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 9, 5, 1, 8, 3, 6, 4],) ,
('saved value', 4.272730673948789) ,
('Remap node', 3, 'from ', 1, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 9, 7, 2, 8, 3, 6, 4],) ,
('saved value', 3.27273067394879) ,
('Remap node', 3, 'from ', 1, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 9, 7, 5, 8, 3, 6, 4],) ,
('saved value', 3.27273067394879) ,
('Remap node', 4, 'from ', 8, 'to', 2) ,
('Move gain:', 0.47769740921000914) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 2, 3, 6, 4],) ,
('saved value', 3.750428083158799) ,
('Remap node', 4, 'from ', 8, 'to', 5) ,
('Move gain:', 0.47769740921000914) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 5, 3, 6, 4],) ,
('saved value', 3.750428083158799) ,
('Remap node', 5, 'from ', 3, 'to', 2) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 8, 2, 6, 4],) ,
('saved value', 3.7950332647387808) ,
('Remap node', 5, 'from ', 3, 'to', 5) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 8, 5, 6, 4],) ,
('saved value', 3.7950332647387808) ,
('Remap node', 6, 'from ', 6, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 8, 3, 2, 4],) ,
('saved value', 3.27273067394879) ,
('Remap node', 6, 'from ', 6, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 8, 3, 5, 4],) ,
('saved value', 3.27273067394879) ,
('Remap node', 7, 'from ', 4, 'to', 2) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 8, 3, 6, 2],) ,
('saved value', 3.7950332647387808) ,
('Remap node', 7, 'from ', 4, 'to', 5) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 8, 3, 6, 5],) ,
('saved value', 3.7950332647387808) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 9) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 9, ',', 1, '-', 0) ,
('Swap gain:', -2.750428083158799) ,
([9, 0, 7, 1, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([9, 0, 7, 1, 8, 3, 6, 4],) ,
('saved value', 0.522302590789991) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 7) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 7, ',', 2, '-', 0) ,
('Swap gain:', -1.7146677951281344) ,
([7, 9, 0, 1, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([7, 9, 0, 1, 8, 3, 6, 4],) ,
('saved value', 1.5580628788206554) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 9, 7, 0, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([1, 9, 7, 0, 8, 3, 6, 4],) ,
('saved value', 1.2727306739487898) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 8) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 8, ',', 4, '-', 0) ,
('Swap gain:', -2.522302590789991) ,
([8, 9, 7, 1, 0, 3, 6, 4],) ,
('Computing match for mapping',) ,
([8, 9, 7, 1, 0, 3, 6, 4],) ,
('saved value', 0.7504280831587988) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -2.0) ,
([3, 9, 7, 1, 8, 0, 6, 4],) ,
('Computing match for mapping',) ,
([3, 9, 7, 1, 8, 0, 6, 4],) ,
('saved value', 1.2727306739487898) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -1.7146677951281344) ,
([6, 9, 7, 1, 8, 3, 0, 4],) ,
('Computing match for mapping',) ,
([6, 9, 7, 1, 8, 3, 0, 4],) ,
('saved value', 1.5580628788206554) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 4) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 4, ',', 7, '-', 0) ,
('Swap gain:', -1.0) ,
([4, 9, 7, 1, 8, 3, 6, 0],) ,
('Computing match for mapping',) ,
([4, 9, 7, 1, 8, 3, 6, 0],) ,
('saved value', 2.27273067394879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 9, ',', 2, '-', 7) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 7, ',', 2, '-', 9) ,
('Swap gain:', -0.7504280831587989) ,
([0, 7, 9, 1, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 7, 9, 1, 8, 3, 6, 4],) ,
('saved value', 2.522302590789991) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 9, ',', 3, '-', 1) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 9) ,
('Swap gain:', 1.2495719168412012) ,
([0, 1, 7, 9, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 7, 9, 8, 3, 6, 4],) ,
('saved value', 4.522302590789991) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 9, ',', 4, '-', 8) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 8, ',', 4, '-', 9) ,
('Swap gain:', -0.6668233033689976) ,
([0, 8, 7, 1, 9, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 8, 7, 1, 9, 3, 6, 4],) ,
('saved value', 2.605907370579792) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 9, ',', 5, '-', 3) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 9) ,
('Swap gain:', -0.23252388869544116) ,
([0, 3, 7, 1, 8, 9, 6, 4],) ,
('Computing match for mapping',) ,
([0, 3, 7, 1, 8, 9, 6, 4],) ,
('saved value', 3.0402067852533485) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 9, ',', 6, '-', 6) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 9) ,
('Swap gain:', -0.14452071257900678) ,
([0, 6, 7, 1, 8, 3, 9, 4],) ,
('Computing match for mapping',) ,
([0, 6, 7, 1, 8, 3, 9, 4],) ,
('saved value', 3.128209961369783) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 9, ',', 7, '-', 4) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 4, ',', 7, '-', 9) ,
('Swap gain:', -0.23252388869544116) ,
([0, 4, 7, 1, 8, 3, 6, 9],) ,
('Computing match for mapping',) ,
([0, 4, 7, 1, 8, 3, 6, 9],) ,
('saved value', 3.0402067852533485) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 7, ',', 3, '-', 1) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 7) ,
('Swap gain:', 0.6219057025428483) ,
([0, 9, 1, 7, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 9, 1, 7, 8, 3, 6, 4],) ,
('saved value', 3.894636376491638) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 7, ',', 4, '-', 8) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 2, '-', 8, ',', 4, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 9, 8, 1, 7, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 9, 8, 1, 7, 3, 6, 4],) ,
('saved value', 3.27273067394879) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 7, ',', 5, '-', 3) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 9, 3, 1, 8, 7, 6, 4],) ,
('Computing match for mapping',) ,
([0, 9, 3, 1, 8, 7, 6, 4],) ,
('saved value', 3.27273067394879) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 7, ',', 6, '-', 6) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 7) ,
('Swap gain:', 1.522302590789991) ,
([0, 9, 6, 1, 8, 3, 7, 4],) ,
('Computing match for mapping',) ,
([0, 9, 6, 1, 8, 3, 7, 4],) ,
('saved value', 4.79503326473878) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 7, ',', 7, '-', 4) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 2, '-', 4, ',', 7, '-', 7) ,
('Swap gain:', 0.0) ,
([0, 9, 4, 1, 8, 3, 6, 7],) ,
('Computing match for mapping',) ,
([0, 9, 4, 1, 8, 3, 6, 7],) ,
('saved value', 3.27273067394879) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 8) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 3, '-', 8, ',', 4, '-', 1) ,
('Swap gain:', 0.09960311175285741) ,
([0, 9, 7, 8, 1, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 9, 7, 8, 1, 3, 6, 4],) ,
('saved value', 3.372333785701647) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 3) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', 0.6059073705797922) ,
([0, 9, 7, 3, 8, 1, 6, 4],) ,
('Computing match for mapping',) ,
([0, 9, 7, 3, 8, 1, 6, 4],) ,
('saved value', 3.878638044528582) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 6) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 9, 7, 6, 8, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 9, 7, 6, 8, 3, 1, 4],) ,
('saved value', 3.27273067394879) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 4) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 3, '-', 4, ',', 7, '-', 1) ,
('Swap gain:', 1.6059073705797922) ,
([0, 9, 7, 4, 8, 3, 6, 1],) ,
('Computing match for mapping',) ,
([0, 9, 7, 4, 8, 3, 6, 1],) ,
('saved value', 4.878638044528582) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 8, ',', 5, '-', 3) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 8) ,
('Swap gain:', 0.47769740921000914) ,
([0, 9, 7, 1, 3, 8, 6, 4],) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 3, 8, 6, 4],) ,
('saved value', 3.750428083158799) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 8, ',', 6, '-', 6) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 8) ,
('Swap gain:', 0.0) ,
([0, 9, 7, 1, 6, 3, 8, 4],) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 6, 3, 8, 4],) ,
('saved value', 3.27273067394879) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 8, ',', 7, '-', 4) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 4, '-', 4, ',', 7, '-', 8) ,
('Swap gain:', 1.477697409210009) ,
([0, 9, 7, 1, 4, 3, 6, 8],) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 4, 3, 6, 8],) ,
('saved value', 4.750428083158798) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', 1.2529171856941133) ,
([0, 9, 7, 1, 8, 6, 3, 4],) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 8, 6, 3, 4],) ,
('saved value', 4.525647859642903) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', 4) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 5, '-', 4, ',', 7, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 9, 7, 1, 8, 4, 6, 3],) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 8, 4, 6, 3],) ,
('saved value', 3.27273067394879) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 4) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('After swapping:', 6, '-', 4, ',', 7, '-', 6) ,
('Swap gain:', 1.0) ,
([0, 9, 7, 1, 8, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 8, 3, 4, 6],) ,
('saved value', 4.272730673948789) ,
('Use move gain',) ,
('Original mapping', [0, 9, 7, 1, 8, 3, 6, 4]) ,
('Current mapping', [0, 9, 2, 1, 8, 3, 6, 4]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 5.272730673948789) ,
('Current mapping:', [0, 9, 2, 1, 8, 3, 6, 4]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -2.9999999999999996) ,
('Computing match for mapping',) ,
([5, 9, 2, 1, 8, 3, 6, 4],) ,
('saved value', 2.27273067394879) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -2.7146677951281344) ,
('Computing match for mapping',) ,
([7, 9, 2, 1, 8, 3, 6, 4],) ,
('saved value', 2.558062878820655) ,
('Remap node', 1, 'from ', 9, 'to', 5) ,
('Move gain:', -0.12852238061595067) ,
('Computing match for mapping',) ,
([0, 5, 2, 1, 8, 3, 6, 4],) ,
('saved value', 5.144208293332839) ,
('Remap node', 1, 'from ', 9, 'to', 7) ,
('Move gain:', -0.7504280831587989) ,
('Computing match for mapping',) ,
([0, 7, 2, 1, 8, 3, 6, 4],) ,
('saved value', 4.52230259078999) ,
('Remap node', 2, 'from ', 2, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 9, 5, 1, 8, 3, 6, 4],) ,
('saved value', 4.272730673948789) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -1.9999999999999996) ,
('Computing match for mapping',) ,
([0, 9, 7, 1, 8, 3, 6, 4],) ,
('saved value', 3.27273067394879) ,
('Remap node', 3, 'from ', 1, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 5, 8, 3, 6, 4],) ,
('saved value', 5.272730673948789) ,
('Remap node', 3, 'from ', 1, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 7, 8, 3, 6, 4],) ,
('saved value', 5.272730673948789) ,
('Remap node', 4, 'from ', 8, 'to', 5) ,
('Move gain:', 0.47769740921000914) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 5, 3, 6, 4],) ,
('saved value', 5.750428083158798) ,
('Remap node', 4, 'from ', 8, 'to', 7) ,
('Move gain:', -0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 7, 3, 6, 4],) ,
('saved value', 4.750428083158798) ,
('Remap node', 5, 'from ', 3, 'to', 5) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 8, 5, 6, 4],) ,
('saved value', 5.79503326473878) ,
('Remap node', 5, 'from ', 3, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 8, 7, 6, 4],) ,
('saved value', 5.272730673948789) ,
('Remap node', 6, 'from ', 6, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 8, 3, 5, 4],) ,
('saved value', 5.272730673948789) ,
('Remap node', 6, 'from ', 6, 'to', 7) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 8, 3, 7, 4],) ,
('saved value', 6.272730673948789) ,
('Remap node', 7, 'from ', 4, 'to', 5) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 8, 3, 6, 5],) ,
('saved value', 5.79503326473878) ,
('Remap node', 7, 'from ', 4, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 8, 3, 6, 7],) ,
('saved value', 5.272730673948789) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 9) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 9, ',', 1, '-', 0) ,
('Swap gain:', -3.750428083158799) ,
([9, 0, 2, 1, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([9, 0, 2, 1, 8, 3, 6, 4],) ,
('saved value', 1.5223025907899905) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 9, 0, 1, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([2, 9, 0, 1, 8, 3, 6, 4],) ,
('saved value', 1.2727306739487894) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 1) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 1, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 9, 2, 0, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([1, 9, 2, 0, 8, 3, 6, 4],) ,
('saved value', 2.2727306739487894) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 8) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 8, ',', 4, '-', 0) ,
('Swap gain:', -3.522302590789991) ,
([8, 9, 2, 1, 0, 3, 6, 4],) ,
('Computing match for mapping',) ,
([8, 9, 2, 1, 0, 3, 6, 4],) ,
('saved value', 1.7504280831587984) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 9, 2, 1, 8, 0, 6, 4],) ,
('Computing match for mapping',) ,
([3, 9, 2, 1, 8, 0, 6, 4],) ,
('saved value', 2.2727306739487894) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -2.7146677951281344) ,
([6, 9, 2, 1, 8, 3, 0, 4],) ,
('Computing match for mapping',) ,
([6, 9, 2, 1, 8, 3, 0, 4],) ,
('saved value', 2.558062878820655) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 4) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 0, '-', 4, ',', 7, '-', 0) ,
('Swap gain:', -3.0) ,
([4, 9, 2, 1, 8, 3, 6, 0],) ,
('Computing match for mapping',) ,
([4, 9, 2, 1, 8, 3, 6, 0],) ,
('saved value', 2.2727306739487894) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 9, ',', 2, '-', 2) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 9) ,
('Swap gain:', -2.1285223806159506) ,
([0, 2, 9, 1, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 2, 9, 1, 8, 3, 6, 4],) ,
('saved value', 3.144208293332839) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 9, ',', 3, '-', 1) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 1, ',', 3, '-', 9) ,
('Swap gain:', 1.2495719168412012) ,
([0, 1, 2, 9, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 8, 3, 6, 4],) ,
('saved value', 6.522302590789991) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 9, ',', 4, '-', 8) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 8, ',', 4, '-', 9) ,
('Swap gain:', -0.6668233033689976) ,
([0, 8, 2, 1, 9, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 8, 2, 1, 9, 3, 6, 4],) ,
('saved value', 4.605907370579792) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 9, ',', 5, '-', 3) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 9) ,
('Swap gain:', -0.23252388869544116) ,
([0, 3, 2, 1, 8, 9, 6, 4],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1, 8, 9, 6, 4],) ,
('saved value', 5.040206785253348) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 9, ',', 6, '-', 6) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 9) ,
('Swap gain:', -0.14452071257900678) ,
([0, 6, 2, 1, 8, 3, 9, 4],) ,
('Computing match for mapping',) ,
([0, 6, 2, 1, 8, 3, 9, 4],) ,
('saved value', 5.128209961369783) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 9, ',', 7, '-', 4) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 1, '-', 4, ',', 7, '-', 9) ,
('Swap gain:', -0.23252388869544116) ,
([0, 4, 2, 1, 8, 3, 6, 9],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 8, 3, 6, 9],) ,
('saved value', 5.040206785253348) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 1) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 2, '-', 1, ',', 3, '-', 2) ,
('Swap gain:', -1.3780942974571517) ,
([0, 9, 1, 2, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 9, 1, 2, 8, 3, 6, 4],) ,
('saved value', 3.8946363764916376) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 8) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 2, '-', 8, ',', 4, '-', 2) ,
('Swap gain:', -0.9999999999999999) ,
([0, 9, 8, 1, 2, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 9, 8, 1, 2, 3, 6, 4],) ,
('saved value', 4.272730673948789) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -1.477697409210009) ,
([0, 9, 3, 1, 8, 2, 6, 4],) ,
('Computing match for mapping',) ,
([0, 9, 3, 1, 8, 2, 6, 4],) ,
('saved value', 3.7950332647387803) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -1.477697409210009) ,
([0, 9, 6, 1, 8, 3, 2, 4],) ,
('Computing match for mapping',) ,
([0, 9, 6, 1, 8, 3, 2, 4],) ,
('saved value', 3.7950332647387803) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 4) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 2, '-', 4, ',', 7, '-', 2) ,
('Swap gain:', -1.477697409210009) ,
([0, 9, 4, 1, 8, 3, 6, 2],) ,
('Computing match for mapping',) ,
([0, 9, 4, 1, 8, 3, 6, 2],) ,
('saved value', 3.7950332647387803) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 1, ',', 4, '-', 8) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 3, '-', 8, ',', 4, '-', 1) ,
('Swap gain:', 0.09960311175285741) ,
([0, 9, 2, 8, 1, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 9, 2, 8, 1, 3, 6, 4],) ,
('saved value', 5.372333785701647) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 1, ',', 5, '-', 3) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', 0.6059073705797922) ,
([0, 9, 2, 3, 8, 1, 6, 4],) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 8, 1, 6, 4],) ,
('saved value', 5.878638044528581) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 1, ',', 6, '-', 6) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 9, 2, 6, 8, 3, 1, 4],) ,
('Computing match for mapping',) ,
([0, 9, 2, 6, 8, 3, 1, 4],) ,
('saved value', 5.272730673948789) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 1, ',', 7, '-', 4) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 3, '-', 4, ',', 7, '-', 1) ,
('Swap gain:', 2.605907370579792) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('saved value', 7.878638044528581) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 8, ',', 5, '-', 3) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 8) ,
('Swap gain:', 0.47769740921000914) ,
([0, 9, 2, 1, 3, 8, 6, 4],) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 3, 8, 6, 4],) ,
('saved value', 5.750428083158798) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 8, ',', 6, '-', 6) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 8) ,
('Swap gain:', 0.0) ,
([0, 9, 2, 1, 6, 3, 8, 4],) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 6, 3, 8, 4],) ,
('saved value', 5.272730673948789) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 8, ',', 7, '-', 4) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 4, '-', 4, ',', 7, '-', 8) ,
('Swap gain:', 2.477697409210009) ,
([0, 9, 2, 1, 4, 3, 6, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 4, 3, 6, 8],) ,
('saved value', 7.750428083158798) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', 1.2529171856941133) ,
([0, 9, 2, 1, 8, 6, 3, 4],) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 8, 6, 3, 4],) ,
('saved value', 6.525647859642903) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', 4) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 5, '-', 4, ',', 7, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 9, 2, 1, 8, 4, 6, 3],) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 8, 4, 6, 3],) ,
('saved value', 5.272730673948789) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 4) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('After swapping:', 6, '-', 4, ',', 7, '-', 6) ,
('Swap gain:', 1.0) ,
([0, 9, 2, 1, 8, 3, 4, 6],) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 8, 3, 4, 6],) ,
('saved value', 6.272730673948789) ,
('Use swap gain',) ,
('Original mapping', [0, 9, 2, 1, 8, 3, 6, 4]) ,
('Current mapping', [0, 9, 2, 4, 8, 3, 6, 1]) ,
('Gain after the hill-climbing', 2.605907370579792) ,
('Update triple match number to:', 7.878638044528581) ,
('Current mapping:', [0, 9, 2, 4, 8, 3, 6, 1]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 9, 2, 4, 8, 3, 6, 1],) ,
('saved value', 4.878638044528581) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -2.7146677951281344) ,
('Computing match for mapping',) ,
([7, 9, 2, 4, 8, 3, 6, 1],) ,
('saved value', 5.163970249400447) ,
('Remap node', 1, 'from ', 9, 'to', 5) ,
('Move gain:', -0.12852238061595067) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 8, 3, 6, 1],) ,
('saved value', 7.750115663912631) ,
('Remap node', 1, 'from ', 9, 'to', 7) ,
('Move gain:', -0.7504280831587989) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 8, 3, 6, 1],) ,
('saved value', 7.128209961369782) ,
('Remap node', 2, 'from ', 2, 'to', 5) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 9, 5, 4, 8, 3, 6, 1],) ,
('saved value', 6.878638044528581) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -2.999999999999999) ,
('Computing match for mapping',) ,
([0, 9, 7, 4, 8, 3, 6, 1],) ,
('saved value', 4.878638044528582) ,
('Remap node', 3, 'from ', 4, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 5, 8, 3, 6, 1],) ,
('saved value', 5.878638044528581) ,
('Remap node', 3, 'from ', 4, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 7, 8, 3, 6, 1],) ,
('saved value', 5.878638044528581) ,
('Remap node', 4, 'from ', 8, 'to', 5) ,
('Move gain:', 0.47769740921000914) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 3, 6, 1],) ,
('saved value', 8.356335453738591) ,
('Remap node', 4, 'from ', 8, 'to', 7) ,
('Move gain:', -0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 7, 3, 6, 1],) ,
('saved value', 7.35633545373859) ,
('Remap node', 5, 'from ', 3, 'to', 5) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 8, 5, 6, 1],) ,
('saved value', 8.400940635318571) ,
('Remap node', 5, 'from ', 3, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 8, 7, 6, 1],) ,
('saved value', 7.878638044528581) ,
('Remap node', 6, 'from ', 6, 'to', 5) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 8, 3, 5, 1],) ,
('saved value', 7.878638044528581) ,
('Remap node', 6, 'from ', 6, 'to', 7) ,
('Move gain:', 2.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 8, 3, 7, 1],) ,
('saved value', 9.878638044528582) ,
('Remap node', 7, 'from ', 1, 'to', 5) ,
('Move gain:', -0.0836047797898013) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 8, 3, 6, 5],) ,
('saved value', 7.79503326473878) ,
('Remap node', 7, 'from ', 1, 'to', 7) ,
('Move gain:', -0.6059073705797922) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 8, 3, 6, 7],) ,
('saved value', 7.272730673948789) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 9) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 0, '-', 9, ',', 1, '-', 0) ,
('Swap gain:', -3.750428083158799) ,
([9, 0, 2, 4, 8, 3, 6, 1],) ,
('Computing match for mapping',) ,
([9, 0, 2, 4, 8, 3, 6, 1],) ,
('saved value', 4.128209961369782) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 9, 0, 4, 8, 3, 6, 1],) ,
('Computing match for mapping',) ,
([2, 9, 0, 4, 8, 3, 6, 1],) ,
('saved value', 2.8786380445285813) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 9, 2, 0, 8, 3, 6, 1],) ,
('Computing match for mapping',) ,
([4, 9, 2, 0, 8, 3, 6, 1],) ,
('saved value', 2.8786380445285813) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 8) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 0, '-', 8, ',', 4, '-', 0) ,
('Swap gain:', -3.522302590789991) ,
([8, 9, 2, 4, 0, 3, 6, 1],) ,
('Computing match for mapping',) ,
([8, 9, 2, 4, 0, 3, 6, 1],) ,
('saved value', 4.35633545373859) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 9, 2, 4, 8, 0, 6, 1],) ,
('Computing match for mapping',) ,
([3, 9, 2, 4, 8, 0, 6, 1],) ,
('saved value', 4.878638044528581) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -2.7146677951281344) ,
([6, 9, 2, 4, 8, 3, 0, 1],) ,
('Computing match for mapping',) ,
([6, 9, 2, 4, 8, 3, 0, 1],) ,
('saved value', 5.163970249400447) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 1) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 0, '-', 1, ',', 7, '-', 0) ,
('Swap gain:', -3.605907370579792) ,
([1, 9, 2, 4, 8, 3, 6, 0],) ,
('Computing match for mapping',) ,
([1, 9, 2, 4, 8, 3, 6, 0],) ,
('saved value', 4.272730673948789) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 9, ',', 2, '-', 2) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 9) ,
('Swap gain:', -3.1285223806159506) ,
([0, 2, 9, 4, 8, 3, 6, 1],) ,
('Computing match for mapping',) ,
([0, 2, 9, 4, 8, 3, 6, 1],) ,
('saved value', 4.750115663912631) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 9, ',', 3, '-', 4) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 9) ,
('Swap gain:', -2.750428083158799) ,
([0, 4, 2, 9, 8, 3, 6, 1],) ,
('Computing match for mapping',) ,
([0, 4, 2, 9, 8, 3, 6, 1],) ,
('saved value', 5.128209961369782) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 9, ',', 4, '-', 8) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 1, '-', 8, ',', 4, '-', 9) ,
('Swap gain:', -0.6668233033689976) ,
([0, 8, 2, 4, 9, 3, 6, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 9, 3, 6, 1],) ,
('saved value', 7.211814741159584) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 9, ',', 5, '-', 3) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 9) ,
('Swap gain:', -0.23252388869544116) ,
([0, 3, 2, 4, 8, 9, 6, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 8, 9, 6, 1],) ,
('saved value', 7.64611415583314) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 9, ',', 6, '-', 6) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 9) ,
('Swap gain:', -0.14452071257900678) ,
([0, 6, 2, 4, 8, 3, 9, 1],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 8, 3, 9, 1],) ,
('saved value', 7.734117331949575) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 9, ',', 7, '-', 1) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 1, '-', 1, ',', 7, '-', 9) ,
('Swap gain:', 1.161568740724767) ,
([0, 1, 2, 4, 8, 3, 6, 9],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 8, 3, 6, 9],) ,
('saved value', 9.040206785253348) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -4.0) ,
([0, 9, 4, 2, 8, 3, 6, 1],) ,
('Computing match for mapping',) ,
([0, 9, 4, 2, 8, 3, 6, 1],) ,
('saved value', 3.8786380445285813) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 8) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 2, '-', 8, ',', 4, '-', 2) ,
('Swap gain:', -2.0) ,
([0, 9, 8, 4, 2, 3, 6, 1],) ,
('Computing match for mapping',) ,
([0, 9, 8, 4, 2, 3, 6, 1],) ,
('saved value', 5.878638044528581) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -2.477697409210009) ,
([0, 9, 3, 4, 8, 2, 6, 1],) ,
('Computing match for mapping',) ,
([0, 9, 3, 4, 8, 2, 6, 1],) ,
('saved value', 5.400940635318572) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -2.477697409210009) ,
([0, 9, 6, 4, 8, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 9, 6, 4, 8, 3, 2, 1],) ,
('saved value', 5.400940635318572) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 1) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 2, '-', 1, ',', 7, '-', 2) ,
('Swap gain:', -2.461699077246953) ,
([0, 9, 1, 4, 8, 3, 6, 2],) ,
('Computing match for mapping',) ,
([0, 9, 1, 4, 8, 3, 6, 2],) ,
('saved value', 5.416938967281628) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 8) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 3, '-', 8, ',', 4, '-', 4) ,
('Swap gain:', -2.522302590789991) ,
([0, 9, 2, 8, 4, 3, 6, 1],) ,
('Computing match for mapping',) ,
([0, 9, 2, 8, 4, 3, 6, 1],) ,
('saved value', 5.35633545373859) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 3) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 9, 2, 3, 8, 4, 6, 1],) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 8, 4, 6, 1],) ,
('saved value', 5.878638044528581) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 6) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 9, 2, 6, 8, 3, 4, 1],) ,
('Computing match for mapping',) ,
([0, 9, 2, 6, 8, 3, 4, 1],) ,
('saved value', 5.878638044528581) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 1) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 3, '-', 1, ',', 7, '-', 4) ,
('Swap gain:', -2.605907370579792) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 8, 3, 6, 4],) ,
('saved value', 5.272730673948789) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 8, ',', 5, '-', 3) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 8) ,
('Swap gain:', 0.47769740921000914) ,
([0, 9, 2, 4, 3, 8, 6, 1],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 3, 8, 6, 1],) ,
('saved value', 8.356335453738591) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 8, ',', 6, '-', 6) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 8) ,
('Swap gain:', 0.0) ,
([0, 9, 2, 4, 6, 3, 8, 1],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 6, 3, 8, 1],) ,
('saved value', 7.878638044528581) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 8, ',', 7, '-', 1) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 4, '-', 1, ',', 7, '-', 8) ,
('Swap gain:', 2.493695741173065) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('saved value', 10.372333785701645) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', 1.2529171856941133) ,
([0, 9, 2, 4, 8, 6, 3, 1],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 8, 6, 3, 1],) ,
('saved value', 9.131555230222695) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', 1) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 5, '-', 1, ',', 7, '-', 3) ,
('Swap gain:', 0.0) ,
([0, 9, 2, 4, 8, 1, 6, 3],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 8, 1, 6, 3],) ,
('saved value', 7.878638044528581) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 1) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('After swapping:', 6, '-', 1, ',', 7, '-', 6) ,
('Swap gain:', 0.39409262942020784) ,
([0, 9, 2, 4, 8, 3, 1, 6],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 8, 3, 1, 6],) ,
('saved value', 8.27273067394879) ,
('Use swap gain',) ,
('Original mapping', [0, 9, 2, 4, 8, 3, 6, 1]) ,
('Current mapping', [0, 9, 2, 4, 1, 3, 6, 8]) ,
('Gain after the hill-climbing', 2.493695741173065) ,
('Update triple match number to:', 10.372333785701645) ,
('Current mapping:', [0, 9, 2, 4, 1, 3, 6, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 9, 2, 4, 1, 3, 6, 8],) ,
('saved value', 7.372333785701645) ,
('Remap node', 0, 'from ', 0, 'to', 7) ,
('Move gain:', -2.7146677951281344) ,
('Computing match for mapping',) ,
([7, 9, 2, 4, 1, 3, 6, 8],) ,
('saved value', 7.657665990573511) ,
('Remap node', 1, 'from ', 9, 'to', 5) ,
('Move gain:', -0.12852238061595067) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 3, 6, 8],) ,
('saved value', 10.243811405085694) ,
('Remap node', 1, 'from ', 9, 'to', 7) ,
('Move gain:', -0.7504280831587989) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 1, 3, 6, 8],) ,
('saved value', 9.621905702542847) ,
('Remap node', 2, 'from ', 2, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 9, 5, 4, 1, 3, 6, 8],) ,
('saved value', 8.372333785701645) ,
('Remap node', 2, 'from ', 2, 'to', 7) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 9, 7, 4, 1, 3, 6, 8],) ,
('saved value', 6.372333785701645) ,
('Remap node', 3, 'from ', 4, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 5, 1, 3, 6, 8],) ,
('saved value', 8.372333785701645) ,
('Remap node', 3, 'from ', 4, 'to', 7) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 7, 1, 3, 6, 8],) ,
('saved value', 8.372333785701645) ,
('Remap node', 4, 'from ', 1, 'to', 5) ,
('Move gain:', 0.37809429745715173) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 3, 6, 8],) ,
('saved value', 10.750428083158797) ,
('Remap node', 4, 'from ', 1, 'to', 7) ,
('Move gain:', -0.6219057025428483) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 7, 3, 6, 8],) ,
('saved value', 9.750428083158797) ,
('Remap node', 5, 'from ', 3, 'to', 5) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 5, 6, 8],) ,
('saved value', 10.894636376491636) ,
('Remap node', 5, 'from ', 3, 'to', 7) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 7, 6, 8],) ,
('saved value', 10.372333785701645) ,
('Remap node', 6, 'from ', 6, 'to', 5) ,
('Move gain:', 1.7763568394002505e-15) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 3, 5, 8],) ,
('saved value', 10.372333785701647) ,
('Remap node', 6, 'from ', 6, 'to', 7) ,
('Move gain:', 2.0000000000000018) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('saved value', 12.372333785701647) ,
('Remap node', 7, 'from ', 8, 'to', 5) ,
('Move gain:', -2.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 3, 6, 5],) ,
('saved value', 7.894636376491636) ,
('Remap node', 7, 'from ', 8, 'to', 7) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 3, 6, 7],) ,
('saved value', 7.372333785701645) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 9) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 0, '-', 9, ',', 1, '-', 0) ,
('Swap gain:', -3.750428083158799) ,
([9, 0, 2, 4, 1, 3, 6, 8],) ,
('Computing match for mapping',) ,
([9, 0, 2, 4, 1, 3, 6, 8],) ,
('saved value', 6.621905702542847) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 9, 0, 4, 1, 3, 6, 8],) ,
('Computing match for mapping',) ,
([2, 9, 0, 4, 1, 3, 6, 8],) ,
('saved value', 4.372333785701645) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([4, 9, 2, 0, 1, 3, 6, 8],) ,
('Computing match for mapping',) ,
([4, 9, 2, 0, 1, 3, 6, 8],) ,
('saved value', 6.372333785701645) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -3.6219057025428483) ,
([1, 9, 2, 4, 0, 3, 6, 8],) ,
('Computing match for mapping',) ,
([1, 9, 2, 4, 0, 3, 6, 8],) ,
('saved value', 6.750428083158797) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 9, 2, 4, 1, 0, 6, 8],) ,
('Computing match for mapping',) ,
([3, 9, 2, 4, 1, 0, 6, 8],) ,
('saved value', 7.372333785701645) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 6) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 0, '-', 6, ',', 6, '-', 0) ,
('Swap gain:', -2.7146677951281344) ,
([6, 9, 2, 4, 1, 3, 0, 8],) ,
('Computing match for mapping',) ,
([6, 9, 2, 4, 1, 3, 0, 8],) ,
('saved value', 7.657665990573511) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -6.0) ,
([8, 9, 2, 4, 1, 3, 6, 0],) ,
('Computing match for mapping',) ,
([8, 9, 2, 4, 1, 3, 6, 0],) ,
('saved value', 4.372333785701645) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 9, ',', 2, '-', 2) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 9) ,
('Swap gain:', -4.128522380615951) ,
([0, 2, 9, 4, 1, 3, 6, 8],) ,
('Computing match for mapping',) ,
([0, 2, 9, 4, 1, 3, 6, 8],) ,
('saved value', 6.243811405085695) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 9, ',', 3, '-', 4) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 9) ,
('Swap gain:', -2.750428083158799) ,
([0, 4, 2, 9, 1, 3, 6, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 9, 1, 3, 6, 8],) ,
('saved value', 7.621905702542847) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 9, ',', 4, '-', 1) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 9) ,
('Swap gain:', 0.6276662142983529) ,
([0, 1, 2, 4, 9, 3, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 9, 3, 6, 8],) ,
('saved value', 10.999999999999998) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 9, ',', 5, '-', 3) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 9) ,
('Swap gain:', -0.2325238886954395) ,
([0, 3, 2, 4, 1, 9, 6, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 9, 6, 8],) ,
('saved value', 10.139809897006206) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 9, ',', 6, '-', 6) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 1, '-', 6, ',', 6, '-', 9) ,
('Swap gain:', -0.14452071257900678) ,
([0, 6, 2, 4, 1, 3, 9, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 1, 3, 9, 8],) ,
('saved value', 10.227813073122638) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 9, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 9) ,
('Swap gain:', -2.626616518115649) ,
([0, 8, 2, 4, 1, 3, 6, 9],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 1, 3, 6, 9],) ,
('saved value', 7.745717267585997) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -5.0) ,
([0, 9, 4, 2, 1, 3, 6, 8],) ,
('Computing match for mapping',) ,
([0, 9, 4, 2, 1, 3, 6, 8],) ,
('saved value', 5.372333785701645) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 1) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 9, 1, 4, 2, 3, 6, 8],) ,
('Computing match for mapping',) ,
([0, 9, 1, 4, 2, 3, 6, 8],) ,
('saved value', 7.372333785701645) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -3.477697409210009) ,
([0, 9, 3, 4, 1, 2, 6, 8],) ,
('Computing match for mapping',) ,
([0, 9, 3, 4, 1, 2, 6, 8],) ,
('saved value', 6.894636376491636) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 6) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 2, '-', 6, ',', 6, '-', 2) ,
('Swap gain:', -3.477697409210009) ,
([0, 9, 6, 4, 1, 3, 2, 8],) ,
('Computing match for mapping',) ,
([0, 9, 6, 4, 1, 3, 2, 8],) ,
('saved value', 6.894636376491636) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 9, 8, 4, 1, 3, 6, 2],) ,
('Computing match for mapping',) ,
([0, 9, 8, 4, 1, 3, 6, 2],) ,
('saved value', 5.416938967281627) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 1) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 4) ,
('Swap gain:', -2.621905702542847) ,
([0, 9, 2, 1, 4, 3, 6, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 4, 3, 6, 8],) ,
('saved value', 7.750428083158798) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 3) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 9, 2, 3, 1, 4, 6, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 1, 4, 6, 8],) ,
('saved value', 8.372333785701645) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 6) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 3, '-', 6, ',', 6, '-', 4) ,
('Swap gain:', -2.0) ,
([0, 9, 2, 6, 1, 3, 4, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 6, 1, 3, 4, 8],) ,
('saved value', 8.372333785701645) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -4.999999999999998) ,
([0, 9, 2, 8, 1, 3, 6, 4],) ,
('Computing match for mapping',) ,
([0, 9, 2, 8, 1, 3, 6, 4],) ,
('saved value', 5.372333785701647) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 3) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -0.01599833196305611) ,
([0, 9, 2, 4, 3, 1, 6, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 3, 1, 6, 8],) ,
('saved value', 10.35633545373859) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 6) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 4, '-', 6, ',', 6, '-', 1) ,
('Swap gain:', -0.09960311175285741) ,
([0, 9, 2, 4, 6, 3, 1, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 6, 3, 1, 8],) ,
('saved value', 10.272730673948788) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 1, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -2.493695741173064) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 8, 3, 6, 1],) ,
('saved value', 7.878638044528581) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 6) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 5, '-', 6, ',', 6, '-', 3) ,
('Swap gain:', 1.2529171856941133) ,
([0, 9, 2, 4, 1, 6, 3, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 6, 3, 8],) ,
('saved value', 11.625250971395758) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 9, 2, 4, 1, 8, 6, 3],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 8, 6, 3],) ,
('saved value', 8.372333785701645) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 6, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 9, 2, 4, 1, 3, 8, 6],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 3, 8, 6],) ,
('saved value', 8.372333785701645) ,
('Use move gain',) ,
('Original mapping', [0, 9, 2, 4, 1, 3, 6, 8]) ,
('Current mapping', [0, 9, 2, 4, 1, 3, 7, 8]) ,
('Gain after the hill-climbing', 2.0000000000000018) ,
('Update triple match number to:', 12.372333785701647) ,
('Current mapping:', [0, 9, 2, 4, 1, 3, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 9, 2, 4, 1, 3, 7, 8],) ,
('saved value', 9.372333785701647) ,
('Remap node', 0, 'from ', 0, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([6, 9, 2, 4, 1, 3, 7, 8],) ,
('saved value', 9.372333785701647) ,
('Remap node', 1, 'from ', 9, 'to', 5) ,
('Move gain:', -0.12852238061595067) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 3, 7, 8],) ,
('saved value', 12.243811405085696) ,
('Remap node', 1, 'from ', 9, 'to', 6) ,
('Move gain:', -0.14452071257900678) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 1, 3, 7, 8],) ,
('saved value', 12.22781307312264) ,
('Remap node', 2, 'from ', 2, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 9, 5, 4, 1, 3, 7, 8],) ,
('saved value', 10.372333785701647) ,
('Remap node', 2, 'from ', 2, 'to', 6) ,
('Move gain:', -3.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 6, 4, 1, 3, 7, 8],) ,
('saved value', 8.894636376491638) ,
('Remap node', 3, 'from ', 4, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 5, 1, 3, 7, 8],) ,
('saved value', 9.372333785701647) ,
('Remap node', 3, 'from ', 4, 'to', 6) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 6, 1, 3, 7, 8],) ,
('saved value', 9.372333785701647) ,
('Remap node', 4, 'from ', 1, 'to', 5) ,
('Move gain:', 0.37809429745715173) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 3, 7, 8],) ,
('saved value', 12.750428083158798) ,
('Remap node', 4, 'from ', 1, 'to', 6) ,
('Move gain:', -0.09960311175285741) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 6, 3, 7, 8],) ,
('saved value', 12.27273067394879) ,
('Remap node', 5, 'from ', 3, 'to', 5) ,
('Move gain:', 0.5223025907899909) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 5, 7, 8],) ,
('saved value', 12.894636376491638) ,
('Remap node', 5, 'from ', 3, 'to', 6) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('saved value', 13.372333785701647) ,
('Remap node', 6, 'from ', 7, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 3, 5, 8],) ,
('saved value', 10.372333785701647) ,
('Remap node', 6, 'from ', 7, 'to', 6) ,
('Move gain:', -2.0000000000000018) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 3, 6, 8],) ,
('saved value', 10.372333785701645) ,
('Remap node', 7, 'from ', 8, 'to', 5) ,
('Move gain:', -2.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 3, 7, 5],) ,
('saved value', 9.894636376491638) ,
('Remap node', 7, 'from ', 8, 'to', 6) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 3, 7, 6],) ,
('saved value', 10.372333785701647) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 9) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 0, '-', 9, ',', 1, '-', 0) ,
('Swap gain:', -3.750428083158799) ,
([9, 0, 2, 4, 1, 3, 7, 8],) ,
('Computing match for mapping',) ,
([9, 0, 2, 4, 1, 3, 7, 8],) ,
('saved value', 8.621905702542849) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 9, 0, 4, 1, 3, 7, 8],) ,
('Computing match for mapping',) ,
([2, 9, 0, 4, 1, 3, 7, 8],) ,
('saved value', 6.372333785701647) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 9, 2, 0, 1, 3, 7, 8],) ,
('Computing match for mapping',) ,
([4, 9, 2, 0, 1, 3, 7, 8],) ,
('saved value', 7.372333785701647) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -3.6219057025428483) ,
([1, 9, 2, 4, 0, 3, 7, 8],) ,
('Computing match for mapping',) ,
([1, 9, 2, 4, 0, 3, 7, 8],) ,
('saved value', 8.750428083158798) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 3) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 0, '-', 3, ',', 5, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 9, 2, 4, 1, 0, 7, 8],) ,
('Computing match for mapping',) ,
([3, 9, 2, 4, 1, 0, 7, 8],) ,
('saved value', 9.372333785701647) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -4.429335590256269) ,
([7, 9, 2, 4, 1, 3, 0, 8],) ,
('Computing match for mapping',) ,
([7, 9, 2, 4, 1, 3, 0, 8],) ,
('saved value', 7.942998195445378) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -6.0) ,
([8, 9, 2, 4, 1, 3, 7, 0],) ,
('Computing match for mapping',) ,
([8, 9, 2, 4, 1, 3, 7, 0],) ,
('saved value', 6.372333785701647) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 9, ',', 2, '-', 2) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 9) ,
('Swap gain:', -4.128522380615951) ,
([0, 2, 9, 4, 1, 3, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 9, 4, 1, 3, 7, 8],) ,
('saved value', 8.243811405085697) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 9, ',', 3, '-', 4) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 9) ,
('Swap gain:', -3.750428083158799) ,
([0, 4, 2, 9, 1, 3, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 9, 1, 3, 7, 8],) ,
('saved value', 8.621905702542849) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 9, ',', 4, '-', 1) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 9) ,
('Swap gain:', 0.6276662142983529) ,
([0, 1, 2, 4, 9, 3, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 9, 3, 7, 8],) ,
('saved value', 13.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 9, ',', 5, '-', 3) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 1, '-', 3, ',', 5, '-', 9) ,
('Swap gain:', -0.23252388869544127) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 9, 7, 8],) ,
('saved value', 12.139809897006206) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 9, ',', 6, '-', 7) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 9) ,
('Swap gain:', -2.750428083158799) ,
([0, 7, 2, 4, 1, 3, 9, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 1, 3, 9, 8],) ,
('saved value', 9.621905702542849) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 9, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 9) ,
('Swap gain:', -2.626616518115649) ,
([0, 8, 2, 4, 1, 3, 7, 9],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 1, 3, 7, 9],) ,
('saved value', 9.745717267585999) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 9, 4, 2, 1, 3, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 4, 2, 1, 3, 7, 8],) ,
('saved value', 6.372333785701647) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 1) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 9, 1, 4, 2, 3, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 1, 4, 2, 3, 7, 8],) ,
('saved value', 9.372333785701647) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 3) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 2, '-', 3, ',', 5, '-', 2) ,
('Swap gain:', -3.477697409210009) ,
([0, 9, 3, 4, 1, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 3, 4, 1, 2, 7, 8],) ,
('saved value', 8.894636376491638) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 9, 7, 4, 1, 3, 2, 8],) ,
('Computing match for mapping',) ,
([0, 9, 7, 4, 1, 3, 2, 8],) ,
('saved value', 6.372333785701647) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 9, 8, 4, 1, 3, 7, 2],) ,
('Computing match for mapping',) ,
([0, 9, 8, 4, 1, 3, 7, 2],) ,
('saved value', 7.416938967281629) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 1) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 4) ,
('Swap gain:', -3.6219057025428483) ,
([0, 9, 2, 1, 4, 3, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 4, 3, 7, 8],) ,
('saved value', 8.750428083158798) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 3) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 3, '-', 3, ',', 5, '-', 4) ,
('Swap gain:', -3.0) ,
([0, 9, 2, 3, 1, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 1, 4, 7, 8],) ,
('saved value', 9.372333785701647) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 9, 2, 7, 1, 3, 4, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 7, 1, 3, 4, 8],) ,
('saved value', 8.372333785701647) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -6.0) ,
([0, 9, 2, 8, 1, 3, 7, 4],) ,
('Computing match for mapping',) ,
([0, 9, 2, 8, 1, 3, 7, 4],) ,
('saved value', 6.372333785701647) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 3) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 4, '-', 3, ',', 5, '-', 1) ,
('Swap gain:', -0.01599833196305589) ,
([0, 9, 2, 4, 3, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 3, 1, 7, 8],) ,
('saved value', 12.356335453738591) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 7) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -2.6219057025428483) ,
([0, 9, 2, 4, 7, 3, 1, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 7, 3, 1, 8],) ,
('saved value', 9.750428083158798) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 1, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -2.493695741173065) ,
([0, 9, 2, 4, 8, 3, 7, 1],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 8, 3, 7, 1],) ,
('saved value', 9.878638044528582) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 3, ',', 6, '-', 7) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 3) ,
('Swap gain:', -1.7470828143058867) ,
([0, 9, 2, 4, 1, 7, 3, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 7, 3, 8],) ,
('saved value', 10.62525097139576) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 3, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 3) ,
('Swap gain:', -2.0) ,
([0, 9, 2, 4, 1, 8, 7, 3],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 8, 7, 3],) ,
('saved value', 10.372333785701647) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 9, 2, 4, 1, 3, 8, 7],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 3, 8, 7],) ,
('saved value', 7.372333785701647) ,
('Use move gain',) ,
('Original mapping', [0, 9, 2, 4, 1, 3, 7, 8]) ,
('Current mapping', [0, 9, 2, 4, 1, 6, 7, 8]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 13.372333785701647) ,
('Current mapping:', [0, 9, 2, 4, 1, 6, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([3, 9, 2, 4, 1, 6, 7, 8],) ,
('saved value', 10.372333785701647) ,
('Remap node', 0, 'from ', 0, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([5, 9, 2, 4, 1, 6, 7, 8],) ,
('saved value', 10.372333785701647) ,
('Remap node', 1, 'from ', 9, 'to', 3) ,
('Move gain:', -0.7504280831587984) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 1, 6, 7, 8],) ,
('saved value', 12.621905702542849) ,
('Remap node', 1, 'from ', 9, 'to', 5) ,
('Move gain:', -0.12852238061594967) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('saved value', 13.243811405085697) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 9, 3, 4, 1, 6, 7, 8],) ,
('saved value', 9.372333785701647) ,
('Remap node', 2, 'from ', 2, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 9, 5, 4, 1, 6, 7, 8],) ,
('saved value', 11.372333785701647) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 1, 6, 7, 8],) ,
('saved value', 10.372333785701647) ,
('Remap node', 3, 'from ', 4, 'to', 5) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 5, 1, 6, 7, 8],) ,
('saved value', 10.372333785701647) ,
('Remap node', 4, 'from ', 1, 'to', 3) ,
('Move gain:', -0.6219057025428487) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 3, 6, 7, 8],) ,
('saved value', 12.750428083158798) ,
('Remap node', 4, 'from ', 1, 'to', 5) ,
('Move gain:', 1.3780942974571513) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('saved value', 14.750428083158798) ,
('Remap node', 5, 'from ', 6, 'to', 3) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 3, 7, 8],) ,
('saved value', 12.372333785701647) ,
('Remap node', 5, 'from ', 6, 'to', 5) ,
('Move gain:', -0.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 5, 7, 8],) ,
('saved value', 12.894636376491638) ,
('Remap node', 6, 'from ', 7, 'to', 3) ,
('Move gain:', -1.7470828143058892) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 6, 3, 8],) ,
('saved value', 11.625250971395758) ,
('Remap node', 6, 'from ', 7, 'to', 5) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 6, 5, 8],) ,
('saved value', 11.372333785701647) ,
('Remap node', 7, 'from ', 8, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 6, 7, 3],) ,
('saved value', 10.372333785701647) ,
('Remap node', 7, 'from ', 8, 'to', 5) ,
('Move gain:', -2.477697409210009) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 6, 7, 5],) ,
('saved value', 10.894636376491638) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 9) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 9, ',', 1, '-', 0) ,
('Swap gain:', -3.750428083158799) ,
([9, 0, 2, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([9, 0, 2, 4, 1, 6, 7, 8],) ,
('saved value', 9.621905702542849) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 9, 0, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 9, 0, 4, 1, 6, 7, 8],) ,
('saved value', 7.372333785701647) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([4, 9, 2, 0, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 9, 2, 0, 1, 6, 7, 8],) ,
('saved value', 8.372333785701647) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 1) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 4, '-', 0) ,
('Swap gain:', -3.6219057025428483) ,
([1, 9, 2, 4, 0, 6, 7, 8],) ,
('Computing match for mapping',) ,
([1, 9, 2, 4, 0, 6, 7, 8],) ,
('saved value', 9.750428083158798) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -4.0) ,
([6, 9, 2, 4, 1, 0, 7, 8],) ,
('Computing match for mapping',) ,
([6, 9, 2, 4, 1, 0, 7, 8],) ,
('saved value', 9.372333785701647) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -4.429335590256269) ,
([7, 9, 2, 4, 1, 6, 0, 8],) ,
('Computing match for mapping',) ,
([7, 9, 2, 4, 1, 6, 0, 8],) ,
('saved value', 8.942998195445378) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -6.0) ,
([8, 9, 2, 4, 1, 6, 7, 0],) ,
('Computing match for mapping',) ,
([8, 9, 2, 4, 1, 6, 7, 0],) ,
('saved value', 7.372333785701647) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 9, ',', 2, '-', 2) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 9) ,
('Swap gain:', -4.128522380615951) ,
([0, 2, 9, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 9, 4, 1, 6, 7, 8],) ,
('saved value', 9.243811405085697) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 9, ',', 3, '-', 4) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 9) ,
('Swap gain:', -3.750428083158799) ,
([0, 4, 2, 9, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 9, 1, 6, 7, 8],) ,
('saved value', 9.621905702542849) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 9, ',', 4, '-', 1) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 1, ',', 4, '-', 9) ,
('Swap gain:', 0.6276662142983529) ,
([0, 1, 2, 4, 9, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 9, 6, 7, 8],) ,
('saved value', 14.0) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 9, ',', 5, '-', 6) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 9) ,
('Swap gain:', -0.6266165181156484) ,
([0, 6, 2, 4, 1, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 1, 9, 7, 8],) ,
('saved value', 12.745717267585999) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 9, ',', 6, '-', 7) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 9) ,
('Swap gain:', -2.750428083158799) ,
([0, 7, 2, 4, 1, 6, 9, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 1, 6, 9, 8],) ,
('saved value', 10.621905702542849) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 9, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 9) ,
('Swap gain:', -2.626616518115649) ,
([0, 8, 2, 4, 1, 6, 7, 9],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 1, 6, 7, 9],) ,
('saved value', 10.745717267585999) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 9, 4, 2, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 4, 2, 1, 6, 7, 8],) ,
('saved value', 7.372333785701647) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 1) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 1, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 9, 1, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 1, 4, 2, 6, 7, 8],) ,
('saved value', 10.372333785701647) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -3.955394818420018) ,
([0, 9, 6, 4, 1, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 6, 4, 1, 2, 7, 8],) ,
('saved value', 9.416938967281629) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 9, 7, 4, 1, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 9, 7, 4, 1, 6, 2, 8],) ,
('saved value', 7.372333785701647) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 9, 8, 4, 1, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 9, 8, 4, 1, 6, 7, 2],) ,
('saved value', 8.416938967281629) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 1) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 1, ',', 4, '-', 4) ,
('Swap gain:', -3.6219057025428483) ,
([0, 9, 2, 1, 4, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 4, 6, 7, 8],) ,
('saved value', 9.750428083158798) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 9, 2, 6, 1, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 6, 1, 4, 7, 8],) ,
('saved value', 9.372333785701647) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 9, 2, 7, 1, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 7, 1, 6, 4, 8],) ,
('saved value', 9.372333785701647) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -6.0) ,
([0, 9, 2, 8, 1, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 9, 2, 8, 1, 6, 7, 4],) ,
('saved value', 7.372333785701647) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 1, ',', 5, '-', 6) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -0.49369574117306536) ,
([0, 9, 2, 4, 6, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 6, 1, 7, 8],) ,
('saved value', 12.878638044528582) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 1, ',', 6, '-', 7) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -2.6219057025428483) ,
([0, 9, 2, 4, 7, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 7, 6, 1, 8],) ,
('saved value', 10.750428083158798) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 1, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -2.4936957411730654) ,
([0, 9, 2, 4, 8, 6, 7, 1],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 8, 6, 7, 1],) ,
('saved value', 10.878638044528582) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -3.0000000000000018) ,
([0, 9, 2, 4, 1, 7, 6, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 7, 6, 8],) ,
('saved value', 10.372333785701645) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -2.0) ,
([0, 9, 2, 4, 1, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 8, 7, 6],) ,
('saved value', 11.372333785701647) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 9, 2, 4, 1, 6, 8, 7],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 6, 8, 7],) ,
('saved value', 8.372333785701647) ,
('Use move gain',) ,
('Original mapping', [0, 9, 2, 4, 1, 6, 7, 8]) ,
('Current mapping', [0, 9, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 1.3780942974571513) ,
('Update triple match number to:', 14.750428083158798) ,
('Current mapping:', [0, 9, 2, 4, 5, 6, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 1) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([1, 9, 2, 4, 5, 6, 7, 8],) ,
('saved value', 11.750428083158798) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([3, 9, 2, 4, 5, 6, 7, 8],) ,
('saved value', 11.750428083158798) ,
('Remap node', 1, 'from ', 9, 'to', 1) ,
('Move gain:', 1.2495719168412016) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 16.0) ,
('Remap node', 1, 'from ', 9, 'to', 3) ,
('Move gain:', -0.7504280831587984) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 2, 'from ', 2, 'to', 1) ,
('Move gain:', -3.3780942974571517) ,
('Computing match for mapping',) ,
([0, 9, 1, 4, 5, 6, 7, 8],) ,
('saved value', 11.372333785701647) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 9, 3, 4, 5, 6, 7, 8],) ,
('saved value', 10.750428083158798) ,
('Remap node', 3, 'from ', 4, 'to', 1) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 1, 5, 6, 7, 8],) ,
('saved value', 11.750428083158798) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 3, 5, 6, 7, 8],) ,
('saved value', 11.750428083158798) ,
('Remap node', 4, 'from ', 5, 'to', 1) ,
('Move gain:', -1.3780942974571513) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 1, 6, 7, 8],) ,
('saved value', 13.372333785701647) ,
('Remap node', 4, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 3, 6, 7, 8],) ,
('saved value', 12.750428083158798) ,
('Remap node', 5, 'from ', 6, 'to', 1) ,
('Move gain:', -1.3940926294202072) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 1, 7, 8],) ,
('saved value', 13.356335453738591) ,
('Remap node', 5, 'from ', 6, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 3, 7, 8],) ,
('saved value', 12.750428083158798) ,
('Remap node', 6, 'from ', 7, 'to', 1) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 6, 1, 8],) ,
('saved value', 12.750428083158798) ,
('Remap node', 6, 'from ', 7, 'to', 3) ,
('Move gain:', -1.7470828143058867) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 6, 3, 8],) ,
('saved value', 13.003345268852911) ,
('Remap node', 7, 'from ', 8, 'to', 1) ,
('Move gain:', -2.394092629420208) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 6, 7, 1],) ,
('saved value', 12.356335453738591) ,
('Remap node', 7, 'from ', 8, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 6, 7, 3],) ,
('saved value', 11.750428083158798) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 9) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 9, ',', 1, '-', 0) ,
('Swap gain:', -3.750428083158799) ,
([9, 0, 2, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([9, 0, 2, 4, 5, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -6.0) ,
([2, 9, 0, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 9, 0, 4, 5, 6, 7, 8],) ,
('saved value', 8.750428083158798) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -6.0) ,
([4, 9, 2, 0, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 9, 2, 0, 5, 6, 7, 8],) ,
('saved value', 8.750428083158798) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([5, 9, 2, 4, 0, 6, 7, 8],) ,
('Computing match for mapping',) ,
([5, 9, 2, 4, 0, 6, 7, 8],) ,
('saved value', 9.750428083158798) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -5.0) ,
([6, 9, 2, 4, 5, 0, 7, 8],) ,
('Computing match for mapping',) ,
([6, 9, 2, 4, 5, 0, 7, 8],) ,
('saved value', 9.750428083158798) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -4.429335590256269) ,
([7, 9, 2, 4, 5, 6, 0, 8],) ,
('Computing match for mapping',) ,
([7, 9, 2, 4, 5, 6, 0, 8],) ,
('saved value', 10.32109249290253) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -6.0) ,
([8, 9, 2, 4, 5, 6, 7, 0],) ,
('Computing match for mapping',) ,
([8, 9, 2, 4, 5, 6, 7, 0],) ,
('saved value', 8.750428083158798) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 9, ',', 2, '-', 2) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 9) ,
('Swap gain:', -4.128522380615951) ,
([0, 2, 9, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 9, 4, 5, 6, 7, 8],) ,
('saved value', 10.621905702542847) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 9, ',', 3, '-', 4) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 9) ,
('Swap gain:', -3.750428083158799) ,
([0, 4, 2, 9, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 9, 5, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 9, ',', 4, '-', 5) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 9) ,
('Swap gain:', -2.1285223806159506) ,
([0, 5, 2, 4, 9, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 9, 6, 7, 8],) ,
('saved value', 12.621905702542847) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 9, ',', 5, '-', 6) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 9) ,
('Swap gain:', -1.6266165181156484) ,
([0, 6, 2, 4, 5, 9, 7, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 9, 7, 8],) ,
('saved value', 13.12381156504315) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 9, ',', 6, '-', 7) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 9) ,
('Swap gain:', -2.750428083158799) ,
([0, 7, 2, 4, 5, 6, 9, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 6, 9, 8],) ,
('saved value', 12.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 9, ',', 7, '-', 8) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 9) ,
('Swap gain:', -2.626616518115649) ,
([0, 8, 2, 4, 5, 6, 7, 9],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 5, 6, 7, 9],) ,
('saved value', 12.12381156504315) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 9, 4, 2, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 4, 2, 5, 6, 7, 8],) ,
('saved value', 8.750428083158798) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 9, 5, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 5, 4, 2, 6, 7, 8],) ,
('saved value', 11.750428083158798) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 9, 6, 4, 5, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 6, 4, 5, 2, 7, 8],) ,
('saved value', 9.79503326473878) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 9, 7, 4, 5, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 9, 7, 4, 5, 6, 2, 8],) ,
('saved value', 8.750428083158798) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 9, 8, 4, 5, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 9, 8, 4, 5, 6, 7, 2],) ,
('saved value', 9.79503326473878) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 9, 2, 5, 4, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 5, 4, 6, 7, 8],) ,
('saved value', 9.750428083158798) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 9, 2, 6, 5, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 6, 5, 4, 7, 8],) ,
('saved value', 9.750428083158798) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 9, 2, 7, 5, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 7, 5, 6, 4, 8],) ,
('saved value', 10.750428083158798) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -6.0) ,
([0, 9, 2, 8, 5, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 9, 2, 8, 5, 6, 7, 4],) ,
('saved value', 8.750428083158798) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -1.9553948184200183) ,
([0, 9, 2, 4, 6, 5, 7, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 6, 5, 7, 8],) ,
('saved value', 12.79503326473878) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 9, 2, 4, 7, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 7, 6, 5, 8],) ,
('saved value', 10.750428083158798) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 8) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -3.955394818420018) ,
([0, 9, 2, 4, 8, 6, 7, 5],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 8, 6, 7, 5],) ,
('saved value', 10.79503326473878) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 9, 2, 4, 5, 7, 6, 8],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 7, 6, 8],) ,
('saved value', 10.750428083158798) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -3.0) ,
([0, 9, 2, 4, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 8, 7, 6],) ,
('saved value', 11.750428083158798) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 9, 2, 4, 5, 6, 8, 7],) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 6, 8, 7],) ,
('saved value', 9.750428083158798) ,
('Use move gain',) ,
('Original mapping', [0, 9, 2, 4, 5, 6, 7, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 1.2495719168412016) ,
('Update triple match number to:', 16.0) ,
('Current mapping:', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([3, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 0, 'from ', 0, 'to', 9) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([9, 1, 2, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3, 2, 4, 5, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 1, 'from ', 1, 'to', 9) ,
('Move gain:', -1.2495719168412016) ,
('Computing match for mapping',) ,
([0, 9, 2, 4, 5, 6, 7, 8],) ,
('saved value', 14.750428083158798) ,
('Remap node', 2, 'from ', 2, 'to', 3) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 1, 3, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 2, 'from ', 2, 'to', 9) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([0, 1, 9, 4, 5, 6, 7, 8],) ,
('saved value', 12.0) ,
('Remap node', 3, 'from ', 4, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3, 5, 6, 7, 8],) ,
('saved value', 13.0) ,
('Remap node', 3, 'from ', 4, 'to', 9) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 9, 5, 6, 7, 8],) ,
('saved value', 13.0) ,
('Remap node', 4, 'from ', 5, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 3, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 4, 'from ', 5, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 9, 6, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 5, 'from ', 6, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 3, 7, 8],) ,
('saved value', 14.0) ,
('Remap node', 5, 'from ', 6, 'to', 9) ,
('Move gain:', -1.4820958055366429) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 9, 7, 8],) ,
('saved value', 14.517904194463357) ,
('Remap node', 6, 'from ', 7, 'to', 3) ,
('Move gain:', -1.7470828143058874) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 3, 8],) ,
('saved value', 14.252917185694113) ,
('Remap node', 6, 'from ', 7, 'to', 9) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 9, 8],) ,
('saved value', 14.0) ,
('Remap node', 7, 'from ', 8, 'to', 3) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 3],) ,
('saved value', 13.0) ,
('Remap node', 7, 'from ', 8, 'to', 9) ,
('Move gain:', -2.482095805536641) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 7, 9],) ,
('saved value', 13.517904194463359) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([1, 0, 2, 4, 5, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -7.0) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([2, 1, 0, 4, 5, 6, 7, 8],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 4, ',', 3, '-', 0) ,
('Swap gain:', -7.0) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([4, 1, 2, 0, 5, 6, 7, 8],) ,
('saved value', 9.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 5, ',', 4, '-', 0) ,
('Swap gain:', -6.0) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('Computing match for mapping',) ,
([5, 1, 2, 4, 0, 6, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 5) ,
('Before swapping:', 0, '-', 0, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 6, ',', 5, '-', 0) ,
('Swap gain:', -6.0) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('Computing match for mapping',) ,
([6, 1, 2, 4, 5, 0, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 0, 'and', 6) ,
('Before swapping:', 0, '-', 0, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 7, ',', 6, '-', 0) ,
('Swap gain:', -5.429335590256269) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('Computing match for mapping',) ,
([7, 1, 2, 4, 5, 6, 0, 8],) ,
('saved value', 10.570664409743731) ,
('Swap node', 0, 'and', 7) ,
('Before swapping:', 0, '-', 0, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 0, '-', 8, ',', 7, '-', 0) ,
('Swap gain:', -7.0) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('Computing match for mapping',) ,
([8, 1, 2, 4, 5, 6, 7, 0],) ,
('saved value', 9.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.756188594914303) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 2, 1, 4, 5, 6, 7, 8],) ,
('saved value', 11.243811405085697) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 4, ',', 3, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 4, 2, 1, 5, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 5, ',', 4, '-', 1) ,
('Swap gain:', -2.7561885949143026) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 5, 2, 4, 1, 6, 7, 8],) ,
('saved value', 13.243811405085697) ,
('Swap node', 1, 'and', 5) ,
('Before swapping:', 1, '-', 1, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 6, ',', 5, '-', 1) ,
('Swap gain:', -2.788185258840416) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('Computing match for mapping',) ,
([0, 6, 2, 4, 5, 1, 7, 8],) ,
('saved value', 13.211814741159584) ,
('Swap node', 1, 'and', 6) ,
('Before swapping:', 1, '-', 1, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 7, ',', 6, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('Computing match for mapping',) ,
([0, 7, 2, 4, 5, 6, 1, 8],) ,
('saved value', 12.0) ,
('Swap node', 1, 'and', 7) ,
('Before swapping:', 1, '-', 1, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 1, '-', 8, ',', 7, '-', 1) ,
('Swap gain:', -3.788185258840416) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('Computing match for mapping',) ,
([0, 8, 2, 4, 5, 6, 7, 1],) ,
('saved value', 12.211814741159584) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 4) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 4, ',', 3, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 4, 2, 5, 6, 7, 8],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 5, ',', 4, '-', 2) ,
('Swap gain:', -3.0) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 5, 4, 2, 6, 7, 8],) ,
('saved value', 13.0) ,
('Swap node', 2, 'and', 5) ,
('Before swapping:', 2, '-', 2, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 6, ',', 5, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 6, 4, 5, 2, 7, 8],) ,
('saved value', 11.044605181579982) ,
('Swap node', 2, 'and', 6) ,
('Before swapping:', 2, '-', 2, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 7, ',', 6, '-', 2) ,
('Swap gain:', -6.0) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('Computing match for mapping',) ,
([0, 1, 7, 4, 5, 6, 2, 8],) ,
('saved value', 10.0) ,
('Swap node', 2, 'and', 7) ,
('Before swapping:', 2, '-', 2, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 2, '-', 8, ',', 7, '-', 2) ,
('Swap gain:', -4.955394818420018) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('Computing match for mapping',) ,
([0, 1, 8, 4, 5, 6, 7, 2],) ,
('saved value', 11.044605181579982) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', 4, ',', 4, '-', 5) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 5, ',', 4, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 5, 4, 6, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 5) ,
('Before swapping:', 3, '-', 4, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 6, ',', 5, '-', 4) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 6, 5, 4, 7, 8],) ,
('saved value', 11.0) ,
('Swap node', 3, 'and', 6) ,
('Before swapping:', 3, '-', 4, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 7, ',', 6, '-', 4) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 7, 5, 6, 4, 8],) ,
('saved value', 12.0) ,
('Swap node', 3, 'and', 7) ,
('Before swapping:', 3, '-', 4, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 3, '-', 8, ',', 7, '-', 4) ,
('Swap gain:', -6.0) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('Computing match for mapping',) ,
([0, 1, 2, 8, 5, 6, 7, 4],) ,
('saved value', 10.0) ,
('Swap node', 4, 'and', 5) ,
('Before swapping:', 4, '-', 5, ',', 5, '-', 6) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 6, ',', 5, '-', 5) ,
('Swap gain:', -1.955394818420018) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 6, 5, 7, 8],) ,
('saved value', 14.044605181579982) ,
('Swap node', 4, 'and', 6) ,
('Before swapping:', 4, '-', 5, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 7, ',', 6, '-', 5) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 7, 6, 5, 8],) ,
('saved value', 12.0) ,
('Swap node', 4, 'and', 7) ,
('Before swapping:', 4, '-', 5, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 4, '-', 8, ',', 7, '-', 5) ,
('Swap gain:', -3.955394818420018) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 8, 6, 7, 5],) ,
('saved value', 12.044605181579982) ,
('Swap node', 5, 'and', 6) ,
('Before swapping:', 5, '-', 6, ',', 6, '-', 7) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 7, ',', 6, '-', 6) ,
('Swap gain:', -4.0) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 7, 6, 8],) ,
('saved value', 12.0) ,
('Swap node', 5, 'and', 7) ,
('Before swapping:', 5, '-', 6, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 5, '-', 8, ',', 7, '-', 6) ,
('Swap gain:', -3.0) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 8, 7, 6],) ,
('saved value', 13.0) ,
('Swap node', 6, 'and', 7) ,
('Before swapping:', 6, '-', 7, ',', 7, '-', 8) ,
([0, 1, 2, 4, 5, 6, 7, 8],) ,
('After swapping:', 6, '-', 8, ',', 7, '-', 7) ,
('Swap gain:', -5.0) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('Computing match for mapping',) ,
([0, 1, 2, 4, 5, 6, 8, 7],) ,
('saved value', 11.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Current mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 16.0) ,
('best node mapping', [0, 1, 2, 4, 5, 6, 7, 8]) ,
('Best node mapping alignment:', 'a0(marry-01)-b0(marry-01) a1(he)-b1(he) a2(person)-b2(person) a3(have-rel-role-91)-b4(have-rel-role-91) a4(person)-b5(person) a5(name)-b6(name) a6(widow)-b7(widow) a7(name)-b8(name)') ,
('F-score:', 0.761904761904762) ,
Smatch score F1 0.762
('AMR pair', 18) ,
('============================================',) ,
('AMR 1 (one-line):', '(c0 / cruise-01:ARG0 (c1 / cat:mod (y0 / young)))') ,
('AMR 2 (one-line):', '(r0 / run-02:ARG0 (k0 / kitten):ARG1-of (f0 / fast-02))') ,
('Instance triples of AMR 1:', 3) ,
([('instance', 'a0', 'cruise-01'), ('instance', 'a1', 'cat'), ('instance', 'a2', 'young')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'cruise-01')],) ,
('Relation triples of AMR 1:', 2) ,
([('ARG0', 'a0', 'a1'), ('mod', 'a1', 'a2')],) ,
('Instance triples of AMR 2:', 3) ,
([('instance', 'b0', 'run-02'), ('instance', 'b1', 'kitten'), ('instance', 'b2', 'fast-02')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'run-02')],) ,
('Relation triples of AMR 2:', 2) ,
([('ARG0', 'b0', 'b1'), ('ARG1', 'b2', 'b0')],) ,
('Similarity', 'cruise-01', 'run-02', 0.0) ,
('Similarity', 'cruise-01', 'kitten', 0.0) ,
('Similarity', 'cruise-01', 'fast-02', 0.0) ,
('Similarity', 'cat', 'run-02', 0.0) ,
('Similarity', 'cat', 'kitten', 0.5580501995034879) ,
('Similarity', 'cat', 'fast-02', 0.0) ,
('Similarity', 'young', 'run-02', 0.0) ,
('Similarity', 'young', 'kitten', 0.0) ,
('Similarity', 'young', 'fast-02', 0.0) ,
('Candidate mappings:',) ,
([{0, 1, 2}, {0, 1, 2}, {0, 1, 2}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.0, (1, 1): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 0.5580501995034879, (0, 0): 1}, (1, 2): {-1: 0.0}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.0}, (2, 2): {-1: 0.0}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.5580501995034879) ,
('node_pair', (2, 0)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.5580501995034879) ,
('Node mapping at start', [2, 1, 0]) ,
('Triple match number at start:', 0.5580501995034879) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 0],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -0.5580501995034879) ,
([1, 2, 0],) ,
('Computing match for mapping',) ,
([1, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 1, 0],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 1.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 0) ,
([2, 1, 0],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', -0.5580501995034879) ,
([2, 0, 1],) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [2, 1, 0]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 1.5580501995034879) ,
('Current mapping:', [0, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.5580501995034879) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([1, 2, 0],) ,
('saved value', 0.0) ,
('Node mapping at start', [1, 2, 0]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 0],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', 0.5580501995034879) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 0) ,
([1, 2, 0],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 0) ,
([1, 2, 0],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 2, 0]) ,
('Current mapping', [2, 1, 0]) ,
('Gain after the hill-climbing', 0.5580501995034879) ,
('Update triple match number to:', 0.5580501995034879) ,
('Current mapping:', [2, 1, 0]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 0],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -0.5580501995034879) ,
([1, 2, 0],) ,
('Computing match for mapping',) ,
([1, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 1, 0],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 1.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 0) ,
([2, 1, 0],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', -0.5580501995034879) ,
([2, 0, 1],) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [2, 1, 0]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 1.5580501995034879) ,
('Current mapping:', [0, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.5580501995034879) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.0) ,
('Node mapping at start', [0, 2, 1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 0, 1],) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 2, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([1, 2, 0],) ,
('Computing match for mapping',) ,
([1, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([0, 2, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 1.5580501995034879) ,
([0, 1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 1.5580501995034879) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 1]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 1.5580501995034879) ,
('Update triple match number to:', 1.5580501995034879) ,
('Current mapping:', [0, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.5580501995034879) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 1.5580501995034879) ,
('Node mapping at start', [0, 1, 2]) ,
('Triple match number at start:', 1.5580501995034879) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.5580501995034879) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('saved value', 0.0) ,
('Node mapping at start', [2, 0, 1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', 0.5580501995034879) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0.5580501995034879) ,
('Use swap gain',) ,
('Original mapping', [2, 0, 1]) ,
('Current mapping', [2, 1, 0]) ,
('Gain after the hill-climbing', 0.5580501995034879) ,
('Update triple match number to:', 0.5580501995034879) ,
('Current mapping:', [2, 1, 0]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 0],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -0.5580501995034879) ,
([1, 2, 0],) ,
('Computing match for mapping',) ,
([1, 2, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 1, 0],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([0, 1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 1.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 0) ,
([2, 1, 0],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', -0.5580501995034879) ,
([2, 0, 1],) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [2, 1, 0]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 1.5580501995034879) ,
('Current mapping:', [0, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.5580501995034879) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 1.5580501995034879) ,
('best node mapping', [0, 1, 2]) ,
('Best node mapping alignment:', 'a0(cruise-01)-b0(run-02) a1(cat)-b1(kitten) a2(young)-b2(fast-02)') ,
('F-score:', 0.25967503325058133) ,
Smatch score F1 0.260
('AMR pair', 19) ,
('============================================',) ,
('AMR 1 (one-line):', '(c0 / cruise-01:ARG0 (c1 / cat:mod (y0 / young)))') ,
('AMR 2 (one-line):', '(r0 / run-02:ARG0 (k0 / kitten))') ,
('Instance triples of AMR 1:', 3) ,
([('instance', 'a0', 'cruise-01'), ('instance', 'a1', 'cat'), ('instance', 'a2', 'young')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'cruise-01')],) ,
('Relation triples of AMR 1:', 2) ,
([('ARG0', 'a0', 'a1'), ('mod', 'a1', 'a2')],) ,
('Instance triples of AMR 2:', 2) ,
([('instance', 'b0', 'run-02'), ('instance', 'b1', 'kitten')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'run-02')],) ,
('Relation triples of AMR 2:', 1) ,
([('ARG0', 'b0', 'b1')],) ,
('Similarity', 'cruise-01', 'run-02', 0.0) ,
('Similarity', 'cruise-01', 'kitten', 0.0) ,
('Similarity', 'cat', 'run-02', 0.0) ,
('Similarity', 'cat', 'kitten', 0.5580501995034879) ,
('Similarity', 'young', 'run-02', 0.0) ,
('Similarity', 'young', 'kitten', 0.0) ,
('Candidate mappings:',) ,
([{0, 1}, {0, 1}, {0, 1}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.0, (1, 1): 1}, (0, 1): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 0.5580501995034879, (0, 0): 1}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.0}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('node_pair', (0, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 0)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [1, 0, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 1.5580501995034879) ,
([0, 1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1.5580501995034879) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 0, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, 0],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 1.5580501995034879) ,
('Update triple match number to:', 1.5580501995034879) ,
('Current mapping:', [0, 1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.5580501995034879) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Node mapping at start', [1, 0, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 1.5580501995034879) ,
([0, 1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1.5580501995034879) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 0, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, 0],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 1.5580501995034879) ,
('Update triple match number to:', 1.5580501995034879) ,
('Current mapping:', [0, 1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.5580501995034879) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Node mapping at start', [1, 0, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 1.5580501995034879) ,
([0, 1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1.5580501995034879) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 0, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, 0],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 1.5580501995034879) ,
('Update triple match number to:', 1.5580501995034879) ,
('Current mapping:', [0, 1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.5580501995034879) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Node mapping at start', [1, 0, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 1.5580501995034879) ,
([0, 1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1.5580501995034879) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 0, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, 0],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 1.5580501995034879) ,
('Update triple match number to:', 1.5580501995034879) ,
('Current mapping:', [0, 1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.5580501995034879) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1.5580501995034879) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1.5580501995034879) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.5580501995034879) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 1.5580501995034879) ,
('best node mapping', [0, 1, -1]) ,
('Best node mapping alignment:', 'a0(cruise-01)-b0(run-02) a1(cat)-b1(kitten) a2(young)-Null') ,
('F-score:', 0.31161003990069763) ,
Smatch score F1 0.312
('AMR pair', 20) ,
('============================================',) ,
('AMR 1 (one-line):', '(c0 / consider-01:ARG1 (s0 / skip-01:ARG0 h0:ARG1 (w0 / work-01:ARG0 h0)):ARG0 (h0 / he))') ,
('AMR 2 (one-line):', '(c0 / consider-02:ARG1 (s0 / skip-01:ARG1 (w0 / work-01)):ARG0 (h0 / he))') ,
('Instance triples of AMR 1:', 4) ,
([('instance', 'a0', 'consider-01'), ('instance', 'a1', 'skip-01'), ('instance', 'a2', 'work-01'), ('instance', 'a3', 'he')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'consider-01')],) ,
('Relation triples of AMR 1:', 5) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a3'), ('ARG1', 'a1', 'a2'), ('ARG0', 'a1', 'a3'), ('ARG0', 'a2', 'a3')],) ,
('Instance triples of AMR 2:', 4) ,
([('instance', 'b0', 'consider-02'), ('instance', 'b1', 'skip-01'), ('instance', 'b2', 'work-01'), ('instance', 'b3', 'he')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'consider-02')],) ,
('Relation triples of AMR 2:', 3) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b3'), ('ARG1', 'b1', 'b2')],) ,
('Similarity', 'consider-01', 'consider-02', 0.5) ,
('Similarity', 'consider-01', 'skip-01', 0.0) ,
('Similarity', 'consider-01', 'work-01', 0.0) ,
('Similarity', 'consider-01', 'he', 0.0) ,
('Similarity', 'skip-01', 'consider-02', 0.0) ,
('Similarity', 'skip-01', 'skip-01', 1.0) ,
('Similarity', 'skip-01', 'work-01', 0.0) ,
('Similarity', 'skip-01', 'he', 0.0) ,
('Similarity', 'work-01', 'consider-02', 0.0) ,
('Similarity', 'work-01', 'work-01', 1.0) ,
('Similarity', 'work-01', 'he', 0.323407246372009) ,
('Similarity', 'he', 'consider-02', 0.0) ,
('Similarity', 'he', 'he', 1.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3}, {0, 1, 2, 3}, {0, 1, 2, 3}, {0, 1, 2, 3}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.5, (1, 1): 1, (3, 3): 1}, (0, 1): {-1: 0.0, (1, 2): 1}, (0, 2): {-1: 0.0}, (0, 3): {-1: 0.0}, (1, 0): {-1: 0.0, (2, 1): 1, (3, 3): 1}, (1, 1): {-1: 1.0, (0, 0): 1, (2, 2): 1}, (1, 2): {-1: 0.0, (0, 1): 1}, (1, 3): {-1: 0.0}, (2, 0): {-1: 0.0, (3, 3): 1}, (2, 1): {-1: 0.0, (1, 0): 1}, (2, 2): {-1: 1.0, (1, 1): 1}, (2, 3): {-1: 0.323407246372009}, (3, 0): {-1: 0.0}, (3, 1): {-1: 0.0}, (3, 2): {-1: 0.323407246372009}, (3, 3): {-1: 1.0, (0, 0): 1, (1, 0): 1, (2, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2, 3],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0.5) ,
('relation match with', (1, 1), 1) ,
('relation match with', (3, 3), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('relation match with', (2, 2), 1) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1.0) ,
('node_pair', (3, 3)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 6.5) ,
('Node mapping at start', [0, 1, 2, 3]) ,
('Triple match number at start:', 6.5) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.5) ,
([1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.5) ,
([2, 1, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.5) ,
([3, 1, 2, 0],) ,
('Computing match for mapping',) ,
([3, 1, 2, 0],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, 3],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 2.5) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -5.0) ,
([0, 3, 2, 1],) ,
('Computing match for mapping',) ,
([0, 3, 2, 1],) ,
('saved value', 1.5) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', 3) ,
([0, 1, 2, 3],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -3.353185507255982) ,
([0, 1, 3, 2],) ,
('Computing match for mapping',) ,
([0, 1, 3, 2],) ,
('saved value', 3.146814492744018) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2, 3]) ,
('Current mapping', [0, 1, 2, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (3, 0)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [2, 3, 1, 0]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 3) ,
([2, 3, 1, 0],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 2, 1, 0],) ,
('Computing match for mapping',) ,
([3, 2, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 3, 1, 0],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([1, 3, 2, 0],) ,
('Computing match for mapping',) ,
([1, 3, 2, 0],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 0) ,
([2, 3, 1, 0],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', 0.823407246372009) ,
([0, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2],) ,
('saved value', 0.823407246372009) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([2, 3, 1, 0],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', 1.323407246372009) ,
([2, 1, 3, 0],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0],) ,
('saved value', 1.323407246372009) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 0) ,
([2, 3, 1, 0],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', 3.0) ,
([2, 0, 1, 3],) ,
('Computing match for mapping',) ,
([2, 0, 1, 3],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 0) ,
([2, 3, 1, 0],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([2, 3, 0, 1],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [2, 3, 1, 0]) ,
('Current mapping', [2, 0, 1, 3]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 3.0) ,
('Current mapping:', [2, 0, 1, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0, 1, 3],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', -0.5) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 2.5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 0, 1, 3],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 3) ,
([2, 0, 1, 3],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -1.676592753627991) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 1.323407246372009) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([2, 0, 1, 3],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 1, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 3) ,
([2, 0, 1, 3],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 3) ,
([2, 0, 1, 3],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.676592753627991) ,
([2, 0, 3, 1],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1],) ,
('saved value', 0.323407246372009) ,
('no move/swap gain found',) ,
('Original mapping', [2, 0, 1, 3]) ,
('Current mapping', [2, 0, 1, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([2, 0, 1, 3],) ,
('saved value', 3.0) ,
('Node mapping at start', [2, 0, 1, 3]) ,
('Triple match number at start:', 3.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0, 1, 3],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', -0.5) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 2.5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 0, 1, 3],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 3) ,
([2, 0, 1, 3],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -1.676592753627991) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 1.323407246372009) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([2, 0, 1, 3],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 1, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 3) ,
([2, 0, 1, 3],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 3) ,
([2, 0, 1, 3],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.676592753627991) ,
([2, 0, 3, 1],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1],) ,
('saved value', 0.323407246372009) ,
('no move/swap gain found',) ,
('Original mapping', [2, 0, 1, 3]) ,
('Current mapping', [2, 0, 1, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 1.323407246372009) ,
('Node mapping at start', [3, 0, 1, 2]) ,
('Triple match number at start:', 1.323407246372009) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 0) ,
([3, 0, 1, 2],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 3) ,
('Swap gain:', -0.5) ,
([0, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2],) ,
('saved value', 0.823407246372009) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 1) ,
([3, 0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -0.676592753627991) ,
([1, 0, 3, 2],) ,
('Computing match for mapping',) ,
([1, 0, 3, 2],) ,
('saved value', 0.646814492744018) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 3, ',', 3, '-', 2) ,
([3, 0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 3) ,
('Swap gain:', 1.676592753627991) ,
([2, 0, 1, 3],) ,
('Computing match for mapping',) ,
([2, 0, 1, 3],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([3, 0, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([3, 1, 0, 2],) ,
('Computing match for mapping',) ,
([3, 1, 0, 2],) ,
('saved value', 1.323407246372009) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 2) ,
([3, 0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -1.323407246372009) ,
([3, 2, 1, 0],) ,
('Computing match for mapping',) ,
([3, 2, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([3, 0, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -0.323407246372009) ,
([3, 0, 2, 1],) ,
('Computing match for mapping',) ,
([3, 0, 2, 1],) ,
('saved value', 1.0) ,
('Use swap gain',) ,
('Original mapping', [3, 0, 1, 2]) ,
('Current mapping', [2, 0, 1, 3]) ,
('Gain after the hill-climbing', 1.676592753627991) ,
('Update triple match number to:', 3.0) ,
('Current mapping:', [2, 0, 1, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0, 1, 3],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', -0.5) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 2.5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 0, 1, 3],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 3) ,
([2, 0, 1, 3],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -1.676592753627991) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 1.323407246372009) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([2, 0, 1, 3],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 1, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 3) ,
([2, 0, 1, 3],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 3) ,
([2, 0, 1, 3],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.676592753627991) ,
([2, 0, 3, 1],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1],) ,
('saved value', 0.323407246372009) ,
('no move/swap gain found',) ,
('Original mapping', [2, 0, 1, 3]) ,
('Current mapping', [2, 0, 1, 3]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 0.0) ,
('Node mapping at start', [2, 3, 1, 0]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 3) ,
([2, 3, 1, 0],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 2, 1, 0],) ,
('Computing match for mapping',) ,
([3, 2, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 3, 1, 0],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 1.0) ,
([1, 3, 2, 0],) ,
('Computing match for mapping',) ,
([1, 3, 2, 0],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 0) ,
([2, 3, 1, 0],) ,
('After swapping:', 0, '-', 0, ',', 3, '-', 2) ,
('Swap gain:', 0.823407246372009) ,
([0, 3, 1, 2],) ,
('Computing match for mapping',) ,
([0, 3, 1, 2],) ,
('saved value', 0.823407246372009) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([2, 3, 1, 0],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', 1.323407246372009) ,
([2, 1, 3, 0],) ,
('Computing match for mapping',) ,
([2, 1, 3, 0],) ,
('saved value', 1.323407246372009) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 3, ',', 3, '-', 0) ,
([2, 3, 1, 0],) ,
('After swapping:', 1, '-', 0, ',', 3, '-', 3) ,
('Swap gain:', 3.0) ,
([2, 0, 1, 3],) ,
('Computing match for mapping',) ,
([2, 0, 1, 3],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 0) ,
([2, 3, 1, 0],) ,
('After swapping:', 2, '-', 0, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([2, 3, 0, 1],) ,
('Computing match for mapping',) ,
([2, 3, 0, 1],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [2, 3, 1, 0]) ,
('Current mapping', [2, 0, 1, 3]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 3.0) ,
('Current mapping:', [2, 0, 1, 3]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0, 1, 3],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', -0.5) ,
([0, 2, 1, 3],) ,
('Computing match for mapping',) ,
([0, 2, 1, 3],) ,
('saved value', 2.5) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 0, 1, 3],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 0, 2, 3],) ,
('Computing match for mapping',) ,
([1, 0, 2, 3],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', 3) ,
([2, 0, 1, 3],) ,
('After swapping:', 0, '-', 3, ',', 3, '-', 2) ,
('Swap gain:', -1.676592753627991) ,
([3, 0, 1, 2],) ,
('Computing match for mapping',) ,
([3, 0, 1, 2],) ,
('saved value', 1.323407246372009) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([2, 0, 1, 3],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([2, 1, 0, 3],) ,
('Computing match for mapping',) ,
([2, 1, 0, 3],) ,
('saved value', 3.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', 3) ,
([2, 0, 1, 3],) ,
('After swapping:', 1, '-', 3, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([2, 3, 1, 0],) ,
('Computing match for mapping',) ,
([2, 3, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 3) ,
([2, 0, 1, 3],) ,
('After swapping:', 2, '-', 3, ',', 3, '-', 1) ,
('Swap gain:', -2.676592753627991) ,
([2, 0, 3, 1],) ,
('Computing match for mapping',) ,
([2, 0, 3, 1],) ,
('saved value', 0.323407246372009) ,
('no move/swap gain found',) ,
('Original mapping', [2, 0, 1, 3]) ,
('Current mapping', [2, 0, 1, 3]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 6.5) ,
('best node mapping', [0, 1, 2, 3]) ,
('Best node mapping alignment:', 'a0(consider-01)-b0(consider-02) a1(skip-01)-b1(skip-01) a2(work-01)-b2(work-01) a3(he)-b3(he)') ,
('F-score:', 0.7222222222222223) ,
Smatch score F1 0.722
('AMR pair', 21) ,
('============================================',) ,
('AMR 1 (one-line):', '(i0 / impact-01:ARG1 (o0 / outcome):ARG0 (i1 / it))') ,
('AMR 2 (one-line):', '(a0 / affect-01:ARG1 (o0 / outcome):ARG0 (i0 / it))') ,
('Instance triples of AMR 1:', 3) ,
([('instance', 'a0', 'impact-01'), ('instance', 'a1', 'outcome'), ('instance', 'a2', 'it')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'impact-01')],) ,
('Relation triples of AMR 1:', 2) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a2')],) ,
('Instance triples of AMR 2:', 3) ,
([('instance', 'b0', 'affect-01'), ('instance', 'b1', 'outcome'), ('instance', 'b2', 'it')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'affect-01')],) ,
('Relation triples of AMR 2:', 2) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b2')],) ,
('Similarity', 'impact-01', 'affect-01', 0.3465298700084307) ,
('Similarity', 'impact-01', 'outcome', 0.0) ,
('Similarity', 'impact-01', 'it', 0.0) ,
('Similarity', 'outcome', 'affect-01', 0.0) ,
('Similarity', 'outcome', 'outcome', 1.0) ,
('Similarity', 'outcome', 'it', 0.0) ,
('Similarity', 'it', 'affect-01', 0.0) ,
('Similarity', 'it', 'it', 1.0) ,
('Candidate mappings:',) ,
([{0, 1, 2}, {0, 1, 2}, {0, 1, 2}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.3465298700084307, (1, 1): 1, (2, 2): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 1.0, (0, 0): 1}, (1, 2): {-1: 0.0}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.0}, (2, 2): {-1: 1.0, (0, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0.3465298700084307) ,
('relation match with', (1, 1), 1) ,
('relation match with', (2, 2), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 4.346529870008431) ,
('Node mapping at start', [0, 1, 2]) ,
('Triple match number at start:', 4.346529870008431) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.346529870008431) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.346529870008431) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.34652987000843094) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.34652987000843094) ,
('Node mapping at start', [0, 2, 1]) ,
('Triple match number at start:', 0.34652987000843094) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -0.3465298700084307) ,
([2, 0, 1],) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('saved value', 2.220446049250313e-16) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 2, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -0.3465298700084307) ,
([1, 2, 0],) ,
('Computing match for mapping',) ,
([1, 2, 0],) ,
('saved value', 2.220446049250313e-16) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([0, 2, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 4.0) ,
([0, 1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 4.346529870008431) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 1]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 4.0) ,
('Update triple match number to:', 4.346529870008431) ,
('Current mapping:', [0, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.346529870008431) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.346529870008431) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.34652987000843094) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.34652987000843094) ,
('Node mapping at start', [0, 2, 1]) ,
('Triple match number at start:', 0.34652987000843094) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -0.3465298700084307) ,
([2, 0, 1],) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('saved value', 2.220446049250313e-16) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 2, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -0.3465298700084307) ,
([1, 2, 0],) ,
('Computing match for mapping',) ,
([1, 2, 0],) ,
('saved value', 2.220446049250313e-16) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([0, 2, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 4.0) ,
([0, 1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 4.346529870008431) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 1]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 4.0) ,
('Update triple match number to:', 4.346529870008431) ,
('Current mapping:', [0, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.346529870008431) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.346529870008431) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.34652987000843094) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('saved value', 2.220446049250313e-16) ,
('Node mapping at start', [2, 0, 1]) ,
('Triple match number at start:', 2.220446049250313e-16) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', 0.3465298700084307) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.34652987000843094) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 0.9999999999999998) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 1) ,
([2, 0, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', 0.9999999999999998) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 1.0) ,
('Use swap gain',) ,
('Original mapping', [2, 0, 1]) ,
('Current mapping', [1, 0, 2]) ,
('Gain after the hill-climbing', 0.9999999999999998) ,
('Update triple match number to:', 1.0) ,
('Current mapping:', [1, 0, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, 2],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 3.346529870008431) ,
([0, 1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 4.346529870008431) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 2) ,
([1, 0, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -0.9999999999999998) ,
([2, 0, 1],) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('saved value', 2.220446049250313e-16) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 2) ,
([1, 0, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -0.9999999999999998) ,
([1, 2, 0],) ,
('Computing match for mapping',) ,
([1, 2, 0],) ,
('saved value', 2.220446049250313e-16) ,
('Use swap gain',) ,
('Original mapping', [1, 0, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 3.346529870008431) ,
('Update triple match number to:', 4.346529870008431) ,
('Current mapping:', [0, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.346529870008431) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.346529870008431) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.34652987000843094) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([1, 2, 0],) ,
('saved value', 2.220446049250313e-16) ,
('Node mapping at start', [1, 2, 0]) ,
('Triple match number at start:', 2.220446049250313e-16) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 0],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', 0.9999999999999998) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 0) ,
([1, 2, 0],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', 0.3465298700084307) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.34652987000843094) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 0) ,
([1, 2, 0],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 0.9999999999999998) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 1.0) ,
('Use swap gain',) ,
('Original mapping', [1, 2, 0]) ,
('Current mapping', [2, 1, 0]) ,
('Gain after the hill-climbing', 0.9999999999999998) ,
('Update triple match number to:', 1.0) ,
('Current mapping:', [2, 1, 0]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 0],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -0.9999999999999998) ,
([1, 2, 0],) ,
('Computing match for mapping',) ,
([1, 2, 0],) ,
('saved value', 2.220446049250313e-16) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 1, 0],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 3.346529870008431) ,
([0, 1, 2],) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 4.346529870008431) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 0) ,
([2, 1, 0],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', -0.9999999999999998) ,
([2, 0, 1],) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('saved value', 2.220446049250313e-16) ,
('Use swap gain',) ,
('Original mapping', [2, 1, 0]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 3.346529870008431) ,
('Update triple match number to:', 4.346529870008431) ,
('Current mapping:', [0, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.346529870008431) ,
([1, 0, 2],) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.346529870008431) ,
([2, 1, 0],) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -4.0) ,
([0, 2, 1],) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 0.34652987000843094) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, 2]) ,
('Current mapping', [0, 1, 2]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 4.346529870008431) ,
('best node mapping', [0, 1, 2]) ,
('Best node mapping alignment:', 'a0(impact-01)-b0(affect-01) a1(outcome)-b1(outcome) a2(it)-b2(it)') ,
('F-score:', 0.7244216450014052) ,
Smatch score F1 0.724
('AMR pair', 22) ,
('============================================',) ,
('AMR 1 (one-line):', '(h0 / hinder-01:ARG1 (i0 / it))') ,
('AMR 2 (one-line):', '(g0 / get-03:ARG1 (i0 / it:ARG1-of (c0 / control-01)):ARG2 (o0 / out-06:ARG1 i0:ARG2 c0))') ,
('Instance triples of AMR 1:', 2) ,
([('instance', 'a0', 'hinder-01'), ('instance', 'a1', 'it')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'hinder-01')],) ,
('Relation triples of AMR 1:', 1) ,
([('ARG1', 'a0', 'a1')],) ,
('Instance triples of AMR 2:', 4) ,
([('instance', 'b0', 'get-03'), ('instance', 'b1', 'it'), ('instance', 'b2', 'control-01'), ('instance', 'b3', 'out-06')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'get-03')],) ,
('Relation triples of AMR 2:', 5) ,
([('ARG1', 'b0', 'b1'), ('ARG2', 'b0', 'b3'), ('ARG1', 'b2', 'b1'), ('ARG1', 'b3', 'b1'), ('ARG2', 'b3', 'b2')],) ,
('Similarity', 'hinder-01', 'get-03', 0.0) ,
('Similarity', 'hinder-01', 'it', 0.0) ,
('Similarity', 'hinder-01', 'control-01', 0.0) ,
('Similarity', 'hinder-01', 'out-06', 0.0) ,
('Similarity', 'it', 'get-03', 0.3669826429534211) ,
('Similarity', 'it', 'it', 1.0) ,
('Similarity', 'it', 'control-01', 0.2894099561571377) ,
('Similarity', 'it', 'out-06', 0.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3}, {0, 1, 2, 3}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.0, (1, 1): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0, (1, 1): 1}, (0, 3): {-1: 0.0, (1, 1): 1}, (1, 0): {-1: 0.3669826429534211}, (1, 1): {-1: 1.0, (0, 0): 1, (0, 2): 1, (0, 3): 1}, (1, 2): {-1: 0.2894099561571377}, (1, 3): {-1: 0.0}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0.0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 2.0) ,
('Node mapping at start', [0, 1]) ,
('Triple match number at start:', 2.0) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 2.0) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 1],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -1.7105900438428623) ,
('Computing match for mapping',) ,
([0, 2],) ,
('saved value', 0.2894099561571377) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.633017357046579) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.3669826429534211) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 2.0) ,
('Node mapping at start', [0, 1]) ,
('Triple match number at start:', 2.0) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 2.0) ,
('Remap node', 0, 'from ', 0, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 1],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -1.7105900438428623) ,
('Computing match for mapping',) ,
([0, 2],) ,
('saved value', 0.2894099561571377) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([0, 3],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.633017357046579) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.3669826429534211) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([1, 3],) ,
('node_pair', (0, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [1, 3]) ,
('Triple match number at start:', 0.0) ,
('Remap node', 0, 'from ', 1, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 3],) ,
('saved value', 0.0) ,
('Remap node', 0, 'from ', 1, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 3],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 3, 'to', 0) ,
('Move gain:', 0.3669826429534211) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.3669826429534211) ,
('Remap node', 1, 'from ', 3, 'to', 2) ,
('Move gain:', 0.2894099561571377) ,
('Computing match for mapping',) ,
([1, 2],) ,
('saved value', 0.2894099561571377) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 3) ,
([1, 3],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 1) ,
('Swap gain:', 2.0) ,
([3, 1],) ,
('Computing match for mapping',) ,
([3, 1],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [1, 3]) ,
('Current mapping', [3, 1]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 2.0) ,
('Current mapping:', [3, 1]) ,
('Remap node', 0, 'from ', 3, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 2.0) ,
('Remap node', 0, 'from ', 3, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', -1.633017357046579) ,
('Computing match for mapping',) ,
([3, 0],) ,
('saved value', 0.3669826429534211) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -1.7105900438428623) ,
('Computing match for mapping',) ,
([3, 2],) ,
('saved value', 0.2894099561571377) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 1) ,
([3, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 3) ,
('Swap gain:', -2.0) ,
([1, 3],) ,
('Computing match for mapping',) ,
([1, 3],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [3, 1]) ,
('Current mapping', [3, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([3, 1],) ,
('saved value', 2.0) ,
('Node mapping at start', [3, 1]) ,
('Triple match number at start:', 2.0) ,
('Remap node', 0, 'from ', 3, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 2.0) ,
('Remap node', 0, 'from ', 3, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', -1.633017357046579) ,
('Computing match for mapping',) ,
([3, 0],) ,
('saved value', 0.3669826429534211) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -1.7105900438428623) ,
('Computing match for mapping',) ,
([3, 2],) ,
('saved value', 0.2894099561571377) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 1) ,
([3, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 3) ,
('Swap gain:', -2.0) ,
([1, 3],) ,
('Computing match for mapping',) ,
([1, 3],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [3, 1]) ,
('Current mapping', [3, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([1, 2],) ,
('saved value', 0.2894099561571377) ,
('Node mapping at start', [1, 2]) ,
('Triple match number at start:', 0.2894099561571377) ,
('Remap node', 0, 'from ', 1, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 2],) ,
('saved value', 0.2894099561571377) ,
('Remap node', 0, 'from ', 1, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 2],) ,
('saved value', 0.2894099561571377) ,
('Remap node', 1, 'from ', 2, 'to', 0) ,
('Move gain:', 0.07757268679628337) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.3669826429534211) ,
('Remap node', 1, 'from ', 2, 'to', 3) ,
('Move gain:', -0.2894099561571377) ,
('Computing match for mapping',) ,
([1, 3],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', 1.7105900438428623) ,
([2, 1],) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [1, 2]) ,
('Current mapping', [2, 1]) ,
('Gain after the hill-climbing', 1.7105900438428623) ,
('Update triple match number to:', 2.0) ,
('Current mapping:', [2, 1]) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 2.0) ,
('Remap node', 0, 'from ', 2, 'to', 3) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 1],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', -1.633017357046579) ,
('Computing match for mapping',) ,
([2, 0],) ,
('saved value', 0.3669826429534211) ,
('Remap node', 1, 'from ', 1, 'to', 3) ,
('Move gain:', -2.0) ,
('Computing match for mapping',) ,
([2, 3],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -1.7105900438428623) ,
([1, 2],) ,
('Computing match for mapping',) ,
([1, 2],) ,
('saved value', 0.2894099561571377) ,
('no move/swap gain found',) ,
('Original mapping', [2, 1]) ,
('Current mapping', [2, 1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 2.0) ,
('best node mapping', [0, 1]) ,
('Best node mapping alignment:', 'a0(hinder-01)-b0(get-03) a1(it)-b1(it)') ,
('F-score:', 0.28571428571428575) ,
Smatch score F1 0.286
('AMR pair', 23) ,
('============================================',) ,
('AMR 1 (one-line):', '(e0 / eat-01:ARG1 (f0 / fry:mod (c0 / country:name (n0 / name:op1 "France" ))):ARG0 (w0 / we))') ,
('AMR 2 (one-line):', '(e0 / eat-01:ARG1 (c0 / chip):ARG0 (w0 / we))') ,
('Instance triples of AMR 1:', 5) ,
([('instance', 'a0', 'eat-01'), ('instance', 'a1', 'fry'), ('instance', 'a2', 'country'), ('instance', 'a3', 'name'), ('instance', 'a4', 'we')],) ,
('Attribute triples of AMR 1:', 2) ,
([('TOP', 'a0', 'eat-01'), ('op1', 'a3', 'France_')],) ,
('Relation triples of AMR 1:', 4) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a4'), ('mod', 'a1', 'a2'), ('name', 'a2', 'a3')],) ,
('Instance triples of AMR 2:', 3) ,
([('instance', 'b0', 'eat-01'), ('instance', 'b1', 'chip'), ('instance', 'b2', 'we')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'eat-01')],) ,
('Relation triples of AMR 2:', 2) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b2')],) ,
('Similarity', 'eat-01', 'eat-01', 1.0) ,
('Similarity', 'eat-01', 'chip', 0.0) ,
('Similarity', 'eat-01', 'we', 0.0) ,
('Similarity', 'fry', 'eat-01', 0.0) ,
('Similarity', 'fry', 'chip', 0.0) ,
('Similarity', 'fry', 'we', 0.0) ,
('Similarity', 'country', 'eat-01', 0.0) ,
('Similarity', 'country', 'chip', 0.0) ,
('Similarity', 'country', 'we', 0.6547183562986972) ,
('Similarity', 'name', 'eat-01', 0.0) ,
('Similarity', 'name', 'chip', 0.0) ,
('Similarity', 'name', 'we', 0.0) ,
('Similarity', 'we', 'chip', 0.0) ,
('Similarity', 'we', 'we', 1.0) ,
('Candidate mappings:',) ,
([{0, 1, 2}, {0, 1, 2}, {0, 1, 2}, {0, 1, 2}, {0, 1, 2}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2.0, (1, 1): 1, (4, 2): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 0.0, (0, 0): 1}, (1, 2): {-1: 0.0}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.0}, (2, 2): {-1: 0.6547183562986972}, (3, 0): {-1: 0.0}, (3, 1): {-1: 0.0}, (3, 2): {-1: 0.0}, (4, 0): {-1: 0.0}, (4, 1): {-1: 0.0}, (4, 2): {-1: 1.0, (0, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2.0) ,
('relation match with', (1, 1), 1) ,
('relation match with', (4, 2), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (4, 2)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 5.0) ,
('Node mapping at start', [0, 1, -1, -1, 2]) ,
('Triple match number at start:', 5.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, -1, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, -1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, -1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, -1, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -1.3452816437013029) ,
([0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3.654718356298697) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, -1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1],) ,
('saved value', 3.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, -1, 2]) ,
('Current mapping', [0, 1, -1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([1, 2, 0, -1, -1],) ,
('node_pair', (0, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 0)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [1, 2, 0, -1, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 0, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', 0.0) ,
([2, 1, 0, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 0) ,
([1, 2, 0, -1, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', 2.0) ,
([0, 2, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1],) ,
('saved value', 2.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', -1) ,
([1, 2, 0, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 2, 0, 1, -1],) ,
('Computing match for mapping',) ,
([-1, 2, 0, 1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', -1) ,
([1, 2, 0, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 2, 0, -1, 1],) ,
('Computing match for mapping',) ,
([-1, 2, 0, -1, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 0) ,
([1, 2, 0, -1, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 0.6547183562986972) ,
([1, 0, 2, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1],) ,
('saved value', 0.6547183562986972) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', -1) ,
([1, 2, 0, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', 0.0) ,
([1, -1, 0, 2, -1],) ,
('Computing match for mapping',) ,
([1, -1, 0, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', -1) ,
([1, 2, 0, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', 1.0) ,
([1, -1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, -1, 0, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', -1) ,
([1, 2, 0, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([1, 2, -1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 2, -1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 0, ',', 4, '-', -1) ,
([1, 2, 0, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([1, 2, -1, -1, 0],) ,
('Computing match for mapping',) ,
([1, 2, -1, -1, 0],) ,
('saved value', 0.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([1, 2, 0, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([1, 2, 0, -1, -1],) ,
('Computing match for mapping',) ,
([1, 2, 0, -1, -1],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 2, 0, -1, -1]) ,
('Current mapping', [0, 2, 1, -1, -1]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 2.0) ,
('Current mapping:', [0, 2, 1, -1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 1, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -2.0) ,
([2, 0, 1, -1, -1],) ,
('Computing match for mapping',) ,
([2, 0, 1, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 2, 1, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([1, 2, 0, -1, -1],) ,
('Computing match for mapping',) ,
([1, 2, 0, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 2, 1, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 2, 1, 0, -1],) ,
('Computing match for mapping',) ,
([-1, 2, 1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 2, 1, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 2, 1, -1, 0],) ,
('Computing match for mapping',) ,
([-1, 2, 1, -1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([0, 2, 1, -1, -1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 1.6547183562986971) ,
([0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3.654718356298697) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', -1) ,
([0, 2, 1, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', 0.0) ,
([0, -1, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 2, ',', 4, '-', -1) ,
([0, 2, 1, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', 2.0) ,
([0, -1, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1, 2],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', -1) ,
([0, 2, 1, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, -1, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1, -1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', -1) ,
([0, 2, 1, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, -1, 1],) ,
('saved value', 2.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([0, 2, 1, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 2, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 1, -1, -1]) ,
('Current mapping', [0, -1, 1, -1, 2]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [0, -1, 1, -1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', -1) ,
([0, -1, 1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 0, 1, -1, 2],) ,
('Computing match for mapping',) ,
([-1, 0, 1, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, -1, 1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([1, -1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, -1, 0, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, -1, 1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, -1, 1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, -1, 1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, -1, 1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -4.0) ,
([2, -1, 1, -1, 0],) ,
('Computing match for mapping',) ,
([2, -1, 1, -1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', 1) ,
([0, -1, 1, -1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', -1) ,
('Swap gain:', 1.0) ,
([0, 1, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', -1, ',', 3, '-', -1) ,
([0, -1, 1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, -1, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', -1, ',', 4, '-', 2) ,
([0, -1, 1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 2, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', -1) ,
([0, -1, 1, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([0, -1, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 1, ',', 4, '-', 2) ,
([0, -1, 1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -1.3452816437013029) ,
([0, -1, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, -1, 1],) ,
('saved value', 2.654718356298697) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 2) ,
([0, -1, 1, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2.0) ,
([0, -1, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2, -1],) ,
('saved value', 2.0) ,
('Use swap gain',) ,
('Original mapping', [0, -1, 1, -1, 2]) ,
('Current mapping', [0, 1, -1, -1, 2]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 5.0) ,
('Current mapping:', [0, 1, -1, -1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, -1, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, -1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, -1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, -1, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -1.3452816437013029) ,
([0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3.654718356298697) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, -1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1],) ,
('saved value', 3.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, -1, 2]) ,
('Current mapping', [0, 1, -1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3.654718356298697) ,
('Node mapping at start', [0, 1, 2, -1, -1]) ,
('Triple match number at start:', 3.654718356298697) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 0, 2, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1],) ,
('saved value', 0.6547183562986972) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.654718356298697) ,
([2, 1, 0, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, -1],) ,
('saved value', 0.6547183562986971) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, -1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, -1, 0],) ,
('saved value', 0.6547183562986971) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -1.6547183562986971) ,
([0, 2, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, -1],) ,
('saved value', 2.654718356298697) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, -1, 1],) ,
('saved value', 2.654718356298697) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -0.6547183562986971) ,
([0, 1, -1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', 1.3452816437013029) ,
([0, 1, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3.654718356298697) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, -1, -1]) ,
('Current mapping', [0, 1, -1, -1, 2]) ,
('Gain after the hill-climbing', 1.3452816437013029) ,
('Update triple match number to:', 5.0) ,
('Current mapping:', [0, 1, -1, -1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, -1, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, -1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, -1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, -1, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -1.3452816437013029) ,
([0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3.654718356298697) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, -1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1],) ,
('saved value', 3.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, -1, 2]) ,
('Current mapping', [0, 1, -1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3.654718356298697) ,
('Node mapping at start', [0, 1, 2, -1, -1]) ,
('Triple match number at start:', 3.654718356298697) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 0, 2, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1],) ,
('saved value', 0.6547183562986972) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.654718356298697) ,
([2, 1, 0, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, -1],) ,
('saved value', 0.6547183562986971) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, -1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, -1, 0],) ,
('saved value', 0.6547183562986971) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -1.6547183562986971) ,
([0, 2, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, -1],) ,
('saved value', 2.654718356298697) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, -1, 1],) ,
('saved value', 2.654718356298697) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -0.6547183562986971) ,
([0, 1, -1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', 1.3452816437013029) ,
([0, 1, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3.654718356298697) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, -1, -1]) ,
('Current mapping', [0, 1, -1, -1, 2]) ,
('Gain after the hill-climbing', 1.3452816437013029) ,
('Update triple match number to:', 5.0) ,
('Current mapping:', [0, 1, -1, -1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, -1, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, -1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, -1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, -1, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -1.3452816437013029) ,
([0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3.654718356298697) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, -1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1],) ,
('saved value', 3.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, -1, 2]) ,
('Current mapping', [0, 1, -1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1],) ,
('saved value', 0.6547183562986972) ,
('Node mapping at start', [1, 0, 2, -1, -1]) ,
('Triple match number at start:', 0.6547183562986972) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, 2, -1, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 3.0) ,
([0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3.654718356298697) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 2) ,
([1, 0, 2, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -0.6547183562986972) ,
([2, 0, 1, -1, -1],) ,
('Computing match for mapping',) ,
([2, 0, 1, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', -1) ,
([1, 0, 2, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 0, 2, 1, -1],) ,
('Computing match for mapping',) ,
([-1, 0, 2, 1, -1],) ,
('saved value', 0.6547183562986972) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 1, ',', 4, '-', -1) ,
([1, 0, 2, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 2, -1, 1],) ,
('saved value', 0.6547183562986972) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 2) ,
([1, 0, 2, -1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -0.6547183562986972) ,
([1, 2, 0, -1, -1],) ,
('Computing match for mapping',) ,
([1, 2, 0, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', -1) ,
([1, 0, 2, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([1, -1, 2, 0, -1],) ,
('saved value', 0.6547183562986972) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 0, ',', 4, '-', -1) ,
([1, 0, 2, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, 2, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, 2, -1, 0],) ,
('saved value', 0.6547183562986972) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([1, 0, 2, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -0.6547183562986972) ,
([1, 0, -1, 2, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2, -1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([1, 0, 2, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', 0.34528164370130277) ,
([1, 0, -1, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([1, 0, 2, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([1, 0, 2, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1],) ,
('saved value', 0.6547183562986972) ,
('Use swap gain',) ,
('Original mapping', [1, 0, 2, -1, -1]) ,
('Current mapping', [0, 1, 2, -1, -1]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 3.654718356298697) ,
('Current mapping:', [0, 1, 2, -1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 0, 2, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1, -1],) ,
('saved value', 0.6547183562986972) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.654718356298697) ,
([2, 1, 0, -1, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0, -1],) ,
('saved value', 0.6547183562986971) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 4, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, -1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, -1, 0],) ,
('saved value', 0.6547183562986971) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -1.6547183562986971) ,
([0, 2, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1, -1],) ,
('saved value', 2.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1, -1],) ,
('saved value', 2.654718356298697) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 4, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, -1, 1],) ,
('saved value', 2.654718356298697) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', -0.6547183562986971) ,
([0, 1, -1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1],) ,
('saved value', 3.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', 2, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 4, '-', 2) ,
('Swap gain:', 1.3452816437013029) ,
([0, 1, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5.0) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', -1) ,
([0, 1, 2, -1, -1],) ,
('After swapping:', 3, '-', -1, ',', 4, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3.654718356298697) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, -1, -1]) ,
('Current mapping', [0, 1, -1, -1, 2]) ,
('Gain after the hill-climbing', 1.3452816437013029) ,
('Update triple match number to:', 5.0) ,
('Current mapping:', [0, 1, -1, -1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.0) ,
([1, 0, -1, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([-1, 1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 4) ,
('Before swapping:', 0, '-', 0, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 4, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, -1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, -1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.0) ,
([0, -1, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 4) ,
('Before swapping:', 1, '-', 1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 4, '-', 1) ,
('Swap gain:', -3.0) ,
([0, 2, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, -1, 1],) ,
('saved value', 2.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, -1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1, 2],) ,
('saved value', 5.0) ,
('Swap node', 2, 'and', 4) ,
('Before swapping:', 2, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -1.3452816437013029) ,
([0, 1, 2, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1, -1],) ,
('saved value', 3.654718356298697) ,
('Swap node', 3, 'and', 4) ,
('Before swapping:', 3, '-', -1, ',', 4, '-', 2) ,
([0, 1, -1, -1, 2],) ,
('After swapping:', 3, '-', 2, ',', 4, '-', -1) ,
('Swap gain:', -2.0) ,
([0, 1, -1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2, -1],) ,
('saved value', 3.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, -1, 2]) ,
('Current mapping', [0, 1, -1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 5.0) ,
('best node mapping', [0, 1, -1, -1, 2]) ,
('Best node mapping alignment:', 'a0(eat-01)-b0(eat-01) a1(fry)-b1(chip) a2(country)-Null a3(name)-Null a4(we)-b2(we)') ,
('F-score:', 0.5882352941176471) ,
Smatch score F1 0.588
('AMR pair', 24) ,
('============================================',) ,
('AMR 1 (one-line):', '(b0 / break-up-08:ARG1 (t0 / they))') ,
('AMR 2 (one-line):', '(s0 / split-01:ARG0 (t0 / they))') ,
('Instance triples of AMR 1:', 2) ,
([('instance', 'a0', 'break-up-08'), ('instance', 'a1', 'they')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'break-up-08')],) ,
('Relation triples of AMR 1:', 1) ,
([('ARG1', 'a0', 'a1')],) ,
('Instance triples of AMR 2:', 2) ,
([('instance', 'b0', 'split-01'), ('instance', 'b1', 'they')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'split-01')],) ,
('Relation triples of AMR 2:', 1) ,
([('ARG0', 'b0', 'b1')],) ,
('Similarity', 'break-up-08', 'split-01', 0.0) ,
('Similarity', 'break-up-08', 'they', 0.0) ,
('Similarity', 'they', 'split-01', 0.0) ,
('Similarity', 'they', 'they', 1.0) ,
('Candidate mappings:',) ,
([{0, 1}, {0, 1}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.0}, (0, 1): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 1.0}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 1.0) ,
('Node mapping at start', [0, 1]) ,
('Triple match number at start:', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 1.0) ,
('Node mapping at start', [0, 1]) ,
('Triple match number at start:', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 1.0) ,
('Node mapping at start', [0, 1]) ,
('Triple match number at start:', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 1.0) ,
('Node mapping at start', [0, 1]) ,
('Triple match number at start:', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 1.0) ,
('Node mapping at start', [0, 1]) ,
('Triple match number at start:', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 1.0) ,
('best node mapping', [0, 1]) ,
('Best node mapping alignment:', 'a0(break-up-08)-b0(split-01) a1(they)-b1(they)') ,
('F-score:', 0.25) ,
Smatch score F1 0.250
('AMR pair', 25) ,
('============================================',) ,
('AMR 1 (one-line):', '(h0 / have-03:mode imperative:ARG0 (y0 / you):ARG1 (b0 / blast-05))') ,
('AMR 2 (one-line):', '(h0 / have-03:ARG1 (t0 / time:ARG1-of (g0 / good-02)):ARG0 (y0 / you):mode imperative )') ,
('Instance triples of AMR 1:', 3) ,
([('instance', 'a0', 'have-03'), ('instance', 'a1', 'you'), ('instance', 'a2', 'blast-05')],) ,
('Attribute triples of AMR 1:', 2) ,
([('mode', 'a0', 'imperative'), ('TOP', 'a0', 'have-03')],) ,
('Relation triples of AMR 1:', 2) ,
([('ARG0', 'a0', 'a1'), ('ARG1', 'a0', 'a2')],) ,
('Instance triples of AMR 2:', 4) ,
([('instance', 'b0', 'have-03'), ('instance', 'b1', 'time'), ('instance', 'b2', 'good-02'), ('instance', 'b3', 'you')],) ,
('Attribute triples of AMR 2:', 2) ,
([('mode', 'b0', 'imperative'), ('TOP', 'b0', 'have-03')],) ,
('Relation triples of AMR 2:', 3) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b3'), ('ARG1', 'b2', 'b1')],) ,
('Similarity', 'have-03', 'have-03', 1.0) ,
('Similarity', 'have-03', 'time', 0.0) ,
('Similarity', 'have-03', 'good-02', 0.0) ,
('Similarity', 'have-03', 'you', 0.0) ,
('Similarity', 'you', 'time', 0.7280361437152197) ,
('Similarity', 'you', 'good-02', 0.27390141258809797) ,
('Similarity', 'you', 'you', 1.0) ,
('Similarity', 'blast-05', 'have-03', 0.0) ,
('Similarity', 'blast-05', 'time', 0.0) ,
('Similarity', 'blast-05', 'good-02', 0.0) ,
('Similarity', 'blast-05', 'you', 0.0) ,
('Candidate mappings:',) ,
([{0, 1, 2, 3}, {0, 1, 2, 3}, {0, 1, 2, 3}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 3.0, (1, 3): 1, (2, 1): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0, (2, 1): 1}, (0, 3): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 0.7280361437152197}, (1, 2): {-1: 0.27390141258809797}, (1, 3): {-1: 1.0, (0, 0): 1}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.0, (0, 0): 1, (0, 2): 1}, (2, 2): {-1: 0.0}, (2, 3): {-1: 0.0}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 3, 2],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 3.0) ,
('relation match with', (1, 3), 1) ,
('node_pair', (1, 3)) ,
('instance/attribute match', 1.0) ,
('node_pair', (2, 2)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 5.0) ,
('Node mapping at start', [0, 3, 2]) ,
('Triple match number at start:', 5.0) ,
('Remap node', 0, 'from ', 0, 'to', 1) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([1, 3, 2],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 3, 'to', 1) ,
('Move gain:', -1.2719638562847804) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 3.7280361437152196) ,
('Remap node', 2, 'from ', 2, 'to', 1) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 3, 1],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 0, 2],) ,
('Computing match for mapping',) ,
([3, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 3, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 3, 0],) ,
('Computing match for mapping',) ,
([2, 3, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([0, 3, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -1.7260985874119021) ,
([0, 2, 3],) ,
('Computing match for mapping',) ,
([0, 2, 3],) ,
('saved value', 3.273901412588098) ,
('Use move gain',) ,
('Original mapping', [0, 3, 2]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 3, 1]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([2, 3, 1],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 3, 'to', 2) ,
('Move gain:', -1.7260985874119021) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 4.273901412588097) ,
('Remap node', 2, 'from ', 1, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 3, 2],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 0, 1],) ,
('Computing match for mapping',) ,
([3, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 3, 0],) ,
('Computing match for mapping',) ,
([1, 3, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -2.2719638562847804) ,
([0, 1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 3],) ,
('saved value', 3.7280361437152196) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([3, 0, 2],) ,
('saved value', 0.0) ,
('Node mapping at start', [3, 0, 2]) ,
('Triple match number at start:', 0.0) ,
('Remap node', 0, 'from ', 3, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 0, 'to', 1) ,
('Move gain:', 0.7280361437152197) ,
('Computing match for mapping',) ,
([3, 1, 2],) ,
('saved value', 0.7280361437152197) ,
('Remap node', 2, 'from ', 2, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 0) ,
([3, 0, 2],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 3) ,
('Swap gain:', 5.0) ,
([0, 3, 2],) ,
('Computing match for mapping',) ,
([0, 3, 2],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 2) ,
([3, 0, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', 0.0) ,
([2, 0, 3],) ,
('Computing match for mapping',) ,
([2, 0, 3],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 2) ,
([3, 0, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', 0.27390141258809797) ,
([3, 2, 0],) ,
('Computing match for mapping',) ,
([3, 2, 0],) ,
('saved value', 0.27390141258809797) ,
('Use swap gain',) ,
('Original mapping', [3, 0, 2]) ,
('Current mapping', [0, 3, 2]) ,
('Gain after the hill-climbing', 5.0) ,
('Update triple match number to:', 5.0) ,
('Current mapping:', [0, 3, 2]) ,
('Remap node', 0, 'from ', 0, 'to', 1) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([1, 3, 2],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 3, 'to', 1) ,
('Move gain:', -1.2719638562847804) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 3.7280361437152196) ,
('Remap node', 2, 'from ', 2, 'to', 1) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 3, 1],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 0, 2],) ,
('Computing match for mapping',) ,
([3, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 3, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 3, 0],) ,
('Computing match for mapping',) ,
([2, 3, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([0, 3, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -1.7260985874119021) ,
([0, 2, 3],) ,
('Computing match for mapping',) ,
([0, 2, 3],) ,
('saved value', 3.273901412588098) ,
('Use move gain',) ,
('Original mapping', [0, 3, 2]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 3, 1]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([2, 3, 1],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 3, 'to', 2) ,
('Move gain:', -1.7260985874119026) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 4.273901412588097) ,
('Remap node', 2, 'from ', 1, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 3, 2],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 0, 1],) ,
('Computing match for mapping',) ,
([3, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 3, 0],) ,
('Computing match for mapping',) ,
([1, 3, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -2.2719638562847804) ,
([0, 1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 3],) ,
('saved value', 3.7280361437152196) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([2, 1, 3],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.7280361437152197) ,
('node_pair', (2, 3)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.7280361437152197) ,
('Node mapping at start', [2, 1, 3]) ,
('Triple match number at start:', 0.7280361437152197) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 3.0) ,
('Computing match for mapping',) ,
([0, 1, 3],) ,
('saved value', 3.7280361437152196) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', -0.7280361437152197) ,
('Computing match for mapping',) ,
([2, 0, 3],) ,
('saved value', 0.0) ,
('Remap node', 2, 'from ', 3, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 1, 0],) ,
('saved value', 0.7280361437152197) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', -0.45413473112712177) ,
([1, 2, 3],) ,
('Computing match for mapping',) ,
([1, 2, 3],) ,
('saved value', 0.27390141258809797) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 3) ,
([2, 1, 3],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 1, 2],) ,
('Computing match for mapping',) ,
([3, 1, 2],) ,
('saved value', 0.7280361437152197) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([2, 1, 3],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', 1.2719638562847804) ,
([2, 3, 1],) ,
('Computing match for mapping',) ,
([2, 3, 1],) ,
('saved value', 2.0) ,
('Use move gain',) ,
('Original mapping', [2, 1, 3]) ,
('Current mapping', [0, 1, 3]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 3.7280361437152196) ,
('Current mapping:', [0, 1, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([2, 1, 3],) ,
('saved value', 0.7280361437152197) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -0.45413473112712177) ,
('Computing match for mapping',) ,
([0, 2, 3],) ,
('saved value', 3.273901412588098) ,
('Remap node', 2, 'from ', 3, 'to', 2) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 3.7280361437152196) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 3],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.7280361437152196) ,
([1, 0, 3],) ,
('Computing match for mapping',) ,
([1, 0, 3],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 1, 3],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 1, 0],) ,
('Computing match for mapping',) ,
([3, 1, 0],) ,
('saved value', 0.7280361437152196) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 3) ,
([0, 1, 3],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 1) ,
('Swap gain:', 2.2719638562847804) ,
([0, 3, 1],) ,
('Computing match for mapping',) ,
([0, 3, 1],) ,
('saved value', 6.0) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 3]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 2.2719638562847804) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 3, 1]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([2, 3, 1],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 3, 'to', 2) ,
('Move gain:', -1.7260985874119026) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 4.273901412588097) ,
('Remap node', 2, 'from ', 1, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 3, 2],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 0, 1],) ,
('Computing match for mapping',) ,
([3, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 3, 0],) ,
('Computing match for mapping',) ,
([1, 3, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -2.2719638562847804) ,
([0, 1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 3],) ,
('saved value', 3.7280361437152196) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([3, 0, 2],) ,
('saved value', 0.0) ,
('Node mapping at start', [3, 0, 2]) ,
('Triple match number at start:', 0.0) ,
('Remap node', 0, 'from ', 3, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 0, 2],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 0, 'to', 1) ,
('Move gain:', 0.7280361437152197) ,
('Computing match for mapping',) ,
([3, 1, 2],) ,
('saved value', 0.7280361437152197) ,
('Remap node', 2, 'from ', 2, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([3, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 3, ',', 1, '-', 0) ,
([3, 0, 2],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 3) ,
('Swap gain:', 5.0) ,
([0, 3, 2],) ,
('Computing match for mapping',) ,
([0, 3, 2],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 3, ',', 2, '-', 2) ,
([3, 0, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', 0.0) ,
([2, 0, 3],) ,
('Computing match for mapping',) ,
([2, 0, 3],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 2) ,
([3, 0, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', 0.27390141258809797) ,
([3, 2, 0],) ,
('Computing match for mapping',) ,
([3, 2, 0],) ,
('saved value', 0.27390141258809797) ,
('Use swap gain',) ,
('Original mapping', [3, 0, 2]) ,
('Current mapping', [0, 3, 2]) ,
('Gain after the hill-climbing', 5.0) ,
('Update triple match number to:', 5.0) ,
('Current mapping:', [0, 3, 2]) ,
('Remap node', 0, 'from ', 0, 'to', 1) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([1, 3, 2],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 3, 'to', 1) ,
('Move gain:', -1.2719638562847804) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 3.7280361437152196) ,
('Remap node', 2, 'from ', 2, 'to', 1) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 3, 1],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 0, 2],) ,
('Computing match for mapping',) ,
([3, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 3, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 3, 0],) ,
('Computing match for mapping',) ,
([2, 3, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([0, 3, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -1.7260985874119021) ,
([0, 2, 3],) ,
('Computing match for mapping',) ,
([0, 2, 3],) ,
('saved value', 3.273901412588098) ,
('Use move gain',) ,
('Original mapping', [0, 3, 2]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 3, 1]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([2, 3, 1],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 3, 'to', 2) ,
('Move gain:', -1.7260985874119026) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 4.273901412588097) ,
('Remap node', 2, 'from ', 1, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 3, 2],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 0, 1],) ,
('Computing match for mapping',) ,
([3, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 3, 0],) ,
('Computing match for mapping',) ,
([1, 3, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -2.2719638562847804) ,
([0, 1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 3],) ,
('saved value', 3.7280361437152196) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([2, 0, 3],) ,
('saved value', 0.0) ,
('Node mapping at start', [2, 0, 3]) ,
('Triple match number at start:', 0.0) ,
('Remap node', 0, 'from ', 2, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 0, 3],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 0, 'to', 1) ,
('Move gain:', 0.7280361437152197) ,
('Computing match for mapping',) ,
([2, 1, 3],) ,
('saved value', 0.7280361437152197) ,
('Remap node', 2, 'from ', 3, 'to', 1) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([2, 0, 1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0, 3],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', 3.273901412588098) ,
([0, 2, 3],) ,
('Computing match for mapping',) ,
([0, 2, 3],) ,
('saved value', 3.273901412588098) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 3) ,
([2, 0, 3],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', 0.0) ,
([3, 0, 2],) ,
('Computing match for mapping',) ,
([3, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', 3) ,
([2, 0, 3],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', 1.0) ,
([2, 3, 0],) ,
('Computing match for mapping',) ,
([2, 3, 0],) ,
('saved value', 1.0) ,
('Use swap gain',) ,
('Original mapping', [2, 0, 3]) ,
('Current mapping', [0, 2, 3]) ,
('Gain after the hill-climbing', 3.273901412588098) ,
('Update triple match number to:', 3.273901412588098) ,
('Current mapping:', [0, 2, 3]) ,
('Remap node', 0, 'from ', 0, 'to', 1) ,
('Move gain:', -3.0) ,
('Computing match for mapping',) ,
([1, 2, 3],) ,
('saved value', 0.27390141258809797) ,
('Remap node', 1, 'from ', 2, 'to', 1) ,
('Move gain:', 0.45413473112712177) ,
('Computing match for mapping',) ,
([0, 1, 3],) ,
('saved value', 3.7280361437152196) ,
('Remap node', 2, 'from ', 3, 'to', 1) ,
('Move gain:', 0.9999999999999996) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 4.273901412588097) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 3],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -3.273901412588098) ,
([2, 0, 3],) ,
('Computing match for mapping',) ,
([2, 0, 3],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 3) ,
([0, 2, 3],) ,
('After swapping:', 0, '-', 3, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([3, 2, 0],) ,
('Computing match for mapping',) ,
([3, 2, 0],) ,
('saved value', 0.27390141258809797) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 3) ,
([0, 2, 3],) ,
('After swapping:', 1, '-', 3, ',', 2, '-', 2) ,
('Swap gain:', 1.7260985874119021) ,
([0, 3, 2],) ,
('Computing match for mapping',) ,
([0, 3, 2],) ,
('saved value', 5.0) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 3]) ,
('Current mapping', [0, 3, 2]) ,
('Gain after the hill-climbing', 1.7260985874119021) ,
('Update triple match number to:', 5.0) ,
('Current mapping:', [0, 3, 2]) ,
('Remap node', 0, 'from ', 0, 'to', 1) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([1, 3, 2],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 3, 'to', 1) ,
('Move gain:', -1.2719638562847804) ,
('Computing match for mapping',) ,
([0, 1, 2],) ,
('saved value', 3.7280361437152196) ,
('Remap node', 2, 'from ', 2, 'to', 1) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 3, 1],) ,
('saved value', 6.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 2],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([3, 0, 2],) ,
('Computing match for mapping',) ,
([3, 0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 3, 2],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -4.0) ,
([2, 3, 0],) ,
('Computing match for mapping',) ,
([2, 3, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 2) ,
([0, 3, 2],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 3) ,
('Swap gain:', -1.7260985874119021) ,
([0, 2, 3],) ,
('Computing match for mapping',) ,
([0, 2, 3],) ,
('saved value', 3.273901412588098) ,
('Use move gain',) ,
('Original mapping', [0, 3, 2]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 6.0) ,
('Current mapping:', [0, 3, 1]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -4.0) ,
('Computing match for mapping',) ,
([2, 3, 1],) ,
('saved value', 2.0) ,
('Remap node', 1, 'from ', 3, 'to', 2) ,
('Move gain:', -1.7260985874119026) ,
('Computing match for mapping',) ,
([0, 2, 1],) ,
('saved value', 4.273901412588097) ,
('Remap node', 2, 'from ', 1, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 3, 2],) ,
('saved value', 5.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 3) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 3, ',', 1, '-', 0) ,
('Swap gain:', -6.0) ,
([3, 0, 1],) ,
('Computing match for mapping',) ,
([3, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 3, 0],) ,
('Computing match for mapping',) ,
([1, 3, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 3, ',', 2, '-', 1) ,
([0, 3, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 3) ,
('Swap gain:', -2.2719638562847804) ,
([0, 1, 3],) ,
('Computing match for mapping',) ,
([0, 1, 3],) ,
('saved value', 3.7280361437152196) ,
('no move/swap gain found',) ,
('Original mapping', [0, 3, 1]) ,
('Current mapping', [0, 3, 1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 6.0) ,
('best node mapping', [0, 3, 1]) ,
('Best node mapping alignment:', 'a0(have-03)-b0(have-03) a1(you)-b3(you) a2(blast-05)-b1(time)') ,
('F-score:', 0.75) ,
Smatch score F1 0.750
('AMR pair', 26) ,
('============================================',) ,
('AMR 1 (one-line):', '(r0 / recommend-01:ARG1 (t0 / take-01:ARG0 y0:ARG1 (b0 / break-19:ARG0 y0)):ARG2 (y0 / you))') ,
('AMR 2 (one-line):', '(r0 / recommend-01:ARG1 (r1 / rest-01:ARG0 (y0 / you)))') ,
('Instance triples of AMR 1:', 4) ,
([('instance', 'a0', 'recommend-01'), ('instance', 'a1', 'take-01'), ('instance', 'a2', 'break-19'), ('instance', 'a3', 'you')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'recommend-01')],) ,
('Relation triples of AMR 1:', 5) ,
([('ARG1', 'a0', 'a1'), ('ARG2', 'a0', 'a3'), ('ARG1', 'a1', 'a2'), ('ARG0', 'a1', 'a3'), ('ARG0', 'a2', 'a3')],) ,
('Instance triples of AMR 2:', 3) ,
([('instance', 'b0', 'recommend-01'), ('instance', 'b1', 'rest-01'), ('instance', 'b2', 'you')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'recommend-01')],) ,
('Relation triples of AMR 2:', 2) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b1', 'b2')],) ,
('Similarity', 'recommend-01', 'recommend-01', 1.0) ,
('Similarity', 'recommend-01', 'rest-01', 0.0) ,
('Similarity', 'recommend-01', 'you', 0.0) ,
('Similarity', 'take-01', 'recommend-01', 0.0) ,
('Similarity', 'take-01', 'rest-01', 0.25582800941247724) ,
('Similarity', 'take-01', 'you', 0.33393068606412535) ,
('Similarity', 'break-19', 'recommend-01', 0.0) ,
('Similarity', 'break-19', 'rest-01', 0.0) ,
('Similarity', 'break-19', 'you', 0.2577245144543213) ,
('Similarity', 'you', 'rest-01', 0.0) ,
('Similarity', 'you', 'you', 1.0) ,
('Candidate mappings:',) ,
([{0, 1, 2}, {0, 1, 2}, {0, 1, 2}, {0, 1, 2}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 2.0, (1, 1): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0}, (1, 0): {-1: 0.0, (2, 1): 1}, (1, 1): {-1: 0.25582800941247724, (0, 0): 1, (3, 2): 1}, (1, 2): {-1: 0.33393068606412535}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.0, (1, 0): 1, (3, 2): 1}, (2, 2): {-1: 0.2577245144543213}, (3, 0): {-1: 0.0}, (3, 1): {-1: 0.0}, (3, 2): {-1: 1.0, (1, 1): 1, (2, 1): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, -1, 2],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 2.0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.25582800941247724) ,
('relation match with', (3, 2), 1) ,
('node_pair', (3, 2)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 5.255828009412477) ,
('Node mapping at start', [0, 1, -1, 2]) ,
('Triple match number at start:', 5.255828009412477) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.255828009412477) ,
([1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2],) ,
('saved value', 2.255828009412477) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0],) ,
('saved value', 0.2558280094124772) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.2558280094124772) ,
([0, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2.921897323348352) ,
([0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1],) ,
('saved value', 2.333930686064125) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -1.7422754855456786) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 3.5135525238667986) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, 2]) ,
('Current mapping', [0, 1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([1, 2, 0, -1],) ,
('node_pair', (0, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 2)) ,
('instance/attribute match', 0.33393068606412535) ,
('node_pair', (2, 0)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.33393068606412535) ,
('Node mapping at start', [1, 2, 0, -1]) ,
('Triple match number at start:', 0.33393068606412535) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 0, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -0.0781026766516481) ,
([2, 1, 0, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1],) ,
('saved value', 0.25582800941247724) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 0) ,
([1, 2, 0, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', 2.0) ,
([0, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1],) ,
('saved value', 2.333930686064125) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', -1) ,
([1, 2, 0, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 2, 0, 1],) ,
('Computing match for mapping',) ,
([-1, 2, 0, 1],) ,
('saved value', 0.33393068606412535) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 0) ,
([1, 2, 0, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', -0.07620617160980403) ,
([1, 0, 2, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1],) ,
('saved value', 0.2577245144543213) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', -1) ,
([1, 2, 0, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', 0.6660693139358747) ,
([1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([1, -1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', -1) ,
([1, 2, 0, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([1, 2, -1, 0],) ,
('Computing match for mapping',) ,
([1, 2, -1, 0],) ,
('saved value', 0.33393068606412535) ,
('Use swap gain',) ,
('Original mapping', [1, 2, 0, -1]) ,
('Current mapping', [0, 2, 1, -1]) ,
('Gain after the hill-climbing', 2.0) ,
('Update triple match number to:', 2.333930686064125) ,
('Current mapping:', [0, 2, 1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 1, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -1.3339306860641253) ,
([2, 0, 1, -1],) ,
('Computing match for mapping',) ,
([2, 0, 1, -1],) ,
('saved value', 0.9999999999999998) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 2, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -1.9999999999999998) ,
([1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([1, 2, 0, -1],) ,
('saved value', 0.33393068606412535) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 2, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 2, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 2, 1, 0],) ,
('saved value', 0.3339306860641251) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([0, 2, 1, -1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 1.1796218378026735) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 3.5135525238667986) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', -1) ,
([0, 2, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', 1.6660693139358749) ,
([0, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', -1) ,
([0, 2, 1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1],) ,
('saved value', 2.333930686064125) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 1, -1]) ,
('Current mapping', [0, -1, 1, 2]) ,
('Gain after the hill-climbing', 1.6660693139358749) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [0, -1, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', -1) ,
([0, -1, 1, 2],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, 0, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 0, 1, 2],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, -1, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([1, -1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, -1, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([2, -1, 1, 0],) ,
('Computing match for mapping',) ,
([2, -1, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', 1) ,
([0, -1, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', -1) ,
('Swap gain:', 1.2558280094124772) ,
([0, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2],) ,
('saved value', 5.255828009412477) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', -1, ',', 3, '-', 2) ,
([0, -1, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -1.6660693139358749) ,
([0, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1],) ,
('saved value', 2.333930686064125) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, -1, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -1.7422754855456786) ,
([0, -1, 2, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1],) ,
('saved value', 2.2577245144543214) ,
('Use swap gain',) ,
('Original mapping', [0, -1, 1, 2]) ,
('Current mapping', [0, 1, -1, 2]) ,
('Gain after the hill-climbing', 1.2558280094124772) ,
('Update triple match number to:', 5.255828009412477) ,
('Current mapping:', [0, 1, -1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.255828009412477) ,
([1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2],) ,
('saved value', 2.255828009412477) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0],) ,
('saved value', 0.2558280094124772) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.2558280094124772) ,
([0, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2.921897323348352) ,
([0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1],) ,
('saved value', 2.333930686064125) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -1.7422754855456786) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 3.5135525238667986) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, 2]) ,
('Current mapping', [0, 1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 2, 1, -1],) ,
('saved value', 2.333930686064125) ,
('Node mapping at start', [0, 2, 1, -1]) ,
('Triple match number at start:', 2.333930686064125) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 1, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -1.3339306860641253) ,
([2, 0, 1, -1],) ,
('Computing match for mapping',) ,
([2, 0, 1, -1],) ,
('saved value', 0.9999999999999998) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 2, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -1.9999999999999998) ,
([1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([1, 2, 0, -1],) ,
('saved value', 0.33393068606412535) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 2, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 2, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 2, 1, 0],) ,
('saved value', 0.3339306860641251) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([0, 2, 1, -1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 1.1796218378026735) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 3.5135525238667986) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', -1) ,
([0, 2, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', 1.6660693139358749) ,
([0, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', -1) ,
([0, 2, 1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1],) ,
('saved value', 2.333930686064125) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 1, -1]) ,
('Current mapping', [0, -1, 1, 2]) ,
('Gain after the hill-climbing', 1.6660693139358749) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [0, -1, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', -1) ,
([0, -1, 1, 2],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, 0, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 0, 1, 2],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, -1, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([1, -1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, -1, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([2, -1, 1, 0],) ,
('Computing match for mapping',) ,
([2, -1, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', 1) ,
([0, -1, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', -1) ,
('Swap gain:', 1.2558280094124772) ,
([0, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2],) ,
('saved value', 5.255828009412477) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', -1, ',', 3, '-', 2) ,
([0, -1, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -1.6660693139358749) ,
([0, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1],) ,
('saved value', 2.333930686064125) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, -1, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -1.7422754855456786) ,
([0, -1, 2, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1],) ,
('saved value', 2.2577245144543214) ,
('Use swap gain',) ,
('Original mapping', [0, -1, 1, 2]) ,
('Current mapping', [0, 1, -1, 2]) ,
('Gain after the hill-climbing', 1.2558280094124772) ,
('Update triple match number to:', 5.255828009412477) ,
('Current mapping:', [0, 1, -1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.255828009412477) ,
([1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2],) ,
('saved value', 2.255828009412477) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0],) ,
('saved value', 0.2558280094124772) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.2558280094124772) ,
([0, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2.921897323348352) ,
([0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1],) ,
('saved value', 2.333930686064125) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -1.7422754855456786) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 3.5135525238667986) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, 2]) ,
('Current mapping', [0, 1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([1, 2, 0, -1],) ,
('saved value', 0.33393068606412535) ,
('Node mapping at start', [1, 2, 0, -1]) ,
('Triple match number at start:', 0.33393068606412535) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 2) ,
([1, 2, 0, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 1) ,
('Swap gain:', -0.0781026766516481) ,
([2, 1, 0, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1],) ,
('saved value', 0.25582800941247724) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', 0) ,
([1, 2, 0, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', 1.9999999999999998) ,
([0, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1],) ,
('saved value', 2.333930686064125) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', -1) ,
([1, 2, 0, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 2, 0, 1],) ,
('Computing match for mapping',) ,
([-1, 2, 0, 1],) ,
('saved value', 0.33393068606412535) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 0) ,
([1, 2, 0, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', -0.07620617160980403) ,
([1, 0, 2, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1],) ,
('saved value', 0.2577245144543213) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', -1) ,
([1, 2, 0, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', 0.6660693139358747) ,
([1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([1, -1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', -1) ,
([1, 2, 0, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([1, 2, -1, 0],) ,
('Computing match for mapping',) ,
([1, 2, -1, 0],) ,
('saved value', 0.33393068606412535) ,
('Use swap gain',) ,
('Original mapping', [1, 2, 0, -1]) ,
('Current mapping', [0, 2, 1, -1]) ,
('Gain after the hill-climbing', 1.9999999999999998) ,
('Update triple match number to:', 2.333930686064125) ,
('Current mapping:', [0, 2, 1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 2) ,
([0, 2, 1, -1],) ,
('After swapping:', 0, '-', 2, ',', 1, '-', 0) ,
('Swap gain:', -1.3339306860641253) ,
([2, 0, 1, -1],) ,
('Computing match for mapping',) ,
([2, 0, 1, -1],) ,
('saved value', 0.9999999999999998) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, 2, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -1.9999999999999998) ,
([1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([1, 2, 0, -1],) ,
('saved value', 0.33393068606412535) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 2, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 2, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 2, 1, 0],) ,
('saved value', 0.3339306860641251) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 2, ',', 2, '-', 1) ,
([0, 2, 1, -1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', 2) ,
('Swap gain:', 1.1796218378026735) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 3.5135525238667986) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 2, ',', 3, '-', -1) ,
([0, 2, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', 1.6660693139358749) ,
([0, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', -1) ,
([0, 2, 1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1],) ,
('saved value', 2.333930686064125) ,
('Use swap gain',) ,
('Original mapping', [0, 2, 1, -1]) ,
('Current mapping', [0, -1, 1, 2]) ,
('Gain after the hill-climbing', 1.6660693139358749) ,
('Update triple match number to:', 4.0) ,
('Current mapping:', [0, -1, 1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', -1) ,
([0, -1, 1, 2],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, 0, 1, 2],) ,
('Computing match for mapping',) ,
([-1, 0, 1, 2],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, -1, 1, 2],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([1, -1, 0, 2],) ,
('Computing match for mapping',) ,
([1, -1, 0, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, -1, 1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -4.0) ,
([2, -1, 1, 0],) ,
('Computing match for mapping',) ,
([2, -1, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', 1) ,
([0, -1, 1, 2],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', -1) ,
('Swap gain:', 1.2558280094124772) ,
([0, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2],) ,
('saved value', 5.255828009412477) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', -1, ',', 3, '-', 2) ,
([0, -1, 1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -1.6660693139358749) ,
([0, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1],) ,
('saved value', 2.333930686064125) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 1, ',', 3, '-', 2) ,
([0, -1, 1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -1.7422754855456786) ,
([0, -1, 2, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1],) ,
('saved value', 2.2577245144543214) ,
('Use swap gain',) ,
('Original mapping', [0, -1, 1, 2]) ,
('Current mapping', [0, 1, -1, 2]) ,
('Gain after the hill-climbing', 1.2558280094124772) ,
('Update triple match number to:', 5.255828009412477) ,
('Current mapping:', [0, 1, -1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.255828009412477) ,
([1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2],) ,
('saved value', 2.255828009412477) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0],) ,
('saved value', 0.2558280094124772) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.2558280094124772) ,
([0, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2.921897323348352) ,
([0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1],) ,
('saved value', 2.333930686064125) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -1.7422754855456786) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 3.5135525238667986) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, 2]) ,
('Current mapping', [0, 1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([2, 1, 0, -1],) ,
('saved value', 0.25582800941247724) ,
('Node mapping at start', [2, 1, 0, -1]) ,
('Triple match number at start:', 0.25582800941247724) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1, 0, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', 0.0781026766516481) ,
([1, 2, 0, -1],) ,
('Computing match for mapping',) ,
([1, 2, 0, -1],) ,
('saved value', 0.33393068606412535) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 2, ',', 2, '-', 0) ,
([2, 1, 0, -1],) ,
('After swapping:', 0, '-', 0, ',', 2, '-', 2) ,
('Swap gain:', 3.2577245144543214) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 3.5135525238667986) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 2, ',', 3, '-', -1) ,
([2, 1, 0, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', 2.0) ,
([-1, 1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2],) ,
('saved value', 2.255828009412477) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 0) ,
([2, 1, 0, -1],) ,
('After swapping:', 1, '-', 0, ',', 2, '-', 1) ,
('Swap gain:', 0.7441719905875226) ,
([2, 0, 1, -1],) ,
('Computing match for mapping',) ,
([2, 0, 1, -1],) ,
('saved value', 0.9999999999999998) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([2, 1, 0, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -0.25582800941247724) ,
([2, -1, 0, 1],) ,
('Computing match for mapping',) ,
([2, -1, 0, 1],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 0, ',', 3, '-', -1) ,
([2, 1, 0, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -5.551115123125783e-17) ,
([2, 1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0],) ,
('saved value', 0.2558280094124772) ,
('Use swap gain',) ,
('Original mapping', [2, 1, 0, -1]) ,
('Current mapping', [0, 1, 2, -1]) ,
('Gain after the hill-climbing', 3.2577245144543214) ,
('Update triple match number to:', 3.5135525238667986) ,
('Current mapping:', [0, 1, 2, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, 2, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.255828009412477) ,
([1, 0, 2, -1],) ,
('Computing match for mapping',) ,
([1, 0, 2, -1],) ,
('saved value', 0.2577245144543213) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 2) ,
([0, 1, 2, -1],) ,
('After swapping:', 0, '-', 2, ',', 2, '-', 0) ,
('Swap gain:', -3.2577245144543214) ,
([2, 1, 0, -1],) ,
('Computing match for mapping',) ,
([2, 1, 0, -1],) ,
('saved value', 0.25582800941247724) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, 2, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 2, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 2, 0],) ,
('saved value', 0.5135525238667986) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', 2) ,
([0, 1, 2, -1],) ,
('After swapping:', 1, '-', 2, ',', 2, '-', 1) ,
('Swap gain:', -1.1796218378026735) ,
([0, 2, 1, -1],) ,
('Computing match for mapping',) ,
([0, 2, 1, -1],) ,
('saved value', 2.333930686064125) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, 2, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.2558280094124772) ,
([0, -1, 2, 1],) ,
('Computing match for mapping',) ,
([0, -1, 2, 1],) ,
('saved value', 2.2577245144543214) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', 2, ',', 3, '-', -1) ,
([0, 1, 2, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', 2) ,
('Swap gain:', 1.7422754855456786) ,
([0, 1, -1, 2],) ,
('Computing match for mapping',) ,
([0, 1, -1, 2],) ,
('saved value', 5.255828009412477) ,
('Use swap gain',) ,
('Original mapping', [0, 1, 2, -1]) ,
('Current mapping', [0, 1, -1, 2]) ,
('Gain after the hill-climbing', 1.7422754855456786) ,
('Update triple match number to:', 5.255828009412477) ,
('Current mapping:', [0, 1, -1, 2]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -4.255828009412477) ,
([1, 0, -1, 2],) ,
('Computing match for mapping',) ,
([1, 0, -1, 2],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -3.0) ,
([-1, 1, 0, 2],) ,
('Computing match for mapping',) ,
([-1, 1, 0, 2],) ,
('saved value', 2.255828009412477) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 0, '-', 2, ',', 3, '-', 0) ,
('Swap gain:', -5.0) ,
([2, 1, -1, 0],) ,
('Computing match for mapping',) ,
([2, 1, -1, 0],) ,
('saved value', 0.2558280094124772) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.2558280094124772) ,
([0, -1, 1, 2],) ,
('Computing match for mapping',) ,
([0, -1, 1, 2],) ,
('saved value', 4.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 1, '-', 2, ',', 3, '-', 1) ,
('Swap gain:', -2.921897323348352) ,
([0, 2, -1, 1],) ,
('Computing match for mapping',) ,
([0, 2, -1, 1],) ,
('saved value', 2.333930686064125) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', 2) ,
([0, 1, -1, 2],) ,
('After swapping:', 2, '-', 2, ',', 3, '-', -1) ,
('Swap gain:', -1.7422754855456786) ,
([0, 1, 2, -1],) ,
('Computing match for mapping',) ,
([0, 1, 2, -1],) ,
('saved value', 3.5135525238667986) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, 2]) ,
('Current mapping', [0, 1, -1, 2]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 5.255828009412477) ,
('best node mapping', [0, 1, -1, 2]) ,
('Best node mapping alignment:', 'a0(recommend-01)-b0(recommend-01) a1(take-01)-b1(rest-01) a2(break-19)-Null a3(you)-b2(you)') ,
('F-score:', 0.6569785011765598) ,
Smatch score F1 0.657
('AMR pair', 27) ,
('============================================',) ,
('AMR 1 (one-line):', '(k0 / kick-01:ARG1 (b0 / bucket):ARG0 (h0 / he))') ,
('AMR 2 (one-line):', '(d0 / die-01:ARG1 (h0 / he))') ,
('Instance triples of AMR 1:', 3) ,
([('instance', 'a0', 'kick-01'), ('instance', 'a1', 'bucket'), ('instance', 'a2', 'he')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'kick-01')],) ,
('Relation triples of AMR 1:', 2) ,
([('ARG1', 'a0', 'a1'), ('ARG0', 'a0', 'a2')],) ,
('Instance triples of AMR 2:', 2) ,
([('instance', 'b0', 'die-01'), ('instance', 'b1', 'he')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'die-01')],) ,
('Relation triples of AMR 2:', 1) ,
([('ARG1', 'b0', 'b1')],) ,
('Similarity', 'kick-01', 'die-01', 0.0) ,
('Similarity', 'kick-01', 'he', 0.0) ,
('Similarity', 'bucket', 'die-01', 0.0) ,
('Similarity', 'bucket', 'he', 0.0) ,
('Similarity', 'he', 'die-01', 0.0) ,
('Similarity', 'he', 'he', 1.0) ,
('Candidate mappings:',) ,
([{0, 1}, {0, 1}, {0, 1}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.0, (1, 1): 1}, (0, 1): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 0.0, (0, 0): 1}, (2, 0): {-1: 0.0}, (2, 1): {-1: 1.0}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 0.0) ,
('node_pair', (2, 1)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 1.0) ,
('Node mapping at start', [0, -1, 1]) ,
('Triple match number at start:', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', -1) ,
([0, -1, 1],) ,
('After swapping:', 0, '-', -1, ',', 1, '-', 0) ,
('Swap gain:', 0.0) ,
([-1, 0, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', 1) ,
([0, -1, 1],) ,
('After swapping:', 0, '-', 1, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', -1, ',', 2, '-', 1) ,
([0, -1, 1],) ,
('After swapping:', 1, '-', 1, ',', 2, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, -1, 1]) ,
('Current mapping', [0, -1, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('node_pair', (0, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 0)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [1, 0, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 1.0) ,
([0, 1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 1.0) ,
([-1, 0, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 1],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, 0],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 1.0) ,
('Current mapping:', [0, 1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 1.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Node mapping at start', [1, 0, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 1.0) ,
([0, 1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 1.0) ,
([-1, 0, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 1],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, 0],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 1.0) ,
('Current mapping:', [0, 1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 1.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Node mapping at start', [1, 0, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 1.0) ,
([0, 1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 1.0) ,
([-1, 0, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 1],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, 0],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 1.0) ,
('Current mapping:', [0, 1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 1.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 1.0) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 1.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1.0) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 1.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 1.0) ,
('best node mapping', [0, -1, 1]) ,
('Best node mapping alignment:', 'a0(kick-01)-b0(die-01) a1(bucket)-Null a2(he)-b1(he)') ,
('F-score:', 0.2) ,
Smatch score F1 0.200
('AMR pair', 28) ,
('============================================',) ,
('AMR 1 (one-line):', '(h0 / hang-01:ARG0 (y0 / you):ARG2 (t0 / there):mode imperative )') ,
('AMR 2 (one-line):', '(g0 / give-up-07:ARG0 (y0 / you):polarity -:mode imperative )') ,
('Instance triples of AMR 1:', 3) ,
([('instance', 'a0', 'hang-01'), ('instance', 'a1', 'you'), ('instance', 'a2', 'there')],) ,
('Attribute triples of AMR 1:', 2) ,
([('mode', 'a0', 'imperative'), ('TOP', 'a0', 'hang-01')],) ,
('Relation triples of AMR 1:', 2) ,
([('ARG0', 'a0', 'a1'), ('ARG2', 'a0', 'a2')],) ,
('Instance triples of AMR 2:', 2) ,
([('instance', 'b0', 'give-up-07'), ('instance', 'b1', 'you')],) ,
('Attribute triples of AMR 2:', 3) ,
([('polarity', 'b0', '-'), ('mode', 'b0', 'imperative'), ('TOP', 'b0', 'give-up-07')],) ,
('Relation triples of AMR 2:', 1) ,
([('ARG0', 'b0', 'b1')],) ,
('Similarity', 'hang-01', 'give-up-07', 0.0) ,
('Similarity', 'hang-01', 'you', 0.0) ,
('Similarity', 'you', 'give-up-07', 0.0) ,
('Similarity', 'you', 'you', 1.0) ,
('Similarity', 'there', 'give-up-07', 0.0) ,
('Similarity', 'there', 'you', 0.7541045390183597) ,
('Candidate mappings:',) ,
([{0, 1}, {0, 1}, {0, 1}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 1.0, (1, 1): 1}, (0, 1): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 1.0, (0, 0): 1}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.7541045390183597}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 1.0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 3.0) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 3.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.2458954609816404) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 1.7541045390183596) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Node mapping at start', [1, 0, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 3.0) ,
([0, 1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0.7541045390183597) ,
([-1, 0, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 1],) ,
('saved value', 0.7541045390183597) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, 0],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 3.0) ,
('Current mapping:', [0, 1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.2458954609816404) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 1.7541045390183596) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 3.0) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 3.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.2458954609816404) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 1.7541045390183596) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 3.0) ,
('Node mapping at start', [0, 1, -1]) ,
('Triple match number at start:', 3.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.2458954609816404) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 1.7541045390183596) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Node mapping at start', [1, 0, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 3.0) ,
([0, 1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1],) ,
('saved value', 3.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0.7541045390183597) ,
([-1, 0, 1],) ,
('Computing match for mapping',) ,
([-1, 0, 1],) ,
('saved value', 0.7541045390183597) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', -1) ,
([1, 0, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, 0],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 3.0) ,
('Update triple match number to:', 3.0) ,
('Current mapping:', [0, 1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -3.0) ,
([1, 0, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -2.0) ,
([-1, 1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, 0],) ,
('saved value', 1.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.2458954609816404) ,
([0, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, 1],) ,
('saved value', 1.7541045390183596) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1]) ,
('Current mapping', [0, 1, -1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 3.0) ,
('best node mapping', [0, 1, -1]) ,
('Best node mapping alignment:', 'a0(hang-01)-b0(give-up-07) a1(you)-b1(you) a2(there)-Null') ,
('F-score:', 0.4615384615384615) ,
Smatch score F1 0.462
('AMR pair', 29) ,
('============================================',) ,
('AMR 1 (one-line):', '(h0 / hit-01:ARG1 (s0 / sack))') ,
('AMR 2 (one-line):', '(g0 / go-05:ARG1 (s0 / sleep-01:ARG0 y0):ARG0 (y0 / you):mode imperative )') ,
('Instance triples of AMR 1:', 2) ,
([('instance', 'a0', 'hit-01'), ('instance', 'a1', 'sack')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'hit-01')],) ,
('Relation triples of AMR 1:', 1) ,
([('ARG1', 'a0', 'a1')],) ,
('Instance triples of AMR 2:', 3) ,
([('instance', 'b0', 'go-05'), ('instance', 'b1', 'sleep-01'), ('instance', 'b2', 'you')],) ,
('Attribute triples of AMR 2:', 2) ,
([('mode', 'b0', 'imperative'), ('TOP', 'b0', 'go-05')],) ,
('Relation triples of AMR 2:', 3) ,
([('ARG1', 'b0', 'b1'), ('ARG0', 'b0', 'b2'), ('ARG0', 'b1', 'b2')],) ,
('Similarity', 'hit-01', 'go-05', 0.0) ,
('Similarity', 'hit-01', 'sleep-01', 0.0) ,
('Similarity', 'hit-01', 'you', 0.0) ,
('Similarity', 'sack', 'go-05', 0.0) ,
('Similarity', 'sack', 'sleep-01', 0.0) ,
('Similarity', 'sack', 'you', 0.0) ,
('Candidate mappings:',) ,
([{0, 1, 2}, {0, 1, 2}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.0, (1, 1): 1}, (0, 1): {-1: 0.0}, (0, 2): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 0.0, (0, 0): 1}, (1, 2): {-1: 0.0}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([2, 1],) ,
('node_pair', (0, 2)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [2, 1]) ,
('Triple match number at start:', 0.0) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 2],) ,
('Computing match for mapping',) ,
([1, 2],) ,
('saved value', 0.0) ,
('Use move gain',) ,
('Original mapping', [2, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 1.0) ,
('Current mapping:', [0, 1]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 0.0) ,
('Node mapping at start', [2, 1]) ,
('Triple match number at start:', 0.0) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 2],) ,
('Computing match for mapping',) ,
([1, 2],) ,
('saved value', 0.0) ,
('Use move gain',) ,
('Original mapping', [2, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 1.0) ,
('Current mapping:', [0, 1]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([2, 0],) ,
('saved value', 0.0) ,
('Node mapping at start', [2, 0]) ,
('Triple match number at start:', 0.0) ,
('Remap node', 0, 'from ', 2, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 0, 'to', 1) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 0) ,
([2, 0],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 2) ,
('Swap gain:', 0.0) ,
([0, 2],) ,
('Computing match for mapping',) ,
([0, 2],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [2, 0]) ,
('Current mapping', [2, 0]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 0.0) ,
('Node mapping at start', [2, 1]) ,
('Triple match number at start:', 0.0) ,
('Remap node', 0, 'from ', 2, 'to', 0) ,
('Move gain:', 1.0) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 1.0) ,
('Remap node', 1, 'from ', 1, 'to', 0) ,
('Move gain:', 0.0) ,
('Computing match for mapping',) ,
([2, 0],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 2, ',', 1, '-', 1) ,
([2, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 2) ,
('Swap gain:', 0.0) ,
([1, 2],) ,
('Computing match for mapping',) ,
([1, 2],) ,
('saved value', 0.0) ,
('Use move gain',) ,
('Original mapping', [2, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 1.0) ,
('Update triple match number to:', 1.0) ,
('Current mapping:', [0, 1]) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 1.0) ,
('Node mapping at start', [0, 1]) ,
('Triple match number at start:', 1.0) ,
('Remap node', 0, 'from ', 0, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([2, 1],) ,
('saved value', 0.0) ,
('Remap node', 1, 'from ', 1, 'to', 2) ,
('Move gain:', -1.0) ,
('Computing match for mapping',) ,
([0, 2],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.0) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 1.0) ,
('best node mapping', [0, 1]) ,
('Best node mapping alignment:', 'a0(hit-01)-b0(go-05) a1(sack)-b1(sleep-01)') ,
('F-score:', 0.16666666666666666) ,
Smatch score F1 0.167
('AMR pair', 30) ,
('============================================',) ,
('AMR 1 (one-line):', '(f0 / fair-01:ARG1 (c0 / compete-01):polarity - )') ,
('AMR 2 (one-line):', '(f0 / fair-01:ARG1 (c0 / compete-01):polarity - )') ,
('Instance triples of AMR 1:', 2) ,
([('instance', 'a0', 'fair-01'), ('instance', 'a1', 'compete-01')],) ,
('Attribute triples of AMR 1:', 2) ,
([('polarity', 'a0', '-'), ('TOP', 'a0', 'fair-01')],) ,
('Relation triples of AMR 1:', 1) ,
([('ARG1', 'a0', 'a1')],) ,
('Instance triples of AMR 2:', 2) ,
([('instance', 'b0', 'fair-01'), ('instance', 'b1', 'compete-01')],) ,
('Attribute triples of AMR 2:', 2) ,
([('polarity', 'b0', '-'), ('TOP', 'b0', 'fair-01')],) ,
('Relation triples of AMR 2:', 1) ,
([('ARG1', 'b0', 'b1')],) ,
('Similarity', 'fair-01', 'fair-01', 1.0) ,
('Similarity', 'fair-01', 'compete-01', 0.0) ,
('Similarity', 'compete-01', 'compete-01', 1.0) ,
('Candidate mappings:',) ,
([{0, 1}, {0, 1}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 3.0, (1, 1): 1}, (0, 1): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 1.0, (0, 0): 1}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([0, 1],) ,
('node_pair', (0, 0)) ,
('instance/attribute match', 3.0) ,
('relation match with', (1, 1), 1) ,
('node_pair', (1, 1)) ,
('instance/attribute match', 1.0) ,
('match computing complete, result:', 5.0) ,
('Node mapping at start', [0, 1]) ,
('Triple match number at start:', 5.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 5.0) ,
('Node mapping at start', [0, 1]) ,
('Triple match number at start:', 5.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 5.0) ,
('Node mapping at start', [0, 1]) ,
('Triple match number at start:', 5.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('Node mapping at start', [1, 0]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 5.0) ,
([0, 1],) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 5.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 5.0) ,
('Update triple match number to:', 5.0) ,
('Current mapping:', [0, 1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([0, 1],) ,
('saved value', 5.0) ,
('Node mapping at start', [0, 1]) ,
('Triple match number at start:', 5.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -5.0) ,
([1, 0],) ,
('Computing match for mapping',) ,
([1, 0],) ,
('saved value', 0.0) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1]) ,
('Current mapping', [0, 1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 5.0) ,
('best node mapping', [0, 1]) ,
('Best node mapping alignment:', 'a0(fair-01)-b0(fair-01) a1(compete-01)-b1(compete-01)') ,
('F-score:', 1.0) ,
Smatch score F1 1.000
('AMR pair', 31) ,
('============================================',) ,
('AMR 1 (one-line):', '(w0 / walk-01:ARG0 (c0 / cat:mod (y0 / young)):ARG1-of (f0 / fast-02))') ,
('AMR 2 (one-line):', '(r0 / run-02:ARG0 (k0 / kitten))') ,
('Instance triples of AMR 1:', 4) ,
([('instance', 'a0', 'walk-01'), ('instance', 'a1', 'cat'), ('instance', 'a2', 'young'), ('instance', 'a3', 'fast-02')],) ,
('Attribute triples of AMR 1:', 1) ,
([('TOP', 'a0', 'walk-01')],) ,
('Relation triples of AMR 1:', 3) ,
([('ARG0', 'a0', 'a1'), ('mod', 'a1', 'a2'), ('ARG1', 'a3', 'a0')],) ,
('Instance triples of AMR 2:', 2) ,
([('instance', 'b0', 'run-02'), ('instance', 'b1', 'kitten')],) ,
('Attribute triples of AMR 2:', 1) ,
([('TOP', 'b0', 'run-02')],) ,
('Relation triples of AMR 2:', 1) ,
([('ARG0', 'b0', 'b1')],) ,
('Similarity', 'walk-01', 'run-02', 0.35841214845694386) ,
('Similarity', 'walk-01', 'kitten', 0.0) ,
('Similarity', 'cat', 'run-02', 0.0) ,
('Similarity', 'cat', 'kitten', 0.5580501995034879) ,
('Similarity', 'young', 'run-02', 0.0) ,
('Similarity', 'young', 'kitten', 0.0) ,
('Similarity', 'fast-02', 'run-02', 0.0) ,
('Similarity', 'fast-02', 'kitten', 0.0) ,
('Candidate mappings:',) ,
([{0, 1}, {0, 1}, {0, 1}, {0, 1}],) ,
('Weight dictionary',) ,
({(0, 0): {-1: 0.35841214845694386, (1, 1): 1}, (0, 1): {-1: 0.0}, (1, 0): {-1: 0.0}, (1, 1): {-1: 0.5580501995034879, (0, 0): 1}, (2, 0): {-1: 0.0}, (2, 1): {-1: 0.0}, (3, 0): {-1: 0.0}, (3, 1): {-1: 0.0}},) ,
('Iteration', 0) ,
('Computing match for mapping',) ,
([1, 0, -1, -1],) ,
('node_pair', (0, 1)) ,
('instance/attribute match', 0.0) ,
('node_pair', (1, 0)) ,
('instance/attribute match', 0.0) ,
('match computing complete, result:', 0.0) ,
('Node mapping at start', [1, 0, -1, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, -1, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 1.9164623479604317) ,
([0, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1],) ,
('saved value', 1.9164623479604317) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 0, 1, -1],) ,
('Computing match for mapping',) ,
([-1, 0, 1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 0, -1, 1],) ,
('Computing match for mapping',) ,
([-1, 0, -1, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, 0, -1],) ,
('Computing match for mapping',) ,
([1, -1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, -1, 0],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([1, 0, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, -1, -1]) ,
('Current mapping', [0, 1, -1, -1]) ,
('Gain after the hill-climbing', 1.9164623479604317) ,
('Update triple match number to:', 1.9164623479604317) ,
('Current mapping:', [0, 1, -1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.9164623479604317) ,
([1, 0, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1.3584121484569438) ,
([-1, 1, 0, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -1.3584121484569438) ,
([-1, 1, -1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, -1, 1, -1],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1],) ,
('saved value', 0.3584121484569438) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1],) ,
('saved value', 0.3584121484569438) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1],) ,
('saved value', 1.9164623479604317) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, -1]) ,
('Current mapping', [0, 1, -1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 1) ,
('Computing match for mapping',) ,
([0, 1, -1, -1],) ,
('saved value', 1.9164623479604317) ,
('Node mapping at start', [0, 1, -1, -1]) ,
('Triple match number at start:', 1.9164623479604317) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.9164623479604317) ,
([1, 0, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1.3584121484569438) ,
([-1, 1, 0, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -1.3584121484569438) ,
([-1, 1, -1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, -1, 1, -1],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1],) ,
('saved value', 0.3584121484569438) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1],) ,
('saved value', 0.3584121484569438) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1],) ,
('saved value', 1.9164623479604317) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, -1]) ,
('Current mapping', [0, 1, -1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 2) ,
('Computing match for mapping',) ,
([1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Node mapping at start', [1, 0, -1, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, -1, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 1.9164623479604317) ,
([0, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1],) ,
('saved value', 1.9164623479604317) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 0, 1, -1],) ,
('Computing match for mapping',) ,
([-1, 0, 1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 0, -1, 1],) ,
('Computing match for mapping',) ,
([-1, 0, -1, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, 0, -1],) ,
('Computing match for mapping',) ,
([1, -1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, -1, 0],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([1, 0, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, -1, -1]) ,
('Current mapping', [0, 1, -1, -1]) ,
('Gain after the hill-climbing', 1.9164623479604317) ,
('Update triple match number to:', 1.9164623479604317) ,
('Current mapping:', [0, 1, -1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.9164623479604317) ,
([1, 0, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1.3584121484569438) ,
([-1, 1, 0, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -1.3584121484569438) ,
([-1, 1, -1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, -1, 1, -1],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1],) ,
('saved value', 0.3584121484569438) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1],) ,
('saved value', 0.3584121484569438) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1],) ,
('saved value', 1.9164623479604317) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, -1]) ,
('Current mapping', [0, 1, -1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 3) ,
('Computing match for mapping',) ,
([1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Node mapping at start', [1, 0, -1, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, -1, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 1.9164623479604317) ,
([0, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1],) ,
('saved value', 1.9164623479604317) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 0, 1, -1],) ,
('Computing match for mapping',) ,
([-1, 0, 1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 0, -1, 1],) ,
('Computing match for mapping',) ,
([-1, 0, -1, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, 0, -1],) ,
('Computing match for mapping',) ,
([1, -1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, -1, 0],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([1, 0, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, -1, -1]) ,
('Current mapping', [0, 1, -1, -1]) ,
('Gain after the hill-climbing', 1.9164623479604317) ,
('Update triple match number to:', 1.9164623479604317) ,
('Current mapping:', [0, 1, -1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.9164623479604317) ,
([1, 0, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1.3584121484569438) ,
([-1, 1, 0, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -1.3584121484569438) ,
([-1, 1, -1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, -1, 1, -1],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1],) ,
('saved value', 0.3584121484569438) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1],) ,
('saved value', 0.3584121484569438) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1],) ,
('saved value', 1.9164623479604317) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, -1]) ,
('Current mapping', [0, 1, -1, -1]) ,
('Gain after the hill-climbing', 0) ,
('Iteration', 4) ,
('Computing match for mapping',) ,
([1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Node mapping at start', [1, 0, -1, -1]) ,
('Triple match number at start:', 0.0) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 1, ',', 1, '-', 0) ,
([1, 0, -1, -1],) ,
('After swapping:', 0, '-', 0, ',', 1, '-', 1) ,
('Swap gain:', 1.9164623479604317) ,
([0, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1],) ,
('saved value', 1.9164623479604317) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 1, ',', 2, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 0, 1, -1],) ,
('Computing match for mapping',) ,
([-1, 0, 1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 1, ',', 3, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', 0.0) ,
([-1, 0, -1, 1],) ,
('Computing match for mapping',) ,
([-1, 0, -1, 1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 0, ',', 2, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, 0, -1],) ,
('Computing match for mapping',) ,
([1, -1, 0, -1],) ,
('saved value', 0.0) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 0, ',', 3, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', 0.0) ,
([1, -1, -1, 0],) ,
('Computing match for mapping',) ,
([1, -1, -1, 0],) ,
('saved value', 0.0) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([1, 0, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([1, 0, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Use swap gain',) ,
('Original mapping', [1, 0, -1, -1]) ,
('Current mapping', [0, 1, -1, -1]) ,
('Gain after the hill-climbing', 1.9164623479604317) ,
('Update triple match number to:', 1.9164623479604317) ,
('Current mapping:', [0, 1, -1, -1]) ,
('Swap node', 0, 'and', 1) ,
('Before swapping:', 0, '-', 0, ',', 1, '-', 1) ,
([0, 1, -1, -1],) ,
('After swapping:', 0, '-', 1, ',', 1, '-', 0) ,
('Swap gain:', -1.9164623479604317) ,
([1, 0, -1, -1],) ,
('Computing match for mapping',) ,
([1, 0, -1, -1],) ,
('saved value', 0.0) ,
('Swap node', 0, 'and', 2) ,
('Before swapping:', 0, '-', 0, ',', 2, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 2, '-', 0) ,
('Swap gain:', -1.3584121484569438) ,
([-1, 1, 0, -1],) ,
('Computing match for mapping',) ,
([-1, 1, 0, -1],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 0, 'and', 3) ,
('Before swapping:', 0, '-', 0, ',', 3, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 0, '-', -1, ',', 3, '-', 0) ,
('Swap gain:', -1.3584121484569438) ,
([-1, 1, -1, 0],) ,
('Computing match for mapping',) ,
([-1, 1, -1, 0],) ,
('saved value', 0.5580501995034879) ,
('Swap node', 1, 'and', 2) ,
('Before swapping:', 1, '-', 1, ',', 2, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 2, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, -1, 1, -1],) ,
('Computing match for mapping',) ,
([0, -1, 1, -1],) ,
('saved value', 0.3584121484569438) ,
('Swap node', 1, 'and', 3) ,
('Before swapping:', 1, '-', 1, ',', 3, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 1, '-', -1, ',', 3, '-', 1) ,
('Swap gain:', -1.5580501995034879) ,
([0, -1, -1, 1],) ,
('Computing match for mapping',) ,
([0, -1, -1, 1],) ,
('saved value', 0.3584121484569438) ,
('Swap node', 2, 'and', 3) ,
('Before swapping:', 2, '-', -1, ',', 3, '-', -1) ,
([0, 1, -1, -1],) ,
('After swapping:', 2, '-', -1, ',', 3, '-', -1) ,
('Swap gain:', 0.0) ,
([0, 1, -1, -1],) ,
('Computing match for mapping',) ,
([0, 1, -1, -1],) ,
('saved value', 1.9164623479604317) ,
('no move/swap gain found',) ,
('Original mapping', [0, 1, -1, -1]) ,
('Current mapping', [0, 1, -1, -1]) ,
('Gain after the hill-climbing', 0) ,
('best match number', 1.9164623479604317) ,
('best node mapping', [0, 1, -1, -1]) ,
('Best node mapping alignment:', 'a0(walk-01)-b0(run-02) a1(cat)-b1(kitten) a2(young)-Null a3(fast-02)-Null') ,
('F-score:', 0.3194103913267386) ,
Smatch score F1 0.319
('Total match number, total triple number in AMR 1, and total triple number in AMR 2:',) ,
(213.62594458720312, 332, 345) ,
('---------------------------------------------------------------------------------',) ,
Document F-score: 0.319, 0.3194
